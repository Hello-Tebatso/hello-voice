"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@azure";
exports.ids = ["vendor-chunks/@azure"];
exports.modules = {

/***/ "(ssr)/./node_modules/@azure/abort-controller/dist/esm/AbortError.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/abort-controller/dist/esm/AbortError.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbortError: () => (/* binding */ AbortError)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * ```ts\n * const controller = new AbortController();\n * controller.abort();\n * try {\n *   doAsyncWork(controller.signal)\n * } catch (e) {\n *   if (e.name === 'AbortError') {\n *     // handle abort error here.\n *   }\n * }\n * ```\n */\nclass AbortError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"AbortError\";\n    }\n}\n//# sourceMappingURL=AbortError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Fib3J0LWNvbnRyb2xsZXIvZGlzdC9lc20vQWJvcnRFcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcYWJvcnQtY29udHJvbGxlclxcZGlzdFxcZXNtXFxBYm9ydEVycm9yLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuLyoqXG4gKiBUaGlzIGVycm9yIGlzIHRocm93biB3aGVuIGFuIGFzeW5jaHJvbm91cyBvcGVyYXRpb24gaGFzIGJlZW4gYWJvcnRlZC5cbiAqIENoZWNrIGZvciB0aGlzIGVycm9yIGJ5IHRlc3RpbmcgdGhlIGBuYW1lYCB0aGF0IHRoZSBuYW1lIHByb3BlcnR5IG9mIHRoZVxuICogZXJyb3IgbWF0Y2hlcyBgXCJBYm9ydEVycm9yXCJgLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogY29uc3QgY29udHJvbGxlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKTtcbiAqIGNvbnRyb2xsZXIuYWJvcnQoKTtcbiAqIHRyeSB7XG4gKiAgIGRvQXN5bmNXb3JrKGNvbnRyb2xsZXIuc2lnbmFsKVxuICogfSBjYXRjaCAoZSkge1xuICogICBpZiAoZS5uYW1lID09PSAnQWJvcnRFcnJvcicpIHtcbiAqICAgICAvLyBoYW5kbGUgYWJvcnQgZXJyb3IgaGVyZS5cbiAqICAgfVxuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBjbGFzcyBBYm9ydEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIHRoaXMubmFtZSA9IFwiQWJvcnRFcnJvclwiO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUFib3J0RXJyb3IuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/abort-controller/dist/esm/AbortError.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/abort-controller/dist/esm/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/abort-controller/dist/esm/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbortError: () => (/* reexport safe */ _AbortError_js__WEBPACK_IMPORTED_MODULE_0__.AbortError)\n/* harmony export */ });\n/* harmony import */ var _AbortError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbortError.js */ \"(ssr)/./node_modules/@azure/abort-controller/dist/esm/AbortError.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Fib3J0LWNvbnRyb2xsZXIvZGlzdC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQzZDO0FBQzdDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZSAtIEhlbGxvIFNjcmlwdCBBSVxcbGlmZUFnZW50XFx2b2ljZS1saXZlLWFnZW50XFxzYW1wbGVzXFxyZWFjdFxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGFib3J0LWNvbnRyb2xsZXJcXGRpc3RcXGVzbVxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5leHBvcnQgeyBBYm9ydEVycm9yIH0gZnJvbSBcIi4vQWJvcnRFcnJvci5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/abort-controller/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-auth/dist/esm/azureKeyCredential.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist/esm/azureKeyCredential.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzureKeyCredential: () => (/* binding */ AzureKeyCredential)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * A static-key-based credential that supports updating\n * the underlying key value.\n */\nclass AzureKeyCredential {\n    /**\n     * The value of the key to be used in authentication\n     */\n    get key() {\n        return this._key;\n    }\n    /**\n     * Create an instance of an AzureKeyCredential for use\n     * with a service client.\n     *\n     * @param key - The initial value of the key to use in authentication\n     */\n    constructor(key) {\n        if (!key) {\n            throw new Error(\"key must be a non-empty string\");\n        }\n        this._key = key;\n    }\n    /**\n     * Change the value of the key.\n     *\n     * Updates will take effect upon the next request after\n     * updating the key value.\n     *\n     * @param newKey - The new key value to be used\n     */\n    update(newKey) {\n        this._key = newKey;\n    }\n}\n//# sourceMappingURL=azureKeyCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtYXV0aC9kaXN0L2VzbS9henVyZUtleUNyZWRlbnRpYWwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1hdXRoXFxkaXN0XFxlc21cXGF6dXJlS2V5Q3JlZGVudGlhbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbi8qKlxuICogQSBzdGF0aWMta2V5LWJhc2VkIGNyZWRlbnRpYWwgdGhhdCBzdXBwb3J0cyB1cGRhdGluZ1xuICogdGhlIHVuZGVybHlpbmcga2V5IHZhbHVlLlxuICovXG5leHBvcnQgY2xhc3MgQXp1cmVLZXlDcmVkZW50aWFsIHtcbiAgICAvKipcbiAgICAgKiBUaGUgdmFsdWUgb2YgdGhlIGtleSB0byBiZSB1c2VkIGluIGF1dGhlbnRpY2F0aW9uXG4gICAgICovXG4gICAgZ2V0IGtleSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2tleTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGFuIGluc3RhbmNlIG9mIGFuIEF6dXJlS2V5Q3JlZGVudGlhbCBmb3IgdXNlXG4gICAgICogd2l0aCBhIHNlcnZpY2UgY2xpZW50LlxuICAgICAqXG4gICAgICogQHBhcmFtIGtleSAtIFRoZSBpbml0aWFsIHZhbHVlIG9mIHRoZSBrZXkgdG8gdXNlIGluIGF1dGhlbnRpY2F0aW9uXG4gICAgICovXG4gICAgY29uc3RydWN0b3Ioa2V5KSB7XG4gICAgICAgIGlmICgha2V5KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJrZXkgbXVzdCBiZSBhIG5vbi1lbXB0eSBzdHJpbmdcIik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fa2V5ID0ga2V5O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDaGFuZ2UgdGhlIHZhbHVlIG9mIHRoZSBrZXkuXG4gICAgICpcbiAgICAgKiBVcGRhdGVzIHdpbGwgdGFrZSBlZmZlY3QgdXBvbiB0aGUgbmV4dCByZXF1ZXN0IGFmdGVyXG4gICAgICogdXBkYXRpbmcgdGhlIGtleSB2YWx1ZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBuZXdLZXkgLSBUaGUgbmV3IGtleSB2YWx1ZSB0byBiZSB1c2VkXG4gICAgICovXG4gICAgdXBkYXRlKG5ld0tleSkge1xuICAgICAgICB0aGlzLl9rZXkgPSBuZXdLZXk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXp1cmVLZXlDcmVkZW50aWFsLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-auth/dist/esm/azureKeyCredential.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-auth/dist/esm/azureNamedKeyCredential.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist/esm/azureNamedKeyCredential.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzureNamedKeyCredential: () => (/* binding */ AzureNamedKeyCredential),\n/* harmony export */   isNamedKeyCredential: () => (/* binding */ isNamedKeyCredential)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * A static name/key-based credential that supports updating\n * the underlying name and key values.\n */\nclass AzureNamedKeyCredential {\n    /**\n     * The value of the key to be used in authentication.\n     */\n    get key() {\n        return this._key;\n    }\n    /**\n     * The value of the name to be used in authentication.\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * Create an instance of an AzureNamedKeyCredential for use\n     * with a service client.\n     *\n     * @param name - The initial value of the name to use in authentication.\n     * @param key - The initial value of the key to use in authentication.\n     */\n    constructor(name, key) {\n        if (!name || !key) {\n            throw new TypeError(\"name and key must be non-empty strings\");\n        }\n        this._name = name;\n        this._key = key;\n    }\n    /**\n     * Change the value of the key.\n     *\n     * Updates will take effect upon the next request after\n     * updating the key value.\n     *\n     * @param newName - The new name value to be used.\n     * @param newKey - The new key value to be used.\n     */\n    update(newName, newKey) {\n        if (!newName || !newKey) {\n            throw new TypeError(\"newName and newKey must be non-empty strings\");\n        }\n        this._name = newName;\n        this._key = newKey;\n    }\n}\n/**\n * Tests an object to determine whether it implements NamedKeyCredential.\n *\n * @param credential - The assumed NamedKeyCredential to be tested.\n */\nfunction isNamedKeyCredential(credential) {\n    return ((0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.isObjectWithProperties)(credential, [\"name\", \"key\"]) &&\n        typeof credential.key === \"string\" &&\n        typeof credential.name === \"string\");\n}\n//# sourceMappingURL=azureNamedKeyCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtYXV0aC9kaXN0L2VzbS9henVyZU5hbWVkS2V5Q3JlZGVudGlhbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQzBEO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFlBQVksd0VBQXNCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZSAtIEhlbGxvIFNjcmlwdCBBSVxcbGlmZUFnZW50XFx2b2ljZS1saXZlLWFnZW50XFxzYW1wbGVzXFxyZWFjdFxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtYXV0aFxcZGlzdFxcZXNtXFxhenVyZU5hbWVkS2V5Q3JlZGVudGlhbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGlzT2JqZWN0V2l0aFByb3BlcnRpZXMgfSBmcm9tIFwiQGF6dXJlL2NvcmUtdXRpbFwiO1xuLyoqXG4gKiBBIHN0YXRpYyBuYW1lL2tleS1iYXNlZCBjcmVkZW50aWFsIHRoYXQgc3VwcG9ydHMgdXBkYXRpbmdcbiAqIHRoZSB1bmRlcmx5aW5nIG5hbWUgYW5kIGtleSB2YWx1ZXMuXG4gKi9cbmV4cG9ydCBjbGFzcyBBenVyZU5hbWVkS2V5Q3JlZGVudGlhbCB7XG4gICAgLyoqXG4gICAgICogVGhlIHZhbHVlIG9mIHRoZSBrZXkgdG8gYmUgdXNlZCBpbiBhdXRoZW50aWNhdGlvbi5cbiAgICAgKi9cbiAgICBnZXQga2V5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fa2V5O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaGUgdmFsdWUgb2YgdGhlIG5hbWUgdG8gYmUgdXNlZCBpbiBhdXRoZW50aWNhdGlvbi5cbiAgICAgKi9cbiAgICBnZXQgbmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX25hbWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhbiBpbnN0YW5jZSBvZiBhbiBBenVyZU5hbWVkS2V5Q3JlZGVudGlhbCBmb3IgdXNlXG4gICAgICogd2l0aCBhIHNlcnZpY2UgY2xpZW50LlxuICAgICAqXG4gICAgICogQHBhcmFtIG5hbWUgLSBUaGUgaW5pdGlhbCB2YWx1ZSBvZiB0aGUgbmFtZSB0byB1c2UgaW4gYXV0aGVudGljYXRpb24uXG4gICAgICogQHBhcmFtIGtleSAtIFRoZSBpbml0aWFsIHZhbHVlIG9mIHRoZSBrZXkgdG8gdXNlIGluIGF1dGhlbnRpY2F0aW9uLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKG5hbWUsIGtleSkge1xuICAgICAgICBpZiAoIW5hbWUgfHwgIWtleSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIm5hbWUgYW5kIGtleSBtdXN0IGJlIG5vbi1lbXB0eSBzdHJpbmdzXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX25hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLl9rZXkgPSBrZXk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENoYW5nZSB0aGUgdmFsdWUgb2YgdGhlIGtleS5cbiAgICAgKlxuICAgICAqIFVwZGF0ZXMgd2lsbCB0YWtlIGVmZmVjdCB1cG9uIHRoZSBuZXh0IHJlcXVlc3QgYWZ0ZXJcbiAgICAgKiB1cGRhdGluZyB0aGUga2V5IHZhbHVlLlxuICAgICAqXG4gICAgICogQHBhcmFtIG5ld05hbWUgLSBUaGUgbmV3IG5hbWUgdmFsdWUgdG8gYmUgdXNlZC5cbiAgICAgKiBAcGFyYW0gbmV3S2V5IC0gVGhlIG5ldyBrZXkgdmFsdWUgdG8gYmUgdXNlZC5cbiAgICAgKi9cbiAgICB1cGRhdGUobmV3TmFtZSwgbmV3S2V5KSB7XG4gICAgICAgIGlmICghbmV3TmFtZSB8fCAhbmV3S2V5KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwibmV3TmFtZSBhbmQgbmV3S2V5IG11c3QgYmUgbm9uLWVtcHR5IHN0cmluZ3NcIik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fbmFtZSA9IG5ld05hbWU7XG4gICAgICAgIHRoaXMuX2tleSA9IG5ld0tleTtcbiAgICB9XG59XG4vKipcbiAqIFRlc3RzIGFuIG9iamVjdCB0byBkZXRlcm1pbmUgd2hldGhlciBpdCBpbXBsZW1lbnRzIE5hbWVkS2V5Q3JlZGVudGlhbC5cbiAqXG4gKiBAcGFyYW0gY3JlZGVudGlhbCAtIFRoZSBhc3N1bWVkIE5hbWVkS2V5Q3JlZGVudGlhbCB0byBiZSB0ZXN0ZWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc05hbWVkS2V5Q3JlZGVudGlhbChjcmVkZW50aWFsKSB7XG4gICAgcmV0dXJuIChpc09iamVjdFdpdGhQcm9wZXJ0aWVzKGNyZWRlbnRpYWwsIFtcIm5hbWVcIiwgXCJrZXlcIl0pICYmXG4gICAgICAgIHR5cGVvZiBjcmVkZW50aWFsLmtleSA9PT0gXCJzdHJpbmdcIiAmJlxuICAgICAgICB0eXBlb2YgY3JlZGVudGlhbC5uYW1lID09PSBcInN0cmluZ1wiKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF6dXJlTmFtZWRLZXlDcmVkZW50aWFsLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-auth/dist/esm/azureNamedKeyCredential.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-auth/dist/esm/azureSASCredential.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist/esm/azureSASCredential.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzureSASCredential: () => (/* binding */ AzureSASCredential),\n/* harmony export */   isSASCredential: () => (/* binding */ isSASCredential)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * A static-signature-based credential that supports updating\n * the underlying signature value.\n */\nclass AzureSASCredential {\n    /**\n     * The value of the shared access signature to be used in authentication\n     */\n    get signature() {\n        return this._signature;\n    }\n    /**\n     * Create an instance of an AzureSASCredential for use\n     * with a service client.\n     *\n     * @param signature - The initial value of the shared access signature to use in authentication\n     */\n    constructor(signature) {\n        if (!signature) {\n            throw new Error(\"shared access signature must be a non-empty string\");\n        }\n        this._signature = signature;\n    }\n    /**\n     * Change the value of the signature.\n     *\n     * Updates will take effect upon the next request after\n     * updating the signature value.\n     *\n     * @param newSignature - The new shared access signature value to be used\n     */\n    update(newSignature) {\n        if (!newSignature) {\n            throw new Error(\"shared access signature must be a non-empty string\");\n        }\n        this._signature = newSignature;\n    }\n}\n/**\n * Tests an object to determine whether it implements SASCredential.\n *\n * @param credential - The assumed SASCredential to be tested.\n */\nfunction isSASCredential(credential) {\n    return ((0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.isObjectWithProperties)(credential, [\"signature\"]) && typeof credential.signature === \"string\");\n}\n//# sourceMappingURL=azureSASCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtYXV0aC9kaXN0L2VzbS9henVyZVNBU0NyZWRlbnRpYWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUMwRDtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSx3RUFBc0I7QUFDbEM7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmUgLSBIZWxsbyBTY3JpcHQgQUlcXGxpZmVBZ2VudFxcdm9pY2UtbGl2ZS1hZ2VudFxcc2FtcGxlc1xccmVhY3RcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLWF1dGhcXGRpc3RcXGVzbVxcYXp1cmVTQVNDcmVkZW50aWFsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgaXNPYmplY3RXaXRoUHJvcGVydGllcyB9IGZyb20gXCJAYXp1cmUvY29yZS11dGlsXCI7XG4vKipcbiAqIEEgc3RhdGljLXNpZ25hdHVyZS1iYXNlZCBjcmVkZW50aWFsIHRoYXQgc3VwcG9ydHMgdXBkYXRpbmdcbiAqIHRoZSB1bmRlcmx5aW5nIHNpZ25hdHVyZSB2YWx1ZS5cbiAqL1xuZXhwb3J0IGNsYXNzIEF6dXJlU0FTQ3JlZGVudGlhbCB7XG4gICAgLyoqXG4gICAgICogVGhlIHZhbHVlIG9mIHRoZSBzaGFyZWQgYWNjZXNzIHNpZ25hdHVyZSB0byBiZSB1c2VkIGluIGF1dGhlbnRpY2F0aW9uXG4gICAgICovXG4gICAgZ2V0IHNpZ25hdHVyZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NpZ25hdHVyZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGFuIGluc3RhbmNlIG9mIGFuIEF6dXJlU0FTQ3JlZGVudGlhbCBmb3IgdXNlXG4gICAgICogd2l0aCBhIHNlcnZpY2UgY2xpZW50LlxuICAgICAqXG4gICAgICogQHBhcmFtIHNpZ25hdHVyZSAtIFRoZSBpbml0aWFsIHZhbHVlIG9mIHRoZSBzaGFyZWQgYWNjZXNzIHNpZ25hdHVyZSB0byB1c2UgaW4gYXV0aGVudGljYXRpb25cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihzaWduYXR1cmUpIHtcbiAgICAgICAgaWYgKCFzaWduYXR1cmUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcInNoYXJlZCBhY2Nlc3Mgc2lnbmF0dXJlIG11c3QgYmUgYSBub24tZW1wdHkgc3RyaW5nXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3NpZ25hdHVyZSA9IHNpZ25hdHVyZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2hhbmdlIHRoZSB2YWx1ZSBvZiB0aGUgc2lnbmF0dXJlLlxuICAgICAqXG4gICAgICogVXBkYXRlcyB3aWxsIHRha2UgZWZmZWN0IHVwb24gdGhlIG5leHQgcmVxdWVzdCBhZnRlclxuICAgICAqIHVwZGF0aW5nIHRoZSBzaWduYXR1cmUgdmFsdWUuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gbmV3U2lnbmF0dXJlIC0gVGhlIG5ldyBzaGFyZWQgYWNjZXNzIHNpZ25hdHVyZSB2YWx1ZSB0byBiZSB1c2VkXG4gICAgICovXG4gICAgdXBkYXRlKG5ld1NpZ25hdHVyZSkge1xuICAgICAgICBpZiAoIW5ld1NpZ25hdHVyZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwic2hhcmVkIGFjY2VzcyBzaWduYXR1cmUgbXVzdCBiZSBhIG5vbi1lbXB0eSBzdHJpbmdcIik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fc2lnbmF0dXJlID0gbmV3U2lnbmF0dXJlO1xuICAgIH1cbn1cbi8qKlxuICogVGVzdHMgYW4gb2JqZWN0IHRvIGRldGVybWluZSB3aGV0aGVyIGl0IGltcGxlbWVudHMgU0FTQ3JlZGVudGlhbC5cbiAqXG4gKiBAcGFyYW0gY3JlZGVudGlhbCAtIFRoZSBhc3N1bWVkIFNBU0NyZWRlbnRpYWwgdG8gYmUgdGVzdGVkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNTQVNDcmVkZW50aWFsKGNyZWRlbnRpYWwpIHtcbiAgICByZXR1cm4gKGlzT2JqZWN0V2l0aFByb3BlcnRpZXMoY3JlZGVudGlhbCwgW1wic2lnbmF0dXJlXCJdKSAmJiB0eXBlb2YgY3JlZGVudGlhbC5zaWduYXR1cmUgPT09IFwic3RyaW5nXCIpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXp1cmVTQVNDcmVkZW50aWFsLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-auth/dist/esm/azureSASCredential.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-auth/dist/esm/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist/esm/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzureKeyCredential: () => (/* reexport safe */ _azureKeyCredential_js__WEBPACK_IMPORTED_MODULE_0__.AzureKeyCredential),\n/* harmony export */   AzureNamedKeyCredential: () => (/* reexport safe */ _azureNamedKeyCredential_js__WEBPACK_IMPORTED_MODULE_2__.AzureNamedKeyCredential),\n/* harmony export */   AzureSASCredential: () => (/* reexport safe */ _azureSASCredential_js__WEBPACK_IMPORTED_MODULE_3__.AzureSASCredential),\n/* harmony export */   isKeyCredential: () => (/* reexport safe */ _keyCredential_js__WEBPACK_IMPORTED_MODULE_1__.isKeyCredential),\n/* harmony export */   isNamedKeyCredential: () => (/* reexport safe */ _azureNamedKeyCredential_js__WEBPACK_IMPORTED_MODULE_2__.isNamedKeyCredential),\n/* harmony export */   isSASCredential: () => (/* reexport safe */ _azureSASCredential_js__WEBPACK_IMPORTED_MODULE_3__.isSASCredential),\n/* harmony export */   isTokenCredential: () => (/* reexport safe */ _tokenCredential_js__WEBPACK_IMPORTED_MODULE_4__.isTokenCredential)\n/* harmony export */ });\n/* harmony import */ var _azureKeyCredential_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./azureKeyCredential.js */ \"(ssr)/./node_modules/@azure/core-auth/dist/esm/azureKeyCredential.js\");\n/* harmony import */ var _keyCredential_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./keyCredential.js */ \"(ssr)/./node_modules/@azure/core-auth/dist/esm/keyCredential.js\");\n/* harmony import */ var _azureNamedKeyCredential_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./azureNamedKeyCredential.js */ \"(ssr)/./node_modules/@azure/core-auth/dist/esm/azureNamedKeyCredential.js\");\n/* harmony import */ var _azureSASCredential_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./azureSASCredential.js */ \"(ssr)/./node_modules/@azure/core-auth/dist/esm/azureSASCredential.js\");\n/* harmony import */ var _tokenCredential_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tokenCredential.js */ \"(ssr)/./node_modules/@azure/core-auth/dist/esm/tokenCredential.js\");\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtYXV0aC9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBNkQ7QUFDUjtBQUN5QztBQUNoQjtBQUNwQjtBQUMxRCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmUgLSBIZWxsbyBTY3JpcHQgQUlcXGxpZmVBZ2VudFxcdm9pY2UtbGl2ZS1hZ2VudFxcc2FtcGxlc1xccmVhY3RcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLWF1dGhcXGRpc3RcXGVzbVxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgQXp1cmVLZXlDcmVkZW50aWFsIH0gZnJvbSBcIi4vYXp1cmVLZXlDcmVkZW50aWFsLmpzXCI7XG5leHBvcnQgeyBpc0tleUNyZWRlbnRpYWwgfSBmcm9tIFwiLi9rZXlDcmVkZW50aWFsLmpzXCI7XG5leHBvcnQgeyBBenVyZU5hbWVkS2V5Q3JlZGVudGlhbCwgaXNOYW1lZEtleUNyZWRlbnRpYWwsIH0gZnJvbSBcIi4vYXp1cmVOYW1lZEtleUNyZWRlbnRpYWwuanNcIjtcbmV4cG9ydCB7IEF6dXJlU0FTQ3JlZGVudGlhbCwgaXNTQVNDcmVkZW50aWFsIH0gZnJvbSBcIi4vYXp1cmVTQVNDcmVkZW50aWFsLmpzXCI7XG5leHBvcnQgeyBpc1Rva2VuQ3JlZGVudGlhbCwgfSBmcm9tIFwiLi90b2tlbkNyZWRlbnRpYWwuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-auth/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-auth/dist/esm/keyCredential.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist/esm/keyCredential.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isKeyCredential: () => (/* binding */ isKeyCredential)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Tests an object to determine whether it implements KeyCredential.\n *\n * @param credential - The assumed KeyCredential to be tested.\n */\nfunction isKeyCredential(credential) {\n    return (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.isObjectWithProperties)(credential, [\"key\"]) && typeof credential.key === \"string\";\n}\n//# sourceMappingURL=keyCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtYXV0aC9kaXN0L2VzbS9rZXlDcmVkZW50aWFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUMwRDtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLHdFQUFzQjtBQUNqQztBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZSAtIEhlbGxvIFNjcmlwdCBBSVxcbGlmZUFnZW50XFx2b2ljZS1saXZlLWFnZW50XFxzYW1wbGVzXFxyZWFjdFxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtYXV0aFxcZGlzdFxcZXNtXFxrZXlDcmVkZW50aWFsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgaXNPYmplY3RXaXRoUHJvcGVydGllcyB9IGZyb20gXCJAYXp1cmUvY29yZS11dGlsXCI7XG4vKipcbiAqIFRlc3RzIGFuIG9iamVjdCB0byBkZXRlcm1pbmUgd2hldGhlciBpdCBpbXBsZW1lbnRzIEtleUNyZWRlbnRpYWwuXG4gKlxuICogQHBhcmFtIGNyZWRlbnRpYWwgLSBUaGUgYXNzdW1lZCBLZXlDcmVkZW50aWFsIHRvIGJlIHRlc3RlZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzS2V5Q3JlZGVudGlhbChjcmVkZW50aWFsKSB7XG4gICAgcmV0dXJuIGlzT2JqZWN0V2l0aFByb3BlcnRpZXMoY3JlZGVudGlhbCwgW1wia2V5XCJdKSAmJiB0eXBlb2YgY3JlZGVudGlhbC5rZXkgPT09IFwic3RyaW5nXCI7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1rZXlDcmVkZW50aWFsLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-auth/dist/esm/keyCredential.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-auth/dist/esm/tokenCredential.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist/esm/tokenCredential.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isBearerToken: () => (/* binding */ isBearerToken),\n/* harmony export */   isPopToken: () => (/* binding */ isPopToken),\n/* harmony export */   isTokenCredential: () => (/* binding */ isTokenCredential)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * @internal\n * @param accessToken - Access token\n * @returns Whether a token is bearer type or not\n */\nfunction isBearerToken(accessToken) {\n    return !accessToken.tokenType || accessToken.tokenType === \"Bearer\";\n}\n/**\n * @internal\n * @param accessToken - Access token\n * @returns Whether a token is Pop token or not\n */\nfunction isPopToken(accessToken) {\n    return accessToken.tokenType === \"pop\";\n}\n/**\n * Tests an object to determine whether it implements TokenCredential.\n *\n * @param credential - The assumed TokenCredential to be tested.\n */\nfunction isTokenCredential(credential) {\n    // Check for an object with a 'getToken' function and possibly with\n    // a 'signRequest' function.  We do this check to make sure that\n    // a ServiceClientCredentials implementor (like TokenClientCredentials\n    // in ms-rest-nodeauth) doesn't get mistaken for a TokenCredential if\n    // it doesn't actually implement TokenCredential also.\n    const castCredential = credential;\n    return (castCredential &&\n        typeof castCredential.getToken === \"function\" &&\n        (castCredential.signRequest === undefined || castCredential.getToken.length > 0));\n}\n//# sourceMappingURL=tokenCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtYXV0aC9kaXN0L2VzbS90b2tlbkNyZWRlbnRpYWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmUgLSBIZWxsbyBTY3JpcHQgQUlcXGxpZmVBZ2VudFxcdm9pY2UtbGl2ZS1hZ2VudFxcc2FtcGxlc1xccmVhY3RcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLWF1dGhcXGRpc3RcXGVzbVxcdG9rZW5DcmVkZW50aWFsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqIEBwYXJhbSBhY2Nlc3NUb2tlbiAtIEFjY2VzcyB0b2tlblxuICogQHJldHVybnMgV2hldGhlciBhIHRva2VuIGlzIGJlYXJlciB0eXBlIG9yIG5vdFxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNCZWFyZXJUb2tlbihhY2Nlc3NUb2tlbikge1xuICAgIHJldHVybiAhYWNjZXNzVG9rZW4udG9rZW5UeXBlIHx8IGFjY2Vzc1Rva2VuLnRva2VuVHlwZSA9PT0gXCJCZWFyZXJcIjtcbn1cbi8qKlxuICogQGludGVybmFsXG4gKiBAcGFyYW0gYWNjZXNzVG9rZW4gLSBBY2Nlc3MgdG9rZW5cbiAqIEByZXR1cm5zIFdoZXRoZXIgYSB0b2tlbiBpcyBQb3AgdG9rZW4gb3Igbm90XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1BvcFRva2VuKGFjY2Vzc1Rva2VuKSB7XG4gICAgcmV0dXJuIGFjY2Vzc1Rva2VuLnRva2VuVHlwZSA9PT0gXCJwb3BcIjtcbn1cbi8qKlxuICogVGVzdHMgYW4gb2JqZWN0IHRvIGRldGVybWluZSB3aGV0aGVyIGl0IGltcGxlbWVudHMgVG9rZW5DcmVkZW50aWFsLlxuICpcbiAqIEBwYXJhbSBjcmVkZW50aWFsIC0gVGhlIGFzc3VtZWQgVG9rZW5DcmVkZW50aWFsIHRvIGJlIHRlc3RlZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzVG9rZW5DcmVkZW50aWFsKGNyZWRlbnRpYWwpIHtcbiAgICAvLyBDaGVjayBmb3IgYW4gb2JqZWN0IHdpdGggYSAnZ2V0VG9rZW4nIGZ1bmN0aW9uIGFuZCBwb3NzaWJseSB3aXRoXG4gICAgLy8gYSAnc2lnblJlcXVlc3QnIGZ1bmN0aW9uLiAgV2UgZG8gdGhpcyBjaGVjayB0byBtYWtlIHN1cmUgdGhhdFxuICAgIC8vIGEgU2VydmljZUNsaWVudENyZWRlbnRpYWxzIGltcGxlbWVudG9yIChsaWtlIFRva2VuQ2xpZW50Q3JlZGVudGlhbHNcbiAgICAvLyBpbiBtcy1yZXN0LW5vZGVhdXRoKSBkb2Vzbid0IGdldCBtaXN0YWtlbiBmb3IgYSBUb2tlbkNyZWRlbnRpYWwgaWZcbiAgICAvLyBpdCBkb2Vzbid0IGFjdHVhbGx5IGltcGxlbWVudCBUb2tlbkNyZWRlbnRpYWwgYWxzby5cbiAgICBjb25zdCBjYXN0Q3JlZGVudGlhbCA9IGNyZWRlbnRpYWw7XG4gICAgcmV0dXJuIChjYXN0Q3JlZGVudGlhbCAmJlxuICAgICAgICB0eXBlb2YgY2FzdENyZWRlbnRpYWwuZ2V0VG9rZW4gPT09IFwiZnVuY3Rpb25cIiAmJlxuICAgICAgICAoY2FzdENyZWRlbnRpYWwuc2lnblJlcXVlc3QgPT09IHVuZGVmaW5lZCB8fCBjYXN0Q3JlZGVudGlhbC5nZXRUb2tlbi5sZW5ndGggPiAwKSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10b2tlbkNyZWRlbnRpYWwuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-auth/dist/esm/tokenCredential.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/commonjs/state.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/commonjs/state.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.state = void 0;\n/**\n * Holds the singleton operationRequestMap, to be shared across CJS and ESM imports.\n */\nexports.state = {\n    operationRequestMap: new WeakMap(),\n};\n//# sourceMappingURL=state-cjs.cjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvY29tbW9uanMvc3RhdGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZSAtIEhlbGxvIFNjcmlwdCBBSVxcbGlmZUFnZW50XFx2b2ljZS1saXZlLWFnZW50XFxzYW1wbGVzXFxyZWFjdFxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtY2xpZW50XFxkaXN0XFxjb21tb25qc1xcc3RhdGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuc3RhdGUgPSB2b2lkIDA7XG4vKipcbiAqIEhvbGRzIHRoZSBzaW5nbGV0b24gb3BlcmF0aW9uUmVxdWVzdE1hcCwgdG8gYmUgc2hhcmVkIGFjcm9zcyBDSlMgYW5kIEVTTSBpbXBvcnRzLlxuICovXG5leHBvcnRzLnN0YXRlID0ge1xuICAgIG9wZXJhdGlvblJlcXVlc3RNYXA6IG5ldyBXZWFrTWFwKCksXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RhdGUtY2pzLmNqcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/commonjs/state.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/authorizeRequestOnClaimChallenge.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/authorizeRequestOnClaimChallenge.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authorizeRequestOnClaimChallenge: () => (/* binding */ authorizeRequestOnClaimChallenge),\n/* harmony export */   parseCAEChallenge: () => (/* binding */ parseCAEChallenge)\n/* harmony export */ });\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./log.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/log.js\");\n/* harmony import */ var _base64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base64.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/base64.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * Converts: `Bearer a=\"b\", c=\"d\", Bearer d=\"e\", f=\"g\"`.\n * Into: `[ { a: 'b', c: 'd' }, { d: 'e', f: 'g' } ]`.\n *\n * @internal\n */\nfunction parseCAEChallenge(challenges) {\n    const bearerChallenges = `, ${challenges.trim()}`.split(\", Bearer \").filter((x) => x);\n    return bearerChallenges.map((challenge) => {\n        const challengeParts = `${challenge.trim()}, `.split('\", ').filter((x) => x);\n        const keyValuePairs = challengeParts.map((keyValue) => (([key, value]) => ({ [key]: value }))(keyValue.trim().split('=\"')));\n        // Key-value pairs to plain object:\n        return keyValuePairs.reduce((a, b) => (Object.assign(Object.assign({}, a), b)), {});\n    });\n}\n/**\n * This function can be used as a callback for the `bearerTokenAuthenticationPolicy` of `@azure/core-rest-pipeline`, to support CAE challenges:\n * [Continuous Access Evaluation](https://learn.microsoft.com/azure/active-directory/conditional-access/concept-continuous-access-evaluation).\n *\n * Call the `bearerTokenAuthenticationPolicy` with the following options:\n *\n * ```ts snippet:AuthorizeRequestOnClaimChallenge\n * import { bearerTokenAuthenticationPolicy } from \"@azure/core-rest-pipeline\";\n * import { authorizeRequestOnClaimChallenge } from \"@azure/core-client\";\n *\n * const policy = bearerTokenAuthenticationPolicy({\n *   challengeCallbacks: {\n *     authorizeRequestOnChallenge: authorizeRequestOnClaimChallenge,\n *   },\n *   scopes: [\"https://service/.default\"],\n * });\n * ```\n *\n * Once provided, the `bearerTokenAuthenticationPolicy` policy will internally handle Continuous Access Evaluation (CAE) challenges.\n * When it can't complete a challenge it will return the 401 (unauthorized) response from ARM.\n *\n * Example challenge with claims:\n *\n * ```\n * Bearer authorization_uri=\"https://login.windows-ppe.net/\", error=\"invalid_token\",\n * error_description=\"User session has been revoked\",\n * claims=\"eyJhY2Nlc3NfdG9rZW4iOnsibmJmIjp7ImVzc2VudGlhbCI6dHJ1ZSwgInZhbHVlIjoiMTYwMzc0MjgwMCJ9fX0=\"\n * ```\n */\nasync function authorizeRequestOnClaimChallenge(onChallengeOptions) {\n    var _a;\n    const { scopes, response } = onChallengeOptions;\n    const logger = onChallengeOptions.logger || _log_js__WEBPACK_IMPORTED_MODULE_0__.logger;\n    const challenge = response.headers.get(\"WWW-Authenticate\");\n    if (!challenge) {\n        logger.info(`The WWW-Authenticate header was missing. Failed to perform the Continuous Access Evaluation authentication flow.`);\n        return false;\n    }\n    const challenges = parseCAEChallenge(challenge) || [];\n    const parsedChallenge = challenges.find((x) => x.claims);\n    if (!parsedChallenge) {\n        logger.info(`The WWW-Authenticate header was missing the necessary \"claims\" to perform the Continuous Access Evaluation authentication flow.`);\n        return false;\n    }\n    const accessToken = await onChallengeOptions.getAccessToken(parsedChallenge.scope ? [parsedChallenge.scope] : scopes, {\n        claims: (0,_base64_js__WEBPACK_IMPORTED_MODULE_1__.decodeStringToString)(parsedChallenge.claims),\n    });\n    if (!accessToken) {\n        return false;\n    }\n    onChallengeOptions.request.headers.set(\"Authorization\", `${(_a = accessToken.tokenType) !== null && _a !== void 0 ? _a : \"Bearer\"} ${accessToken.token}`);\n    return true;\n}\n//# sourceMappingURL=authorizeRequestOnClaimChallenge.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL2F1dGhvcml6ZVJlcXVlc3RPbkNsYWltQ2hhbGxlbmdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ3NEO0FBQ0g7QUFDbkQ7QUFDQTtBQUNBLGNBQWMsZ0JBQWdCLElBQUksaUJBQWlCO0FBQ25EO0FBQ0E7QUFDQTtBQUNPO0FBQ1Asa0NBQWtDLGtCQUFrQjtBQUNwRDtBQUNBLGtDQUFrQyxpQkFBaUI7QUFDbkQscUZBQXFGLGNBQWM7QUFDbkc7QUFDQSw2RUFBNkUsYUFBYTtBQUMxRixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksa0NBQWtDO0FBQzlDLFlBQVksbUNBQW1DO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLFlBQVksbUJBQW1CO0FBQy9CLGdEQUFnRCwyQ0FBZ0I7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGdFQUFvQjtBQUNwQyxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsK0RBQStELHdFQUF3RSxFQUFFLGtCQUFrQjtBQUMzSjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1jbGllbnRcXGRpc3RcXGVzbVxcYXV0aG9yaXplUmVxdWVzdE9uQ2xhaW1DaGFsbGVuZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBsb2dnZXIgYXMgY29yZUNsaWVudExvZ2dlciB9IGZyb20gXCIuL2xvZy5qc1wiO1xuaW1wb3J0IHsgZGVjb2RlU3RyaW5nVG9TdHJpbmcgfSBmcm9tIFwiLi9iYXNlNjQuanNcIjtcbi8qKlxuICogQ29udmVydHM6IGBCZWFyZXIgYT1cImJcIiwgYz1cImRcIiwgQmVhcmVyIGQ9XCJlXCIsIGY9XCJnXCJgLlxuICogSW50bzogYFsgeyBhOiAnYicsIGM6ICdkJyB9LCB7IGQ6ICdlJywgZjogJ2cnIH0gXWAuXG4gKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUNBRUNoYWxsZW5nZShjaGFsbGVuZ2VzKSB7XG4gICAgY29uc3QgYmVhcmVyQ2hhbGxlbmdlcyA9IGAsICR7Y2hhbGxlbmdlcy50cmltKCl9YC5zcGxpdChcIiwgQmVhcmVyIFwiKS5maWx0ZXIoKHgpID0+IHgpO1xuICAgIHJldHVybiBiZWFyZXJDaGFsbGVuZ2VzLm1hcCgoY2hhbGxlbmdlKSA9PiB7XG4gICAgICAgIGNvbnN0IGNoYWxsZW5nZVBhcnRzID0gYCR7Y2hhbGxlbmdlLnRyaW0oKX0sIGAuc3BsaXQoJ1wiLCAnKS5maWx0ZXIoKHgpID0+IHgpO1xuICAgICAgICBjb25zdCBrZXlWYWx1ZVBhaXJzID0gY2hhbGxlbmdlUGFydHMubWFwKChrZXlWYWx1ZSkgPT4gKChba2V5LCB2YWx1ZV0pID0+ICh7IFtrZXldOiB2YWx1ZSB9KSkoa2V5VmFsdWUudHJpbSgpLnNwbGl0KCc9XCInKSkpO1xuICAgICAgICAvLyBLZXktdmFsdWUgcGFpcnMgdG8gcGxhaW4gb2JqZWN0OlxuICAgICAgICByZXR1cm4ga2V5VmFsdWVQYWlycy5yZWR1Y2UoKGEsIGIpID0+IChPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGEpLCBiKSksIHt9KTtcbiAgICB9KTtcbn1cbi8qKlxuICogVGhpcyBmdW5jdGlvbiBjYW4gYmUgdXNlZCBhcyBhIGNhbGxiYWNrIGZvciB0aGUgYGJlYXJlclRva2VuQXV0aGVudGljYXRpb25Qb2xpY3lgIG9mIGBAYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lYCwgdG8gc3VwcG9ydCBDQUUgY2hhbGxlbmdlczpcbiAqIFtDb250aW51b3VzIEFjY2VzcyBFdmFsdWF0aW9uXShodHRwczovL2xlYXJuLm1pY3Jvc29mdC5jb20vYXp1cmUvYWN0aXZlLWRpcmVjdG9yeS9jb25kaXRpb25hbC1hY2Nlc3MvY29uY2VwdC1jb250aW51b3VzLWFjY2Vzcy1ldmFsdWF0aW9uKS5cbiAqXG4gKiBDYWxsIHRoZSBgYmVhcmVyVG9rZW5BdXRoZW50aWNhdGlvblBvbGljeWAgd2l0aCB0aGUgZm9sbG93aW5nIG9wdGlvbnM6XG4gKlxuICogYGBgdHMgc25pcHBldDpBdXRob3JpemVSZXF1ZXN0T25DbGFpbUNoYWxsZW5nZVxuICogaW1wb3J0IHsgYmVhcmVyVG9rZW5BdXRoZW50aWNhdGlvblBvbGljeSB9IGZyb20gXCJAYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lXCI7XG4gKiBpbXBvcnQgeyBhdXRob3JpemVSZXF1ZXN0T25DbGFpbUNoYWxsZW5nZSB9IGZyb20gXCJAYXp1cmUvY29yZS1jbGllbnRcIjtcbiAqXG4gKiBjb25zdCBwb2xpY3kgPSBiZWFyZXJUb2tlbkF1dGhlbnRpY2F0aW9uUG9saWN5KHtcbiAqICAgY2hhbGxlbmdlQ2FsbGJhY2tzOiB7XG4gKiAgICAgYXV0aG9yaXplUmVxdWVzdE9uQ2hhbGxlbmdlOiBhdXRob3JpemVSZXF1ZXN0T25DbGFpbUNoYWxsZW5nZSxcbiAqICAgfSxcbiAqICAgc2NvcGVzOiBbXCJodHRwczovL3NlcnZpY2UvLmRlZmF1bHRcIl0sXG4gKiB9KTtcbiAqIGBgYFxuICpcbiAqIE9uY2UgcHJvdmlkZWQsIHRoZSBgYmVhcmVyVG9rZW5BdXRoZW50aWNhdGlvblBvbGljeWAgcG9saWN5IHdpbGwgaW50ZXJuYWxseSBoYW5kbGUgQ29udGludW91cyBBY2Nlc3MgRXZhbHVhdGlvbiAoQ0FFKSBjaGFsbGVuZ2VzLlxuICogV2hlbiBpdCBjYW4ndCBjb21wbGV0ZSBhIGNoYWxsZW5nZSBpdCB3aWxsIHJldHVybiB0aGUgNDAxICh1bmF1dGhvcml6ZWQpIHJlc3BvbnNlIGZyb20gQVJNLlxuICpcbiAqIEV4YW1wbGUgY2hhbGxlbmdlIHdpdGggY2xhaW1zOlxuICpcbiAqIGBgYFxuICogQmVhcmVyIGF1dGhvcml6YXRpb25fdXJpPVwiaHR0cHM6Ly9sb2dpbi53aW5kb3dzLXBwZS5uZXQvXCIsIGVycm9yPVwiaW52YWxpZF90b2tlblwiLFxuICogZXJyb3JfZGVzY3JpcHRpb249XCJVc2VyIHNlc3Npb24gaGFzIGJlZW4gcmV2b2tlZFwiLFxuICogY2xhaW1zPVwiZXlKaFkyTmxjM05mZEc5clpXNGlPbnNpYm1KbUlqcDdJbVZ6YzJWdWRHbGhiQ0k2ZEhKMVpTd2dJblpoYkhWbElqb2lNVFl3TXpjME1qZ3dNQ0o5ZlgwPVwiXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGF1dGhvcml6ZVJlcXVlc3RPbkNsYWltQ2hhbGxlbmdlKG9uQ2hhbGxlbmdlT3B0aW9ucykge1xuICAgIHZhciBfYTtcbiAgICBjb25zdCB7IHNjb3BlcywgcmVzcG9uc2UgfSA9IG9uQ2hhbGxlbmdlT3B0aW9ucztcbiAgICBjb25zdCBsb2dnZXIgPSBvbkNoYWxsZW5nZU9wdGlvbnMubG9nZ2VyIHx8IGNvcmVDbGllbnRMb2dnZXI7XG4gICAgY29uc3QgY2hhbGxlbmdlID0gcmVzcG9uc2UuaGVhZGVycy5nZXQoXCJXV1ctQXV0aGVudGljYXRlXCIpO1xuICAgIGlmICghY2hhbGxlbmdlKSB7XG4gICAgICAgIGxvZ2dlci5pbmZvKGBUaGUgV1dXLUF1dGhlbnRpY2F0ZSBoZWFkZXIgd2FzIG1pc3NpbmcuIEZhaWxlZCB0byBwZXJmb3JtIHRoZSBDb250aW51b3VzIEFjY2VzcyBFdmFsdWF0aW9uIGF1dGhlbnRpY2F0aW9uIGZsb3cuYCk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgY29uc3QgY2hhbGxlbmdlcyA9IHBhcnNlQ0FFQ2hhbGxlbmdlKGNoYWxsZW5nZSkgfHwgW107XG4gICAgY29uc3QgcGFyc2VkQ2hhbGxlbmdlID0gY2hhbGxlbmdlcy5maW5kKCh4KSA9PiB4LmNsYWltcyk7XG4gICAgaWYgKCFwYXJzZWRDaGFsbGVuZ2UpIHtcbiAgICAgICAgbG9nZ2VyLmluZm8oYFRoZSBXV1ctQXV0aGVudGljYXRlIGhlYWRlciB3YXMgbWlzc2luZyB0aGUgbmVjZXNzYXJ5IFwiY2xhaW1zXCIgdG8gcGVyZm9ybSB0aGUgQ29udGludW91cyBBY2Nlc3MgRXZhbHVhdGlvbiBhdXRoZW50aWNhdGlvbiBmbG93LmApO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGNvbnN0IGFjY2Vzc1Rva2VuID0gYXdhaXQgb25DaGFsbGVuZ2VPcHRpb25zLmdldEFjY2Vzc1Rva2VuKHBhcnNlZENoYWxsZW5nZS5zY29wZSA/IFtwYXJzZWRDaGFsbGVuZ2Uuc2NvcGVdIDogc2NvcGVzLCB7XG4gICAgICAgIGNsYWltczogZGVjb2RlU3RyaW5nVG9TdHJpbmcocGFyc2VkQ2hhbGxlbmdlLmNsYWltcyksXG4gICAgfSk7XG4gICAgaWYgKCFhY2Nlc3NUb2tlbikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIG9uQ2hhbGxlbmdlT3B0aW9ucy5yZXF1ZXN0LmhlYWRlcnMuc2V0KFwiQXV0aG9yaXphdGlvblwiLCBgJHsoX2EgPSBhY2Nlc3NUb2tlbi50b2tlblR5cGUpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFwiQmVhcmVyXCJ9ICR7YWNjZXNzVG9rZW4udG9rZW59YCk7XG4gICAgcmV0dXJuIHRydWU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hdXRob3JpemVSZXF1ZXN0T25DbGFpbUNoYWxsZW5nZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/authorizeRequestOnClaimChallenge.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/authorizeRequestOnTenantChallenge.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/authorizeRequestOnTenantChallenge.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authorizeRequestOnTenantChallenge: () => (/* binding */ authorizeRequestOnTenantChallenge)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * A set of constants used internally when processing requests.\n */\nconst Constants = {\n    DefaultScope: \"/.default\",\n    /**\n     * Defines constants for use with HTTP headers.\n     */\n    HeaderConstants: {\n        /**\n         * The Authorization header.\n         */\n        AUTHORIZATION: \"authorization\",\n    },\n};\nfunction isUuid(text) {\n    return /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/.test(text);\n}\n/**\n * Defines a callback to handle auth challenge for Storage APIs.\n * This implements the bearer challenge process described here: https://learn.microsoft.com/rest/api/storageservices/authorize-with-azure-active-directory#bearer-challenge\n * Handling has specific features for storage that departs to the general AAD challenge docs.\n **/\nconst authorizeRequestOnTenantChallenge = async (challengeOptions) => {\n    var _a;\n    const requestOptions = requestToOptions(challengeOptions.request);\n    const challenge = getChallenge(challengeOptions.response);\n    if (challenge) {\n        const challengeInfo = parseChallenge(challenge);\n        const challengeScopes = buildScopes(challengeOptions, challengeInfo);\n        const tenantId = extractTenantId(challengeInfo);\n        if (!tenantId) {\n            return false;\n        }\n        const accessToken = await challengeOptions.getAccessToken(challengeScopes, Object.assign(Object.assign({}, requestOptions), { tenantId }));\n        if (!accessToken) {\n            return false;\n        }\n        challengeOptions.request.headers.set(Constants.HeaderConstants.AUTHORIZATION, `${(_a = accessToken.tokenType) !== null && _a !== void 0 ? _a : \"Bearer\"} ${accessToken.token}`);\n        return true;\n    }\n    return false;\n};\n/**\n * Extracts the tenant id from the challenge information\n * The tenant id is contained in the authorization_uri as the first\n * path part.\n */\nfunction extractTenantId(challengeInfo) {\n    const parsedAuthUri = new URL(challengeInfo.authorization_uri);\n    const pathSegments = parsedAuthUri.pathname.split(\"/\");\n    const tenantId = pathSegments[1];\n    if (tenantId && isUuid(tenantId)) {\n        return tenantId;\n    }\n    return undefined;\n}\n/**\n * Builds the authentication scopes based on the information that comes in the\n * challenge information. Scopes url is present in the resource_id, if it is empty\n * we keep using the original scopes.\n */\nfunction buildScopes(challengeOptions, challengeInfo) {\n    if (!challengeInfo.resource_id) {\n        return challengeOptions.scopes;\n    }\n    const challengeScopes = new URL(challengeInfo.resource_id);\n    challengeScopes.pathname = Constants.DefaultScope;\n    let scope = challengeScopes.toString();\n    if (scope === \"https://disk.azure.com/.default\") {\n        // the extra slash is required by the service\n        scope = \"https://disk.azure.com//.default\";\n    }\n    return [scope];\n}\n/**\n * We will retrieve the challenge only if the response status code was 401,\n * and if the response contained the header \"WWW-Authenticate\" with a non-empty value.\n */\nfunction getChallenge(response) {\n    const challenge = response.headers.get(\"WWW-Authenticate\");\n    if (response.status === 401 && challenge) {\n        return challenge;\n    }\n    return;\n}\n/**\n * Converts: `Bearer a=\"b\" c=\"d\"`.\n * Into: `[ { a: 'b', c: 'd' }]`.\n *\n * @internal\n */\nfunction parseChallenge(challenge) {\n    const bearerChallenge = challenge.slice(\"Bearer \".length);\n    const challengeParts = `${bearerChallenge.trim()} `.split(\" \").filter((x) => x);\n    const keyValuePairs = challengeParts.map((keyValue) => (([key, value]) => ({ [key]: value }))(keyValue.trim().split(\"=\")));\n    // Key-value pairs to plain object:\n    return keyValuePairs.reduce((a, b) => (Object.assign(Object.assign({}, a), b)), {});\n}\n/**\n * Extracts the options form a Pipeline Request for later re-use\n */\nfunction requestToOptions(request) {\n    return {\n        abortSignal: request.abortSignal,\n        requestOptions: {\n            timeout: request.timeout,\n        },\n        tracingOptions: request.tracingOptions,\n    };\n}\n//# sourceMappingURL=authorizeRequestOnTenantChallenge.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL2F1dGhvcml6ZVJlcXVlc3RPblRlbmFudENoYWxsZW5nZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSx5QkFBeUIsRUFBRSxlQUFlLEVBQUUsZUFBZSxFQUFFLGVBQWUsRUFBRSxlQUFlLEdBQUc7QUFDaEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlIQUFpSCxxQkFBcUIsVUFBVTtBQUNoSjtBQUNBO0FBQ0E7QUFDQSx5RkFBeUYsd0VBQXdFLEVBQUUsa0JBQWtCO0FBQ3JMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxnQkFBZ0I7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qix3QkFBd0I7QUFDdEQsaUZBQWlGLGNBQWM7QUFDL0Y7QUFDQSx5RUFBeUUsYUFBYTtBQUN0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1jbGllbnRcXGRpc3RcXGVzbVxcYXV0aG9yaXplUmVxdWVzdE9uVGVuYW50Q2hhbGxlbmdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqXG4gKiBBIHNldCBvZiBjb25zdGFudHMgdXNlZCBpbnRlcm5hbGx5IHdoZW4gcHJvY2Vzc2luZyByZXF1ZXN0cy5cbiAqL1xuY29uc3QgQ29uc3RhbnRzID0ge1xuICAgIERlZmF1bHRTY29wZTogXCIvLmRlZmF1bHRcIixcbiAgICAvKipcbiAgICAgKiBEZWZpbmVzIGNvbnN0YW50cyBmb3IgdXNlIHdpdGggSFRUUCBoZWFkZXJzLlxuICAgICAqL1xuICAgIEhlYWRlckNvbnN0YW50czoge1xuICAgICAgICAvKipcbiAgICAgICAgICogVGhlIEF1dGhvcml6YXRpb24gaGVhZGVyLlxuICAgICAgICAgKi9cbiAgICAgICAgQVVUSE9SSVpBVElPTjogXCJhdXRob3JpemF0aW9uXCIsXG4gICAgfSxcbn07XG5mdW5jdGlvbiBpc1V1aWQodGV4dCkge1xuICAgIHJldHVybiAvXlswLTlhLWZBLUZdezh9XFxiLVswLTlhLWZBLUZdezR9XFxiLVswLTlhLWZBLUZdezR9XFxiLVswLTlhLWZBLUZdezR9XFxiLVswLTlhLWZBLUZdezEyfSQvLnRlc3QodGV4dCk7XG59XG4vKipcbiAqIERlZmluZXMgYSBjYWxsYmFjayB0byBoYW5kbGUgYXV0aCBjaGFsbGVuZ2UgZm9yIFN0b3JhZ2UgQVBJcy5cbiAqIFRoaXMgaW1wbGVtZW50cyB0aGUgYmVhcmVyIGNoYWxsZW5nZSBwcm9jZXNzIGRlc2NyaWJlZCBoZXJlOiBodHRwczovL2xlYXJuLm1pY3Jvc29mdC5jb20vcmVzdC9hcGkvc3RvcmFnZXNlcnZpY2VzL2F1dGhvcml6ZS13aXRoLWF6dXJlLWFjdGl2ZS1kaXJlY3RvcnkjYmVhcmVyLWNoYWxsZW5nZVxuICogSGFuZGxpbmcgaGFzIHNwZWNpZmljIGZlYXR1cmVzIGZvciBzdG9yYWdlIHRoYXQgZGVwYXJ0cyB0byB0aGUgZ2VuZXJhbCBBQUQgY2hhbGxlbmdlIGRvY3MuXG4gKiovXG5leHBvcnQgY29uc3QgYXV0aG9yaXplUmVxdWVzdE9uVGVuYW50Q2hhbGxlbmdlID0gYXN5bmMgKGNoYWxsZW5nZU9wdGlvbnMpID0+IHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3QgcmVxdWVzdE9wdGlvbnMgPSByZXF1ZXN0VG9PcHRpb25zKGNoYWxsZW5nZU9wdGlvbnMucmVxdWVzdCk7XG4gICAgY29uc3QgY2hhbGxlbmdlID0gZ2V0Q2hhbGxlbmdlKGNoYWxsZW5nZU9wdGlvbnMucmVzcG9uc2UpO1xuICAgIGlmIChjaGFsbGVuZ2UpIHtcbiAgICAgICAgY29uc3QgY2hhbGxlbmdlSW5mbyA9IHBhcnNlQ2hhbGxlbmdlKGNoYWxsZW5nZSk7XG4gICAgICAgIGNvbnN0IGNoYWxsZW5nZVNjb3BlcyA9IGJ1aWxkU2NvcGVzKGNoYWxsZW5nZU9wdGlvbnMsIGNoYWxsZW5nZUluZm8pO1xuICAgICAgICBjb25zdCB0ZW5hbnRJZCA9IGV4dHJhY3RUZW5hbnRJZChjaGFsbGVuZ2VJbmZvKTtcbiAgICAgICAgaWYgKCF0ZW5hbnRJZCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGFjY2Vzc1Rva2VuID0gYXdhaXQgY2hhbGxlbmdlT3B0aW9ucy5nZXRBY2Nlc3NUb2tlbihjaGFsbGVuZ2VTY29wZXMsIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgcmVxdWVzdE9wdGlvbnMpLCB7IHRlbmFudElkIH0pKTtcbiAgICAgICAgaWYgKCFhY2Nlc3NUb2tlbikge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGNoYWxsZW5nZU9wdGlvbnMucmVxdWVzdC5oZWFkZXJzLnNldChDb25zdGFudHMuSGVhZGVyQ29uc3RhbnRzLkFVVEhPUklaQVRJT04sIGAkeyhfYSA9IGFjY2Vzc1Rva2VuLnRva2VuVHlwZSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogXCJCZWFyZXJcIn0gJHthY2Nlc3NUb2tlbi50b2tlbn1gKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn07XG4vKipcbiAqIEV4dHJhY3RzIHRoZSB0ZW5hbnQgaWQgZnJvbSB0aGUgY2hhbGxlbmdlIGluZm9ybWF0aW9uXG4gKiBUaGUgdGVuYW50IGlkIGlzIGNvbnRhaW5lZCBpbiB0aGUgYXV0aG9yaXphdGlvbl91cmkgYXMgdGhlIGZpcnN0XG4gKiBwYXRoIHBhcnQuXG4gKi9cbmZ1bmN0aW9uIGV4dHJhY3RUZW5hbnRJZChjaGFsbGVuZ2VJbmZvKSB7XG4gICAgY29uc3QgcGFyc2VkQXV0aFVyaSA9IG5ldyBVUkwoY2hhbGxlbmdlSW5mby5hdXRob3JpemF0aW9uX3VyaSk7XG4gICAgY29uc3QgcGF0aFNlZ21lbnRzID0gcGFyc2VkQXV0aFVyaS5wYXRobmFtZS5zcGxpdChcIi9cIik7XG4gICAgY29uc3QgdGVuYW50SWQgPSBwYXRoU2VnbWVudHNbMV07XG4gICAgaWYgKHRlbmFudElkICYmIGlzVXVpZCh0ZW5hbnRJZCkpIHtcbiAgICAgICAgcmV0dXJuIHRlbmFudElkO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufVxuLyoqXG4gKiBCdWlsZHMgdGhlIGF1dGhlbnRpY2F0aW9uIHNjb3BlcyBiYXNlZCBvbiB0aGUgaW5mb3JtYXRpb24gdGhhdCBjb21lcyBpbiB0aGVcbiAqIGNoYWxsZW5nZSBpbmZvcm1hdGlvbi4gU2NvcGVzIHVybCBpcyBwcmVzZW50IGluIHRoZSByZXNvdXJjZV9pZCwgaWYgaXQgaXMgZW1wdHlcbiAqIHdlIGtlZXAgdXNpbmcgdGhlIG9yaWdpbmFsIHNjb3Blcy5cbiAqL1xuZnVuY3Rpb24gYnVpbGRTY29wZXMoY2hhbGxlbmdlT3B0aW9ucywgY2hhbGxlbmdlSW5mbykge1xuICAgIGlmICghY2hhbGxlbmdlSW5mby5yZXNvdXJjZV9pZCkge1xuICAgICAgICByZXR1cm4gY2hhbGxlbmdlT3B0aW9ucy5zY29wZXM7XG4gICAgfVxuICAgIGNvbnN0IGNoYWxsZW5nZVNjb3BlcyA9IG5ldyBVUkwoY2hhbGxlbmdlSW5mby5yZXNvdXJjZV9pZCk7XG4gICAgY2hhbGxlbmdlU2NvcGVzLnBhdGhuYW1lID0gQ29uc3RhbnRzLkRlZmF1bHRTY29wZTtcbiAgICBsZXQgc2NvcGUgPSBjaGFsbGVuZ2VTY29wZXMudG9TdHJpbmcoKTtcbiAgICBpZiAoc2NvcGUgPT09IFwiaHR0cHM6Ly9kaXNrLmF6dXJlLmNvbS8uZGVmYXVsdFwiKSB7XG4gICAgICAgIC8vIHRoZSBleHRyYSBzbGFzaCBpcyByZXF1aXJlZCBieSB0aGUgc2VydmljZVxuICAgICAgICBzY29wZSA9IFwiaHR0cHM6Ly9kaXNrLmF6dXJlLmNvbS8vLmRlZmF1bHRcIjtcbiAgICB9XG4gICAgcmV0dXJuIFtzY29wZV07XG59XG4vKipcbiAqIFdlIHdpbGwgcmV0cmlldmUgdGhlIGNoYWxsZW5nZSBvbmx5IGlmIHRoZSByZXNwb25zZSBzdGF0dXMgY29kZSB3YXMgNDAxLFxuICogYW5kIGlmIHRoZSByZXNwb25zZSBjb250YWluZWQgdGhlIGhlYWRlciBcIldXVy1BdXRoZW50aWNhdGVcIiB3aXRoIGEgbm9uLWVtcHR5IHZhbHVlLlxuICovXG5mdW5jdGlvbiBnZXRDaGFsbGVuZ2UocmVzcG9uc2UpIHtcbiAgICBjb25zdCBjaGFsbGVuZ2UgPSByZXNwb25zZS5oZWFkZXJzLmdldChcIldXVy1BdXRoZW50aWNhdGVcIik7XG4gICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDAxICYmIGNoYWxsZW5nZSkge1xuICAgICAgICByZXR1cm4gY2hhbGxlbmdlO1xuICAgIH1cbiAgICByZXR1cm47XG59XG4vKipcbiAqIENvbnZlcnRzOiBgQmVhcmVyIGE9XCJiXCIgYz1cImRcImAuXG4gKiBJbnRvOiBgWyB7IGE6ICdiJywgYzogJ2QnIH1dYC5cbiAqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZnVuY3Rpb24gcGFyc2VDaGFsbGVuZ2UoY2hhbGxlbmdlKSB7XG4gICAgY29uc3QgYmVhcmVyQ2hhbGxlbmdlID0gY2hhbGxlbmdlLnNsaWNlKFwiQmVhcmVyIFwiLmxlbmd0aCk7XG4gICAgY29uc3QgY2hhbGxlbmdlUGFydHMgPSBgJHtiZWFyZXJDaGFsbGVuZ2UudHJpbSgpfSBgLnNwbGl0KFwiIFwiKS5maWx0ZXIoKHgpID0+IHgpO1xuICAgIGNvbnN0IGtleVZhbHVlUGFpcnMgPSBjaGFsbGVuZ2VQYXJ0cy5tYXAoKGtleVZhbHVlKSA9PiAoKFtrZXksIHZhbHVlXSkgPT4gKHsgW2tleV06IHZhbHVlIH0pKShrZXlWYWx1ZS50cmltKCkuc3BsaXQoXCI9XCIpKSk7XG4gICAgLy8gS2V5LXZhbHVlIHBhaXJzIHRvIHBsYWluIG9iamVjdDpcbiAgICByZXR1cm4ga2V5VmFsdWVQYWlycy5yZWR1Y2UoKGEsIGIpID0+IChPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGEpLCBiKSksIHt9KTtcbn1cbi8qKlxuICogRXh0cmFjdHMgdGhlIG9wdGlvbnMgZm9ybSBhIFBpcGVsaW5lIFJlcXVlc3QgZm9yIGxhdGVyIHJlLXVzZVxuICovXG5mdW5jdGlvbiByZXF1ZXN0VG9PcHRpb25zKHJlcXVlc3QpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBhYm9ydFNpZ25hbDogcmVxdWVzdC5hYm9ydFNpZ25hbCxcbiAgICAgICAgcmVxdWVzdE9wdGlvbnM6IHtcbiAgICAgICAgICAgIHRpbWVvdXQ6IHJlcXVlc3QudGltZW91dCxcbiAgICAgICAgfSxcbiAgICAgICAgdHJhY2luZ09wdGlvbnM6IHJlcXVlc3QudHJhY2luZ09wdGlvbnMsXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF1dGhvcml6ZVJlcXVlc3RPblRlbmFudENoYWxsZW5nZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/authorizeRequestOnTenantChallenge.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/base64.js":
/*!************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/base64.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeString: () => (/* binding */ decodeString),\n/* harmony export */   decodeStringToString: () => (/* binding */ decodeStringToString),\n/* harmony export */   encodeByteArray: () => (/* binding */ encodeByteArray),\n/* harmony export */   encodeString: () => (/* binding */ encodeString)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Encodes a string in base64 format.\n * @param value - the string to encode\n * @internal\n */\nfunction encodeString(value) {\n    return Buffer.from(value).toString(\"base64\");\n}\n/**\n * Encodes a byte array in base64 format.\n * @param value - the Uint8Aray to encode\n * @internal\n */\nfunction encodeByteArray(value) {\n    const bufferValue = value instanceof Buffer ? value : Buffer.from(value.buffer);\n    return bufferValue.toString(\"base64\");\n}\n/**\n * Decodes a base64 string into a byte array.\n * @param value - the base64 string to decode\n * @internal\n */\nfunction decodeString(value) {\n    return Buffer.from(value, \"base64\");\n}\n/**\n * Decodes a base64 string into a string.\n * @param value - the base64 string to decode\n * @internal\n */\nfunction decodeStringToString(value) {\n    return Buffer.from(value, \"base64\").toString();\n}\n//# sourceMappingURL=base64.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL2Jhc2U2NC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZSAtIEhlbGxvIFNjcmlwdCBBSVxcbGlmZUFnZW50XFx2b2ljZS1saXZlLWFnZW50XFxzYW1wbGVzXFxyZWFjdFxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtY2xpZW50XFxkaXN0XFxlc21cXGJhc2U2NC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbi8qKlxuICogRW5jb2RlcyBhIHN0cmluZyBpbiBiYXNlNjQgZm9ybWF0LlxuICogQHBhcmFtIHZhbHVlIC0gdGhlIHN0cmluZyB0byBlbmNvZGVcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlU3RyaW5nKHZhbHVlKSB7XG4gICAgcmV0dXJuIEJ1ZmZlci5mcm9tKHZhbHVlKS50b1N0cmluZyhcImJhc2U2NFwiKTtcbn1cbi8qKlxuICogRW5jb2RlcyBhIGJ5dGUgYXJyYXkgaW4gYmFzZTY0IGZvcm1hdC5cbiAqIEBwYXJhbSB2YWx1ZSAtIHRoZSBVaW50OEFyYXkgdG8gZW5jb2RlXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZUJ5dGVBcnJheSh2YWx1ZSkge1xuICAgIGNvbnN0IGJ1ZmZlclZhbHVlID0gdmFsdWUgaW5zdGFuY2VvZiBCdWZmZXIgPyB2YWx1ZSA6IEJ1ZmZlci5mcm9tKHZhbHVlLmJ1ZmZlcik7XG4gICAgcmV0dXJuIGJ1ZmZlclZhbHVlLnRvU3RyaW5nKFwiYmFzZTY0XCIpO1xufVxuLyoqXG4gKiBEZWNvZGVzIGEgYmFzZTY0IHN0cmluZyBpbnRvIGEgYnl0ZSBhcnJheS5cbiAqIEBwYXJhbSB2YWx1ZSAtIHRoZSBiYXNlNjQgc3RyaW5nIHRvIGRlY29kZVxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVTdHJpbmcodmFsdWUpIHtcbiAgICByZXR1cm4gQnVmZmVyLmZyb20odmFsdWUsIFwiYmFzZTY0XCIpO1xufVxuLyoqXG4gKiBEZWNvZGVzIGEgYmFzZTY0IHN0cmluZyBpbnRvIGEgc3RyaW5nLlxuICogQHBhcmFtIHZhbHVlIC0gdGhlIGJhc2U2NCBzdHJpbmcgdG8gZGVjb2RlXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVN0cmluZ1RvU3RyaW5nKHZhbHVlKSB7XG4gICAgcmV0dXJuIEJ1ZmZlci5mcm9tKHZhbHVlLCBcImJhc2U2NFwiKS50b1N0cmluZygpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFzZTY0LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/base64.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/deserializationPolicy.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/deserializationPolicy.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deserializationPolicy: () => (/* binding */ deserializationPolicy),\n/* harmony export */   deserializationPolicyName: () => (/* binding */ deserializationPolicyName)\n/* harmony export */ });\n/* harmony import */ var _interfaces_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interfaces.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/interfaces.js\");\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n/* harmony import */ var _serializer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./serializer.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/serializer.js\");\n/* harmony import */ var _operationHelpers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operationHelpers.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/operationHelpers.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\nconst defaultJsonContentTypes = [\"application/json\", \"text/json\"];\nconst defaultXmlContentTypes = [\"application/xml\", \"application/atom+xml\"];\n/**\n * The programmatic identifier of the deserializationPolicy.\n */\nconst deserializationPolicyName = \"deserializationPolicy\";\n/**\n * This policy handles parsing out responses according to OperationSpecs on the request.\n */\nfunction deserializationPolicy(options = {}) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    const jsonContentTypes = (_b = (_a = options.expectedContentTypes) === null || _a === void 0 ? void 0 : _a.json) !== null && _b !== void 0 ? _b : defaultJsonContentTypes;\n    const xmlContentTypes = (_d = (_c = options.expectedContentTypes) === null || _c === void 0 ? void 0 : _c.xml) !== null && _d !== void 0 ? _d : defaultXmlContentTypes;\n    const parseXML = options.parseXML;\n    const serializerOptions = options.serializerOptions;\n    const updatedOptions = {\n        xml: {\n            rootName: (_e = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.rootName) !== null && _e !== void 0 ? _e : \"\",\n            includeRoot: (_f = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.includeRoot) !== null && _f !== void 0 ? _f : false,\n            xmlCharKey: (_g = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.xmlCharKey) !== null && _g !== void 0 ? _g : _interfaces_js__WEBPACK_IMPORTED_MODULE_0__.XML_CHARKEY,\n        },\n    };\n    return {\n        name: deserializationPolicyName,\n        async sendRequest(request, next) {\n            const response = await next(request);\n            return deserializeResponseBody(jsonContentTypes, xmlContentTypes, response, updatedOptions, parseXML);\n        },\n    };\n}\nfunction getOperationResponseMap(parsedResponse) {\n    let result;\n    const request = parsedResponse.request;\n    const operationInfo = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_3__.getOperationRequestInfo)(request);\n    const operationSpec = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationSpec;\n    if (operationSpec) {\n        if (!(operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationResponseGetter)) {\n            result = operationSpec.responses[parsedResponse.status];\n        }\n        else {\n            result = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationResponseGetter(operationSpec, parsedResponse);\n        }\n    }\n    return result;\n}\nfunction shouldDeserializeResponse(parsedResponse) {\n    const request = parsedResponse.request;\n    const operationInfo = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_3__.getOperationRequestInfo)(request);\n    const shouldDeserialize = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.shouldDeserialize;\n    let result;\n    if (shouldDeserialize === undefined) {\n        result = true;\n    }\n    else if (typeof shouldDeserialize === \"boolean\") {\n        result = shouldDeserialize;\n    }\n    else {\n        result = shouldDeserialize(parsedResponse);\n    }\n    return result;\n}\nasync function deserializeResponseBody(jsonContentTypes, xmlContentTypes, response, options, parseXML) {\n    const parsedResponse = await parse(jsonContentTypes, xmlContentTypes, response, options, parseXML);\n    if (!shouldDeserializeResponse(parsedResponse)) {\n        return parsedResponse;\n    }\n    const operationInfo = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_3__.getOperationRequestInfo)(parsedResponse.request);\n    const operationSpec = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationSpec;\n    if (!operationSpec || !operationSpec.responses) {\n        return parsedResponse;\n    }\n    const responseSpec = getOperationResponseMap(parsedResponse);\n    const { error, shouldReturnResponse } = handleErrorResponse(parsedResponse, operationSpec, responseSpec, options);\n    if (error) {\n        throw error;\n    }\n    else if (shouldReturnResponse) {\n        return parsedResponse;\n    }\n    // An operation response spec does exist for current status code, so\n    // use it to deserialize the response.\n    if (responseSpec) {\n        if (responseSpec.bodyMapper) {\n            let valueToDeserialize = parsedResponse.parsedBody;\n            if (operationSpec.isXML && responseSpec.bodyMapper.type.name === _serializer_js__WEBPACK_IMPORTED_MODULE_2__.MapperTypeNames.Sequence) {\n                valueToDeserialize =\n                    typeof valueToDeserialize === \"object\"\n                        ? valueToDeserialize[responseSpec.bodyMapper.xmlElementName]\n                        : [];\n            }\n            try {\n                parsedResponse.parsedBody = operationSpec.serializer.deserialize(responseSpec.bodyMapper, valueToDeserialize, \"operationRes.parsedBody\", options);\n            }\n            catch (deserializeError) {\n                const restError = new _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__.RestError(`Error ${deserializeError} occurred in deserializing the responseBody - ${parsedResponse.bodyAsText}`, {\n                    statusCode: parsedResponse.status,\n                    request: parsedResponse.request,\n                    response: parsedResponse,\n                });\n                throw restError;\n            }\n        }\n        else if (operationSpec.httpMethod === \"HEAD\") {\n            // head methods never have a body, but we return a boolean to indicate presence/absence of the resource\n            parsedResponse.parsedBody = response.status >= 200 && response.status < 300;\n        }\n        if (responseSpec.headersMapper) {\n            parsedResponse.parsedHeaders = operationSpec.serializer.deserialize(responseSpec.headersMapper, parsedResponse.headers.toJSON(), \"operationRes.parsedHeaders\", { xml: {}, ignoreUnknownProperties: true });\n        }\n    }\n    return parsedResponse;\n}\nfunction isOperationSpecEmpty(operationSpec) {\n    const expectedStatusCodes = Object.keys(operationSpec.responses);\n    return (expectedStatusCodes.length === 0 ||\n        (expectedStatusCodes.length === 1 && expectedStatusCodes[0] === \"default\"));\n}\nfunction handleErrorResponse(parsedResponse, operationSpec, responseSpec, options) {\n    var _a, _b, _c, _d, _e;\n    const isSuccessByStatus = 200 <= parsedResponse.status && parsedResponse.status < 300;\n    const isExpectedStatusCode = isOperationSpecEmpty(operationSpec)\n        ? isSuccessByStatus\n        : !!responseSpec;\n    if (isExpectedStatusCode) {\n        if (responseSpec) {\n            if (!responseSpec.isError) {\n                return { error: null, shouldReturnResponse: false };\n            }\n        }\n        else {\n            return { error: null, shouldReturnResponse: false };\n        }\n    }\n    const errorResponseSpec = responseSpec !== null && responseSpec !== void 0 ? responseSpec : operationSpec.responses.default;\n    const initialErrorMessage = ((_a = parsedResponse.request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.has(parsedResponse.status))\n        ? `Unexpected status code: ${parsedResponse.status}`\n        : parsedResponse.bodyAsText;\n    const error = new _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__.RestError(initialErrorMessage, {\n        statusCode: parsedResponse.status,\n        request: parsedResponse.request,\n        response: parsedResponse,\n    });\n    // If the item failed but there's no error spec or default spec to deserialize the error,\n    // and the parsed body doesn't look like an error object,\n    // we should fail so we just throw the parsed response\n    if (!errorResponseSpec &&\n        !(((_c = (_b = parsedResponse.parsedBody) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.code) && ((_e = (_d = parsedResponse.parsedBody) === null || _d === void 0 ? void 0 : _d.error) === null || _e === void 0 ? void 0 : _e.message))) {\n        throw error;\n    }\n    const defaultBodyMapper = errorResponseSpec === null || errorResponseSpec === void 0 ? void 0 : errorResponseSpec.bodyMapper;\n    const defaultHeadersMapper = errorResponseSpec === null || errorResponseSpec === void 0 ? void 0 : errorResponseSpec.headersMapper;\n    try {\n        // If error response has a body, try to deserialize it using default body mapper.\n        // Then try to extract error code & message from it\n        if (parsedResponse.parsedBody) {\n            const parsedBody = parsedResponse.parsedBody;\n            let deserializedError;\n            if (defaultBodyMapper) {\n                let valueToDeserialize = parsedBody;\n                if (operationSpec.isXML && defaultBodyMapper.type.name === _serializer_js__WEBPACK_IMPORTED_MODULE_2__.MapperTypeNames.Sequence) {\n                    valueToDeserialize = [];\n                    const elementName = defaultBodyMapper.xmlElementName;\n                    if (typeof parsedBody === \"object\" && elementName) {\n                        valueToDeserialize = parsedBody[elementName];\n                    }\n                }\n                deserializedError = operationSpec.serializer.deserialize(defaultBodyMapper, valueToDeserialize, \"error.response.parsedBody\", options);\n            }\n            const internalError = parsedBody.error || deserializedError || parsedBody;\n            error.code = internalError.code;\n            if (internalError.message) {\n                error.message = internalError.message;\n            }\n            if (defaultBodyMapper) {\n                error.response.parsedBody = deserializedError;\n            }\n        }\n        // If error response has headers, try to deserialize it using default header mapper\n        if (parsedResponse.headers && defaultHeadersMapper) {\n            error.response.parsedHeaders =\n                operationSpec.serializer.deserialize(defaultHeadersMapper, parsedResponse.headers.toJSON(), \"operationRes.parsedHeaders\");\n        }\n    }\n    catch (defaultError) {\n        error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody - \"${parsedResponse.bodyAsText}\" for the default response.`;\n    }\n    return { error, shouldReturnResponse: false };\n}\nasync function parse(jsonContentTypes, xmlContentTypes, operationResponse, opts, parseXML) {\n    var _a;\n    if (!((_a = operationResponse.request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.has(operationResponse.status)) &&\n        operationResponse.bodyAsText) {\n        const text = operationResponse.bodyAsText;\n        const contentType = operationResponse.headers.get(\"Content-Type\") || \"\";\n        const contentComponents = !contentType\n            ? []\n            : contentType.split(\";\").map((component) => component.toLowerCase());\n        try {\n            if (contentComponents.length === 0 ||\n                contentComponents.some((component) => jsonContentTypes.indexOf(component) !== -1)) {\n                operationResponse.parsedBody = JSON.parse(text);\n                return operationResponse;\n            }\n            else if (contentComponents.some((component) => xmlContentTypes.indexOf(component) !== -1)) {\n                if (!parseXML) {\n                    throw new Error(\"Parsing XML not supported.\");\n                }\n                const body = await parseXML(text, opts.xml);\n                operationResponse.parsedBody = body;\n                return operationResponse;\n            }\n        }\n        catch (err) {\n            const msg = `Error \"${err}\" occurred while parsing the response body - ${operationResponse.bodyAsText}.`;\n            const errCode = err.code || _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__.RestError.PARSE_ERROR;\n            const e = new _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__.RestError(msg, {\n                code: errCode,\n                statusCode: operationResponse.status,\n                request: operationResponse.request,\n                response: operationResponse,\n            });\n            throw e;\n        }\n    }\n    return operationResponse;\n}\n//# sourceMappingURL=deserializationPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/deserializationPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/httpClientCache.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/httpClientCache.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCachedDefaultHttpClient: () => (/* binding */ getCachedDefaultHttpClient)\n/* harmony export */ });\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nlet cachedHttpClient;\nfunction getCachedDefaultHttpClient() {\n    if (!cachedHttpClient) {\n        cachedHttpClient = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createDefaultHttpClient)();\n    }\n    return cachedHttpClient;\n}\n//# sourceMappingURL=httpClientCache.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL2h0dHBDbGllbnRDYWNoZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDb0U7QUFDcEU7QUFDTztBQUNQO0FBQ0EsMkJBQTJCLGtGQUF1QjtBQUNsRDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmUgLSBIZWxsbyBTY3JpcHQgQUlcXGxpZmVBZ2VudFxcdm9pY2UtbGl2ZS1hZ2VudFxcc2FtcGxlc1xccmVhY3RcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLWNsaWVudFxcZGlzdFxcZXNtXFxodHRwQ2xpZW50Q2FjaGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBjcmVhdGVEZWZhdWx0SHR0cENsaWVudCB9IGZyb20gXCJAYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lXCI7XG5sZXQgY2FjaGVkSHR0cENsaWVudDtcbmV4cG9ydCBmdW5jdGlvbiBnZXRDYWNoZWREZWZhdWx0SHR0cENsaWVudCgpIHtcbiAgICBpZiAoIWNhY2hlZEh0dHBDbGllbnQpIHtcbiAgICAgICAgY2FjaGVkSHR0cENsaWVudCA9IGNyZWF0ZURlZmF1bHRIdHRwQ2xpZW50KCk7XG4gICAgfVxuICAgIHJldHVybiBjYWNoZWRIdHRwQ2xpZW50O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aHR0cENsaWVudENhY2hlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/httpClientCache.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapperTypeNames: () => (/* reexport safe */ _serializer_js__WEBPACK_IMPORTED_MODULE_0__.MapperTypeNames),\n/* harmony export */   ServiceClient: () => (/* reexport safe */ _serviceClient_js__WEBPACK_IMPORTED_MODULE_1__.ServiceClient),\n/* harmony export */   XML_ATTRKEY: () => (/* reexport safe */ _interfaces_js__WEBPACK_IMPORTED_MODULE_3__.XML_ATTRKEY),\n/* harmony export */   XML_CHARKEY: () => (/* reexport safe */ _interfaces_js__WEBPACK_IMPORTED_MODULE_3__.XML_CHARKEY),\n/* harmony export */   authorizeRequestOnClaimChallenge: () => (/* reexport safe */ _authorizeRequestOnClaimChallenge_js__WEBPACK_IMPORTED_MODULE_6__.authorizeRequestOnClaimChallenge),\n/* harmony export */   authorizeRequestOnTenantChallenge: () => (/* reexport safe */ _authorizeRequestOnTenantChallenge_js__WEBPACK_IMPORTED_MODULE_7__.authorizeRequestOnTenantChallenge),\n/* harmony export */   createClientPipeline: () => (/* reexport safe */ _pipeline_js__WEBPACK_IMPORTED_MODULE_2__.createClientPipeline),\n/* harmony export */   createSerializer: () => (/* reexport safe */ _serializer_js__WEBPACK_IMPORTED_MODULE_0__.createSerializer),\n/* harmony export */   deserializationPolicy: () => (/* reexport safe */ _deserializationPolicy_js__WEBPACK_IMPORTED_MODULE_4__.deserializationPolicy),\n/* harmony export */   deserializationPolicyName: () => (/* reexport safe */ _deserializationPolicy_js__WEBPACK_IMPORTED_MODULE_4__.deserializationPolicyName),\n/* harmony export */   serializationPolicy: () => (/* reexport safe */ _serializationPolicy_js__WEBPACK_IMPORTED_MODULE_5__.serializationPolicy),\n/* harmony export */   serializationPolicyName: () => (/* reexport safe */ _serializationPolicy_js__WEBPACK_IMPORTED_MODULE_5__.serializationPolicyName)\n/* harmony export */ });\n/* harmony import */ var _serializer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./serializer.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/serializer.js\");\n/* harmony import */ var _serviceClient_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./serviceClient.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/serviceClient.js\");\n/* harmony import */ var _pipeline_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pipeline.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/pipeline.js\");\n/* harmony import */ var _interfaces_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./interfaces.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/interfaces.js\");\n/* harmony import */ var _deserializationPolicy_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./deserializationPolicy.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/deserializationPolicy.js\");\n/* harmony import */ var _serializationPolicy_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./serializationPolicy.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/serializationPolicy.js\");\n/* harmony import */ var _authorizeRequestOnClaimChallenge_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./authorizeRequestOnClaimChallenge.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/authorizeRequestOnClaimChallenge.js\");\n/* harmony import */ var _authorizeRequestOnTenantChallenge_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./authorizeRequestOnTenantChallenge.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/authorizeRequestOnTenantChallenge.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNvRTtBQUNqQjtBQUNFO0FBQ087QUFDbUM7QUFDTjtBQUNBO0FBQ0U7QUFDM0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1jbGllbnRcXGRpc3RcXGVzbVxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5leHBvcnQgeyBjcmVhdGVTZXJpYWxpemVyLCBNYXBwZXJUeXBlTmFtZXMgfSBmcm9tIFwiLi9zZXJpYWxpemVyLmpzXCI7XG5leHBvcnQgeyBTZXJ2aWNlQ2xpZW50IH0gZnJvbSBcIi4vc2VydmljZUNsaWVudC5qc1wiO1xuZXhwb3J0IHsgY3JlYXRlQ2xpZW50UGlwZWxpbmUgfSBmcm9tIFwiLi9waXBlbGluZS5qc1wiO1xuZXhwb3J0IHsgWE1MX0FUVFJLRVksIFhNTF9DSEFSS0VZLCB9IGZyb20gXCIuL2ludGVyZmFjZXMuanNcIjtcbmV4cG9ydCB7IGRlc2VyaWFsaXphdGlvblBvbGljeSwgZGVzZXJpYWxpemF0aW9uUG9saWN5TmFtZSwgfSBmcm9tIFwiLi9kZXNlcmlhbGl6YXRpb25Qb2xpY3kuanNcIjtcbmV4cG9ydCB7IHNlcmlhbGl6YXRpb25Qb2xpY3ksIHNlcmlhbGl6YXRpb25Qb2xpY3lOYW1lLCB9IGZyb20gXCIuL3NlcmlhbGl6YXRpb25Qb2xpY3kuanNcIjtcbmV4cG9ydCB7IGF1dGhvcml6ZVJlcXVlc3RPbkNsYWltQ2hhbGxlbmdlIH0gZnJvbSBcIi4vYXV0aG9yaXplUmVxdWVzdE9uQ2xhaW1DaGFsbGVuZ2UuanNcIjtcbmV4cG9ydCB7IGF1dGhvcml6ZVJlcXVlc3RPblRlbmFudENoYWxsZW5nZSB9IGZyb20gXCIuL2F1dGhvcml6ZVJlcXVlc3RPblRlbmFudENoYWxsZW5nZS5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/interfaceHelpers.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/interfaceHelpers.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getPathStringFromParameter: () => (/* binding */ getPathStringFromParameter),\n/* harmony export */   getStreamingResponseStatusCodes: () => (/* binding */ getStreamingResponseStatusCodes)\n/* harmony export */ });\n/* harmony import */ var _serializer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./serializer.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/serializer.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Gets the list of status codes for streaming responses.\n * @internal\n */\nfunction getStreamingResponseStatusCodes(operationSpec) {\n    const result = new Set();\n    for (const statusCode in operationSpec.responses) {\n        const operationResponse = operationSpec.responses[statusCode];\n        if (operationResponse.bodyMapper &&\n            operationResponse.bodyMapper.type.name === _serializer_js__WEBPACK_IMPORTED_MODULE_0__.MapperTypeNames.Stream) {\n            result.add(Number(statusCode));\n        }\n    }\n    return result;\n}\n/**\n * Get the path to this parameter's value as a dotted string (a.b.c).\n * @param parameter - The parameter to get the path string for.\n * @returns The path to this parameter's value as a dotted string.\n * @internal\n */\nfunction getPathStringFromParameter(parameter) {\n    const { parameterPath, mapper } = parameter;\n    let result;\n    if (typeof parameterPath === \"string\") {\n        result = parameterPath;\n    }\n    else if (Array.isArray(parameterPath)) {\n        result = parameterPath.join(\".\");\n    }\n    else {\n        result = mapper.serializedName;\n    }\n    return result;\n}\n//# sourceMappingURL=interfaceHelpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL2ludGVyZmFjZUhlbHBlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNrRDtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsMkRBQWU7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSx3QkFBd0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1jbGllbnRcXGRpc3RcXGVzbVxcaW50ZXJmYWNlSGVscGVycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IE1hcHBlclR5cGVOYW1lcyB9IGZyb20gXCIuL3NlcmlhbGl6ZXIuanNcIjtcbi8qKlxuICogR2V0cyB0aGUgbGlzdCBvZiBzdGF0dXMgY29kZXMgZm9yIHN0cmVhbWluZyByZXNwb25zZXMuXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFN0cmVhbWluZ1Jlc3BvbnNlU3RhdHVzQ29kZXMob3BlcmF0aW9uU3BlYykge1xuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBTZXQoKTtcbiAgICBmb3IgKGNvbnN0IHN0YXR1c0NvZGUgaW4gb3BlcmF0aW9uU3BlYy5yZXNwb25zZXMpIHtcbiAgICAgICAgY29uc3Qgb3BlcmF0aW9uUmVzcG9uc2UgPSBvcGVyYXRpb25TcGVjLnJlc3BvbnNlc1tzdGF0dXNDb2RlXTtcbiAgICAgICAgaWYgKG9wZXJhdGlvblJlc3BvbnNlLmJvZHlNYXBwZXIgJiZcbiAgICAgICAgICAgIG9wZXJhdGlvblJlc3BvbnNlLmJvZHlNYXBwZXIudHlwZS5uYW1lID09PSBNYXBwZXJUeXBlTmFtZXMuU3RyZWFtKSB7XG4gICAgICAgICAgICByZXN1bHQuYWRkKE51bWJlcihzdGF0dXNDb2RlKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbi8qKlxuICogR2V0IHRoZSBwYXRoIHRvIHRoaXMgcGFyYW1ldGVyJ3MgdmFsdWUgYXMgYSBkb3R0ZWQgc3RyaW5nIChhLmIuYykuXG4gKiBAcGFyYW0gcGFyYW1ldGVyIC0gVGhlIHBhcmFtZXRlciB0byBnZXQgdGhlIHBhdGggc3RyaW5nIGZvci5cbiAqIEByZXR1cm5zIFRoZSBwYXRoIHRvIHRoaXMgcGFyYW1ldGVyJ3MgdmFsdWUgYXMgYSBkb3R0ZWQgc3RyaW5nLlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRQYXRoU3RyaW5nRnJvbVBhcmFtZXRlcihwYXJhbWV0ZXIpIHtcbiAgICBjb25zdCB7IHBhcmFtZXRlclBhdGgsIG1hcHBlciB9ID0gcGFyYW1ldGVyO1xuICAgIGxldCByZXN1bHQ7XG4gICAgaWYgKHR5cGVvZiBwYXJhbWV0ZXJQYXRoID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHJlc3VsdCA9IHBhcmFtZXRlclBhdGg7XG4gICAgfVxuICAgIGVsc2UgaWYgKEFycmF5LmlzQXJyYXkocGFyYW1ldGVyUGF0aCkpIHtcbiAgICAgICAgcmVzdWx0ID0gcGFyYW1ldGVyUGF0aC5qb2luKFwiLlwiKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJlc3VsdCA9IG1hcHBlci5zZXJpYWxpemVkTmFtZTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVyZmFjZUhlbHBlcnMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/interfaceHelpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/interfaces.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/interfaces.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   XML_ATTRKEY: () => (/* binding */ XML_ATTRKEY),\n/* harmony export */   XML_CHARKEY: () => (/* binding */ XML_CHARKEY)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Default key used to access the XML attributes.\n */\nconst XML_ATTRKEY = \"$\";\n/**\n * Default key used to access the XML value content.\n */\nconst XML_CHARKEY = \"_\";\n//# sourceMappingURL=interfaces.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL2ludGVyZmFjZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZSAtIEhlbGxvIFNjcmlwdCBBSVxcbGlmZUFnZW50XFx2b2ljZS1saXZlLWFnZW50XFxzYW1wbGVzXFxyZWFjdFxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtY2xpZW50XFxkaXN0XFxlc21cXGludGVyZmFjZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vKipcbiAqIERlZmF1bHQga2V5IHVzZWQgdG8gYWNjZXNzIHRoZSBYTUwgYXR0cmlidXRlcy5cbiAqL1xuZXhwb3J0IGNvbnN0IFhNTF9BVFRSS0VZID0gXCIkXCI7XG4vKipcbiAqIERlZmF1bHQga2V5IHVzZWQgdG8gYWNjZXNzIHRoZSBYTUwgdmFsdWUgY29udGVudC5cbiAqL1xuZXhwb3J0IGNvbnN0IFhNTF9DSEFSS0VZID0gXCJfXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcmZhY2VzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/interfaces.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/log.js":
/*!*********************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/log.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/logger */ \"(ssr)/./node_modules/@azure/logger/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nconst logger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_0__.createClientLogger)(\"core-client\");\n//# sourceMappingURL=log.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL2xvZy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDbUQ7QUFDNUMsZUFBZSxpRUFBa0I7QUFDeEMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1jbGllbnRcXGRpc3RcXGVzbVxcbG9nLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgY3JlYXRlQ2xpZW50TG9nZ2VyIH0gZnJvbSBcIkBhenVyZS9sb2dnZXJcIjtcbmV4cG9ydCBjb25zdCBsb2dnZXIgPSBjcmVhdGVDbGllbnRMb2dnZXIoXCJjb3JlLWNsaWVudFwiKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvZy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/log.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/operationHelpers.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/operationHelpers.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getOperationArgumentValueFromParameter: () => (/* binding */ getOperationArgumentValueFromParameter),\n/* harmony export */   getOperationRequestInfo: () => (/* binding */ getOperationRequestInfo)\n/* harmony export */ });\n/* harmony import */ var _state_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./state.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/state.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * @internal\n * Retrieves the value to use for a given operation argument\n * @param operationArguments - The arguments passed from the generated client\n * @param parameter - The parameter description\n * @param fallbackObject - If something isn't found in the arguments bag, look here.\n *  Generally used to look at the service client properties.\n */\nfunction getOperationArgumentValueFromParameter(operationArguments, parameter, fallbackObject) {\n    let parameterPath = parameter.parameterPath;\n    const parameterMapper = parameter.mapper;\n    let value;\n    if (typeof parameterPath === \"string\") {\n        parameterPath = [parameterPath];\n    }\n    if (Array.isArray(parameterPath)) {\n        if (parameterPath.length > 0) {\n            if (parameterMapper.isConstant) {\n                value = parameterMapper.defaultValue;\n            }\n            else {\n                let propertySearchResult = getPropertyFromParameterPath(operationArguments, parameterPath);\n                if (!propertySearchResult.propertyFound && fallbackObject) {\n                    propertySearchResult = getPropertyFromParameterPath(fallbackObject, parameterPath);\n                }\n                let useDefaultValue = false;\n                if (!propertySearchResult.propertyFound) {\n                    useDefaultValue =\n                        parameterMapper.required ||\n                            (parameterPath[0] === \"options\" && parameterPath.length === 2);\n                }\n                value = useDefaultValue ? parameterMapper.defaultValue : propertySearchResult.propertyValue;\n            }\n        }\n    }\n    else {\n        if (parameterMapper.required) {\n            value = {};\n        }\n        for (const propertyName in parameterPath) {\n            const propertyMapper = parameterMapper.type.modelProperties[propertyName];\n            const propertyPath = parameterPath[propertyName];\n            const propertyValue = getOperationArgumentValueFromParameter(operationArguments, {\n                parameterPath: propertyPath,\n                mapper: propertyMapper,\n            }, fallbackObject);\n            if (propertyValue !== undefined) {\n                if (!value) {\n                    value = {};\n                }\n                value[propertyName] = propertyValue;\n            }\n        }\n    }\n    return value;\n}\nfunction getPropertyFromParameterPath(parent, parameterPath) {\n    const result = { propertyFound: false };\n    let i = 0;\n    for (; i < parameterPath.length; ++i) {\n        const parameterPathPart = parameterPath[i];\n        // Make sure to check inherited properties too, so don't use hasOwnProperty().\n        if (parent && parameterPathPart in parent) {\n            parent = parent[parameterPathPart];\n        }\n        else {\n            break;\n        }\n    }\n    if (i === parameterPath.length) {\n        result.propertyValue = parent;\n        result.propertyFound = true;\n    }\n    return result;\n}\nconst originalRequestSymbol = Symbol.for(\"@azure/core-client original request\");\nfunction hasOriginalRequest(request) {\n    return originalRequestSymbol in request;\n}\nfunction getOperationRequestInfo(request) {\n    if (hasOriginalRequest(request)) {\n        return getOperationRequestInfo(request[originalRequestSymbol]);\n    }\n    let info = _state_js__WEBPACK_IMPORTED_MODULE_0__.state.operationRequestMap.get(request);\n    if (!info) {\n        info = {};\n        _state_js__WEBPACK_IMPORTED_MODULE_0__.state.operationRequestMap.set(request, info);\n    }\n    return info;\n}\n//# sourceMappingURL=operationHelpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL29wZXJhdGlvbkhlbHBlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBLFdBQVcsMEJBQTBCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxlQUFlLDRDQUFLO0FBQ3BCO0FBQ0E7QUFDQSxRQUFRLDRDQUFLO0FBQ2I7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1jbGllbnRcXGRpc3RcXGVzbVxcb3BlcmF0aW9uSGVscGVycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IHN0YXRlIH0gZnJvbSBcIi4vc3RhdGUuanNcIjtcbi8qKlxuICogQGludGVybmFsXG4gKiBSZXRyaWV2ZXMgdGhlIHZhbHVlIHRvIHVzZSBmb3IgYSBnaXZlbiBvcGVyYXRpb24gYXJndW1lbnRcbiAqIEBwYXJhbSBvcGVyYXRpb25Bcmd1bWVudHMgLSBUaGUgYXJndW1lbnRzIHBhc3NlZCBmcm9tIHRoZSBnZW5lcmF0ZWQgY2xpZW50XG4gKiBAcGFyYW0gcGFyYW1ldGVyIC0gVGhlIHBhcmFtZXRlciBkZXNjcmlwdGlvblxuICogQHBhcmFtIGZhbGxiYWNrT2JqZWN0IC0gSWYgc29tZXRoaW5nIGlzbid0IGZvdW5kIGluIHRoZSBhcmd1bWVudHMgYmFnLCBsb29rIGhlcmUuXG4gKiAgR2VuZXJhbGx5IHVzZWQgdG8gbG9vayBhdCB0aGUgc2VydmljZSBjbGllbnQgcHJvcGVydGllcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldE9wZXJhdGlvbkFyZ3VtZW50VmFsdWVGcm9tUGFyYW1ldGVyKG9wZXJhdGlvbkFyZ3VtZW50cywgcGFyYW1ldGVyLCBmYWxsYmFja09iamVjdCkge1xuICAgIGxldCBwYXJhbWV0ZXJQYXRoID0gcGFyYW1ldGVyLnBhcmFtZXRlclBhdGg7XG4gICAgY29uc3QgcGFyYW1ldGVyTWFwcGVyID0gcGFyYW1ldGVyLm1hcHBlcjtcbiAgICBsZXQgdmFsdWU7XG4gICAgaWYgKHR5cGVvZiBwYXJhbWV0ZXJQYXRoID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHBhcmFtZXRlclBhdGggPSBbcGFyYW1ldGVyUGF0aF07XG4gICAgfVxuICAgIGlmIChBcnJheS5pc0FycmF5KHBhcmFtZXRlclBhdGgpKSB7XG4gICAgICAgIGlmIChwYXJhbWV0ZXJQYXRoLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIGlmIChwYXJhbWV0ZXJNYXBwZXIuaXNDb25zdGFudCkge1xuICAgICAgICAgICAgICAgIHZhbHVlID0gcGFyYW1ldGVyTWFwcGVyLmRlZmF1bHRWYWx1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGxldCBwcm9wZXJ0eVNlYXJjaFJlc3VsdCA9IGdldFByb3BlcnR5RnJvbVBhcmFtZXRlclBhdGgob3BlcmF0aW9uQXJndW1lbnRzLCBwYXJhbWV0ZXJQYXRoKTtcbiAgICAgICAgICAgICAgICBpZiAoIXByb3BlcnR5U2VhcmNoUmVzdWx0LnByb3BlcnR5Rm91bmQgJiYgZmFsbGJhY2tPYmplY3QpIHtcbiAgICAgICAgICAgICAgICAgICAgcHJvcGVydHlTZWFyY2hSZXN1bHQgPSBnZXRQcm9wZXJ0eUZyb21QYXJhbWV0ZXJQYXRoKGZhbGxiYWNrT2JqZWN0LCBwYXJhbWV0ZXJQYXRoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbGV0IHVzZURlZmF1bHRWYWx1ZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGlmICghcHJvcGVydHlTZWFyY2hSZXN1bHQucHJvcGVydHlGb3VuZCkge1xuICAgICAgICAgICAgICAgICAgICB1c2VEZWZhdWx0VmFsdWUgPVxuICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW1ldGVyTWFwcGVyLnJlcXVpcmVkIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKHBhcmFtZXRlclBhdGhbMF0gPT09IFwib3B0aW9uc1wiICYmIHBhcmFtZXRlclBhdGgubGVuZ3RoID09PSAyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFsdWUgPSB1c2VEZWZhdWx0VmFsdWUgPyBwYXJhbWV0ZXJNYXBwZXIuZGVmYXVsdFZhbHVlIDogcHJvcGVydHlTZWFyY2hSZXN1bHQucHJvcGVydHlWYWx1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgaWYgKHBhcmFtZXRlck1hcHBlci5yZXF1aXJlZCkge1xuICAgICAgICAgICAgdmFsdWUgPSB7fTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGNvbnN0IHByb3BlcnR5TmFtZSBpbiBwYXJhbWV0ZXJQYXRoKSB7XG4gICAgICAgICAgICBjb25zdCBwcm9wZXJ0eU1hcHBlciA9IHBhcmFtZXRlck1hcHBlci50eXBlLm1vZGVsUHJvcGVydGllc1twcm9wZXJ0eU5hbWVdO1xuICAgICAgICAgICAgY29uc3QgcHJvcGVydHlQYXRoID0gcGFyYW1ldGVyUGF0aFtwcm9wZXJ0eU5hbWVdO1xuICAgICAgICAgICAgY29uc3QgcHJvcGVydHlWYWx1ZSA9IGdldE9wZXJhdGlvbkFyZ3VtZW50VmFsdWVGcm9tUGFyYW1ldGVyKG9wZXJhdGlvbkFyZ3VtZW50cywge1xuICAgICAgICAgICAgICAgIHBhcmFtZXRlclBhdGg6IHByb3BlcnR5UGF0aCxcbiAgICAgICAgICAgICAgICBtYXBwZXI6IHByb3BlcnR5TWFwcGVyLFxuICAgICAgICAgICAgfSwgZmFsbGJhY2tPYmplY3QpO1xuICAgICAgICAgICAgaWYgKHByb3BlcnR5VmFsdWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIGlmICghdmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSB7fTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFsdWVbcHJvcGVydHlOYW1lXSA9IHByb3BlcnR5VmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlO1xufVxuZnVuY3Rpb24gZ2V0UHJvcGVydHlGcm9tUGFyYW1ldGVyUGF0aChwYXJlbnQsIHBhcmFtZXRlclBhdGgpIHtcbiAgICBjb25zdCByZXN1bHQgPSB7IHByb3BlcnR5Rm91bmQ6IGZhbHNlIH07XG4gICAgbGV0IGkgPSAwO1xuICAgIGZvciAoOyBpIDwgcGFyYW1ldGVyUGF0aC5sZW5ndGg7ICsraSkge1xuICAgICAgICBjb25zdCBwYXJhbWV0ZXJQYXRoUGFydCA9IHBhcmFtZXRlclBhdGhbaV07XG4gICAgICAgIC8vIE1ha2Ugc3VyZSB0byBjaGVjayBpbmhlcml0ZWQgcHJvcGVydGllcyB0b28sIHNvIGRvbid0IHVzZSBoYXNPd25Qcm9wZXJ0eSgpLlxuICAgICAgICBpZiAocGFyZW50ICYmIHBhcmFtZXRlclBhdGhQYXJ0IGluIHBhcmVudCkge1xuICAgICAgICAgICAgcGFyZW50ID0gcGFyZW50W3BhcmFtZXRlclBhdGhQYXJ0XTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChpID09PSBwYXJhbWV0ZXJQYXRoLmxlbmd0aCkge1xuICAgICAgICByZXN1bHQucHJvcGVydHlWYWx1ZSA9IHBhcmVudDtcbiAgICAgICAgcmVzdWx0LnByb3BlcnR5Rm91bmQgPSB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuY29uc3Qgb3JpZ2luYWxSZXF1ZXN0U3ltYm9sID0gU3ltYm9sLmZvcihcIkBhenVyZS9jb3JlLWNsaWVudCBvcmlnaW5hbCByZXF1ZXN0XCIpO1xuZnVuY3Rpb24gaGFzT3JpZ2luYWxSZXF1ZXN0KHJlcXVlc3QpIHtcbiAgICByZXR1cm4gb3JpZ2luYWxSZXF1ZXN0U3ltYm9sIGluIHJlcXVlc3Q7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0T3BlcmF0aW9uUmVxdWVzdEluZm8ocmVxdWVzdCkge1xuICAgIGlmIChoYXNPcmlnaW5hbFJlcXVlc3QocmVxdWVzdCkpIHtcbiAgICAgICAgcmV0dXJuIGdldE9wZXJhdGlvblJlcXVlc3RJbmZvKHJlcXVlc3Rbb3JpZ2luYWxSZXF1ZXN0U3ltYm9sXSk7XG4gICAgfVxuICAgIGxldCBpbmZvID0gc3RhdGUub3BlcmF0aW9uUmVxdWVzdE1hcC5nZXQocmVxdWVzdCk7XG4gICAgaWYgKCFpbmZvKSB7XG4gICAgICAgIGluZm8gPSB7fTtcbiAgICAgICAgc3RhdGUub3BlcmF0aW9uUmVxdWVzdE1hcC5zZXQocmVxdWVzdCwgaW5mbyk7XG4gICAgfVxuICAgIHJldHVybiBpbmZvO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b3BlcmF0aW9uSGVscGVycy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/operationHelpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/pipeline.js":
/*!**************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/pipeline.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createClientPipeline: () => (/* binding */ createClientPipeline)\n/* harmony export */ });\n/* harmony import */ var _deserializationPolicy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./deserializationPolicy.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/deserializationPolicy.js\");\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n/* harmony import */ var _serializationPolicy_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./serializationPolicy.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/serializationPolicy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n/**\n * Creates a new Pipeline for use with a Service Client.\n * Adds in deserializationPolicy by default.\n * Also adds in bearerTokenAuthenticationPolicy if passed a TokenCredential.\n * @param options - Options to customize the created pipeline.\n */\nfunction createClientPipeline(options = {}) {\n    const pipeline = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__.createPipelineFromOptions)(options !== null && options !== void 0 ? options : {});\n    if (options.credentialOptions) {\n        pipeline.addPolicy((0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__.bearerTokenAuthenticationPolicy)({\n            credential: options.credentialOptions.credential,\n            scopes: options.credentialOptions.credentialScopes,\n        }));\n    }\n    pipeline.addPolicy((0,_serializationPolicy_js__WEBPACK_IMPORTED_MODULE_2__.serializationPolicy)(options.serializationOptions), { phase: \"Serialize\" });\n    pipeline.addPolicy((0,_deserializationPolicy_js__WEBPACK_IMPORTED_MODULE_0__.deserializationPolicy)(options.deserializationOptions), {\n        phase: \"Deserialize\",\n    });\n    return pipeline;\n}\n//# sourceMappingURL=pipeline.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL3BpcGVsaW5lLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ21FO0FBQ3FDO0FBQ3pDO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDBDQUEwQztBQUNqRCxxQkFBcUIsb0ZBQXlCLHNEQUFzRDtBQUNwRztBQUNBLDJCQUEyQiwwRkFBK0I7QUFDMUQ7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLHVCQUF1Qiw0RUFBbUIsa0NBQWtDLG9CQUFvQjtBQUNoRyx1QkFBdUIsZ0ZBQXFCO0FBQzVDO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmUgLSBIZWxsbyBTY3JpcHQgQUlcXGxpZmVBZ2VudFxcdm9pY2UtbGl2ZS1hZ2VudFxcc2FtcGxlc1xccmVhY3RcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLWNsaWVudFxcZGlzdFxcZXNtXFxwaXBlbGluZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGRlc2VyaWFsaXphdGlvblBvbGljeSB9IGZyb20gXCIuL2Rlc2VyaWFsaXphdGlvblBvbGljeS5qc1wiO1xuaW1wb3J0IHsgYmVhcmVyVG9rZW5BdXRoZW50aWNhdGlvblBvbGljeSwgY3JlYXRlUGlwZWxpbmVGcm9tT3B0aW9ucywgfSBmcm9tIFwiQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZVwiO1xuaW1wb3J0IHsgc2VyaWFsaXphdGlvblBvbGljeSB9IGZyb20gXCIuL3NlcmlhbGl6YXRpb25Qb2xpY3kuanNcIjtcbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBQaXBlbGluZSBmb3IgdXNlIHdpdGggYSBTZXJ2aWNlIENsaWVudC5cbiAqIEFkZHMgaW4gZGVzZXJpYWxpemF0aW9uUG9saWN5IGJ5IGRlZmF1bHQuXG4gKiBBbHNvIGFkZHMgaW4gYmVhcmVyVG9rZW5BdXRoZW50aWNhdGlvblBvbGljeSBpZiBwYXNzZWQgYSBUb2tlbkNyZWRlbnRpYWwuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIE9wdGlvbnMgdG8gY3VzdG9taXplIHRoZSBjcmVhdGVkIHBpcGVsaW5lLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ2xpZW50UGlwZWxpbmUob3B0aW9ucyA9IHt9KSB7XG4gICAgY29uc3QgcGlwZWxpbmUgPSBjcmVhdGVQaXBlbGluZUZyb21PcHRpb25zKG9wdGlvbnMgIT09IG51bGwgJiYgb3B0aW9ucyAhPT0gdm9pZCAwID8gb3B0aW9ucyA6IHt9KTtcbiAgICBpZiAob3B0aW9ucy5jcmVkZW50aWFsT3B0aW9ucykge1xuICAgICAgICBwaXBlbGluZS5hZGRQb2xpY3koYmVhcmVyVG9rZW5BdXRoZW50aWNhdGlvblBvbGljeSh7XG4gICAgICAgICAgICBjcmVkZW50aWFsOiBvcHRpb25zLmNyZWRlbnRpYWxPcHRpb25zLmNyZWRlbnRpYWwsXG4gICAgICAgICAgICBzY29wZXM6IG9wdGlvbnMuY3JlZGVudGlhbE9wdGlvbnMuY3JlZGVudGlhbFNjb3BlcyxcbiAgICAgICAgfSkpO1xuICAgIH1cbiAgICBwaXBlbGluZS5hZGRQb2xpY3koc2VyaWFsaXphdGlvblBvbGljeShvcHRpb25zLnNlcmlhbGl6YXRpb25PcHRpb25zKSwgeyBwaGFzZTogXCJTZXJpYWxpemVcIiB9KTtcbiAgICBwaXBlbGluZS5hZGRQb2xpY3koZGVzZXJpYWxpemF0aW9uUG9saWN5KG9wdGlvbnMuZGVzZXJpYWxpemF0aW9uT3B0aW9ucyksIHtcbiAgICAgICAgcGhhc2U6IFwiRGVzZXJpYWxpemVcIixcbiAgICB9KTtcbiAgICByZXR1cm4gcGlwZWxpbmU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1waXBlbGluZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/pipeline.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/serializationPolicy.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/serializationPolicy.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serializationPolicy: () => (/* binding */ serializationPolicy),\n/* harmony export */   serializationPolicyName: () => (/* binding */ serializationPolicyName),\n/* harmony export */   serializeHeaders: () => (/* binding */ serializeHeaders),\n/* harmony export */   serializeRequestBody: () => (/* binding */ serializeRequestBody)\n/* harmony export */ });\n/* harmony import */ var _interfaces_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interfaces.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/interfaces.js\");\n/* harmony import */ var _operationHelpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./operationHelpers.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/operationHelpers.js\");\n/* harmony import */ var _serializer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./serializer.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/serializer.js\");\n/* harmony import */ var _interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./interfaceHelpers.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/interfaceHelpers.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n/**\n * The programmatic identifier of the serializationPolicy.\n */\nconst serializationPolicyName = \"serializationPolicy\";\n/**\n * This policy handles assembling the request body and headers using\n * an OperationSpec and OperationArguments on the request.\n */\nfunction serializationPolicy(options = {}) {\n    const stringifyXML = options.stringifyXML;\n    return {\n        name: serializationPolicyName,\n        async sendRequest(request, next) {\n            const operationInfo = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_1__.getOperationRequestInfo)(request);\n            const operationSpec = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationSpec;\n            const operationArguments = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationArguments;\n            if (operationSpec && operationArguments) {\n                serializeHeaders(request, operationArguments, operationSpec);\n                serializeRequestBody(request, operationArguments, operationSpec, stringifyXML);\n            }\n            return next(request);\n        },\n    };\n}\n/**\n * @internal\n */\nfunction serializeHeaders(request, operationArguments, operationSpec) {\n    var _a, _b;\n    if (operationSpec.headerParameters) {\n        for (const headerParameter of operationSpec.headerParameters) {\n            let headerValue = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_1__.getOperationArgumentValueFromParameter)(operationArguments, headerParameter);\n            if ((headerValue !== null && headerValue !== undefined) || headerParameter.mapper.required) {\n                headerValue = operationSpec.serializer.serialize(headerParameter.mapper, headerValue, (0,_interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_3__.getPathStringFromParameter)(headerParameter));\n                const headerCollectionPrefix = headerParameter.mapper\n                    .headerCollectionPrefix;\n                if (headerCollectionPrefix) {\n                    for (const key of Object.keys(headerValue)) {\n                        request.headers.set(headerCollectionPrefix + key, headerValue[key]);\n                    }\n                }\n                else {\n                    request.headers.set(headerParameter.mapper.serializedName || (0,_interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_3__.getPathStringFromParameter)(headerParameter), headerValue);\n                }\n            }\n        }\n    }\n    const customHeaders = (_b = (_a = operationArguments.options) === null || _a === void 0 ? void 0 : _a.requestOptions) === null || _b === void 0 ? void 0 : _b.customHeaders;\n    if (customHeaders) {\n        for (const customHeaderName of Object.keys(customHeaders)) {\n            request.headers.set(customHeaderName, customHeaders[customHeaderName]);\n        }\n    }\n}\n/**\n * @internal\n */\nfunction serializeRequestBody(request, operationArguments, operationSpec, stringifyXML = function () {\n    throw new Error(\"XML serialization unsupported!\");\n}) {\n    var _a, _b, _c, _d, _e;\n    const serializerOptions = (_a = operationArguments.options) === null || _a === void 0 ? void 0 : _a.serializerOptions;\n    const updatedOptions = {\n        xml: {\n            rootName: (_b = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.rootName) !== null && _b !== void 0 ? _b : \"\",\n            includeRoot: (_c = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.includeRoot) !== null && _c !== void 0 ? _c : false,\n            xmlCharKey: (_d = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.xmlCharKey) !== null && _d !== void 0 ? _d : _interfaces_js__WEBPACK_IMPORTED_MODULE_0__.XML_CHARKEY,\n        },\n    };\n    const xmlCharKey = updatedOptions.xml.xmlCharKey;\n    if (operationSpec.requestBody && operationSpec.requestBody.mapper) {\n        request.body = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_1__.getOperationArgumentValueFromParameter)(operationArguments, operationSpec.requestBody);\n        const bodyMapper = operationSpec.requestBody.mapper;\n        const { required, serializedName, xmlName, xmlElementName, xmlNamespace, xmlNamespacePrefix, nullable, } = bodyMapper;\n        const typeName = bodyMapper.type.name;\n        try {\n            if ((request.body !== undefined && request.body !== null) ||\n                (nullable && request.body === null) ||\n                required) {\n                const requestBodyParameterPathString = (0,_interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_3__.getPathStringFromParameter)(operationSpec.requestBody);\n                request.body = operationSpec.serializer.serialize(bodyMapper, request.body, requestBodyParameterPathString, updatedOptions);\n                const isStream = typeName === _serializer_js__WEBPACK_IMPORTED_MODULE_2__.MapperTypeNames.Stream;\n                if (operationSpec.isXML) {\n                    const xmlnsKey = xmlNamespacePrefix ? `xmlns:${xmlNamespacePrefix}` : \"xmlns\";\n                    const value = getXmlValueWithNamespace(xmlNamespace, xmlnsKey, typeName, request.body, updatedOptions);\n                    if (typeName === _serializer_js__WEBPACK_IMPORTED_MODULE_2__.MapperTypeNames.Sequence) {\n                        request.body = stringifyXML(prepareXMLRootList(value, xmlElementName || xmlName || serializedName, xmlnsKey, xmlNamespace), { rootName: xmlName || serializedName, xmlCharKey });\n                    }\n                    else if (!isStream) {\n                        request.body = stringifyXML(value, {\n                            rootName: xmlName || serializedName,\n                            xmlCharKey,\n                        });\n                    }\n                }\n                else if (typeName === _serializer_js__WEBPACK_IMPORTED_MODULE_2__.MapperTypeNames.String &&\n                    (((_e = operationSpec.contentType) === null || _e === void 0 ? void 0 : _e.match(\"text/plain\")) || operationSpec.mediaType === \"text\")) {\n                    // the String serializer has validated that request body is a string\n                    // so just send the string.\n                    return;\n                }\n                else if (!isStream) {\n                    request.body = JSON.stringify(request.body);\n                }\n            }\n        }\n        catch (error) {\n            throw new Error(`Error \"${error.message}\" occurred in serializing the payload - ${JSON.stringify(serializedName, undefined, \"  \")}.`);\n        }\n    }\n    else if (operationSpec.formDataParameters && operationSpec.formDataParameters.length > 0) {\n        request.formData = {};\n        for (const formDataParameter of operationSpec.formDataParameters) {\n            const formDataParameterValue = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_1__.getOperationArgumentValueFromParameter)(operationArguments, formDataParameter);\n            if (formDataParameterValue !== undefined && formDataParameterValue !== null) {\n                const formDataParameterPropertyName = formDataParameter.mapper.serializedName || (0,_interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_3__.getPathStringFromParameter)(formDataParameter);\n                request.formData[formDataParameterPropertyName] = operationSpec.serializer.serialize(formDataParameter.mapper, formDataParameterValue, (0,_interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_3__.getPathStringFromParameter)(formDataParameter), updatedOptions);\n            }\n        }\n    }\n}\n/**\n * Adds an xml namespace to the xml serialized object if needed, otherwise it just returns the value itself\n */\nfunction getXmlValueWithNamespace(xmlNamespace, xmlnsKey, typeName, serializedValue, options) {\n    // Composite and Sequence schemas already got their root namespace set during serialization\n    // We just need to add xmlns to the other schema types\n    if (xmlNamespace && ![\"Composite\", \"Sequence\", \"Dictionary\"].includes(typeName)) {\n        const result = {};\n        result[options.xml.xmlCharKey] = serializedValue;\n        result[_interfaces_js__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY] = { [xmlnsKey]: xmlNamespace };\n        return result;\n    }\n    return serializedValue;\n}\nfunction prepareXMLRootList(obj, elementName, xmlNamespaceKey, xmlNamespace) {\n    if (!Array.isArray(obj)) {\n        obj = [obj];\n    }\n    if (!xmlNamespaceKey || !xmlNamespace) {\n        return { [elementName]: obj };\n    }\n    const result = { [elementName]: obj };\n    result[_interfaces_js__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY] = { [xmlNamespaceKey]: xmlNamespace };\n    return result;\n}\n//# sourceMappingURL=serializationPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/serializationPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/serializer.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/serializer.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapperTypeNames: () => (/* binding */ MapperTypeNames),\n/* harmony export */   createSerializer: () => (/* binding */ createSerializer)\n/* harmony export */ });\n/* harmony import */ var _base64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base64.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/base64.js\");\n/* harmony import */ var _interfaces_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interfaces.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/interfaces.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/utils.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\nclass SerializerImpl {\n    constructor(modelMappers = {}, isXML = false) {\n        this.modelMappers = modelMappers;\n        this.isXML = isXML;\n    }\n    /**\n     * @deprecated Removing the constraints validation on client side.\n     */\n    validateConstraints(mapper, value, objectName) {\n        const failValidation = (constraintName, constraintValue) => {\n            throw new Error(`\"${objectName}\" with value \"${value}\" should satisfy the constraint \"${constraintName}\": ${constraintValue}.`);\n        };\n        if (mapper.constraints && value !== undefined && value !== null) {\n            const { ExclusiveMaximum, ExclusiveMinimum, InclusiveMaximum, InclusiveMinimum, MaxItems, MaxLength, MinItems, MinLength, MultipleOf, Pattern, UniqueItems, } = mapper.constraints;\n            if (ExclusiveMaximum !== undefined && value >= ExclusiveMaximum) {\n                failValidation(\"ExclusiveMaximum\", ExclusiveMaximum);\n            }\n            if (ExclusiveMinimum !== undefined && value <= ExclusiveMinimum) {\n                failValidation(\"ExclusiveMinimum\", ExclusiveMinimum);\n            }\n            if (InclusiveMaximum !== undefined && value > InclusiveMaximum) {\n                failValidation(\"InclusiveMaximum\", InclusiveMaximum);\n            }\n            if (InclusiveMinimum !== undefined && value < InclusiveMinimum) {\n                failValidation(\"InclusiveMinimum\", InclusiveMinimum);\n            }\n            if (MaxItems !== undefined && value.length > MaxItems) {\n                failValidation(\"MaxItems\", MaxItems);\n            }\n            if (MaxLength !== undefined && value.length > MaxLength) {\n                failValidation(\"MaxLength\", MaxLength);\n            }\n            if (MinItems !== undefined && value.length < MinItems) {\n                failValidation(\"MinItems\", MinItems);\n            }\n            if (MinLength !== undefined && value.length < MinLength) {\n                failValidation(\"MinLength\", MinLength);\n            }\n            if (MultipleOf !== undefined && value % MultipleOf !== 0) {\n                failValidation(\"MultipleOf\", MultipleOf);\n            }\n            if (Pattern) {\n                const pattern = typeof Pattern === \"string\" ? new RegExp(Pattern) : Pattern;\n                if (typeof value !== \"string\" || value.match(pattern) === null) {\n                    failValidation(\"Pattern\", Pattern);\n                }\n            }\n            if (UniqueItems &&\n                value.some((item, i, ar) => ar.indexOf(item) !== i)) {\n                failValidation(\"UniqueItems\", UniqueItems);\n            }\n        }\n    }\n    /**\n     * Serialize the given object based on its metadata defined in the mapper\n     *\n     * @param mapper - The mapper which defines the metadata of the serializable object\n     *\n     * @param object - A valid Javascript object to be serialized\n     *\n     * @param objectName - Name of the serialized object\n     *\n     * @param options - additional options to serialization\n     *\n     * @returns A valid serialized Javascript object\n     */\n    serialize(mapper, object, objectName, options = { xml: {} }) {\n        var _a, _b, _c;\n        const updatedOptions = {\n            xml: {\n                rootName: (_a = options.xml.rootName) !== null && _a !== void 0 ? _a : \"\",\n                includeRoot: (_b = options.xml.includeRoot) !== null && _b !== void 0 ? _b : false,\n                xmlCharKey: (_c = options.xml.xmlCharKey) !== null && _c !== void 0 ? _c : _interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_CHARKEY,\n            },\n        };\n        let payload = {};\n        const mapperType = mapper.type.name;\n        if (!objectName) {\n            objectName = mapper.serializedName;\n        }\n        if (mapperType.match(/^Sequence$/i) !== null) {\n            payload = [];\n        }\n        if (mapper.isConstant) {\n            object = mapper.defaultValue;\n        }\n        // This table of allowed values should help explain\n        // the mapper.required and mapper.nullable properties.\n        // X means \"neither undefined or null are allowed\".\n        //           || required\n        //           || true      | false\n        //  nullable || ==========================\n        //      true || null      | undefined/null\n        //     false || X         | undefined\n        // undefined || X         | undefined/null\n        const { required, nullable } = mapper;\n        if (required && nullable && object === undefined) {\n            throw new Error(`${objectName} cannot be undefined.`);\n        }\n        if (required && !nullable && (object === undefined || object === null)) {\n            throw new Error(`${objectName} cannot be null or undefined.`);\n        }\n        if (!required && nullable === false && object === null) {\n            throw new Error(`${objectName} cannot be null.`);\n        }\n        if (object === undefined || object === null) {\n            payload = object;\n        }\n        else {\n            if (mapperType.match(/^any$/i) !== null) {\n                payload = object;\n            }\n            else if (mapperType.match(/^(Number|String|Boolean|Object|Stream|Uuid)$/i) !== null) {\n                payload = serializeBasicTypes(mapperType, objectName, object);\n            }\n            else if (mapperType.match(/^Enum$/i) !== null) {\n                const enumMapper = mapper;\n                payload = serializeEnumType(objectName, enumMapper.type.allowedValues, object);\n            }\n            else if (mapperType.match(/^(Date|DateTime|TimeSpan|DateTimeRfc1123|UnixTime)$/i) !== null) {\n                payload = serializeDateTypes(mapperType, object, objectName);\n            }\n            else if (mapperType.match(/^ByteArray$/i) !== null) {\n                payload = serializeByteArrayType(objectName, object);\n            }\n            else if (mapperType.match(/^Base64Url$/i) !== null) {\n                payload = serializeBase64UrlType(objectName, object);\n            }\n            else if (mapperType.match(/^Sequence$/i) !== null) {\n                payload = serializeSequenceType(this, mapper, object, objectName, Boolean(this.isXML), updatedOptions);\n            }\n            else if (mapperType.match(/^Dictionary$/i) !== null) {\n                payload = serializeDictionaryType(this, mapper, object, objectName, Boolean(this.isXML), updatedOptions);\n            }\n            else if (mapperType.match(/^Composite$/i) !== null) {\n                payload = serializeCompositeType(this, mapper, object, objectName, Boolean(this.isXML), updatedOptions);\n            }\n        }\n        return payload;\n    }\n    /**\n     * Deserialize the given object based on its metadata defined in the mapper\n     *\n     * @param mapper - The mapper which defines the metadata of the serializable object\n     *\n     * @param responseBody - A valid Javascript entity to be deserialized\n     *\n     * @param objectName - Name of the deserialized object\n     *\n     * @param options - Controls behavior of XML parser and builder.\n     *\n     * @returns A valid deserialized Javascript object\n     */\n    deserialize(mapper, responseBody, objectName, options = { xml: {} }) {\n        var _a, _b, _c, _d;\n        const updatedOptions = {\n            xml: {\n                rootName: (_a = options.xml.rootName) !== null && _a !== void 0 ? _a : \"\",\n                includeRoot: (_b = options.xml.includeRoot) !== null && _b !== void 0 ? _b : false,\n                xmlCharKey: (_c = options.xml.xmlCharKey) !== null && _c !== void 0 ? _c : _interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_CHARKEY,\n            },\n            ignoreUnknownProperties: (_d = options.ignoreUnknownProperties) !== null && _d !== void 0 ? _d : false,\n        };\n        if (responseBody === undefined || responseBody === null) {\n            if (this.isXML && mapper.type.name === \"Sequence\" && !mapper.xmlIsWrapped) {\n                // Edge case for empty XML non-wrapped lists. xml2js can't distinguish\n                // between the list being empty versus being missing,\n                // so let's do the more user-friendly thing and return an empty list.\n                responseBody = [];\n            }\n            // specifically check for undefined as default value can be a falsey value `0, \"\", false, null`\n            if (mapper.defaultValue !== undefined) {\n                responseBody = mapper.defaultValue;\n            }\n            return responseBody;\n        }\n        let payload;\n        const mapperType = mapper.type.name;\n        if (!objectName) {\n            objectName = mapper.serializedName;\n        }\n        if (mapperType.match(/^Composite$/i) !== null) {\n            payload = deserializeCompositeType(this, mapper, responseBody, objectName, updatedOptions);\n        }\n        else {\n            if (this.isXML) {\n                const xmlCharKey = updatedOptions.xml.xmlCharKey;\n                /**\n                 * If the mapper specifies this as a non-composite type value but the responseBody contains\n                 * both header (\"$\" i.e., XML_ATTRKEY) and body (\"#\" i.e., XML_CHARKEY) properties,\n                 * then just reduce the responseBody value to the body (\"#\" i.e., XML_CHARKEY) property.\n                 */\n                if (responseBody[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY] !== undefined && responseBody[xmlCharKey] !== undefined) {\n                    responseBody = responseBody[xmlCharKey];\n                }\n            }\n            if (mapperType.match(/^Number$/i) !== null) {\n                payload = parseFloat(responseBody);\n                if (isNaN(payload)) {\n                    payload = responseBody;\n                }\n            }\n            else if (mapperType.match(/^Boolean$/i) !== null) {\n                if (responseBody === \"true\") {\n                    payload = true;\n                }\n                else if (responseBody === \"false\") {\n                    payload = false;\n                }\n                else {\n                    payload = responseBody;\n                }\n            }\n            else if (mapperType.match(/^(String|Enum|Object|Stream|Uuid|TimeSpan|any)$/i) !== null) {\n                payload = responseBody;\n            }\n            else if (mapperType.match(/^(Date|DateTime|DateTimeRfc1123)$/i) !== null) {\n                payload = new Date(responseBody);\n            }\n            else if (mapperType.match(/^UnixTime$/i) !== null) {\n                payload = unixTimeToDate(responseBody);\n            }\n            else if (mapperType.match(/^ByteArray$/i) !== null) {\n                payload = _base64_js__WEBPACK_IMPORTED_MODULE_0__.decodeString(responseBody);\n            }\n            else if (mapperType.match(/^Base64Url$/i) !== null) {\n                payload = base64UrlToByteArray(responseBody);\n            }\n            else if (mapperType.match(/^Sequence$/i) !== null) {\n                payload = deserializeSequenceType(this, mapper, responseBody, objectName, updatedOptions);\n            }\n            else if (mapperType.match(/^Dictionary$/i) !== null) {\n                payload = deserializeDictionaryType(this, mapper, responseBody, objectName, updatedOptions);\n            }\n        }\n        if (mapper.isConstant) {\n            payload = mapper.defaultValue;\n        }\n        return payload;\n    }\n}\n/**\n * Method that creates and returns a Serializer.\n * @param modelMappers - Known models to map\n * @param isXML - If XML should be supported\n */\nfunction createSerializer(modelMappers = {}, isXML = false) {\n    return new SerializerImpl(modelMappers, isXML);\n}\nfunction trimEnd(str, ch) {\n    let len = str.length;\n    while (len - 1 >= 0 && str[len - 1] === ch) {\n        --len;\n    }\n    return str.substr(0, len);\n}\nfunction bufferToBase64Url(buffer) {\n    if (!buffer) {\n        return undefined;\n    }\n    if (!(buffer instanceof Uint8Array)) {\n        throw new Error(`Please provide an input of type Uint8Array for converting to Base64Url.`);\n    }\n    // Uint8Array to Base64.\n    const str = _base64_js__WEBPACK_IMPORTED_MODULE_0__.encodeByteArray(buffer);\n    // Base64 to Base64Url.\n    return trimEnd(str, \"=\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\nfunction base64UrlToByteArray(str) {\n    if (!str) {\n        return undefined;\n    }\n    if (str && typeof str.valueOf() !== \"string\") {\n        throw new Error(\"Please provide an input of type string for converting to Uint8Array\");\n    }\n    // Base64Url to Base64.\n    str = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    // Base64 to Uint8Array.\n    return _base64_js__WEBPACK_IMPORTED_MODULE_0__.decodeString(str);\n}\nfunction splitSerializeName(prop) {\n    const classes = [];\n    let partialclass = \"\";\n    if (prop) {\n        const subwords = prop.split(\".\");\n        for (const item of subwords) {\n            if (item.charAt(item.length - 1) === \"\\\\\") {\n                partialclass += item.substr(0, item.length - 1) + \".\";\n            }\n            else {\n                partialclass += item;\n                classes.push(partialclass);\n                partialclass = \"\";\n            }\n        }\n    }\n    return classes;\n}\nfunction dateToUnixTime(d) {\n    if (!d) {\n        return undefined;\n    }\n    if (typeof d.valueOf() === \"string\") {\n        d = new Date(d);\n    }\n    return Math.floor(d.getTime() / 1000);\n}\nfunction unixTimeToDate(n) {\n    if (!n) {\n        return undefined;\n    }\n    return new Date(n * 1000);\n}\nfunction serializeBasicTypes(typeName, objectName, value) {\n    if (value !== null && value !== undefined) {\n        if (typeName.match(/^Number$/i) !== null) {\n            if (typeof value !== \"number\") {\n                throw new Error(`${objectName} with value ${value} must be of type number.`);\n            }\n        }\n        else if (typeName.match(/^String$/i) !== null) {\n            if (typeof value.valueOf() !== \"string\") {\n                throw new Error(`${objectName} with value \"${value}\" must be of type string.`);\n            }\n        }\n        else if (typeName.match(/^Uuid$/i) !== null) {\n            if (!(typeof value.valueOf() === \"string\" && (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isValidUuid)(value))) {\n                throw new Error(`${objectName} with value \"${value}\" must be of type string and a valid uuid.`);\n            }\n        }\n        else if (typeName.match(/^Boolean$/i) !== null) {\n            if (typeof value !== \"boolean\") {\n                throw new Error(`${objectName} with value ${value} must be of type boolean.`);\n            }\n        }\n        else if (typeName.match(/^Stream$/i) !== null) {\n            const objectType = typeof value;\n            if (objectType !== \"string\" &&\n                typeof value.pipe !== \"function\" && // NodeJS.ReadableStream\n                typeof value.tee !== \"function\" && // browser ReadableStream\n                !(value instanceof ArrayBuffer) &&\n                !ArrayBuffer.isView(value) &&\n                // File objects count as a type of Blob, so we want to use instanceof explicitly\n                !((typeof Blob === \"function\" || typeof Blob === \"object\") && value instanceof Blob) &&\n                objectType !== \"function\") {\n                throw new Error(`${objectName} must be a string, Blob, ArrayBuffer, ArrayBufferView, ReadableStream, or () => ReadableStream.`);\n            }\n        }\n    }\n    return value;\n}\nfunction serializeEnumType(objectName, allowedValues, value) {\n    if (!allowedValues) {\n        throw new Error(`Please provide a set of allowedValues to validate ${objectName} as an Enum Type.`);\n    }\n    const isPresent = allowedValues.some((item) => {\n        if (typeof item.valueOf() === \"string\") {\n            return item.toLowerCase() === value.toLowerCase();\n        }\n        return item === value;\n    });\n    if (!isPresent) {\n        throw new Error(`${value} is not a valid value for ${objectName}. The valid values are: ${JSON.stringify(allowedValues)}.`);\n    }\n    return value;\n}\nfunction serializeByteArrayType(objectName, value) {\n    if (value !== undefined && value !== null) {\n        if (!(value instanceof Uint8Array)) {\n            throw new Error(`${objectName} must be of type Uint8Array.`);\n        }\n        value = _base64_js__WEBPACK_IMPORTED_MODULE_0__.encodeByteArray(value);\n    }\n    return value;\n}\nfunction serializeBase64UrlType(objectName, value) {\n    if (value !== undefined && value !== null) {\n        if (!(value instanceof Uint8Array)) {\n            throw new Error(`${objectName} must be of type Uint8Array.`);\n        }\n        value = bufferToBase64Url(value);\n    }\n    return value;\n}\nfunction serializeDateTypes(typeName, value, objectName) {\n    if (value !== undefined && value !== null) {\n        if (typeName.match(/^Date$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n            }\n            value =\n                value instanceof Date\n                    ? value.toISOString().substring(0, 10)\n                    : new Date(value).toISOString().substring(0, 10);\n        }\n        else if (typeName.match(/^DateTime$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n            }\n            value = value instanceof Date ? value.toISOString() : new Date(value).toISOString();\n        }\n        else if (typeName.match(/^DateTimeRfc1123$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in RFC-1123 format.`);\n            }\n            value = value instanceof Date ? value.toUTCString() : new Date(value).toUTCString();\n        }\n        else if (typeName.match(/^UnixTime$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in RFC-1123/ISO8601 format ` +\n                    `for it to be serialized in UnixTime/Epoch format.`);\n            }\n            value = dateToUnixTime(value);\n        }\n        else if (typeName.match(/^TimeSpan$/i) !== null) {\n            if (!(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isDuration)(value)) {\n                throw new Error(`${objectName} must be a string in ISO 8601 format. Instead was \"${value}\".`);\n            }\n        }\n    }\n    return value;\n}\nfunction serializeSequenceType(serializer, mapper, object, objectName, isXml, options) {\n    var _a;\n    if (!Array.isArray(object)) {\n        throw new Error(`${objectName} must be of type Array.`);\n    }\n    let elementType = mapper.type.element;\n    if (!elementType || typeof elementType !== \"object\") {\n        throw new Error(`element\" metadata for an Array must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}.`);\n    }\n    // Quirk: Composite mappers referenced by `element` might\n    // not have *all* properties declared (like uberParent),\n    // so let's try to look up the full definition by name.\n    if (elementType.type.name === \"Composite\" && elementType.type.className) {\n        elementType = (_a = serializer.modelMappers[elementType.type.className]) !== null && _a !== void 0 ? _a : elementType;\n    }\n    const tempArray = [];\n    for (let i = 0; i < object.length; i++) {\n        const serializedValue = serializer.serialize(elementType, object[i], objectName, options);\n        if (isXml && elementType.xmlNamespace) {\n            const xmlnsKey = elementType.xmlNamespacePrefix\n                ? `xmlns:${elementType.xmlNamespacePrefix}`\n                : \"xmlns\";\n            if (elementType.type.name === \"Composite\") {\n                tempArray[i] = Object.assign({}, serializedValue);\n                tempArray[i][_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY] = { [xmlnsKey]: elementType.xmlNamespace };\n            }\n            else {\n                tempArray[i] = {};\n                tempArray[i][options.xml.xmlCharKey] = serializedValue;\n                tempArray[i][_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY] = { [xmlnsKey]: elementType.xmlNamespace };\n            }\n        }\n        else {\n            tempArray[i] = serializedValue;\n        }\n    }\n    return tempArray;\n}\nfunction serializeDictionaryType(serializer, mapper, object, objectName, isXml, options) {\n    if (typeof object !== \"object\") {\n        throw new Error(`${objectName} must be of type object.`);\n    }\n    const valueType = mapper.type.value;\n    if (!valueType || typeof valueType !== \"object\") {\n        throw new Error(`\"value\" metadata for a Dictionary must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}.`);\n    }\n    const tempDictionary = {};\n    for (const key of Object.keys(object)) {\n        const serializedValue = serializer.serialize(valueType, object[key], objectName, options);\n        // If the element needs an XML namespace we need to add it within the $ property\n        tempDictionary[key] = getXmlObjectValue(valueType, serializedValue, isXml, options);\n    }\n    // Add the namespace to the root element if needed\n    if (isXml && mapper.xmlNamespace) {\n        const xmlnsKey = mapper.xmlNamespacePrefix ? `xmlns:${mapper.xmlNamespacePrefix}` : \"xmlns\";\n        const result = tempDictionary;\n        result[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY] = { [xmlnsKey]: mapper.xmlNamespace };\n        return result;\n    }\n    return tempDictionary;\n}\n/**\n * Resolves the additionalProperties property from a referenced mapper\n * @param serializer - the serializer containing the entire set of mappers\n * @param mapper - the composite mapper to resolve\n * @param objectName - name of the object being serialized\n */\nfunction resolveAdditionalProperties(serializer, mapper, objectName) {\n    const additionalProperties = mapper.type.additionalProperties;\n    if (!additionalProperties && mapper.type.className) {\n        const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n        return modelMapper === null || modelMapper === void 0 ? void 0 : modelMapper.type.additionalProperties;\n    }\n    return additionalProperties;\n}\n/**\n * Finds the mapper referenced by className\n * @param serializer - the serializer containing the entire set of mappers\n * @param mapper - the composite mapper to resolve\n * @param objectName - name of the object being serialized\n */\nfunction resolveReferencedMapper(serializer, mapper, objectName) {\n    const className = mapper.type.className;\n    if (!className) {\n        throw new Error(`Class name for model \"${objectName}\" is not provided in the mapper \"${JSON.stringify(mapper, undefined, 2)}\".`);\n    }\n    return serializer.modelMappers[className];\n}\n/**\n * Resolves a composite mapper's modelProperties.\n * @param serializer - the serializer containing the entire set of mappers\n * @param mapper - the composite mapper to resolve\n */\nfunction resolveModelProperties(serializer, mapper, objectName) {\n    let modelProps = mapper.type.modelProperties;\n    if (!modelProps) {\n        const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n        if (!modelMapper) {\n            throw new Error(`mapper() cannot be null or undefined for model \"${mapper.type.className}\".`);\n        }\n        modelProps = modelMapper === null || modelMapper === void 0 ? void 0 : modelMapper.type.modelProperties;\n        if (!modelProps) {\n            throw new Error(`modelProperties cannot be null or undefined in the ` +\n                `mapper \"${JSON.stringify(modelMapper)}\" of type \"${mapper.type.className}\" for object \"${objectName}\".`);\n        }\n    }\n    return modelProps;\n}\nfunction serializeCompositeType(serializer, mapper, object, objectName, isXml, options) {\n    if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n        mapper = getPolymorphicMapper(serializer, mapper, object, \"clientName\");\n    }\n    if (object !== undefined && object !== null) {\n        const payload = {};\n        const modelProps = resolveModelProperties(serializer, mapper, objectName);\n        for (const key of Object.keys(modelProps)) {\n            const propertyMapper = modelProps[key];\n            if (propertyMapper.readOnly) {\n                continue;\n            }\n            let propName;\n            let parentObject = payload;\n            if (serializer.isXML) {\n                if (propertyMapper.xmlIsWrapped) {\n                    propName = propertyMapper.xmlName;\n                }\n                else {\n                    propName = propertyMapper.xmlElementName || propertyMapper.xmlName;\n                }\n            }\n            else {\n                const paths = splitSerializeName(propertyMapper.serializedName);\n                propName = paths.pop();\n                for (const pathName of paths) {\n                    const childObject = parentObject[pathName];\n                    if ((childObject === undefined || childObject === null) &&\n                        ((object[key] !== undefined && object[key] !== null) ||\n                            propertyMapper.defaultValue !== undefined)) {\n                        parentObject[pathName] = {};\n                    }\n                    parentObject = parentObject[pathName];\n                }\n            }\n            if (parentObject !== undefined && parentObject !== null) {\n                if (isXml && mapper.xmlNamespace) {\n                    const xmlnsKey = mapper.xmlNamespacePrefix\n                        ? `xmlns:${mapper.xmlNamespacePrefix}`\n                        : \"xmlns\";\n                    parentObject[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY] = Object.assign(Object.assign({}, parentObject[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY]), { [xmlnsKey]: mapper.xmlNamespace });\n                }\n                const propertyObjectName = propertyMapper.serializedName !== \"\"\n                    ? objectName + \".\" + propertyMapper.serializedName\n                    : objectName;\n                let toSerialize = object[key];\n                const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n                if (polymorphicDiscriminator &&\n                    polymorphicDiscriminator.clientName === key &&\n                    (toSerialize === undefined || toSerialize === null)) {\n                    toSerialize = mapper.serializedName;\n                }\n                const serializedValue = serializer.serialize(propertyMapper, toSerialize, propertyObjectName, options);\n                if (serializedValue !== undefined && propName !== undefined && propName !== null) {\n                    const value = getXmlObjectValue(propertyMapper, serializedValue, isXml, options);\n                    if (isXml && propertyMapper.xmlIsAttribute) {\n                        // XML_ATTRKEY, i.e., $ is the key attributes are kept under in xml2js.\n                        // This keeps things simple while preventing name collision\n                        // with names in user documents.\n                        parentObject[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY] = parentObject[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY] || {};\n                        parentObject[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY][propName] = serializedValue;\n                    }\n                    else if (isXml && propertyMapper.xmlIsWrapped) {\n                        parentObject[propName] = { [propertyMapper.xmlElementName]: value };\n                    }\n                    else {\n                        parentObject[propName] = value;\n                    }\n                }\n            }\n        }\n        const additionalPropertiesMapper = resolveAdditionalProperties(serializer, mapper, objectName);\n        if (additionalPropertiesMapper) {\n            const propNames = Object.keys(modelProps);\n            for (const clientPropName in object) {\n                const isAdditionalProperty = propNames.every((pn) => pn !== clientPropName);\n                if (isAdditionalProperty) {\n                    payload[clientPropName] = serializer.serialize(additionalPropertiesMapper, object[clientPropName], objectName + '[\"' + clientPropName + '\"]', options);\n                }\n            }\n        }\n        return payload;\n    }\n    return object;\n}\nfunction getXmlObjectValue(propertyMapper, serializedValue, isXml, options) {\n    if (!isXml || !propertyMapper.xmlNamespace) {\n        return serializedValue;\n    }\n    const xmlnsKey = propertyMapper.xmlNamespacePrefix\n        ? `xmlns:${propertyMapper.xmlNamespacePrefix}`\n        : \"xmlns\";\n    const xmlNamespace = { [xmlnsKey]: propertyMapper.xmlNamespace };\n    if ([\"Composite\"].includes(propertyMapper.type.name)) {\n        if (serializedValue[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY]) {\n            return serializedValue;\n        }\n        else {\n            const result = Object.assign({}, serializedValue);\n            result[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY] = xmlNamespace;\n            return result;\n        }\n    }\n    const result = {};\n    result[options.xml.xmlCharKey] = serializedValue;\n    result[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY] = xmlNamespace;\n    return result;\n}\nfunction isSpecialXmlProperty(propertyName, options) {\n    return [_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY, options.xml.xmlCharKey].includes(propertyName);\n}\nfunction deserializeCompositeType(serializer, mapper, responseBody, objectName, options) {\n    var _a, _b;\n    const xmlCharKey = (_a = options.xml.xmlCharKey) !== null && _a !== void 0 ? _a : _interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_CHARKEY;\n    if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n        mapper = getPolymorphicMapper(serializer, mapper, responseBody, \"serializedName\");\n    }\n    const modelProps = resolveModelProperties(serializer, mapper, objectName);\n    let instance = {};\n    const handledPropertyNames = [];\n    for (const key of Object.keys(modelProps)) {\n        const propertyMapper = modelProps[key];\n        const paths = splitSerializeName(modelProps[key].serializedName);\n        handledPropertyNames.push(paths[0]);\n        const { serializedName, xmlName, xmlElementName } = propertyMapper;\n        let propertyObjectName = objectName;\n        if (serializedName !== \"\" && serializedName !== undefined) {\n            propertyObjectName = objectName + \".\" + serializedName;\n        }\n        const headerCollectionPrefix = propertyMapper.headerCollectionPrefix;\n        if (headerCollectionPrefix) {\n            const dictionary = {};\n            for (const headerKey of Object.keys(responseBody)) {\n                if (headerKey.startsWith(headerCollectionPrefix)) {\n                    dictionary[headerKey.substring(headerCollectionPrefix.length)] = serializer.deserialize(propertyMapper.type.value, responseBody[headerKey], propertyObjectName, options);\n                }\n                handledPropertyNames.push(headerKey);\n            }\n            instance[key] = dictionary;\n        }\n        else if (serializer.isXML) {\n            if (propertyMapper.xmlIsAttribute && responseBody[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY]) {\n                instance[key] = serializer.deserialize(propertyMapper, responseBody[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY][xmlName], propertyObjectName, options);\n            }\n            else if (propertyMapper.xmlIsMsText) {\n                if (responseBody[xmlCharKey] !== undefined) {\n                    instance[key] = responseBody[xmlCharKey];\n                }\n                else if (typeof responseBody === \"string\") {\n                    // The special case where xml parser parses \"<Name>content</Name>\" into JSON of\n                    //   `{ name: \"content\"}` instead of `{ name: { \"_\": \"content\" }}`\n                    instance[key] = responseBody;\n                }\n            }\n            else {\n                const propertyName = xmlElementName || xmlName || serializedName;\n                if (propertyMapper.xmlIsWrapped) {\n                    /* a list of <xmlElementName> wrapped by <xmlName>\n                      For the xml example below\n                        <Cors>\n                          <CorsRule>...</CorsRule>\n                          <CorsRule>...</CorsRule>\n                        </Cors>\n                      the responseBody has\n                        {\n                          Cors: {\n                            CorsRule: [{...}, {...}]\n                          }\n                        }\n                      xmlName is \"Cors\" and xmlElementName is\"CorsRule\".\n                    */\n                    const wrapped = responseBody[xmlName];\n                    const elementList = (_b = wrapped === null || wrapped === void 0 ? void 0 : wrapped[xmlElementName]) !== null && _b !== void 0 ? _b : [];\n                    instance[key] = serializer.deserialize(propertyMapper, elementList, propertyObjectName, options);\n                    handledPropertyNames.push(xmlName);\n                }\n                else {\n                    const property = responseBody[propertyName];\n                    instance[key] = serializer.deserialize(propertyMapper, property, propertyObjectName, options);\n                    handledPropertyNames.push(propertyName);\n                }\n            }\n        }\n        else {\n            // deserialize the property if it is present in the provided responseBody instance\n            let propertyInstance;\n            let res = responseBody;\n            // traversing the object step by step.\n            let steps = 0;\n            for (const item of paths) {\n                if (!res)\n                    break;\n                steps++;\n                res = res[item];\n            }\n            // only accept null when reaching the last position of object otherwise it would be undefined\n            if (res === null && steps < paths.length) {\n                res = undefined;\n            }\n            propertyInstance = res;\n            const polymorphicDiscriminator = mapper.type.polymorphicDiscriminator;\n            // checking that the model property name (key)(ex: \"fishtype\") and the\n            // clientName of the polymorphicDiscriminator {metadata} (ex: \"fishtype\")\n            // instead of the serializedName of the polymorphicDiscriminator (ex: \"fish.type\")\n            // is a better approach. The generator is not consistent with escaping '\\.' in the\n            // serializedName of the property (ex: \"fish\\.type\") that is marked as polymorphic discriminator\n            // and the serializedName of the metadata polymorphicDiscriminator (ex: \"fish.type\"). However,\n            // the clientName transformation of the polymorphicDiscriminator (ex: \"fishtype\") and\n            // the transformation of model property name (ex: \"fishtype\") is done consistently.\n            // Hence, it is a safer bet to rely on the clientName of the polymorphicDiscriminator.\n            if (polymorphicDiscriminator &&\n                key === polymorphicDiscriminator.clientName &&\n                (propertyInstance === undefined || propertyInstance === null)) {\n                propertyInstance = mapper.serializedName;\n            }\n            let serializedValue;\n            // paging\n            if (Array.isArray(responseBody[key]) && modelProps[key].serializedName === \"\") {\n                propertyInstance = responseBody[key];\n                const arrayInstance = serializer.deserialize(propertyMapper, propertyInstance, propertyObjectName, options);\n                // Copy over any properties that have already been added into the instance, where they do\n                // not exist on the newly de-serialized array\n                for (const [k, v] of Object.entries(instance)) {\n                    if (!Object.prototype.hasOwnProperty.call(arrayInstance, k)) {\n                        arrayInstance[k] = v;\n                    }\n                }\n                instance = arrayInstance;\n            }\n            else if (propertyInstance !== undefined || propertyMapper.defaultValue !== undefined) {\n                serializedValue = serializer.deserialize(propertyMapper, propertyInstance, propertyObjectName, options);\n                instance[key] = serializedValue;\n            }\n        }\n    }\n    const additionalPropertiesMapper = mapper.type.additionalProperties;\n    if (additionalPropertiesMapper) {\n        const isAdditionalProperty = (responsePropName) => {\n            for (const clientPropName in modelProps) {\n                const paths = splitSerializeName(modelProps[clientPropName].serializedName);\n                if (paths[0] === responsePropName) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        for (const responsePropName in responseBody) {\n            if (isAdditionalProperty(responsePropName)) {\n                instance[responsePropName] = serializer.deserialize(additionalPropertiesMapper, responseBody[responsePropName], objectName + '[\"' + responsePropName + '\"]', options);\n            }\n        }\n    }\n    else if (responseBody && !options.ignoreUnknownProperties) {\n        for (const key of Object.keys(responseBody)) {\n            if (instance[key] === undefined &&\n                !handledPropertyNames.includes(key) &&\n                !isSpecialXmlProperty(key, options)) {\n                instance[key] = responseBody[key];\n            }\n        }\n    }\n    return instance;\n}\nfunction deserializeDictionaryType(serializer, mapper, responseBody, objectName, options) {\n    /* jshint validthis: true */\n    const value = mapper.type.value;\n    if (!value || typeof value !== \"object\") {\n        throw new Error(`\"value\" metadata for a Dictionary must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}`);\n    }\n    if (responseBody) {\n        const tempDictionary = {};\n        for (const key of Object.keys(responseBody)) {\n            tempDictionary[key] = serializer.deserialize(value, responseBody[key], objectName, options);\n        }\n        return tempDictionary;\n    }\n    return responseBody;\n}\nfunction deserializeSequenceType(serializer, mapper, responseBody, objectName, options) {\n    var _a;\n    let element = mapper.type.element;\n    if (!element || typeof element !== \"object\") {\n        throw new Error(`element\" metadata for an Array must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}`);\n    }\n    if (responseBody) {\n        if (!Array.isArray(responseBody)) {\n            // xml2js will interpret a single element array as just the element, so force it to be an array\n            responseBody = [responseBody];\n        }\n        // Quirk: Composite mappers referenced by `element` might\n        // not have *all* properties declared (like uberParent),\n        // so let's try to look up the full definition by name.\n        if (element.type.name === \"Composite\" && element.type.className) {\n            element = (_a = serializer.modelMappers[element.type.className]) !== null && _a !== void 0 ? _a : element;\n        }\n        const tempArray = [];\n        for (let i = 0; i < responseBody.length; i++) {\n            tempArray[i] = serializer.deserialize(element, responseBody[i], `${objectName}[${i}]`, options);\n        }\n        return tempArray;\n    }\n    return responseBody;\n}\nfunction getIndexDiscriminator(discriminators, discriminatorValue, typeName) {\n    const typeNamesToCheck = [typeName];\n    while (typeNamesToCheck.length) {\n        const currentName = typeNamesToCheck.shift();\n        const indexDiscriminator = discriminatorValue === currentName\n            ? discriminatorValue\n            : currentName + \".\" + discriminatorValue;\n        if (Object.prototype.hasOwnProperty.call(discriminators, indexDiscriminator)) {\n            return discriminators[indexDiscriminator];\n        }\n        else {\n            for (const [name, mapper] of Object.entries(discriminators)) {\n                if (name.startsWith(currentName + \".\") &&\n                    mapper.type.uberParent === currentName &&\n                    mapper.type.className) {\n                    typeNamesToCheck.push(mapper.type.className);\n                }\n            }\n        }\n    }\n    return undefined;\n}\nfunction getPolymorphicMapper(serializer, mapper, object, polymorphicPropertyName) {\n    var _a;\n    const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n    if (polymorphicDiscriminator) {\n        let discriminatorName = polymorphicDiscriminator[polymorphicPropertyName];\n        if (discriminatorName) {\n            // The serializedName might have \\\\, which we just want to ignore\n            if (polymorphicPropertyName === \"serializedName\") {\n                discriminatorName = discriminatorName.replace(/\\\\/gi, \"\");\n            }\n            const discriminatorValue = object[discriminatorName];\n            const typeName = (_a = mapper.type.uberParent) !== null && _a !== void 0 ? _a : mapper.type.className;\n            if (typeof discriminatorValue === \"string\" && typeName) {\n                const polymorphicMapper = getIndexDiscriminator(serializer.modelMappers.discriminators, discriminatorValue, typeName);\n                if (polymorphicMapper) {\n                    mapper = polymorphicMapper;\n                }\n            }\n        }\n    }\n    return mapper;\n}\nfunction getPolymorphicDiscriminatorRecursively(serializer, mapper) {\n    return (mapper.type.polymorphicDiscriminator ||\n        getPolymorphicDiscriminatorSafely(serializer, mapper.type.uberParent) ||\n        getPolymorphicDiscriminatorSafely(serializer, mapper.type.className));\n}\nfunction getPolymorphicDiscriminatorSafely(serializer, typeName) {\n    return (typeName &&\n        serializer.modelMappers[typeName] &&\n        serializer.modelMappers[typeName].type.polymorphicDiscriminator);\n}\n/**\n * Known types of Mappers\n */\nconst MapperTypeNames = {\n    Base64Url: \"Base64Url\",\n    Boolean: \"Boolean\",\n    ByteArray: \"ByteArray\",\n    Composite: \"Composite\",\n    Date: \"Date\",\n    DateTime: \"DateTime\",\n    DateTimeRfc1123: \"DateTimeRfc1123\",\n    Dictionary: \"Dictionary\",\n    Enum: \"Enum\",\n    Number: \"Number\",\n    Object: \"Object\",\n    Sequence: \"Sequence\",\n    String: \"String\",\n    Stream: \"Stream\",\n    TimeSpan: \"TimeSpan\",\n    UnixTime: \"UnixTime\",\n};\n//# sourceMappingURL=serializer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/serializer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/serviceClient.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/serviceClient.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ServiceClient: () => (/* binding */ ServiceClient)\n/* harmony export */ });\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n/* harmony import */ var _pipeline_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pipeline.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/pipeline.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/utils.js\");\n/* harmony import */ var _httpClientCache_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./httpClientCache.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/httpClientCache.js\");\n/* harmony import */ var _operationHelpers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operationHelpers.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/operationHelpers.js\");\n/* harmony import */ var _urlHelpers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./urlHelpers.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/urlHelpers.js\");\n/* harmony import */ var _interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./interfaceHelpers.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/interfaceHelpers.js\");\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./log.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/log.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n/**\n * Initializes a new instance of the ServiceClient.\n */\nclass ServiceClient {\n    /**\n     * The ServiceClient constructor\n     * @param options - The service client options that govern the behavior of the client.\n     */\n    constructor(options = {}) {\n        var _a, _b;\n        this._requestContentType = options.requestContentType;\n        this._endpoint = (_a = options.endpoint) !== null && _a !== void 0 ? _a : options.baseUri;\n        if (options.baseUri) {\n            _log_js__WEBPACK_IMPORTED_MODULE_7__.logger.warning(\"The baseUri option for SDK Clients has been deprecated, please use endpoint instead.\");\n        }\n        this._allowInsecureConnection = options.allowInsecureConnection;\n        this._httpClient = options.httpClient || (0,_httpClientCache_js__WEBPACK_IMPORTED_MODULE_3__.getCachedDefaultHttpClient)();\n        this.pipeline = options.pipeline || createDefaultPipeline(options);\n        if ((_b = options.additionalPolicies) === null || _b === void 0 ? void 0 : _b.length) {\n            for (const { policy, position } of options.additionalPolicies) {\n                // Sign happens after Retry and is commonly needed to occur\n                // before policies that intercept post-retry.\n                const afterPhase = position === \"perRetry\" ? \"Sign\" : undefined;\n                this.pipeline.addPolicy(policy, {\n                    afterPhase,\n                });\n            }\n        }\n    }\n    /**\n     * Send the provided httpRequest.\n     */\n    async sendRequest(request) {\n        return this.pipeline.sendRequest(this._httpClient, request);\n    }\n    /**\n     * Send an HTTP request that is populated using the provided OperationSpec.\n     * @typeParam T - The typed result of the request, based on the OperationSpec.\n     * @param operationArguments - The arguments that the HTTP request's templated values will be populated from.\n     * @param operationSpec - The OperationSpec to use to populate the httpRequest.\n     */\n    async sendOperationRequest(operationArguments, operationSpec) {\n        const endpoint = operationSpec.baseUrl || this._endpoint;\n        if (!endpoint) {\n            throw new Error(\"If operationSpec.baseUrl is not specified, then the ServiceClient must have a endpoint string property that contains the base URL to use.\");\n        }\n        // Templatized URLs sometimes reference properties on the ServiceClient child class,\n        // so we have to pass `this` below in order to search these properties if they're\n        // not part of OperationArguments\n        const url = (0,_urlHelpers_js__WEBPACK_IMPORTED_MODULE_5__.getRequestUrl)(endpoint, operationSpec, operationArguments, this);\n        const request = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createPipelineRequest)({\n            url,\n        });\n        request.method = operationSpec.httpMethod;\n        const operationInfo = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_4__.getOperationRequestInfo)(request);\n        operationInfo.operationSpec = operationSpec;\n        operationInfo.operationArguments = operationArguments;\n        const contentType = operationSpec.contentType || this._requestContentType;\n        if (contentType && operationSpec.requestBody) {\n            request.headers.set(\"Content-Type\", contentType);\n        }\n        const options = operationArguments.options;\n        if (options) {\n            const requestOptions = options.requestOptions;\n            if (requestOptions) {\n                if (requestOptions.timeout) {\n                    request.timeout = requestOptions.timeout;\n                }\n                if (requestOptions.onUploadProgress) {\n                    request.onUploadProgress = requestOptions.onUploadProgress;\n                }\n                if (requestOptions.onDownloadProgress) {\n                    request.onDownloadProgress = requestOptions.onDownloadProgress;\n                }\n                if (requestOptions.shouldDeserialize !== undefined) {\n                    operationInfo.shouldDeserialize = requestOptions.shouldDeserialize;\n                }\n                if (requestOptions.allowInsecureConnection) {\n                    request.allowInsecureConnection = true;\n                }\n            }\n            if (options.abortSignal) {\n                request.abortSignal = options.abortSignal;\n            }\n            if (options.tracingOptions) {\n                request.tracingOptions = options.tracingOptions;\n            }\n        }\n        if (this._allowInsecureConnection) {\n            request.allowInsecureConnection = true;\n        }\n        if (request.streamResponseStatusCodes === undefined) {\n            request.streamResponseStatusCodes = (0,_interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_6__.getStreamingResponseStatusCodes)(operationSpec);\n        }\n        try {\n            const rawResponse = await this.sendRequest(request);\n            const flatResponse = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.flattenResponse)(rawResponse, operationSpec.responses[rawResponse.status]);\n            if (options === null || options === void 0 ? void 0 : options.onResponse) {\n                options.onResponse(rawResponse, flatResponse);\n            }\n            return flatResponse;\n        }\n        catch (error) {\n            if (typeof error === \"object\" && (error === null || error === void 0 ? void 0 : error.response)) {\n                const rawResponse = error.response;\n                const flatResponse = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.flattenResponse)(rawResponse, operationSpec.responses[error.statusCode] || operationSpec.responses[\"default\"]);\n                error.details = flatResponse;\n                if (options === null || options === void 0 ? void 0 : options.onResponse) {\n                    options.onResponse(rawResponse, flatResponse, error);\n                }\n            }\n            throw error;\n        }\n    }\n}\nfunction createDefaultPipeline(options) {\n    const credentialScopes = getCredentialScopes(options);\n    const credentialOptions = options.credential && credentialScopes\n        ? { credentialScopes, credential: options.credential }\n        : undefined;\n    return (0,_pipeline_js__WEBPACK_IMPORTED_MODULE_1__.createClientPipeline)(Object.assign(Object.assign({}, options), { credentialOptions }));\n}\nfunction getCredentialScopes(options) {\n    if (options.credentialScopes) {\n        return options.credentialScopes;\n    }\n    if (options.endpoint) {\n        return `${options.endpoint}/.default`;\n    }\n    if (options.baseUri) {\n        return `${options.baseUri}/.default`;\n    }\n    if (options.credential && !options.credentialScopes) {\n        throw new Error(`When using credentials, the ServiceClientOptions must contain either a endpoint or a credentialScopes. Unable to create a bearerTokenAuthenticationPolicy`);\n    }\n    return undefined;\n}\n//# sourceMappingURL=serviceClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL3NlcnZpY2VDbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNrRTtBQUNiO0FBQ1I7QUFDcUI7QUFDRjtBQUNoQjtBQUN3QjtBQUN0QztBQUNsQztBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwyQ0FBTTtBQUNsQjtBQUNBO0FBQ0EsaURBQWlELCtFQUEwQjtBQUMzRTtBQUNBO0FBQ0EseUJBQXlCLG1CQUFtQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsNkRBQWE7QUFDakMsd0JBQXdCLGdGQUFxQjtBQUM3QztBQUNBLFNBQVM7QUFDVDtBQUNBLDhCQUE4Qiw2RUFBdUI7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QscUZBQStCO0FBQy9FO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQywwREFBZTtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLDBEQUFlO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBLFdBQVcsa0VBQW9CLCtCQUErQixjQUFjLG1CQUFtQjtBQUMvRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsaUJBQWlCO0FBQ25DO0FBQ0E7QUFDQSxrQkFBa0IsZ0JBQWdCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZSAtIEhlbGxvIFNjcmlwdCBBSVxcbGlmZUFnZW50XFx2b2ljZS1saXZlLWFnZW50XFxzYW1wbGVzXFxyZWFjdFxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtY2xpZW50XFxkaXN0XFxlc21cXHNlcnZpY2VDbGllbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBjcmVhdGVQaXBlbGluZVJlcXVlc3QgfSBmcm9tIFwiQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZVwiO1xuaW1wb3J0IHsgY3JlYXRlQ2xpZW50UGlwZWxpbmUgfSBmcm9tIFwiLi9waXBlbGluZS5qc1wiO1xuaW1wb3J0IHsgZmxhdHRlblJlc3BvbnNlIH0gZnJvbSBcIi4vdXRpbHMuanNcIjtcbmltcG9ydCB7IGdldENhY2hlZERlZmF1bHRIdHRwQ2xpZW50IH0gZnJvbSBcIi4vaHR0cENsaWVudENhY2hlLmpzXCI7XG5pbXBvcnQgeyBnZXRPcGVyYXRpb25SZXF1ZXN0SW5mbyB9IGZyb20gXCIuL29wZXJhdGlvbkhlbHBlcnMuanNcIjtcbmltcG9ydCB7IGdldFJlcXVlc3RVcmwgfSBmcm9tIFwiLi91cmxIZWxwZXJzLmpzXCI7XG5pbXBvcnQgeyBnZXRTdHJlYW1pbmdSZXNwb25zZVN0YXR1c0NvZGVzIH0gZnJvbSBcIi4vaW50ZXJmYWNlSGVscGVycy5qc1wiO1xuaW1wb3J0IHsgbG9nZ2VyIH0gZnJvbSBcIi4vbG9nLmpzXCI7XG4vKipcbiAqIEluaXRpYWxpemVzIGEgbmV3IGluc3RhbmNlIG9mIHRoZSBTZXJ2aWNlQ2xpZW50LlxuICovXG5leHBvcnQgY2xhc3MgU2VydmljZUNsaWVudCB7XG4gICAgLyoqXG4gICAgICogVGhlIFNlcnZpY2VDbGllbnQgY29uc3RydWN0b3JcbiAgICAgKiBAcGFyYW0gb3B0aW9ucyAtIFRoZSBzZXJ2aWNlIGNsaWVudCBvcHRpb25zIHRoYXQgZ292ZXJuIHRoZSBiZWhhdmlvciBvZiB0aGUgY2xpZW50LlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMgPSB7fSkge1xuICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICB0aGlzLl9yZXF1ZXN0Q29udGVudFR5cGUgPSBvcHRpb25zLnJlcXVlc3RDb250ZW50VHlwZTtcbiAgICAgICAgdGhpcy5fZW5kcG9pbnQgPSAoX2EgPSBvcHRpb25zLmVuZHBvaW50KSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBvcHRpb25zLmJhc2VVcmk7XG4gICAgICAgIGlmIChvcHRpb25zLmJhc2VVcmkpIHtcbiAgICAgICAgICAgIGxvZ2dlci53YXJuaW5nKFwiVGhlIGJhc2VVcmkgb3B0aW9uIGZvciBTREsgQ2xpZW50cyBoYXMgYmVlbiBkZXByZWNhdGVkLCBwbGVhc2UgdXNlIGVuZHBvaW50IGluc3RlYWQuXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2FsbG93SW5zZWN1cmVDb25uZWN0aW9uID0gb3B0aW9ucy5hbGxvd0luc2VjdXJlQ29ubmVjdGlvbjtcbiAgICAgICAgdGhpcy5faHR0cENsaWVudCA9IG9wdGlvbnMuaHR0cENsaWVudCB8fCBnZXRDYWNoZWREZWZhdWx0SHR0cENsaWVudCgpO1xuICAgICAgICB0aGlzLnBpcGVsaW5lID0gb3B0aW9ucy5waXBlbGluZSB8fCBjcmVhdGVEZWZhdWx0UGlwZWxpbmUob3B0aW9ucyk7XG4gICAgICAgIGlmICgoX2IgPSBvcHRpb25zLmFkZGl0aW9uYWxQb2xpY2llcykgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmxlbmd0aCkge1xuICAgICAgICAgICAgZm9yIChjb25zdCB7IHBvbGljeSwgcG9zaXRpb24gfSBvZiBvcHRpb25zLmFkZGl0aW9uYWxQb2xpY2llcykge1xuICAgICAgICAgICAgICAgIC8vIFNpZ24gaGFwcGVucyBhZnRlciBSZXRyeSBhbmQgaXMgY29tbW9ubHkgbmVlZGVkIHRvIG9jY3VyXG4gICAgICAgICAgICAgICAgLy8gYmVmb3JlIHBvbGljaWVzIHRoYXQgaW50ZXJjZXB0IHBvc3QtcmV0cnkuXG4gICAgICAgICAgICAgICAgY29uc3QgYWZ0ZXJQaGFzZSA9IHBvc2l0aW9uID09PSBcInBlclJldHJ5XCIgPyBcIlNpZ25cIiA6IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICB0aGlzLnBpcGVsaW5lLmFkZFBvbGljeShwb2xpY3ksIHtcbiAgICAgICAgICAgICAgICAgICAgYWZ0ZXJQaGFzZSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBTZW5kIHRoZSBwcm92aWRlZCBodHRwUmVxdWVzdC5cbiAgICAgKi9cbiAgICBhc3luYyBzZW5kUmVxdWVzdChyZXF1ZXN0KSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBpcGVsaW5lLnNlbmRSZXF1ZXN0KHRoaXMuX2h0dHBDbGllbnQsIHJlcXVlc3QpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTZW5kIGFuIEhUVFAgcmVxdWVzdCB0aGF0IGlzIHBvcHVsYXRlZCB1c2luZyB0aGUgcHJvdmlkZWQgT3BlcmF0aW9uU3BlYy5cbiAgICAgKiBAdHlwZVBhcmFtIFQgLSBUaGUgdHlwZWQgcmVzdWx0IG9mIHRoZSByZXF1ZXN0LCBiYXNlZCBvbiB0aGUgT3BlcmF0aW9uU3BlYy5cbiAgICAgKiBAcGFyYW0gb3BlcmF0aW9uQXJndW1lbnRzIC0gVGhlIGFyZ3VtZW50cyB0aGF0IHRoZSBIVFRQIHJlcXVlc3QncyB0ZW1wbGF0ZWQgdmFsdWVzIHdpbGwgYmUgcG9wdWxhdGVkIGZyb20uXG4gICAgICogQHBhcmFtIG9wZXJhdGlvblNwZWMgLSBUaGUgT3BlcmF0aW9uU3BlYyB0byB1c2UgdG8gcG9wdWxhdGUgdGhlIGh0dHBSZXF1ZXN0LlxuICAgICAqL1xuICAgIGFzeW5jIHNlbmRPcGVyYXRpb25SZXF1ZXN0KG9wZXJhdGlvbkFyZ3VtZW50cywgb3BlcmF0aW9uU3BlYykge1xuICAgICAgICBjb25zdCBlbmRwb2ludCA9IG9wZXJhdGlvblNwZWMuYmFzZVVybCB8fCB0aGlzLl9lbmRwb2ludDtcbiAgICAgICAgaWYgKCFlbmRwb2ludCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSWYgb3BlcmF0aW9uU3BlYy5iYXNlVXJsIGlzIG5vdCBzcGVjaWZpZWQsIHRoZW4gdGhlIFNlcnZpY2VDbGllbnQgbXVzdCBoYXZlIGEgZW5kcG9pbnQgc3RyaW5nIHByb3BlcnR5IHRoYXQgY29udGFpbnMgdGhlIGJhc2UgVVJMIHRvIHVzZS5cIik7XG4gICAgICAgIH1cbiAgICAgICAgLy8gVGVtcGxhdGl6ZWQgVVJMcyBzb21ldGltZXMgcmVmZXJlbmNlIHByb3BlcnRpZXMgb24gdGhlIFNlcnZpY2VDbGllbnQgY2hpbGQgY2xhc3MsXG4gICAgICAgIC8vIHNvIHdlIGhhdmUgdG8gcGFzcyBgdGhpc2AgYmVsb3cgaW4gb3JkZXIgdG8gc2VhcmNoIHRoZXNlIHByb3BlcnRpZXMgaWYgdGhleSdyZVxuICAgICAgICAvLyBub3QgcGFydCBvZiBPcGVyYXRpb25Bcmd1bWVudHNcbiAgICAgICAgY29uc3QgdXJsID0gZ2V0UmVxdWVzdFVybChlbmRwb2ludCwgb3BlcmF0aW9uU3BlYywgb3BlcmF0aW9uQXJndW1lbnRzLCB0aGlzKTtcbiAgICAgICAgY29uc3QgcmVxdWVzdCA9IGNyZWF0ZVBpcGVsaW5lUmVxdWVzdCh7XG4gICAgICAgICAgICB1cmwsXG4gICAgICAgIH0pO1xuICAgICAgICByZXF1ZXN0Lm1ldGhvZCA9IG9wZXJhdGlvblNwZWMuaHR0cE1ldGhvZDtcbiAgICAgICAgY29uc3Qgb3BlcmF0aW9uSW5mbyA9IGdldE9wZXJhdGlvblJlcXVlc3RJbmZvKHJlcXVlc3QpO1xuICAgICAgICBvcGVyYXRpb25JbmZvLm9wZXJhdGlvblNwZWMgPSBvcGVyYXRpb25TcGVjO1xuICAgICAgICBvcGVyYXRpb25JbmZvLm9wZXJhdGlvbkFyZ3VtZW50cyA9IG9wZXJhdGlvbkFyZ3VtZW50cztcbiAgICAgICAgY29uc3QgY29udGVudFR5cGUgPSBvcGVyYXRpb25TcGVjLmNvbnRlbnRUeXBlIHx8IHRoaXMuX3JlcXVlc3RDb250ZW50VHlwZTtcbiAgICAgICAgaWYgKGNvbnRlbnRUeXBlICYmIG9wZXJhdGlvblNwZWMucmVxdWVzdEJvZHkpIHtcbiAgICAgICAgICAgIHJlcXVlc3QuaGVhZGVycy5zZXQoXCJDb250ZW50LVR5cGVcIiwgY29udGVudFR5cGUpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG9wdGlvbnMgPSBvcGVyYXRpb25Bcmd1bWVudHMub3B0aW9ucztcbiAgICAgICAgaWYgKG9wdGlvbnMpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlcXVlc3RPcHRpb25zID0gb3B0aW9ucy5yZXF1ZXN0T3B0aW9ucztcbiAgICAgICAgICAgIGlmIChyZXF1ZXN0T3B0aW9ucykge1xuICAgICAgICAgICAgICAgIGlmIChyZXF1ZXN0T3B0aW9ucy50aW1lb3V0KSB7XG4gICAgICAgICAgICAgICAgICAgIHJlcXVlc3QudGltZW91dCA9IHJlcXVlc3RPcHRpb25zLnRpbWVvdXQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChyZXF1ZXN0T3B0aW9ucy5vblVwbG9hZFByb2dyZXNzKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlcXVlc3Qub25VcGxvYWRQcm9ncmVzcyA9IHJlcXVlc3RPcHRpb25zLm9uVXBsb2FkUHJvZ3Jlc3M7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChyZXF1ZXN0T3B0aW9ucy5vbkRvd25sb2FkUHJvZ3Jlc3MpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVxdWVzdC5vbkRvd25sb2FkUHJvZ3Jlc3MgPSByZXF1ZXN0T3B0aW9ucy5vbkRvd25sb2FkUHJvZ3Jlc3M7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChyZXF1ZXN0T3B0aW9ucy5zaG91bGREZXNlcmlhbGl6ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIG9wZXJhdGlvbkluZm8uc2hvdWxkRGVzZXJpYWxpemUgPSByZXF1ZXN0T3B0aW9ucy5zaG91bGREZXNlcmlhbGl6ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHJlcXVlc3RPcHRpb25zLmFsbG93SW5zZWN1cmVDb25uZWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlcXVlc3QuYWxsb3dJbnNlY3VyZUNvbm5lY3Rpb24gPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChvcHRpb25zLmFib3J0U2lnbmFsKSB7XG4gICAgICAgICAgICAgICAgcmVxdWVzdC5hYm9ydFNpZ25hbCA9IG9wdGlvbnMuYWJvcnRTaWduYWw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAob3B0aW9ucy50cmFjaW5nT3B0aW9ucykge1xuICAgICAgICAgICAgICAgIHJlcXVlc3QudHJhY2luZ09wdGlvbnMgPSBvcHRpb25zLnRyYWNpbmdPcHRpb25zO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl9hbGxvd0luc2VjdXJlQ29ubmVjdGlvbikge1xuICAgICAgICAgICAgcmVxdWVzdC5hbGxvd0luc2VjdXJlQ29ubmVjdGlvbiA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlcXVlc3Quc3RyZWFtUmVzcG9uc2VTdGF0dXNDb2RlcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXF1ZXN0LnN0cmVhbVJlc3BvbnNlU3RhdHVzQ29kZXMgPSBnZXRTdHJlYW1pbmdSZXNwb25zZVN0YXR1c0NvZGVzKG9wZXJhdGlvblNwZWMpO1xuICAgICAgICB9XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCByYXdSZXNwb25zZSA9IGF3YWl0IHRoaXMuc2VuZFJlcXVlc3QocmVxdWVzdCk7XG4gICAgICAgICAgICBjb25zdCBmbGF0UmVzcG9uc2UgPSBmbGF0dGVuUmVzcG9uc2UocmF3UmVzcG9uc2UsIG9wZXJhdGlvblNwZWMucmVzcG9uc2VzW3Jhd1Jlc3BvbnNlLnN0YXR1c10pO1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5vblJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgb3B0aW9ucy5vblJlc3BvbnNlKHJhd1Jlc3BvbnNlLCBmbGF0UmVzcG9uc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGZsYXRSZXNwb25zZTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgZXJyb3IgPT09IFwib2JqZWN0XCIgJiYgKGVycm9yID09PSBudWxsIHx8IGVycm9yID09PSB2b2lkIDAgPyB2b2lkIDAgOiBlcnJvci5yZXNwb25zZSkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCByYXdSZXNwb25zZSA9IGVycm9yLnJlc3BvbnNlO1xuICAgICAgICAgICAgICAgIGNvbnN0IGZsYXRSZXNwb25zZSA9IGZsYXR0ZW5SZXNwb25zZShyYXdSZXNwb25zZSwgb3BlcmF0aW9uU3BlYy5yZXNwb25zZXNbZXJyb3Iuc3RhdHVzQ29kZV0gfHwgb3BlcmF0aW9uU3BlYy5yZXNwb25zZXNbXCJkZWZhdWx0XCJdKTtcbiAgICAgICAgICAgICAgICBlcnJvci5kZXRhaWxzID0gZmxhdFJlc3BvbnNlO1xuICAgICAgICAgICAgICAgIGlmIChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMub25SZXNwb25zZSkge1xuICAgICAgICAgICAgICAgICAgICBvcHRpb25zLm9uUmVzcG9uc2UocmF3UmVzcG9uc2UsIGZsYXRSZXNwb25zZSwgZXJyb3IpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9XG4gICAgfVxufVxuZnVuY3Rpb24gY3JlYXRlRGVmYXVsdFBpcGVsaW5lKG9wdGlvbnMpIHtcbiAgICBjb25zdCBjcmVkZW50aWFsU2NvcGVzID0gZ2V0Q3JlZGVudGlhbFNjb3BlcyhvcHRpb25zKTtcbiAgICBjb25zdCBjcmVkZW50aWFsT3B0aW9ucyA9IG9wdGlvbnMuY3JlZGVudGlhbCAmJiBjcmVkZW50aWFsU2NvcGVzXG4gICAgICAgID8geyBjcmVkZW50aWFsU2NvcGVzLCBjcmVkZW50aWFsOiBvcHRpb25zLmNyZWRlbnRpYWwgfVxuICAgICAgICA6IHVuZGVmaW5lZDtcbiAgICByZXR1cm4gY3JlYXRlQ2xpZW50UGlwZWxpbmUoT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBvcHRpb25zKSwgeyBjcmVkZW50aWFsT3B0aW9ucyB9KSk7XG59XG5mdW5jdGlvbiBnZXRDcmVkZW50aWFsU2NvcGVzKG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucy5jcmVkZW50aWFsU2NvcGVzKSB7XG4gICAgICAgIHJldHVybiBvcHRpb25zLmNyZWRlbnRpYWxTY29wZXM7XG4gICAgfVxuICAgIGlmIChvcHRpb25zLmVuZHBvaW50KSB7XG4gICAgICAgIHJldHVybiBgJHtvcHRpb25zLmVuZHBvaW50fS8uZGVmYXVsdGA7XG4gICAgfVxuICAgIGlmIChvcHRpb25zLmJhc2VVcmkpIHtcbiAgICAgICAgcmV0dXJuIGAke29wdGlvbnMuYmFzZVVyaX0vLmRlZmF1bHRgO1xuICAgIH1cbiAgICBpZiAob3B0aW9ucy5jcmVkZW50aWFsICYmICFvcHRpb25zLmNyZWRlbnRpYWxTY29wZXMpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBXaGVuIHVzaW5nIGNyZWRlbnRpYWxzLCB0aGUgU2VydmljZUNsaWVudE9wdGlvbnMgbXVzdCBjb250YWluIGVpdGhlciBhIGVuZHBvaW50IG9yIGEgY3JlZGVudGlhbFNjb3Blcy4gVW5hYmxlIHRvIGNyZWF0ZSBhIGJlYXJlclRva2VuQXV0aGVudGljYXRpb25Qb2xpY3lgKTtcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlcnZpY2VDbGllbnQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/serviceClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/state.js":
/*!***********************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/state.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   state: () => (/* binding */ state)\n/* harmony export */ });\n/* harmony import */ var _commonjs_state_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../commonjs/state.js */ \"(ssr)/./node_modules/@azure/core-client/dist/commonjs/state.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n// @ts-expect-error The recommended approach to sharing module state between ESM and CJS.\n// See https://github.com/isaacs/tshy/blob/main/README.md#module-local-state for additional information.\n\n/**\n * Defines the shared state between CJS and ESM by re-exporting the CJS state.\n */\nconst state = _commonjs_state_js__WEBPACK_IMPORTED_MODULE_0__.state;\n//# sourceMappingURL=state.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL3N0YXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDeUQ7QUFDekQ7QUFDQTtBQUNBO0FBQ08sY0FBYyxxREFBUTtBQUM3QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmUgLSBIZWxsbyBTY3JpcHQgQUlcXGxpZmVBZ2VudFxcdm9pY2UtbGl2ZS1hZ2VudFxcc2FtcGxlc1xccmVhY3RcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLWNsaWVudFxcZGlzdFxcZXNtXFxzdGF0ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbi8vIEB0cy1leHBlY3QtZXJyb3IgVGhlIHJlY29tbWVuZGVkIGFwcHJvYWNoIHRvIHNoYXJpbmcgbW9kdWxlIHN0YXRlIGJldHdlZW4gRVNNIGFuZCBDSlMuXG4vLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2lzYWFjcy90c2h5L2Jsb2IvbWFpbi9SRUFETUUubWQjbW9kdWxlLWxvY2FsLXN0YXRlIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uLlxuaW1wb3J0IHsgc3RhdGUgYXMgY2pzU3RhdGUgfSBmcm9tIFwiLi4vY29tbW9uanMvc3RhdGUuanNcIjtcbi8qKlxuICogRGVmaW5lcyB0aGUgc2hhcmVkIHN0YXRlIGJldHdlZW4gQ0pTIGFuZCBFU00gYnkgcmUtZXhwb3J0aW5nIHRoZSBDSlMgc3RhdGUuXG4gKi9cbmV4cG9ydCBjb25zdCBzdGF0ZSA9IGNqc1N0YXRlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RhdGUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/state.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/urlHelpers.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/urlHelpers.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   appendQueryParams: () => (/* binding */ appendQueryParams),\n/* harmony export */   getRequestUrl: () => (/* binding */ getRequestUrl)\n/* harmony export */ });\n/* harmony import */ var _operationHelpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./operationHelpers.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/operationHelpers.js\");\n/* harmony import */ var _interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interfaceHelpers.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/interfaceHelpers.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\nconst CollectionFormatToDelimiterMap = {\n    CSV: \",\",\n    SSV: \" \",\n    Multi: \"Multi\",\n    TSV: \"\\t\",\n    Pipes: \"|\",\n};\nfunction getRequestUrl(baseUri, operationSpec, operationArguments, fallbackObject) {\n    const urlReplacements = calculateUrlReplacements(operationSpec, operationArguments, fallbackObject);\n    let isAbsolutePath = false;\n    let requestUrl = replaceAll(baseUri, urlReplacements);\n    if (operationSpec.path) {\n        let path = replaceAll(operationSpec.path, urlReplacements);\n        // QUIRK: sometimes we get a path component like /{nextLink}\n        // which may be a fully formed URL with a leading /. In that case, we should\n        // remove the leading /\n        if (operationSpec.path === \"/{nextLink}\" && path.startsWith(\"/\")) {\n            path = path.substring(1);\n        }\n        // QUIRK: sometimes we get a path component like {nextLink}\n        // which may be a fully formed URL. In that case, we should\n        // ignore the baseUri.\n        if (isAbsoluteUrl(path)) {\n            requestUrl = path;\n            isAbsolutePath = true;\n        }\n        else {\n            requestUrl = appendPath(requestUrl, path);\n        }\n    }\n    const { queryParams, sequenceParams } = calculateQueryParameters(operationSpec, operationArguments, fallbackObject);\n    /**\n     * Notice that this call sets the `noOverwrite` parameter to true if the `requestUrl`\n     * is an absolute path. This ensures that existing query parameter values in `requestUrl`\n     * do not get overwritten. On the other hand when `requestUrl` is not absolute path, it\n     * is still being built so there is nothing to overwrite.\n     */\n    requestUrl = appendQueryParams(requestUrl, queryParams, sequenceParams, isAbsolutePath);\n    return requestUrl;\n}\nfunction replaceAll(input, replacements) {\n    let result = input;\n    for (const [searchValue, replaceValue] of replacements) {\n        result = result.split(searchValue).join(replaceValue);\n    }\n    return result;\n}\nfunction calculateUrlReplacements(operationSpec, operationArguments, fallbackObject) {\n    var _a;\n    const result = new Map();\n    if ((_a = operationSpec.urlParameters) === null || _a === void 0 ? void 0 : _a.length) {\n        for (const urlParameter of operationSpec.urlParameters) {\n            let urlParameterValue = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_0__.getOperationArgumentValueFromParameter)(operationArguments, urlParameter, fallbackObject);\n            const parameterPathString = (0,_interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_1__.getPathStringFromParameter)(urlParameter);\n            urlParameterValue = operationSpec.serializer.serialize(urlParameter.mapper, urlParameterValue, parameterPathString);\n            if (!urlParameter.skipEncoding) {\n                urlParameterValue = encodeURIComponent(urlParameterValue);\n            }\n            result.set(`{${urlParameter.mapper.serializedName || parameterPathString}}`, urlParameterValue);\n        }\n    }\n    return result;\n}\nfunction isAbsoluteUrl(url) {\n    return url.includes(\"://\");\n}\nfunction appendPath(url, pathToAppend) {\n    if (!pathToAppend) {\n        return url;\n    }\n    const parsedUrl = new URL(url);\n    let newPath = parsedUrl.pathname;\n    if (!newPath.endsWith(\"/\")) {\n        newPath = `${newPath}/`;\n    }\n    if (pathToAppend.startsWith(\"/\")) {\n        pathToAppend = pathToAppend.substring(1);\n    }\n    const searchStart = pathToAppend.indexOf(\"?\");\n    if (searchStart !== -1) {\n        const path = pathToAppend.substring(0, searchStart);\n        const search = pathToAppend.substring(searchStart + 1);\n        newPath = newPath + path;\n        if (search) {\n            parsedUrl.search = parsedUrl.search ? `${parsedUrl.search}&${search}` : search;\n        }\n    }\n    else {\n        newPath = newPath + pathToAppend;\n    }\n    parsedUrl.pathname = newPath;\n    return parsedUrl.toString();\n}\nfunction calculateQueryParameters(operationSpec, operationArguments, fallbackObject) {\n    var _a;\n    const result = new Map();\n    const sequenceParams = new Set();\n    if ((_a = operationSpec.queryParameters) === null || _a === void 0 ? void 0 : _a.length) {\n        for (const queryParameter of operationSpec.queryParameters) {\n            if (queryParameter.mapper.type.name === \"Sequence\" && queryParameter.mapper.serializedName) {\n                sequenceParams.add(queryParameter.mapper.serializedName);\n            }\n            let queryParameterValue = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_0__.getOperationArgumentValueFromParameter)(operationArguments, queryParameter, fallbackObject);\n            if ((queryParameterValue !== undefined && queryParameterValue !== null) ||\n                queryParameter.mapper.required) {\n                queryParameterValue = operationSpec.serializer.serialize(queryParameter.mapper, queryParameterValue, (0,_interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_1__.getPathStringFromParameter)(queryParameter));\n                const delimiter = queryParameter.collectionFormat\n                    ? CollectionFormatToDelimiterMap[queryParameter.collectionFormat]\n                    : \"\";\n                if (Array.isArray(queryParameterValue)) {\n                    // replace null and undefined\n                    queryParameterValue = queryParameterValue.map((item) => {\n                        if (item === null || item === undefined) {\n                            return \"\";\n                        }\n                        return item;\n                    });\n                }\n                if (queryParameter.collectionFormat === \"Multi\" && queryParameterValue.length === 0) {\n                    continue;\n                }\n                else if (Array.isArray(queryParameterValue) &&\n                    (queryParameter.collectionFormat === \"SSV\" || queryParameter.collectionFormat === \"TSV\")) {\n                    queryParameterValue = queryParameterValue.join(delimiter);\n                }\n                if (!queryParameter.skipEncoding) {\n                    if (Array.isArray(queryParameterValue)) {\n                        queryParameterValue = queryParameterValue.map((item) => {\n                            return encodeURIComponent(item);\n                        });\n                    }\n                    else {\n                        queryParameterValue = encodeURIComponent(queryParameterValue);\n                    }\n                }\n                // Join pipes and CSV *after* encoding, or the server will be upset.\n                if (Array.isArray(queryParameterValue) &&\n                    (queryParameter.collectionFormat === \"CSV\" || queryParameter.collectionFormat === \"Pipes\")) {\n                    queryParameterValue = queryParameterValue.join(delimiter);\n                }\n                result.set(queryParameter.mapper.serializedName || (0,_interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_1__.getPathStringFromParameter)(queryParameter), queryParameterValue);\n            }\n        }\n    }\n    return {\n        queryParams: result,\n        sequenceParams,\n    };\n}\nfunction simpleParseQueryParams(queryString) {\n    const result = new Map();\n    if (!queryString || queryString[0] !== \"?\") {\n        return result;\n    }\n    // remove the leading ?\n    queryString = queryString.slice(1);\n    const pairs = queryString.split(\"&\");\n    for (const pair of pairs) {\n        const [name, value] = pair.split(\"=\", 2);\n        const existingValue = result.get(name);\n        if (existingValue) {\n            if (Array.isArray(existingValue)) {\n                existingValue.push(value);\n            }\n            else {\n                result.set(name, [existingValue, value]);\n            }\n        }\n        else {\n            result.set(name, value);\n        }\n    }\n    return result;\n}\n/** @internal */\nfunction appendQueryParams(url, queryParams, sequenceParams, noOverwrite = false) {\n    if (queryParams.size === 0) {\n        return url;\n    }\n    const parsedUrl = new URL(url);\n    // QUIRK: parsedUrl.searchParams will have their name/value pairs decoded, which\n    // can change their meaning to the server, such as in the case of a SAS signature.\n    // To avoid accidentally un-encoding a query param, we parse the key/values ourselves\n    const combinedParams = simpleParseQueryParams(parsedUrl.search);\n    for (const [name, value] of queryParams) {\n        const existingValue = combinedParams.get(name);\n        if (Array.isArray(existingValue)) {\n            if (Array.isArray(value)) {\n                existingValue.push(...value);\n                const valueSet = new Set(existingValue);\n                combinedParams.set(name, Array.from(valueSet));\n            }\n            else {\n                existingValue.push(value);\n            }\n        }\n        else if (existingValue) {\n            if (Array.isArray(value)) {\n                value.unshift(existingValue);\n            }\n            else if (sequenceParams.has(name)) {\n                combinedParams.set(name, [existingValue, value]);\n            }\n            if (!noOverwrite) {\n                combinedParams.set(name, value);\n            }\n        }\n        else {\n            combinedParams.set(name, value);\n        }\n    }\n    const searchPieces = [];\n    for (const [name, value] of combinedParams) {\n        if (typeof value === \"string\") {\n            searchPieces.push(`${name}=${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // QUIRK: If we get an array of values, include multiple key/value pairs\n            for (const subValue of value) {\n                searchPieces.push(`${name}=${subValue}`);\n            }\n        }\n        else {\n            searchPieces.push(`${name}=${value}`);\n        }\n    }\n    // QUIRK: we have to set search manually as searchParams will encode comma when it shouldn't.\n    parsedUrl.search = searchPieces.length ? `?${searchPieces.join(\"&\")}` : \"\";\n    return parsedUrl.toString();\n}\n//# sourceMappingURL=urlHelpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/urlHelpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/utils.js":
/*!***********************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/utils.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   flattenResponse: () => (/* binding */ flattenResponse),\n/* harmony export */   isDuration: () => (/* binding */ isDuration),\n/* harmony export */   isPrimitiveBody: () => (/* binding */ isPrimitiveBody),\n/* harmony export */   isValidUuid: () => (/* binding */ isValidUuid)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * A type guard for a primitive response body.\n * @param value - Value to test\n *\n * @internal\n */\nfunction isPrimitiveBody(value, mapperTypeName) {\n    return (mapperTypeName !== \"Composite\" &&\n        mapperTypeName !== \"Dictionary\" &&\n        (typeof value === \"string\" ||\n            typeof value === \"number\" ||\n            typeof value === \"boolean\" ||\n            (mapperTypeName === null || mapperTypeName === void 0 ? void 0 : mapperTypeName.match(/^(Date|DateTime|DateTimeRfc1123|UnixTime|ByteArray|Base64Url)$/i)) !==\n                null ||\n            value === undefined ||\n            value === null));\n}\nconst validateISODuration = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n/**\n * Returns true if the given string is in ISO 8601 format.\n * @param value - The value to be validated for ISO 8601 duration format.\n * @internal\n */\nfunction isDuration(value) {\n    return validateISODuration.test(value);\n}\nconst validUuidRegex = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i;\n/**\n * Returns true if the provided uuid is valid.\n *\n * @param uuid - The uuid that needs to be validated.\n *\n * @internal\n */\nfunction isValidUuid(uuid) {\n    return validUuidRegex.test(uuid);\n}\n/**\n * Maps the response as follows:\n * - wraps the response body if needed (typically if its type is primitive).\n * - returns null if the combination of the headers and the body is empty.\n * - otherwise, returns the combination of the headers and the body.\n *\n * @param responseObject - a representation of the parsed response\n * @returns the response that will be returned to the user which can be null and/or wrapped\n *\n * @internal\n */\nfunction handleNullableResponseAndWrappableBody(responseObject) {\n    const combinedHeadersAndBody = Object.assign(Object.assign({}, responseObject.headers), responseObject.body);\n    if (responseObject.hasNullableType &&\n        Object.getOwnPropertyNames(combinedHeadersAndBody).length === 0) {\n        return responseObject.shouldWrapBody ? { body: null } : null;\n    }\n    else {\n        return responseObject.shouldWrapBody\n            ? Object.assign(Object.assign({}, responseObject.headers), { body: responseObject.body }) : combinedHeadersAndBody;\n    }\n}\n/**\n * Take a `FullOperationResponse` and turn it into a flat\n * response object to hand back to the consumer.\n * @param fullResponse - The processed response from the operation request\n * @param responseSpec - The response map from the OperationSpec\n *\n * @internal\n */\nfunction flattenResponse(fullResponse, responseSpec) {\n    var _a, _b;\n    const parsedHeaders = fullResponse.parsedHeaders;\n    // head methods never have a body, but we return a boolean set to body property\n    // to indicate presence/absence of the resource\n    if (fullResponse.request.method === \"HEAD\") {\n        return Object.assign(Object.assign({}, parsedHeaders), { body: fullResponse.parsedBody });\n    }\n    const bodyMapper = responseSpec && responseSpec.bodyMapper;\n    const isNullable = Boolean(bodyMapper === null || bodyMapper === void 0 ? void 0 : bodyMapper.nullable);\n    const expectedBodyTypeName = bodyMapper === null || bodyMapper === void 0 ? void 0 : bodyMapper.type.name;\n    /** If the body is asked for, we look at the expected body type to handle it */\n    if (expectedBodyTypeName === \"Stream\") {\n        return Object.assign(Object.assign({}, parsedHeaders), { blobBody: fullResponse.blobBody, readableStreamBody: fullResponse.readableStreamBody });\n    }\n    const modelProperties = (expectedBodyTypeName === \"Composite\" &&\n        bodyMapper.type.modelProperties) ||\n        {};\n    const isPageableResponse = Object.keys(modelProperties).some((k) => modelProperties[k].serializedName === \"\");\n    if (expectedBodyTypeName === \"Sequence\" || isPageableResponse) {\n        const arrayResponse = (_a = fullResponse.parsedBody) !== null && _a !== void 0 ? _a : [];\n        for (const key of Object.keys(modelProperties)) {\n            if (modelProperties[key].serializedName) {\n                arrayResponse[key] = (_b = fullResponse.parsedBody) === null || _b === void 0 ? void 0 : _b[key];\n            }\n        }\n        if (parsedHeaders) {\n            for (const key of Object.keys(parsedHeaders)) {\n                arrayResponse[key] = parsedHeaders[key];\n            }\n        }\n        return isNullable &&\n            !fullResponse.parsedBody &&\n            !parsedHeaders &&\n            Object.getOwnPropertyNames(modelProperties).length === 0\n            ? null\n            : arrayResponse;\n    }\n    return handleNullableResponseAndWrappableBody({\n        body: fullResponse.parsedBody,\n        headers: parsedHeaders,\n        hasNullableType: isNullable,\n        shouldWrapBody: isPrimitiveBody(fullResponse.parsedBody, expectedBodyTypeName),\n    });\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-http-compat/dist/esm/extendedClient.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/core-http-compat/dist/esm/extendedClient.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExtendedServiceClient: () => (/* binding */ ExtendedServiceClient)\n/* harmony export */ });\n/* harmony import */ var _policies_disableKeepAlivePolicy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./policies/disableKeepAlivePolicy.js */ \"(ssr)/./node_modules/@azure/core-http-compat/dist/esm/policies/disableKeepAlivePolicy.js\");\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n/* harmony import */ var _azure_core_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/core-client */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/index.js\");\n/* harmony import */ var _response_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./response.js */ \"(ssr)/./node_modules/@azure/core-http-compat/dist/esm/response.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n/**\n * Client to provide compatability between core V1 & V2.\n */\nclass ExtendedServiceClient extends _azure_core_client__WEBPACK_IMPORTED_MODULE_2__.ServiceClient {\n    constructor(options) {\n        var _a, _b;\n        super(options);\n        if (((_a = options.keepAliveOptions) === null || _a === void 0 ? void 0 : _a.enable) === false &&\n            !(0,_policies_disableKeepAlivePolicy_js__WEBPACK_IMPORTED_MODULE_0__.pipelineContainsDisableKeepAlivePolicy)(this.pipeline)) {\n            this.pipeline.addPolicy((0,_policies_disableKeepAlivePolicy_js__WEBPACK_IMPORTED_MODULE_0__.createDisableKeepAlivePolicy)());\n        }\n        if (((_b = options.redirectOptions) === null || _b === void 0 ? void 0 : _b.handleRedirects) === false) {\n            this.pipeline.removePolicy({\n                name: _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__.redirectPolicyName,\n            });\n        }\n    }\n    /**\n     * Compatible send operation request function.\n     *\n     * @param operationArguments - Operation arguments\n     * @param operationSpec - Operation Spec\n     * @returns\n     */\n    async sendOperationRequest(operationArguments, operationSpec) {\n        var _a;\n        const userProvidedCallBack = (_a = operationArguments === null || operationArguments === void 0 ? void 0 : operationArguments.options) === null || _a === void 0 ? void 0 : _a.onResponse;\n        let lastResponse;\n        function onResponse(rawResponse, flatResponse, error) {\n            lastResponse = rawResponse;\n            if (userProvidedCallBack) {\n                userProvidedCallBack(rawResponse, flatResponse, error);\n            }\n        }\n        operationArguments.options = Object.assign(Object.assign({}, operationArguments.options), { onResponse });\n        const result = await super.sendOperationRequest(operationArguments, operationSpec);\n        if (lastResponse) {\n            Object.defineProperty(result, \"_response\", {\n                value: (0,_response_js__WEBPACK_IMPORTED_MODULE_3__.toCompatResponse)(lastResponse),\n            });\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=extendedClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtaHR0cC1jb21wYXQvZGlzdC9lc20vZXh0ZW5kZWRDbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQzZIO0FBQzlEO0FBQ1o7QUFDRjtBQUNqRDtBQUNBO0FBQ0E7QUFDTyxvQ0FBb0MsNkRBQWE7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLDJHQUFzQztBQUNuRCxvQ0FBb0MsaUdBQTRCO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix5RUFBa0I7QUFDeEMsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FLGlDQUFpQyxZQUFZO0FBQ2hIO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qiw4REFBZ0I7QUFDdkMsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1odHRwLWNvbXBhdFxcZGlzdFxcZXNtXFxleHRlbmRlZENsaWVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGNyZWF0ZURpc2FibGVLZWVwQWxpdmVQb2xpY3ksIHBpcGVsaW5lQ29udGFpbnNEaXNhYmxlS2VlcEFsaXZlUG9saWN5LCB9IGZyb20gXCIuL3BvbGljaWVzL2Rpc2FibGVLZWVwQWxpdmVQb2xpY3kuanNcIjtcbmltcG9ydCB7IHJlZGlyZWN0UG9saWN5TmFtZSB9IGZyb20gXCJAYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lXCI7XG5pbXBvcnQgeyBTZXJ2aWNlQ2xpZW50IH0gZnJvbSBcIkBhenVyZS9jb3JlLWNsaWVudFwiO1xuaW1wb3J0IHsgdG9Db21wYXRSZXNwb25zZSB9IGZyb20gXCIuL3Jlc3BvbnNlLmpzXCI7XG4vKipcbiAqIENsaWVudCB0byBwcm92aWRlIGNvbXBhdGFiaWxpdHkgYmV0d2VlbiBjb3JlIFYxICYgVjIuXG4gKi9cbmV4cG9ydCBjbGFzcyBFeHRlbmRlZFNlcnZpY2VDbGllbnQgZXh0ZW5kcyBTZXJ2aWNlQ2xpZW50IHtcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgIHN1cGVyKG9wdGlvbnMpO1xuICAgICAgICBpZiAoKChfYSA9IG9wdGlvbnMua2VlcEFsaXZlT3B0aW9ucykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmVuYWJsZSkgPT09IGZhbHNlICYmXG4gICAgICAgICAgICAhcGlwZWxpbmVDb250YWluc0Rpc2FibGVLZWVwQWxpdmVQb2xpY3kodGhpcy5waXBlbGluZSkpIHtcbiAgICAgICAgICAgIHRoaXMucGlwZWxpbmUuYWRkUG9saWN5KGNyZWF0ZURpc2FibGVLZWVwQWxpdmVQb2xpY3koKSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCgoX2IgPSBvcHRpb25zLnJlZGlyZWN0T3B0aW9ucykgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmhhbmRsZVJlZGlyZWN0cykgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICB0aGlzLnBpcGVsaW5lLnJlbW92ZVBvbGljeSh7XG4gICAgICAgICAgICAgICAgbmFtZTogcmVkaXJlY3RQb2xpY3lOYW1lLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29tcGF0aWJsZSBzZW5kIG9wZXJhdGlvbiByZXF1ZXN0IGZ1bmN0aW9uLlxuICAgICAqXG4gICAgICogQHBhcmFtIG9wZXJhdGlvbkFyZ3VtZW50cyAtIE9wZXJhdGlvbiBhcmd1bWVudHNcbiAgICAgKiBAcGFyYW0gb3BlcmF0aW9uU3BlYyAtIE9wZXJhdGlvbiBTcGVjXG4gICAgICogQHJldHVybnNcbiAgICAgKi9cbiAgICBhc3luYyBzZW5kT3BlcmF0aW9uUmVxdWVzdChvcGVyYXRpb25Bcmd1bWVudHMsIG9wZXJhdGlvblNwZWMpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICBjb25zdCB1c2VyUHJvdmlkZWRDYWxsQmFjayA9IChfYSA9IG9wZXJhdGlvbkFyZ3VtZW50cyA9PT0gbnVsbCB8fCBvcGVyYXRpb25Bcmd1bWVudHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wZXJhdGlvbkFyZ3VtZW50cy5vcHRpb25zKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Eub25SZXNwb25zZTtcbiAgICAgICAgbGV0IGxhc3RSZXNwb25zZTtcbiAgICAgICAgZnVuY3Rpb24gb25SZXNwb25zZShyYXdSZXNwb25zZSwgZmxhdFJlc3BvbnNlLCBlcnJvcikge1xuICAgICAgICAgICAgbGFzdFJlc3BvbnNlID0gcmF3UmVzcG9uc2U7XG4gICAgICAgICAgICBpZiAodXNlclByb3ZpZGVkQ2FsbEJhY2spIHtcbiAgICAgICAgICAgICAgICB1c2VyUHJvdmlkZWRDYWxsQmFjayhyYXdSZXNwb25zZSwgZmxhdFJlc3BvbnNlLCBlcnJvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgb3BlcmF0aW9uQXJndW1lbnRzLm9wdGlvbnMgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIG9wZXJhdGlvbkFyZ3VtZW50cy5vcHRpb25zKSwgeyBvblJlc3BvbnNlIH0pO1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBzdXBlci5zZW5kT3BlcmF0aW9uUmVxdWVzdChvcGVyYXRpb25Bcmd1bWVudHMsIG9wZXJhdGlvblNwZWMpO1xuICAgICAgICBpZiAobGFzdFJlc3BvbnNlKSB7XG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkocmVzdWx0LCBcIl9yZXNwb25zZVwiLCB7XG4gICAgICAgICAgICAgICAgdmFsdWU6IHRvQ29tcGF0UmVzcG9uc2UobGFzdFJlc3BvbnNlKSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXh0ZW5kZWRDbGllbnQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-http-compat/dist/esm/extendedClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-http-compat/dist/esm/httpClientAdapter.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/core-http-compat/dist/esm/httpClientAdapter.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertHttpClient: () => (/* binding */ convertHttpClient)\n/* harmony export */ });\n/* harmony import */ var _response_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./response.js */ \"(ssr)/./node_modules/@azure/core-http-compat/dist/esm/response.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util.js */ \"(ssr)/./node_modules/@azure/core-http-compat/dist/esm/util.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * Converts a RequestPolicy based HttpClient to a PipelineRequest based HttpClient.\n * @param requestPolicyClient - A HttpClient compatible with core-http\n * @returns A HttpClient compatible with core-rest-pipeline\n */\nfunction convertHttpClient(requestPolicyClient) {\n    return {\n        sendRequest: async (request) => {\n            const response = await requestPolicyClient.sendRequest((0,_util_js__WEBPACK_IMPORTED_MODULE_1__.toWebResourceLike)(request, { createProxy: true }));\n            return (0,_response_js__WEBPACK_IMPORTED_MODULE_0__.toPipelineResponse)(response);\n        },\n    };\n}\n//# sourceMappingURL=httpClientAdapter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtaHR0cC1jb21wYXQvZGlzdC9lc20vaHR0cENsaWVudEFkYXB0ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNtRDtBQUNMO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxtRUFBbUUsMkRBQWlCLFlBQVksbUJBQW1CO0FBQ25ILG1CQUFtQixnRUFBa0I7QUFDckMsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmUgLSBIZWxsbyBTY3JpcHQgQUlcXGxpZmVBZ2VudFxcdm9pY2UtbGl2ZS1hZ2VudFxcc2FtcGxlc1xccmVhY3RcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLWh0dHAtY29tcGF0XFxkaXN0XFxlc21cXGh0dHBDbGllbnRBZGFwdGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgdG9QaXBlbGluZVJlc3BvbnNlIH0gZnJvbSBcIi4vcmVzcG9uc2UuanNcIjtcbmltcG9ydCB7IHRvV2ViUmVzb3VyY2VMaWtlIH0gZnJvbSBcIi4vdXRpbC5qc1wiO1xuLyoqXG4gKiBDb252ZXJ0cyBhIFJlcXVlc3RQb2xpY3kgYmFzZWQgSHR0cENsaWVudCB0byBhIFBpcGVsaW5lUmVxdWVzdCBiYXNlZCBIdHRwQ2xpZW50LlxuICogQHBhcmFtIHJlcXVlc3RQb2xpY3lDbGllbnQgLSBBIEh0dHBDbGllbnQgY29tcGF0aWJsZSB3aXRoIGNvcmUtaHR0cFxuICogQHJldHVybnMgQSBIdHRwQ2xpZW50IGNvbXBhdGlibGUgd2l0aCBjb3JlLXJlc3QtcGlwZWxpbmVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbnZlcnRIdHRwQ2xpZW50KHJlcXVlc3RQb2xpY3lDbGllbnQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBzZW5kUmVxdWVzdDogYXN5bmMgKHJlcXVlc3QpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgcmVxdWVzdFBvbGljeUNsaWVudC5zZW5kUmVxdWVzdCh0b1dlYlJlc291cmNlTGlrZShyZXF1ZXN0LCB7IGNyZWF0ZVByb3h5OiB0cnVlIH0pKTtcbiAgICAgICAgICAgIHJldHVybiB0b1BpcGVsaW5lUmVzcG9uc2UocmVzcG9uc2UpO1xuICAgICAgICB9LFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1odHRwQ2xpZW50QWRhcHRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-http-compat/dist/esm/httpClientAdapter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-http-compat/dist/esm/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/core-http-compat/dist/esm/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExtendedServiceClient: () => (/* reexport safe */ _extendedClient_js__WEBPACK_IMPORTED_MODULE_0__.ExtendedServiceClient),\n/* harmony export */   HttpPipelineLogLevel: () => (/* reexport safe */ _policies_requestPolicyFactoryPolicy_js__WEBPACK_IMPORTED_MODULE_1__.HttpPipelineLogLevel),\n/* harmony export */   convertHttpClient: () => (/* reexport safe */ _httpClientAdapter_js__WEBPACK_IMPORTED_MODULE_3__.convertHttpClient),\n/* harmony export */   createRequestPolicyFactoryPolicy: () => (/* reexport safe */ _policies_requestPolicyFactoryPolicy_js__WEBPACK_IMPORTED_MODULE_1__.createRequestPolicyFactoryPolicy),\n/* harmony export */   disableKeepAlivePolicyName: () => (/* reexport safe */ _policies_disableKeepAlivePolicy_js__WEBPACK_IMPORTED_MODULE_2__.disableKeepAlivePolicyName),\n/* harmony export */   requestPolicyFactoryPolicyName: () => (/* reexport safe */ _policies_requestPolicyFactoryPolicy_js__WEBPACK_IMPORTED_MODULE_1__.requestPolicyFactoryPolicyName),\n/* harmony export */   toHttpHeadersLike: () => (/* reexport safe */ _util_js__WEBPACK_IMPORTED_MODULE_4__.toHttpHeadersLike)\n/* harmony export */ });\n/* harmony import */ var _extendedClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./extendedClient.js */ \"(ssr)/./node_modules/@azure/core-http-compat/dist/esm/extendedClient.js\");\n/* harmony import */ var _policies_requestPolicyFactoryPolicy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./policies/requestPolicyFactoryPolicy.js */ \"(ssr)/./node_modules/@azure/core-http-compat/dist/esm/policies/requestPolicyFactoryPolicy.js\");\n/* harmony import */ var _policies_disableKeepAlivePolicy_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./policies/disableKeepAlivePolicy.js */ \"(ssr)/./node_modules/@azure/core-http-compat/dist/esm/policies/disableKeepAlivePolicy.js\");\n/* harmony import */ var _httpClientAdapter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./httpClientAdapter.js */ \"(ssr)/./node_modules/@azure/core-http-compat/dist/esm/httpClientAdapter.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util.js */ \"(ssr)/./node_modules/@azure/core-http-compat/dist/esm/util.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * A Shim Library that provides compatibility between Core V1 & V2 Packages.\n *\n * @packageDocumentation\n */\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtaHR0cC1jb21wYXQvZGlzdC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDNkQ7QUFDc0Y7QUFDakU7QUFDdkI7QUFDWjtBQUMvQyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmUgLSBIZWxsbyBTY3JpcHQgQUlcXGxpZmVBZ2VudFxcdm9pY2UtbGl2ZS1hZ2VudFxcc2FtcGxlc1xccmVhY3RcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLWh0dHAtY29tcGF0XFxkaXN0XFxlc21cXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqXG4gKiBBIFNoaW0gTGlicmFyeSB0aGF0IHByb3ZpZGVzIGNvbXBhdGliaWxpdHkgYmV0d2VlbiBDb3JlIFYxICYgVjIgUGFja2FnZXMuXG4gKlxuICogQHBhY2thZ2VEb2N1bWVudGF0aW9uXG4gKi9cbmV4cG9ydCB7IEV4dGVuZGVkU2VydmljZUNsaWVudCwgfSBmcm9tIFwiLi9leHRlbmRlZENsaWVudC5qc1wiO1xuZXhwb3J0IHsgcmVxdWVzdFBvbGljeUZhY3RvcnlQb2xpY3lOYW1lLCBjcmVhdGVSZXF1ZXN0UG9saWN5RmFjdG9yeVBvbGljeSwgSHR0cFBpcGVsaW5lTG9nTGV2ZWwsIH0gZnJvbSBcIi4vcG9saWNpZXMvcmVxdWVzdFBvbGljeUZhY3RvcnlQb2xpY3kuanNcIjtcbmV4cG9ydCB7IGRpc2FibGVLZWVwQWxpdmVQb2xpY3lOYW1lIH0gZnJvbSBcIi4vcG9saWNpZXMvZGlzYWJsZUtlZXBBbGl2ZVBvbGljeS5qc1wiO1xuZXhwb3J0IHsgY29udmVydEh0dHBDbGllbnQgfSBmcm9tIFwiLi9odHRwQ2xpZW50QWRhcHRlci5qc1wiO1xuZXhwb3J0IHsgdG9IdHRwSGVhZGVyc0xpa2UsIH0gZnJvbSBcIi4vdXRpbC5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-http-compat/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-http-compat/dist/esm/policies/disableKeepAlivePolicy.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@azure/core-http-compat/dist/esm/policies/disableKeepAlivePolicy.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDisableKeepAlivePolicy: () => (/* binding */ createDisableKeepAlivePolicy),\n/* harmony export */   disableKeepAlivePolicyName: () => (/* binding */ disableKeepAlivePolicyName),\n/* harmony export */   pipelineContainsDisableKeepAlivePolicy: () => (/* binding */ pipelineContainsDisableKeepAlivePolicy)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nconst disableKeepAlivePolicyName = \"DisableKeepAlivePolicy\";\nfunction createDisableKeepAlivePolicy() {\n    return {\n        name: disableKeepAlivePolicyName,\n        async sendRequest(request, next) {\n            request.disableKeepAlive = true;\n            return next(request);\n        },\n    };\n}\n/**\n * @internal\n */\nfunction pipelineContainsDisableKeepAlivePolicy(pipeline) {\n    return pipeline.getOrderedPolicies().some((policy) => policy.name === disableKeepAlivePolicyName);\n}\n//# sourceMappingURL=disableKeepAlivePolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtaHR0cC1jb21wYXQvZGlzdC9lc20vcG9saWNpZXMvZGlzYWJsZUtlZXBBbGl2ZVBvbGljeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ087QUFDQTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZSAtIEhlbGxvIFNjcmlwdCBBSVxcbGlmZUFnZW50XFx2b2ljZS1saXZlLWFnZW50XFxzYW1wbGVzXFxyZWFjdFxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtaHR0cC1jb21wYXRcXGRpc3RcXGVzbVxccG9saWNpZXNcXGRpc2FibGVLZWVwQWxpdmVQb2xpY3kuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5leHBvcnQgY29uc3QgZGlzYWJsZUtlZXBBbGl2ZVBvbGljeU5hbWUgPSBcIkRpc2FibGVLZWVwQWxpdmVQb2xpY3lcIjtcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVEaXNhYmxlS2VlcEFsaXZlUG9saWN5KCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IGRpc2FibGVLZWVwQWxpdmVQb2xpY3lOYW1lLFxuICAgICAgICBhc3luYyBzZW5kUmVxdWVzdChyZXF1ZXN0LCBuZXh0KSB7XG4gICAgICAgICAgICByZXF1ZXN0LmRpc2FibGVLZWVwQWxpdmUgPSB0cnVlO1xuICAgICAgICAgICAgcmV0dXJuIG5leHQocmVxdWVzdCk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwaXBlbGluZUNvbnRhaW5zRGlzYWJsZUtlZXBBbGl2ZVBvbGljeShwaXBlbGluZSkge1xuICAgIHJldHVybiBwaXBlbGluZS5nZXRPcmRlcmVkUG9saWNpZXMoKS5zb21lKChwb2xpY3kpID0+IHBvbGljeS5uYW1lID09PSBkaXNhYmxlS2VlcEFsaXZlUG9saWN5TmFtZSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kaXNhYmxlS2VlcEFsaXZlUG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-http-compat/dist/esm/policies/disableKeepAlivePolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-http-compat/dist/esm/policies/requestPolicyFactoryPolicy.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@azure/core-http-compat/dist/esm/policies/requestPolicyFactoryPolicy.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpPipelineLogLevel: () => (/* binding */ HttpPipelineLogLevel),\n/* harmony export */   createRequestPolicyFactoryPolicy: () => (/* binding */ createRequestPolicyFactoryPolicy),\n/* harmony export */   requestPolicyFactoryPolicyName: () => (/* binding */ requestPolicyFactoryPolicyName)\n/* harmony export */ });\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util.js */ \"(ssr)/./node_modules/@azure/core-http-compat/dist/esm/util.js\");\n/* harmony import */ var _response_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../response.js */ \"(ssr)/./node_modules/@azure/core-http-compat/dist/esm/response.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * An enum for compatibility with RequestPolicy\n */\nvar HttpPipelineLogLevel;\n(function (HttpPipelineLogLevel) {\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"ERROR\"] = 1] = \"ERROR\";\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"INFO\"] = 3] = \"INFO\";\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"OFF\"] = 0] = \"OFF\";\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"WARNING\"] = 2] = \"WARNING\";\n})(HttpPipelineLogLevel || (HttpPipelineLogLevel = {}));\nconst mockRequestPolicyOptions = {\n    log(_logLevel, _message) {\n        /* do nothing */\n    },\n    shouldLog(_logLevel) {\n        return false;\n    },\n};\n/**\n * The name of the RequestPolicyFactoryPolicy\n */\nconst requestPolicyFactoryPolicyName = \"RequestPolicyFactoryPolicy\";\n/**\n * A policy that wraps policies written for core-http.\n * @param factories - An array of `RequestPolicyFactory` objects from a core-http pipeline\n */\nfunction createRequestPolicyFactoryPolicy(factories) {\n    const orderedFactories = factories.slice().reverse();\n    return {\n        name: requestPolicyFactoryPolicyName,\n        async sendRequest(request, next) {\n            let httpPipeline = {\n                async sendRequest(httpRequest) {\n                    const response = await next((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.toPipelineRequest)(httpRequest));\n                    return (0,_response_js__WEBPACK_IMPORTED_MODULE_1__.toCompatResponse)(response, { createProxy: true });\n                },\n            };\n            for (const factory of orderedFactories) {\n                httpPipeline = factory.create(httpPipeline, mockRequestPolicyOptions);\n            }\n            const webResourceLike = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.toWebResourceLike)(request, { createProxy: true });\n            const response = await httpPipeline.sendRequest(webResourceLike);\n            return (0,_response_js__WEBPACK_IMPORTED_MODULE_1__.toPipelineResponse)(response);\n        },\n    };\n}\n//# sourceMappingURL=requestPolicyFactoryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtaHR0cC1jb21wYXQvZGlzdC9lc20vcG9saWNpZXMvcmVxdWVzdFBvbGljeUZhY3RvcnlQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ2tFO0FBQ0k7QUFDdEU7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxvREFBb0Q7QUFDckQ7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsMkRBQWlCO0FBQ2pFLDJCQUEyQiw4REFBZ0IsYUFBYSxtQkFBbUI7QUFDM0UsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLDJEQUFpQixZQUFZLG1CQUFtQjtBQUNwRjtBQUNBLG1CQUFtQixnRUFBa0I7QUFDckMsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmUgLSBIZWxsbyBTY3JpcHQgQUlcXGxpZmVBZ2VudFxcdm9pY2UtbGl2ZS1hZ2VudFxcc2FtcGxlc1xccmVhY3RcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLWh0dHAtY29tcGF0XFxkaXN0XFxlc21cXHBvbGljaWVzXFxyZXF1ZXN0UG9saWN5RmFjdG9yeVBvbGljeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IHRvUGlwZWxpbmVSZXF1ZXN0LCB0b1dlYlJlc291cmNlTGlrZSB9IGZyb20gXCIuLi91dGlsLmpzXCI7XG5pbXBvcnQgeyB0b0NvbXBhdFJlc3BvbnNlLCB0b1BpcGVsaW5lUmVzcG9uc2UgfSBmcm9tIFwiLi4vcmVzcG9uc2UuanNcIjtcbi8qKlxuICogQW4gZW51bSBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIFJlcXVlc3RQb2xpY3lcbiAqL1xuZXhwb3J0IHZhciBIdHRwUGlwZWxpbmVMb2dMZXZlbDtcbihmdW5jdGlvbiAoSHR0cFBpcGVsaW5lTG9nTGV2ZWwpIHtcbiAgICBIdHRwUGlwZWxpbmVMb2dMZXZlbFtIdHRwUGlwZWxpbmVMb2dMZXZlbFtcIkVSUk9SXCJdID0gMV0gPSBcIkVSUk9SXCI7XG4gICAgSHR0cFBpcGVsaW5lTG9nTGV2ZWxbSHR0cFBpcGVsaW5lTG9nTGV2ZWxbXCJJTkZPXCJdID0gM10gPSBcIklORk9cIjtcbiAgICBIdHRwUGlwZWxpbmVMb2dMZXZlbFtIdHRwUGlwZWxpbmVMb2dMZXZlbFtcIk9GRlwiXSA9IDBdID0gXCJPRkZcIjtcbiAgICBIdHRwUGlwZWxpbmVMb2dMZXZlbFtIdHRwUGlwZWxpbmVMb2dMZXZlbFtcIldBUk5JTkdcIl0gPSAyXSA9IFwiV0FSTklOR1wiO1xufSkoSHR0cFBpcGVsaW5lTG9nTGV2ZWwgfHwgKEh0dHBQaXBlbGluZUxvZ0xldmVsID0ge30pKTtcbmNvbnN0IG1vY2tSZXF1ZXN0UG9saWN5T3B0aW9ucyA9IHtcbiAgICBsb2coX2xvZ0xldmVsLCBfbWVzc2FnZSkge1xuICAgICAgICAvKiBkbyBub3RoaW5nICovXG4gICAgfSxcbiAgICBzaG91bGRMb2coX2xvZ0xldmVsKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9LFxufTtcbi8qKlxuICogVGhlIG5hbWUgb2YgdGhlIFJlcXVlc3RQb2xpY3lGYWN0b3J5UG9saWN5XG4gKi9cbmV4cG9ydCBjb25zdCByZXF1ZXN0UG9saWN5RmFjdG9yeVBvbGljeU5hbWUgPSBcIlJlcXVlc3RQb2xpY3lGYWN0b3J5UG9saWN5XCI7XG4vKipcbiAqIEEgcG9saWN5IHRoYXQgd3JhcHMgcG9saWNpZXMgd3JpdHRlbiBmb3IgY29yZS1odHRwLlxuICogQHBhcmFtIGZhY3RvcmllcyAtIEFuIGFycmF5IG9mIGBSZXF1ZXN0UG9saWN5RmFjdG9yeWAgb2JqZWN0cyBmcm9tIGEgY29yZS1odHRwIHBpcGVsaW5lXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVSZXF1ZXN0UG9saWN5RmFjdG9yeVBvbGljeShmYWN0b3JpZXMpIHtcbiAgICBjb25zdCBvcmRlcmVkRmFjdG9yaWVzID0gZmFjdG9yaWVzLnNsaWNlKCkucmV2ZXJzZSgpO1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IHJlcXVlc3RQb2xpY3lGYWN0b3J5UG9saWN5TmFtZSxcbiAgICAgICAgYXN5bmMgc2VuZFJlcXVlc3QocmVxdWVzdCwgbmV4dCkge1xuICAgICAgICAgICAgbGV0IGh0dHBQaXBlbGluZSA9IHtcbiAgICAgICAgICAgICAgICBhc3luYyBzZW5kUmVxdWVzdChodHRwUmVxdWVzdCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IG5leHQodG9QaXBlbGluZVJlcXVlc3QoaHR0cFJlcXVlc3QpKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRvQ29tcGF0UmVzcG9uc2UocmVzcG9uc2UsIHsgY3JlYXRlUHJveHk6IHRydWUgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGZhY3Rvcnkgb2Ygb3JkZXJlZEZhY3Rvcmllcykge1xuICAgICAgICAgICAgICAgIGh0dHBQaXBlbGluZSA9IGZhY3RvcnkuY3JlYXRlKGh0dHBQaXBlbGluZSwgbW9ja1JlcXVlc3RQb2xpY3lPcHRpb25zKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHdlYlJlc291cmNlTGlrZSA9IHRvV2ViUmVzb3VyY2VMaWtlKHJlcXVlc3QsIHsgY3JlYXRlUHJveHk6IHRydWUgfSk7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGh0dHBQaXBlbGluZS5zZW5kUmVxdWVzdCh3ZWJSZXNvdXJjZUxpa2UpO1xuICAgICAgICAgICAgcmV0dXJuIHRvUGlwZWxpbmVSZXNwb25zZShyZXNwb25zZSk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlcXVlc3RQb2xpY3lGYWN0b3J5UG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-http-compat/dist/esm/policies/requestPolicyFactoryPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-http-compat/dist/esm/response.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/core-http-compat/dist/esm/response.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toCompatResponse: () => (/* binding */ toCompatResponse),\n/* harmony export */   toPipelineResponse: () => (/* binding */ toPipelineResponse)\n/* harmony export */ });\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util.js */ \"(ssr)/./node_modules/@azure/core-http-compat/dist/esm/util.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\nconst originalResponse = Symbol(\"Original FullOperationResponse\");\n/**\n * A helper to convert response objects from the new pipeline back to the old one.\n * @param response - A response object from core-client.\n * @returns A response compatible with `HttpOperationResponse` from core-http.\n */\nfunction toCompatResponse(response, options) {\n    let request = (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.toWebResourceLike)(response.request);\n    let headers = (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.toHttpHeadersLike)(response.headers);\n    if (options === null || options === void 0 ? void 0 : options.createProxy) {\n        return new Proxy(response, {\n            get(target, prop, receiver) {\n                if (prop === \"headers\") {\n                    return headers;\n                }\n                else if (prop === \"request\") {\n                    return request;\n                }\n                else if (prop === originalResponse) {\n                    return response;\n                }\n                return Reflect.get(target, prop, receiver);\n            },\n            set(target, prop, value, receiver) {\n                if (prop === \"headers\") {\n                    headers = value;\n                }\n                else if (prop === \"request\") {\n                    request = value;\n                }\n                return Reflect.set(target, prop, value, receiver);\n            },\n        });\n    }\n    else {\n        return Object.assign(Object.assign({}, response), { request,\n            headers });\n    }\n}\n/**\n * A helper to convert back to a PipelineResponse\n * @param compatResponse - A response compatible with `HttpOperationResponse` from core-http.\n */\nfunction toPipelineResponse(compatResponse) {\n    const extendedCompatResponse = compatResponse;\n    const response = extendedCompatResponse[originalResponse];\n    const headers = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createHttpHeaders)(compatResponse.headers.toJson({ preserveCase: true }));\n    if (response) {\n        response.headers = headers;\n        return response;\n    }\n    else {\n        return Object.assign(Object.assign({}, compatResponse), { headers, request: (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.toPipelineRequest)(compatResponse.request) });\n    }\n}\n//# sourceMappingURL=response.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtaHR0cC1jb21wYXQvZGlzdC9lc20vcmVzcG9uc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDOEQ7QUFDc0I7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxrQkFBa0IsMkRBQWlCO0FBQ25DLGtCQUFrQiwyREFBaUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBLDZDQUE2QyxlQUFlO0FBQzVELHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxvQkFBb0IsNEVBQWlCLGlDQUFpQyxvQkFBb0I7QUFDMUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QyxxQkFBcUIsa0JBQWtCLDJEQUFpQiwwQkFBMEI7QUFDL0g7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZSAtIEhlbGxvIFNjcmlwdCBBSVxcbGlmZUFnZW50XFx2b2ljZS1saXZlLWFnZW50XFxzYW1wbGVzXFxyZWFjdFxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtaHR0cC1jb21wYXRcXGRpc3RcXGVzbVxccmVzcG9uc2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBjcmVhdGVIdHRwSGVhZGVycyB9IGZyb20gXCJAYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lXCI7XG5pbXBvcnQgeyB0b0h0dHBIZWFkZXJzTGlrZSwgdG9QaXBlbGluZVJlcXVlc3QsIHRvV2ViUmVzb3VyY2VMaWtlIH0gZnJvbSBcIi4vdXRpbC5qc1wiO1xuY29uc3Qgb3JpZ2luYWxSZXNwb25zZSA9IFN5bWJvbChcIk9yaWdpbmFsIEZ1bGxPcGVyYXRpb25SZXNwb25zZVwiKTtcbi8qKlxuICogQSBoZWxwZXIgdG8gY29udmVydCByZXNwb25zZSBvYmplY3RzIGZyb20gdGhlIG5ldyBwaXBlbGluZSBiYWNrIHRvIHRoZSBvbGQgb25lLlxuICogQHBhcmFtIHJlc3BvbnNlIC0gQSByZXNwb25zZSBvYmplY3QgZnJvbSBjb3JlLWNsaWVudC5cbiAqIEByZXR1cm5zIEEgcmVzcG9uc2UgY29tcGF0aWJsZSB3aXRoIGBIdHRwT3BlcmF0aW9uUmVzcG9uc2VgIGZyb20gY29yZS1odHRwLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdG9Db21wYXRSZXNwb25zZShyZXNwb25zZSwgb3B0aW9ucykge1xuICAgIGxldCByZXF1ZXN0ID0gdG9XZWJSZXNvdXJjZUxpa2UocmVzcG9uc2UucmVxdWVzdCk7XG4gICAgbGV0IGhlYWRlcnMgPSB0b0h0dHBIZWFkZXJzTGlrZShyZXNwb25zZS5oZWFkZXJzKTtcbiAgICBpZiAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmNyZWF0ZVByb3h5KSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJveHkocmVzcG9uc2UsIHtcbiAgICAgICAgICAgIGdldCh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKSB7XG4gICAgICAgICAgICAgICAgaWYgKHByb3AgPT09IFwiaGVhZGVyc1wiKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBoZWFkZXJzO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChwcm9wID09PSBcInJlcXVlc3RcIikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVxdWVzdDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAocHJvcCA9PT0gb3JpZ2luYWxSZXNwb25zZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBSZWZsZWN0LmdldCh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSwgcmVjZWl2ZXIpIHtcbiAgICAgICAgICAgICAgICBpZiAocHJvcCA9PT0gXCJoZWFkZXJzXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgaGVhZGVycyA9IHZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChwcm9wID09PSBcInJlcXVlc3RcIikge1xuICAgICAgICAgICAgICAgICAgICByZXF1ZXN0ID0gdmFsdWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBSZWZsZWN0LnNldCh0YXJnZXQsIHByb3AsIHZhbHVlLCByZWNlaXZlcik7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHJlc3BvbnNlKSwgeyByZXF1ZXN0LFxuICAgICAgICAgICAgaGVhZGVycyB9KTtcbiAgICB9XG59XG4vKipcbiAqIEEgaGVscGVyIHRvIGNvbnZlcnQgYmFjayB0byBhIFBpcGVsaW5lUmVzcG9uc2VcbiAqIEBwYXJhbSBjb21wYXRSZXNwb25zZSAtIEEgcmVzcG9uc2UgY29tcGF0aWJsZSB3aXRoIGBIdHRwT3BlcmF0aW9uUmVzcG9uc2VgIGZyb20gY29yZS1odHRwLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdG9QaXBlbGluZVJlc3BvbnNlKGNvbXBhdFJlc3BvbnNlKSB7XG4gICAgY29uc3QgZXh0ZW5kZWRDb21wYXRSZXNwb25zZSA9IGNvbXBhdFJlc3BvbnNlO1xuICAgIGNvbnN0IHJlc3BvbnNlID0gZXh0ZW5kZWRDb21wYXRSZXNwb25zZVtvcmlnaW5hbFJlc3BvbnNlXTtcbiAgICBjb25zdCBoZWFkZXJzID0gY3JlYXRlSHR0cEhlYWRlcnMoY29tcGF0UmVzcG9uc2UuaGVhZGVycy50b0pzb24oeyBwcmVzZXJ2ZUNhc2U6IHRydWUgfSkpO1xuICAgIGlmIChyZXNwb25zZSkge1xuICAgICAgICByZXNwb25zZS5oZWFkZXJzID0gaGVhZGVycztcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgY29tcGF0UmVzcG9uc2UpLCB7IGhlYWRlcnMsIHJlcXVlc3Q6IHRvUGlwZWxpbmVSZXF1ZXN0KGNvbXBhdFJlc3BvbnNlLnJlcXVlc3QpIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlc3BvbnNlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-http-compat/dist/esm/response.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-http-compat/dist/esm/util.js":
/*!***************************************************************!*\
  !*** ./node_modules/@azure/core-http-compat/dist/esm/util.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpHeaders: () => (/* binding */ HttpHeaders),\n/* harmony export */   toHttpHeadersLike: () => (/* binding */ toHttpHeadersLike),\n/* harmony export */   toPipelineRequest: () => (/* binding */ toPipelineRequest),\n/* harmony export */   toWebResourceLike: () => (/* binding */ toWebResourceLike)\n/* harmony export */ });\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// We use a custom symbol to cache a reference to the original request without\n// exposing it on the public interface.\nconst originalRequestSymbol = Symbol(\"Original PipelineRequest\");\n// Symbol.for() will return the same symbol if it's already been created\n// This particular one is used in core-client to handle the case of when a request is\n// cloned but we need to retrieve the OperationSpec and OperationArguments from the\n// original request.\nconst originalClientRequestSymbol = Symbol.for(\"@azure/core-client original request\");\nfunction toPipelineRequest(webResource, options = {}) {\n    const compatWebResource = webResource;\n    const request = compatWebResource[originalRequestSymbol];\n    const headers = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createHttpHeaders)(webResource.headers.toJson({ preserveCase: true }));\n    if (request) {\n        request.headers = headers;\n        return request;\n    }\n    else {\n        const newRequest = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createPipelineRequest)({\n            url: webResource.url,\n            method: webResource.method,\n            headers,\n            withCredentials: webResource.withCredentials,\n            timeout: webResource.timeout,\n            requestId: webResource.requestId,\n            abortSignal: webResource.abortSignal,\n            body: webResource.body,\n            formData: webResource.formData,\n            disableKeepAlive: !!webResource.keepAlive,\n            onDownloadProgress: webResource.onDownloadProgress,\n            onUploadProgress: webResource.onUploadProgress,\n            proxySettings: webResource.proxySettings,\n            streamResponseStatusCodes: webResource.streamResponseStatusCodes,\n            agent: webResource.agent,\n        });\n        if (options.originalRequest) {\n            newRequest[originalClientRequestSymbol] =\n                options.originalRequest;\n        }\n        return newRequest;\n    }\n}\nfunction toWebResourceLike(request, options) {\n    var _a;\n    const originalRequest = (_a = options === null || options === void 0 ? void 0 : options.originalRequest) !== null && _a !== void 0 ? _a : request;\n    const webResource = {\n        url: request.url,\n        method: request.method,\n        headers: toHttpHeadersLike(request.headers),\n        withCredentials: request.withCredentials,\n        timeout: request.timeout,\n        requestId: request.headers.get(\"x-ms-client-request-id\") || request.requestId,\n        abortSignal: request.abortSignal,\n        body: request.body,\n        formData: request.formData,\n        keepAlive: !!request.disableKeepAlive,\n        onDownloadProgress: request.onDownloadProgress,\n        onUploadProgress: request.onUploadProgress,\n        proxySettings: request.proxySettings,\n        streamResponseStatusCodes: request.streamResponseStatusCodes,\n        agent: request.agent,\n        clone() {\n            throw new Error(\"Cannot clone a non-proxied WebResourceLike\");\n        },\n        prepare() {\n            throw new Error(\"WebResourceLike.prepare() is not supported by @azure/core-http-compat\");\n        },\n        validateRequestProperties() {\n            /** do nothing */\n        },\n    };\n    if (options === null || options === void 0 ? void 0 : options.createProxy) {\n        return new Proxy(webResource, {\n            get(target, prop, receiver) {\n                if (prop === originalRequestSymbol) {\n                    return request;\n                }\n                else if (prop === \"clone\") {\n                    return () => {\n                        return toWebResourceLike(toPipelineRequest(webResource, { originalRequest }), {\n                            createProxy: true,\n                            originalRequest,\n                        });\n                    };\n                }\n                return Reflect.get(target, prop, receiver);\n            },\n            set(target, prop, value, receiver) {\n                if (prop === \"keepAlive\") {\n                    request.disableKeepAlive = !value;\n                }\n                const passThroughProps = [\n                    \"url\",\n                    \"method\",\n                    \"withCredentials\",\n                    \"timeout\",\n                    \"requestId\",\n                    \"abortSignal\",\n                    \"body\",\n                    \"formData\",\n                    \"onDownloadProgress\",\n                    \"onUploadProgress\",\n                    \"proxySettings\",\n                    \"streamResponseStatusCodes\",\n                    \"agent\",\n                ];\n                if (typeof prop === \"string\" && passThroughProps.includes(prop)) {\n                    request[prop] = value;\n                }\n                return Reflect.set(target, prop, value, receiver);\n            },\n        });\n    }\n    else {\n        return webResource;\n    }\n}\n/**\n * Converts HttpHeaders from core-rest-pipeline to look like\n * HttpHeaders from core-http.\n * @param headers - HttpHeaders from core-rest-pipeline\n * @returns HttpHeaders as they looked in core-http\n */\nfunction toHttpHeadersLike(headers) {\n    return new HttpHeaders(headers.toJSON({ preserveCase: true }));\n}\n/**\n * A collection of HttpHeaders that can be sent with a HTTP request.\n */\nfunction getHeaderKey(headerName) {\n    return headerName.toLowerCase();\n}\n/**\n * A collection of HTTP header key/value pairs.\n */\nclass HttpHeaders {\n    constructor(rawHeaders) {\n        this._headersMap = {};\n        if (rawHeaders) {\n            for (const headerName in rawHeaders) {\n                this.set(headerName, rawHeaders[headerName]);\n            }\n        }\n    }\n    /**\n     * Set a header in this collection with the provided name and value. The name is\n     * case-insensitive.\n     * @param headerName - The name of the header to set. This value is case-insensitive.\n     * @param headerValue - The value of the header to set.\n     */\n    set(headerName, headerValue) {\n        this._headersMap[getHeaderKey(headerName)] = {\n            name: headerName,\n            value: headerValue.toString(),\n        };\n    }\n    /**\n     * Get the header value for the provided header name, or undefined if no header exists in this\n     * collection with the provided name.\n     * @param headerName - The name of the header.\n     */\n    get(headerName) {\n        const header = this._headersMap[getHeaderKey(headerName)];\n        return !header ? undefined : header.value;\n    }\n    /**\n     * Get whether or not this header collection contains a header entry for the provided header name.\n     */\n    contains(headerName) {\n        return !!this._headersMap[getHeaderKey(headerName)];\n    }\n    /**\n     * Remove the header with the provided headerName. Return whether or not the header existed and\n     * was removed.\n     * @param headerName - The name of the header to remove.\n     */\n    remove(headerName) {\n        const result = this.contains(headerName);\n        delete this._headersMap[getHeaderKey(headerName)];\n        return result;\n    }\n    /**\n     * Get the headers that are contained this collection as an object.\n     */\n    rawHeaders() {\n        return this.toJson({ preserveCase: true });\n    }\n    /**\n     * Get the headers that are contained in this collection as an array.\n     */\n    headersArray() {\n        const headers = [];\n        for (const headerKey in this._headersMap) {\n            headers.push(this._headersMap[headerKey]);\n        }\n        return headers;\n    }\n    /**\n     * Get the header names that are contained in this collection.\n     */\n    headerNames() {\n        const headerNames = [];\n        const headers = this.headersArray();\n        for (let i = 0; i < headers.length; ++i) {\n            headerNames.push(headers[i].name);\n        }\n        return headerNames;\n    }\n    /**\n     * Get the header values that are contained in this collection.\n     */\n    headerValues() {\n        const headerValues = [];\n        const headers = this.headersArray();\n        for (let i = 0; i < headers.length; ++i) {\n            headerValues.push(headers[i].value);\n        }\n        return headerValues;\n    }\n    /**\n     * Get the JSON object representation of this HTTP header collection.\n     */\n    toJson(options = {}) {\n        const result = {};\n        if (options.preserveCase) {\n            for (const headerKey in this._headersMap) {\n                const header = this._headersMap[headerKey];\n                result[header.name] = header.value;\n            }\n        }\n        else {\n            for (const headerKey in this._headersMap) {\n                const header = this._headersMap[headerKey];\n                result[getHeaderKey(header.name)] = header.value;\n            }\n        }\n        return result;\n    }\n    /**\n     * Get the string representation of this HTTP header collection.\n     */\n    toString() {\n        return JSON.stringify(this.toJson({ preserveCase: true }));\n    }\n    /**\n     * Create a deep clone/copy of this HttpHeaders collection.\n     */\n    clone() {\n        const resultPreservingCasing = {};\n        for (const headerKey in this._headersMap) {\n            const header = this._headersMap[headerKey];\n            resultPreservingCasing[header.name] = header.value;\n        }\n        return new HttpHeaders(resultPreservingCasing);\n    }\n}\n//# sourceMappingURL=util.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-http-compat/dist/esm/util.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_RETRY_POLICY_COUNT: () => (/* binding */ DEFAULT_RETRY_POLICY_COUNT),\n/* harmony export */   SDK_VERSION: () => (/* binding */ SDK_VERSION)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nconst SDK_VERSION = \"1.19.1\";\nconst DEFAULT_RETRY_POLICY_COUNT = 3;\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ087QUFDQTtBQUNQIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZSAtIEhlbGxvIFNjcmlwdCBBSVxcbGlmZUFnZW50XFx2b2ljZS1saXZlLWFnZW50XFxzYW1wbGVzXFxyZWFjdFxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtcmVzdC1waXBlbGluZVxcZGlzdFxcZXNtXFxjb25zdGFudHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5leHBvcnQgY29uc3QgU0RLX1ZFUlNJT04gPSBcIjEuMTkuMVwiO1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfUkVUUllfUE9MSUNZX0NPVU5UID0gMztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/createPipelineFromOptions.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/createPipelineFromOptions.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPipelineFromOptions: () => (/* binding */ createPipelineFromOptions)\n/* harmony export */ });\n/* harmony import */ var _policies_logPolicy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./policies/logPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/logPolicy.js\");\n/* harmony import */ var _pipeline_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pipeline.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/pipeline.js\");\n/* harmony import */ var _policies_redirectPolicy_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./policies/redirectPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/redirectPolicy.js\");\n/* harmony import */ var _policies_userAgentPolicy_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./policies/userAgentPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/userAgentPolicy.js\");\n/* harmony import */ var _policies_multipartPolicy_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./policies/multipartPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/multipartPolicy.js\");\n/* harmony import */ var _policies_decompressResponsePolicy_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./policies/decompressResponsePolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/decompressResponsePolicy.js\");\n/* harmony import */ var _policies_defaultRetryPolicy_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./policies/defaultRetryPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/defaultRetryPolicy.js\");\n/* harmony import */ var _policies_formDataPolicy_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./policies/formDataPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/formDataPolicy.js\");\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @azure/core-util */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _policies_proxyPolicy_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./policies/proxyPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/proxyPolicy.js\");\n/* harmony import */ var _policies_setClientRequestIdPolicy_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./policies/setClientRequestIdPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/setClientRequestIdPolicy.js\");\n/* harmony import */ var _policies_agentPolicy_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./policies/agentPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/agentPolicy.js\");\n/* harmony import */ var _policies_tlsPolicy_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./policies/tlsPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tlsPolicy.js\");\n/* harmony import */ var _policies_tracingPolicy_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./policies/tracingPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tracingPolicy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Create a new pipeline with a default set of customizable policies.\n * @param options - Options to configure a custom pipeline.\n */\nfunction createPipelineFromOptions(options) {\n    var _a;\n    const pipeline = (0,_pipeline_js__WEBPACK_IMPORTED_MODULE_1__.createEmptyPipeline)();\n    if (_azure_core_util__WEBPACK_IMPORTED_MODULE_8__.isNodeLike) {\n        if (options.agent) {\n            pipeline.addPolicy((0,_policies_agentPolicy_js__WEBPACK_IMPORTED_MODULE_11__.agentPolicy)(options.agent));\n        }\n        if (options.tlsOptions) {\n            pipeline.addPolicy((0,_policies_tlsPolicy_js__WEBPACK_IMPORTED_MODULE_12__.tlsPolicy)(options.tlsOptions));\n        }\n        pipeline.addPolicy((0,_policies_proxyPolicy_js__WEBPACK_IMPORTED_MODULE_9__.proxyPolicy)(options.proxyOptions));\n        pipeline.addPolicy((0,_policies_decompressResponsePolicy_js__WEBPACK_IMPORTED_MODULE_5__.decompressResponsePolicy)());\n    }\n    pipeline.addPolicy((0,_policies_formDataPolicy_js__WEBPACK_IMPORTED_MODULE_7__.formDataPolicy)(), { beforePolicies: [_policies_multipartPolicy_js__WEBPACK_IMPORTED_MODULE_4__.multipartPolicyName] });\n    pipeline.addPolicy((0,_policies_userAgentPolicy_js__WEBPACK_IMPORTED_MODULE_3__.userAgentPolicy)(options.userAgentOptions));\n    pipeline.addPolicy((0,_policies_setClientRequestIdPolicy_js__WEBPACK_IMPORTED_MODULE_10__.setClientRequestIdPolicy)((_a = options.telemetryOptions) === null || _a === void 0 ? void 0 : _a.clientRequestIdHeaderName));\n    // The multipart policy is added after policies with no phase, so that\n    // policies can be added between it and formDataPolicy to modify\n    // properties (e.g., making the boundary constant in recorded tests).\n    pipeline.addPolicy((0,_policies_multipartPolicy_js__WEBPACK_IMPORTED_MODULE_4__.multipartPolicy)(), { afterPhase: \"Deserialize\" });\n    pipeline.addPolicy((0,_policies_defaultRetryPolicy_js__WEBPACK_IMPORTED_MODULE_6__.defaultRetryPolicy)(options.retryOptions), { phase: \"Retry\" });\n    pipeline.addPolicy((0,_policies_tracingPolicy_js__WEBPACK_IMPORTED_MODULE_13__.tracingPolicy)(Object.assign(Object.assign({}, options.userAgentOptions), options.loggingOptions)), {\n        afterPhase: \"Retry\",\n    });\n    if (_azure_core_util__WEBPACK_IMPORTED_MODULE_8__.isNodeLike) {\n        // Both XHR and Fetch expect to handle redirects automatically,\n        // so only include this policy when we're in Node.\n        pipeline.addPolicy((0,_policies_redirectPolicy_js__WEBPACK_IMPORTED_MODULE_2__.redirectPolicy)(options.redirectOptions), { afterPhase: \"Retry\" });\n    }\n    pipeline.addPolicy((0,_policies_logPolicy_js__WEBPACK_IMPORTED_MODULE_0__.logPolicy)(options.loggingOptions), { afterPhase: \"Sign\" });\n    return pipeline;\n}\n//# sourceMappingURL=createPipelineFromOptions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9jcmVhdGVQaXBlbGluZUZyb21PcHRpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDb0Q7QUFDQTtBQUNVO0FBQ0U7QUFDcUI7QUFDSDtBQUNaO0FBQ1I7QUFDaEI7QUFDVTtBQUMwQjtBQUMxQjtBQUNKO0FBQ1E7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EscUJBQXFCLGlFQUFtQjtBQUN4QyxRQUFRLHdEQUFVO0FBQ2xCO0FBQ0EsK0JBQStCLHNFQUFXO0FBQzFDO0FBQ0E7QUFDQSwrQkFBK0Isa0VBQVM7QUFDeEM7QUFDQSwyQkFBMkIscUVBQVc7QUFDdEMsMkJBQTJCLCtGQUF3QjtBQUNuRDtBQUNBLHVCQUF1QiwyRUFBYyxNQUFNLGlCQUFpQiw2RUFBbUIsR0FBRztBQUNsRix1QkFBdUIsNkVBQWU7QUFDdEMsdUJBQXVCLGdHQUF3QjtBQUMvQztBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsNkVBQWUsTUFBTSwyQkFBMkI7QUFDdkUsdUJBQXVCLG1GQUFrQiwwQkFBMEIsZ0JBQWdCO0FBQ25GLHVCQUF1QiwwRUFBYSwrQkFBK0I7QUFDbkU7QUFDQSxLQUFLO0FBQ0wsUUFBUSx3REFBVTtBQUNsQjtBQUNBO0FBQ0EsMkJBQTJCLDJFQUFjLDZCQUE2QixxQkFBcUI7QUFDM0Y7QUFDQSx1QkFBdUIsaUVBQVMsNEJBQTRCLG9CQUFvQjtBQUNoRjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1yZXN0LXBpcGVsaW5lXFxkaXN0XFxlc21cXGNyZWF0ZVBpcGVsaW5lRnJvbU9wdGlvbnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBsb2dQb2xpY3kgfSBmcm9tIFwiLi9wb2xpY2llcy9sb2dQb2xpY3kuanNcIjtcbmltcG9ydCB7IGNyZWF0ZUVtcHR5UGlwZWxpbmUgfSBmcm9tIFwiLi9waXBlbGluZS5qc1wiO1xuaW1wb3J0IHsgcmVkaXJlY3RQb2xpY3kgfSBmcm9tIFwiLi9wb2xpY2llcy9yZWRpcmVjdFBvbGljeS5qc1wiO1xuaW1wb3J0IHsgdXNlckFnZW50UG9saWN5IH0gZnJvbSBcIi4vcG9saWNpZXMvdXNlckFnZW50UG9saWN5LmpzXCI7XG5pbXBvcnQgeyBtdWx0aXBhcnRQb2xpY3ksIG11bHRpcGFydFBvbGljeU5hbWUgfSBmcm9tIFwiLi9wb2xpY2llcy9tdWx0aXBhcnRQb2xpY3kuanNcIjtcbmltcG9ydCB7IGRlY29tcHJlc3NSZXNwb25zZVBvbGljeSB9IGZyb20gXCIuL3BvbGljaWVzL2RlY29tcHJlc3NSZXNwb25zZVBvbGljeS5qc1wiO1xuaW1wb3J0IHsgZGVmYXVsdFJldHJ5UG9saWN5IH0gZnJvbSBcIi4vcG9saWNpZXMvZGVmYXVsdFJldHJ5UG9saWN5LmpzXCI7XG5pbXBvcnQgeyBmb3JtRGF0YVBvbGljeSB9IGZyb20gXCIuL3BvbGljaWVzL2Zvcm1EYXRhUG9saWN5LmpzXCI7XG5pbXBvcnQgeyBpc05vZGVMaWtlIH0gZnJvbSBcIkBhenVyZS9jb3JlLXV0aWxcIjtcbmltcG9ydCB7IHByb3h5UG9saWN5IH0gZnJvbSBcIi4vcG9saWNpZXMvcHJveHlQb2xpY3kuanNcIjtcbmltcG9ydCB7IHNldENsaWVudFJlcXVlc3RJZFBvbGljeSB9IGZyb20gXCIuL3BvbGljaWVzL3NldENsaWVudFJlcXVlc3RJZFBvbGljeS5qc1wiO1xuaW1wb3J0IHsgYWdlbnRQb2xpY3kgfSBmcm9tIFwiLi9wb2xpY2llcy9hZ2VudFBvbGljeS5qc1wiO1xuaW1wb3J0IHsgdGxzUG9saWN5IH0gZnJvbSBcIi4vcG9saWNpZXMvdGxzUG9saWN5LmpzXCI7XG5pbXBvcnQgeyB0cmFjaW5nUG9saWN5IH0gZnJvbSBcIi4vcG9saWNpZXMvdHJhY2luZ1BvbGljeS5qc1wiO1xuLyoqXG4gKiBDcmVhdGUgYSBuZXcgcGlwZWxpbmUgd2l0aCBhIGRlZmF1bHQgc2V0IG9mIGN1c3RvbWl6YWJsZSBwb2xpY2llcy5cbiAqIEBwYXJhbSBvcHRpb25zIC0gT3B0aW9ucyB0byBjb25maWd1cmUgYSBjdXN0b20gcGlwZWxpbmUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQaXBlbGluZUZyb21PcHRpb25zKG9wdGlvbnMpIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3QgcGlwZWxpbmUgPSBjcmVhdGVFbXB0eVBpcGVsaW5lKCk7XG4gICAgaWYgKGlzTm9kZUxpa2UpIHtcbiAgICAgICAgaWYgKG9wdGlvbnMuYWdlbnQpIHtcbiAgICAgICAgICAgIHBpcGVsaW5lLmFkZFBvbGljeShhZ2VudFBvbGljeShvcHRpb25zLmFnZW50KSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wdGlvbnMudGxzT3B0aW9ucykge1xuICAgICAgICAgICAgcGlwZWxpbmUuYWRkUG9saWN5KHRsc1BvbGljeShvcHRpb25zLnRsc09wdGlvbnMpKTtcbiAgICAgICAgfVxuICAgICAgICBwaXBlbGluZS5hZGRQb2xpY3kocHJveHlQb2xpY3kob3B0aW9ucy5wcm94eU9wdGlvbnMpKTtcbiAgICAgICAgcGlwZWxpbmUuYWRkUG9saWN5KGRlY29tcHJlc3NSZXNwb25zZVBvbGljeSgpKTtcbiAgICB9XG4gICAgcGlwZWxpbmUuYWRkUG9saWN5KGZvcm1EYXRhUG9saWN5KCksIHsgYmVmb3JlUG9saWNpZXM6IFttdWx0aXBhcnRQb2xpY3lOYW1lXSB9KTtcbiAgICBwaXBlbGluZS5hZGRQb2xpY3kodXNlckFnZW50UG9saWN5KG9wdGlvbnMudXNlckFnZW50T3B0aW9ucykpO1xuICAgIHBpcGVsaW5lLmFkZFBvbGljeShzZXRDbGllbnRSZXF1ZXN0SWRQb2xpY3koKF9hID0gb3B0aW9ucy50ZWxlbWV0cnlPcHRpb25zKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY2xpZW50UmVxdWVzdElkSGVhZGVyTmFtZSkpO1xuICAgIC8vIFRoZSBtdWx0aXBhcnQgcG9saWN5IGlzIGFkZGVkIGFmdGVyIHBvbGljaWVzIHdpdGggbm8gcGhhc2UsIHNvIHRoYXRcbiAgICAvLyBwb2xpY2llcyBjYW4gYmUgYWRkZWQgYmV0d2VlbiBpdCBhbmQgZm9ybURhdGFQb2xpY3kgdG8gbW9kaWZ5XG4gICAgLy8gcHJvcGVydGllcyAoZS5nLiwgbWFraW5nIHRoZSBib3VuZGFyeSBjb25zdGFudCBpbiByZWNvcmRlZCB0ZXN0cykuXG4gICAgcGlwZWxpbmUuYWRkUG9saWN5KG11bHRpcGFydFBvbGljeSgpLCB7IGFmdGVyUGhhc2U6IFwiRGVzZXJpYWxpemVcIiB9KTtcbiAgICBwaXBlbGluZS5hZGRQb2xpY3koZGVmYXVsdFJldHJ5UG9saWN5KG9wdGlvbnMucmV0cnlPcHRpb25zKSwgeyBwaGFzZTogXCJSZXRyeVwiIH0pO1xuICAgIHBpcGVsaW5lLmFkZFBvbGljeSh0cmFjaW5nUG9saWN5KE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucy51c2VyQWdlbnRPcHRpb25zKSwgb3B0aW9ucy5sb2dnaW5nT3B0aW9ucykpLCB7XG4gICAgICAgIGFmdGVyUGhhc2U6IFwiUmV0cnlcIixcbiAgICB9KTtcbiAgICBpZiAoaXNOb2RlTGlrZSkge1xuICAgICAgICAvLyBCb3RoIFhIUiBhbmQgRmV0Y2ggZXhwZWN0IHRvIGhhbmRsZSByZWRpcmVjdHMgYXV0b21hdGljYWxseSxcbiAgICAgICAgLy8gc28gb25seSBpbmNsdWRlIHRoaXMgcG9saWN5IHdoZW4gd2UncmUgaW4gTm9kZS5cbiAgICAgICAgcGlwZWxpbmUuYWRkUG9saWN5KHJlZGlyZWN0UG9saWN5KG9wdGlvbnMucmVkaXJlY3RPcHRpb25zKSwgeyBhZnRlclBoYXNlOiBcIlJldHJ5XCIgfSk7XG4gICAgfVxuICAgIHBpcGVsaW5lLmFkZFBvbGljeShsb2dQb2xpY3kob3B0aW9ucy5sb2dnaW5nT3B0aW9ucyksIHsgYWZ0ZXJQaGFzZTogXCJTaWduXCIgfSk7XG4gICAgcmV0dXJuIHBpcGVsaW5lO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3JlYXRlUGlwZWxpbmVGcm9tT3B0aW9ucy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/createPipelineFromOptions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/defaultHttpClient.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/defaultHttpClient.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDefaultHttpClient: () => (/* binding */ createDefaultHttpClient)\n/* harmony export */ });\n/* harmony import */ var _nodeHttpClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./nodeHttpClient.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/nodeHttpClient.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Create the correct HttpClient for the current environment.\n */\nfunction createDefaultHttpClient() {\n    return (0,_nodeHttpClient_js__WEBPACK_IMPORTED_MODULE_0__.createNodeHttpClient)();\n}\n//# sourceMappingURL=defaultHttpClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9kZWZhdWx0SHR0cENsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDMkQ7QUFDM0Q7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLHdFQUFvQjtBQUMvQjtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZSAtIEhlbGxvIFNjcmlwdCBBSVxcbGlmZUFnZW50XFx2b2ljZS1saXZlLWFnZW50XFxzYW1wbGVzXFxyZWFjdFxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtcmVzdC1waXBlbGluZVxcZGlzdFxcZXNtXFxkZWZhdWx0SHR0cENsaWVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGNyZWF0ZU5vZGVIdHRwQ2xpZW50IH0gZnJvbSBcIi4vbm9kZUh0dHBDbGllbnQuanNcIjtcbi8qKlxuICogQ3JlYXRlIHRoZSBjb3JyZWN0IEh0dHBDbGllbnQgZm9yIHRoZSBjdXJyZW50IGVudmlyb25tZW50LlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRGVmYXVsdEh0dHBDbGllbnQoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZU5vZGVIdHRwQ2xpZW50KCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWZhdWx0SHR0cENsaWVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/defaultHttpClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/httpHeaders.js":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/httpHeaders.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createHttpHeaders: () => (/* binding */ createHttpHeaders)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nfunction normalizeName(name) {\n    return name.toLowerCase();\n}\nfunction* headerIterator(map) {\n    for (const entry of map.values()) {\n        yield [entry.name, entry.value];\n    }\n}\nclass HttpHeadersImpl {\n    constructor(rawHeaders) {\n        this._headersMap = new Map();\n        if (rawHeaders) {\n            for (const headerName of Object.keys(rawHeaders)) {\n                this.set(headerName, rawHeaders[headerName]);\n            }\n        }\n    }\n    /**\n     * Set a header in this collection with the provided name and value. The name is\n     * case-insensitive.\n     * @param name - The name of the header to set. This value is case-insensitive.\n     * @param value - The value of the header to set.\n     */\n    set(name, value) {\n        this._headersMap.set(normalizeName(name), { name, value: String(value).trim() });\n    }\n    /**\n     * Get the header value for the provided header name, or undefined if no header exists in this\n     * collection with the provided name.\n     * @param name - The name of the header. This value is case-insensitive.\n     */\n    get(name) {\n        var _a;\n        return (_a = this._headersMap.get(normalizeName(name))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    /**\n     * Get whether or not this header collection contains a header entry for the provided header name.\n     * @param name - The name of the header to set. This value is case-insensitive.\n     */\n    has(name) {\n        return this._headersMap.has(normalizeName(name));\n    }\n    /**\n     * Remove the header with the provided headerName.\n     * @param name - The name of the header to remove.\n     */\n    delete(name) {\n        this._headersMap.delete(normalizeName(name));\n    }\n    /**\n     * Get the JSON object representation of this HTTP header collection.\n     */\n    toJSON(options = {}) {\n        const result = {};\n        if (options.preserveCase) {\n            for (const entry of this._headersMap.values()) {\n                result[entry.name] = entry.value;\n            }\n        }\n        else {\n            for (const [normalizedName, entry] of this._headersMap) {\n                result[normalizedName] = entry.value;\n            }\n        }\n        return result;\n    }\n    /**\n     * Get the string representation of this HTTP header collection.\n     */\n    toString() {\n        return JSON.stringify(this.toJSON({ preserveCase: true }));\n    }\n    /**\n     * Iterate over tuples of header [name, value] pairs.\n     */\n    [Symbol.iterator]() {\n        return headerIterator(this._headersMap);\n    }\n}\n/**\n * Creates an object that satisfies the `HttpHeaders` interface.\n * @param rawHeaders - A simple object representing initial headers\n */\nfunction createHttpHeaders(rawHeaders) {\n    return new HttpHeadersImpl(rawHeaders);\n}\n//# sourceMappingURL=httpHeaders.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9odHRwSGVhZGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxtQ0FBbUM7QUFDdkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsb0JBQW9CO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZSAtIEhlbGxvIFNjcmlwdCBBSVxcbGlmZUFnZW50XFx2b2ljZS1saXZlLWFnZW50XFxzYW1wbGVzXFxyZWFjdFxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtcmVzdC1waXBlbGluZVxcZGlzdFxcZXNtXFxodHRwSGVhZGVycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmZ1bmN0aW9uIG5vcm1hbGl6ZU5hbWUobmFtZSkge1xuICAgIHJldHVybiBuYW1lLnRvTG93ZXJDYXNlKCk7XG59XG5mdW5jdGlvbiogaGVhZGVySXRlcmF0b3IobWFwKSB7XG4gICAgZm9yIChjb25zdCBlbnRyeSBvZiBtYXAudmFsdWVzKCkpIHtcbiAgICAgICAgeWllbGQgW2VudHJ5Lm5hbWUsIGVudHJ5LnZhbHVlXTtcbiAgICB9XG59XG5jbGFzcyBIdHRwSGVhZGVyc0ltcGwge1xuICAgIGNvbnN0cnVjdG9yKHJhd0hlYWRlcnMpIHtcbiAgICAgICAgdGhpcy5faGVhZGVyc01hcCA9IG5ldyBNYXAoKTtcbiAgICAgICAgaWYgKHJhd0hlYWRlcnMpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgaGVhZGVyTmFtZSBvZiBPYmplY3Qua2V5cyhyYXdIZWFkZXJzKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0KGhlYWRlck5hbWUsIHJhd0hlYWRlcnNbaGVhZGVyTmFtZV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNldCBhIGhlYWRlciBpbiB0aGlzIGNvbGxlY3Rpb24gd2l0aCB0aGUgcHJvdmlkZWQgbmFtZSBhbmQgdmFsdWUuIFRoZSBuYW1lIGlzXG4gICAgICogY2FzZS1pbnNlbnNpdGl2ZS5cbiAgICAgKiBAcGFyYW0gbmFtZSAtIFRoZSBuYW1lIG9mIHRoZSBoZWFkZXIgdG8gc2V0LiBUaGlzIHZhbHVlIGlzIGNhc2UtaW5zZW5zaXRpdmUuXG4gICAgICogQHBhcmFtIHZhbHVlIC0gVGhlIHZhbHVlIG9mIHRoZSBoZWFkZXIgdG8gc2V0LlxuICAgICAqL1xuICAgIHNldChuYW1lLCB2YWx1ZSkge1xuICAgICAgICB0aGlzLl9oZWFkZXJzTWFwLnNldChub3JtYWxpemVOYW1lKG5hbWUpLCB7IG5hbWUsIHZhbHVlOiBTdHJpbmcodmFsdWUpLnRyaW0oKSB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBoZWFkZXIgdmFsdWUgZm9yIHRoZSBwcm92aWRlZCBoZWFkZXIgbmFtZSwgb3IgdW5kZWZpbmVkIGlmIG5vIGhlYWRlciBleGlzdHMgaW4gdGhpc1xuICAgICAqIGNvbGxlY3Rpb24gd2l0aCB0aGUgcHJvdmlkZWQgbmFtZS5cbiAgICAgKiBAcGFyYW0gbmFtZSAtIFRoZSBuYW1lIG9mIHRoZSBoZWFkZXIuIFRoaXMgdmFsdWUgaXMgY2FzZS1pbnNlbnNpdGl2ZS5cbiAgICAgKi9cbiAgICBnZXQobmFtZSkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHJldHVybiAoX2EgPSB0aGlzLl9oZWFkZXJzTWFwLmdldChub3JtYWxpemVOYW1lKG5hbWUpKSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnZhbHVlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgd2hldGhlciBvciBub3QgdGhpcyBoZWFkZXIgY29sbGVjdGlvbiBjb250YWlucyBhIGhlYWRlciBlbnRyeSBmb3IgdGhlIHByb3ZpZGVkIGhlYWRlciBuYW1lLlxuICAgICAqIEBwYXJhbSBuYW1lIC0gVGhlIG5hbWUgb2YgdGhlIGhlYWRlciB0byBzZXQuIFRoaXMgdmFsdWUgaXMgY2FzZS1pbnNlbnNpdGl2ZS5cbiAgICAgKi9cbiAgICBoYXMobmFtZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5faGVhZGVyc01hcC5oYXMobm9ybWFsaXplTmFtZShuYW1lKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlbW92ZSB0aGUgaGVhZGVyIHdpdGggdGhlIHByb3ZpZGVkIGhlYWRlck5hbWUuXG4gICAgICogQHBhcmFtIG5hbWUgLSBUaGUgbmFtZSBvZiB0aGUgaGVhZGVyIHRvIHJlbW92ZS5cbiAgICAgKi9cbiAgICBkZWxldGUobmFtZSkge1xuICAgICAgICB0aGlzLl9oZWFkZXJzTWFwLmRlbGV0ZShub3JtYWxpemVOYW1lKG5hbWUpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBKU09OIG9iamVjdCByZXByZXNlbnRhdGlvbiBvZiB0aGlzIEhUVFAgaGVhZGVyIGNvbGxlY3Rpb24uXG4gICAgICovXG4gICAgdG9KU09OKG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSB7fTtcbiAgICAgICAgaWYgKG9wdGlvbnMucHJlc2VydmVDYXNlKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGVudHJ5IG9mIHRoaXMuX2hlYWRlcnNNYXAudmFsdWVzKCkpIHtcbiAgICAgICAgICAgICAgICByZXN1bHRbZW50cnkubmFtZV0gPSBlbnRyeS52YWx1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgW25vcm1hbGl6ZWROYW1lLCBlbnRyeV0gb2YgdGhpcy5faGVhZGVyc01hcCkge1xuICAgICAgICAgICAgICAgIHJlc3VsdFtub3JtYWxpemVkTmFtZV0gPSBlbnRyeS52YWx1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGlzIEhUVFAgaGVhZGVyIGNvbGxlY3Rpb24uXG4gICAgICovXG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh0aGlzLnRvSlNPTih7IHByZXNlcnZlQ2FzZTogdHJ1ZSB9KSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEl0ZXJhdGUgb3ZlciB0dXBsZXMgb2YgaGVhZGVyIFtuYW1lLCB2YWx1ZV0gcGFpcnMuXG4gICAgICovXG4gICAgW1N5bWJvbC5pdGVyYXRvcl0oKSB7XG4gICAgICAgIHJldHVybiBoZWFkZXJJdGVyYXRvcih0aGlzLl9oZWFkZXJzTWFwKTtcbiAgICB9XG59XG4vKipcbiAqIENyZWF0ZXMgYW4gb2JqZWN0IHRoYXQgc2F0aXNmaWVzIHRoZSBgSHR0cEhlYWRlcnNgIGludGVyZmFjZS5cbiAqIEBwYXJhbSByYXdIZWFkZXJzIC0gQSBzaW1wbGUgb2JqZWN0IHJlcHJlc2VudGluZyBpbml0aWFsIGhlYWRlcnNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUh0dHBIZWFkZXJzKHJhd0hlYWRlcnMpIHtcbiAgICByZXR1cm4gbmV3IEh0dHBIZWFkZXJzSW1wbChyYXdIZWFkZXJzKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWh0dHBIZWFkZXJzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/httpHeaders.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RestError: () => (/* reexport safe */ _restError_js__WEBPACK_IMPORTED_MODULE_5__.RestError),\n/* harmony export */   agentPolicy: () => (/* reexport safe */ _policies_agentPolicy_js__WEBPACK_IMPORTED_MODULE_24__.agentPolicy),\n/* harmony export */   agentPolicyName: () => (/* reexport safe */ _policies_agentPolicy_js__WEBPACK_IMPORTED_MODULE_24__.agentPolicyName),\n/* harmony export */   auxiliaryAuthenticationHeaderPolicy: () => (/* reexport safe */ _policies_auxiliaryAuthenticationHeaderPolicy_js__WEBPACK_IMPORTED_MODULE_23__.auxiliaryAuthenticationHeaderPolicy),\n/* harmony export */   auxiliaryAuthenticationHeaderPolicyName: () => (/* reexport safe */ _policies_auxiliaryAuthenticationHeaderPolicy_js__WEBPACK_IMPORTED_MODULE_23__.auxiliaryAuthenticationHeaderPolicyName),\n/* harmony export */   bearerTokenAuthenticationPolicy: () => (/* reexport safe */ _policies_bearerTokenAuthenticationPolicy_js__WEBPACK_IMPORTED_MODULE_21__.bearerTokenAuthenticationPolicy),\n/* harmony export */   bearerTokenAuthenticationPolicyName: () => (/* reexport safe */ _policies_bearerTokenAuthenticationPolicy_js__WEBPACK_IMPORTED_MODULE_21__.bearerTokenAuthenticationPolicyName),\n/* harmony export */   createDefaultHttpClient: () => (/* reexport safe */ _defaultHttpClient_js__WEBPACK_IMPORTED_MODULE_2__.createDefaultHttpClient),\n/* harmony export */   createEmptyPipeline: () => (/* reexport safe */ _pipeline_js__WEBPACK_IMPORTED_MODULE_0__.createEmptyPipeline),\n/* harmony export */   createFile: () => (/* reexport safe */ _util_file_js__WEBPACK_IMPORTED_MODULE_25__.createFile),\n/* harmony export */   createFileFromStream: () => (/* reexport safe */ _util_file_js__WEBPACK_IMPORTED_MODULE_25__.createFileFromStream),\n/* harmony export */   createHttpHeaders: () => (/* reexport safe */ _httpHeaders_js__WEBPACK_IMPORTED_MODULE_3__.createHttpHeaders),\n/* harmony export */   createPipelineFromOptions: () => (/* reexport safe */ _createPipelineFromOptions_js__WEBPACK_IMPORTED_MODULE_1__.createPipelineFromOptions),\n/* harmony export */   createPipelineRequest: () => (/* reexport safe */ _pipelineRequest_js__WEBPACK_IMPORTED_MODULE_4__.createPipelineRequest),\n/* harmony export */   decompressResponsePolicy: () => (/* reexport safe */ _policies_decompressResponsePolicy_js__WEBPACK_IMPORTED_MODULE_6__.decompressResponsePolicy),\n/* harmony export */   decompressResponsePolicyName: () => (/* reexport safe */ _policies_decompressResponsePolicy_js__WEBPACK_IMPORTED_MODULE_6__.decompressResponsePolicyName),\n/* harmony export */   defaultRetryPolicy: () => (/* reexport safe */ _policies_defaultRetryPolicy_js__WEBPACK_IMPORTED_MODULE_17__.defaultRetryPolicy),\n/* harmony export */   exponentialRetryPolicy: () => (/* reexport safe */ _policies_exponentialRetryPolicy_js__WEBPACK_IMPORTED_MODULE_7__.exponentialRetryPolicy),\n/* harmony export */   exponentialRetryPolicyName: () => (/* reexport safe */ _policies_exponentialRetryPolicy_js__WEBPACK_IMPORTED_MODULE_7__.exponentialRetryPolicyName),\n/* harmony export */   formDataPolicy: () => (/* reexport safe */ _policies_formDataPolicy_js__WEBPACK_IMPORTED_MODULE_20__.formDataPolicy),\n/* harmony export */   formDataPolicyName: () => (/* reexport safe */ _policies_formDataPolicy_js__WEBPACK_IMPORTED_MODULE_20__.formDataPolicyName),\n/* harmony export */   getDefaultProxySettings: () => (/* reexport safe */ _policies_proxyPolicy_js__WEBPACK_IMPORTED_MODULE_11__.getDefaultProxySettings),\n/* harmony export */   isRestError: () => (/* reexport safe */ _restError_js__WEBPACK_IMPORTED_MODULE_5__.isRestError),\n/* harmony export */   logPolicy: () => (/* reexport safe */ _policies_logPolicy_js__WEBPACK_IMPORTED_MODULE_9__.logPolicy),\n/* harmony export */   logPolicyName: () => (/* reexport safe */ _policies_logPolicy_js__WEBPACK_IMPORTED_MODULE_9__.logPolicyName),\n/* harmony export */   multipartPolicy: () => (/* reexport safe */ _policies_multipartPolicy_js__WEBPACK_IMPORTED_MODULE_10__.multipartPolicy),\n/* harmony export */   multipartPolicyName: () => (/* reexport safe */ _policies_multipartPolicy_js__WEBPACK_IMPORTED_MODULE_10__.multipartPolicyName),\n/* harmony export */   ndJsonPolicy: () => (/* reexport safe */ _policies_ndJsonPolicy_js__WEBPACK_IMPORTED_MODULE_22__.ndJsonPolicy),\n/* harmony export */   ndJsonPolicyName: () => (/* reexport safe */ _policies_ndJsonPolicy_js__WEBPACK_IMPORTED_MODULE_22__.ndJsonPolicyName),\n/* harmony export */   proxyPolicy: () => (/* reexport safe */ _policies_proxyPolicy_js__WEBPACK_IMPORTED_MODULE_11__.proxyPolicy),\n/* harmony export */   proxyPolicyName: () => (/* reexport safe */ _policies_proxyPolicy_js__WEBPACK_IMPORTED_MODULE_11__.proxyPolicyName),\n/* harmony export */   redirectPolicy: () => (/* reexport safe */ _policies_redirectPolicy_js__WEBPACK_IMPORTED_MODULE_12__.redirectPolicy),\n/* harmony export */   redirectPolicyName: () => (/* reexport safe */ _policies_redirectPolicy_js__WEBPACK_IMPORTED_MODULE_12__.redirectPolicyName),\n/* harmony export */   retryPolicy: () => (/* reexport safe */ _policies_retryPolicy_js__WEBPACK_IMPORTED_MODULE_15__.retryPolicy),\n/* harmony export */   setClientRequestIdPolicy: () => (/* reexport safe */ _policies_setClientRequestIdPolicy_js__WEBPACK_IMPORTED_MODULE_8__.setClientRequestIdPolicy),\n/* harmony export */   setClientRequestIdPolicyName: () => (/* reexport safe */ _policies_setClientRequestIdPolicy_js__WEBPACK_IMPORTED_MODULE_8__.setClientRequestIdPolicyName),\n/* harmony export */   systemErrorRetryPolicy: () => (/* reexport safe */ _policies_systemErrorRetryPolicy_js__WEBPACK_IMPORTED_MODULE_13__.systemErrorRetryPolicy),\n/* harmony export */   systemErrorRetryPolicyName: () => (/* reexport safe */ _policies_systemErrorRetryPolicy_js__WEBPACK_IMPORTED_MODULE_13__.systemErrorRetryPolicyName),\n/* harmony export */   throttlingRetryPolicy: () => (/* reexport safe */ _policies_throttlingRetryPolicy_js__WEBPACK_IMPORTED_MODULE_14__.throttlingRetryPolicy),\n/* harmony export */   throttlingRetryPolicyName: () => (/* reexport safe */ _policies_throttlingRetryPolicy_js__WEBPACK_IMPORTED_MODULE_14__.throttlingRetryPolicyName),\n/* harmony export */   tlsPolicy: () => (/* reexport safe */ _policies_tlsPolicy_js__WEBPACK_IMPORTED_MODULE_19__.tlsPolicy),\n/* harmony export */   tlsPolicyName: () => (/* reexport safe */ _policies_tlsPolicy_js__WEBPACK_IMPORTED_MODULE_19__.tlsPolicyName),\n/* harmony export */   tracingPolicy: () => (/* reexport safe */ _policies_tracingPolicy_js__WEBPACK_IMPORTED_MODULE_16__.tracingPolicy),\n/* harmony export */   tracingPolicyName: () => (/* reexport safe */ _policies_tracingPolicy_js__WEBPACK_IMPORTED_MODULE_16__.tracingPolicyName),\n/* harmony export */   userAgentPolicy: () => (/* reexport safe */ _policies_userAgentPolicy_js__WEBPACK_IMPORTED_MODULE_18__.userAgentPolicy),\n/* harmony export */   userAgentPolicyName: () => (/* reexport safe */ _policies_userAgentPolicy_js__WEBPACK_IMPORTED_MODULE_18__.userAgentPolicyName)\n/* harmony export */ });\n/* harmony import */ var _pipeline_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pipeline.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/pipeline.js\");\n/* harmony import */ var _createPipelineFromOptions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./createPipelineFromOptions.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/createPipelineFromOptions.js\");\n/* harmony import */ var _defaultHttpClient_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./defaultHttpClient.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/defaultHttpClient.js\");\n/* harmony import */ var _httpHeaders_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./httpHeaders.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/httpHeaders.js\");\n/* harmony import */ var _pipelineRequest_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pipelineRequest.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/pipelineRequest.js\");\n/* harmony import */ var _restError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./restError.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/restError.js\");\n/* harmony import */ var _policies_decompressResponsePolicy_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./policies/decompressResponsePolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/decompressResponsePolicy.js\");\n/* harmony import */ var _policies_exponentialRetryPolicy_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./policies/exponentialRetryPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/exponentialRetryPolicy.js\");\n/* harmony import */ var _policies_setClientRequestIdPolicy_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./policies/setClientRequestIdPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/setClientRequestIdPolicy.js\");\n/* harmony import */ var _policies_logPolicy_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./policies/logPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/logPolicy.js\");\n/* harmony import */ var _policies_multipartPolicy_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./policies/multipartPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/multipartPolicy.js\");\n/* harmony import */ var _policies_proxyPolicy_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./policies/proxyPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/proxyPolicy.js\");\n/* harmony import */ var _policies_redirectPolicy_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./policies/redirectPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/redirectPolicy.js\");\n/* harmony import */ var _policies_systemErrorRetryPolicy_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./policies/systemErrorRetryPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/systemErrorRetryPolicy.js\");\n/* harmony import */ var _policies_throttlingRetryPolicy_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./policies/throttlingRetryPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/throttlingRetryPolicy.js\");\n/* harmony import */ var _policies_retryPolicy_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./policies/retryPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/retryPolicy.js\");\n/* harmony import */ var _policies_tracingPolicy_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./policies/tracingPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tracingPolicy.js\");\n/* harmony import */ var _policies_defaultRetryPolicy_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./policies/defaultRetryPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/defaultRetryPolicy.js\");\n/* harmony import */ var _policies_userAgentPolicy_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./policies/userAgentPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/userAgentPolicy.js\");\n/* harmony import */ var _policies_tlsPolicy_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./policies/tlsPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tlsPolicy.js\");\n/* harmony import */ var _policies_formDataPolicy_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./policies/formDataPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/formDataPolicy.js\");\n/* harmony import */ var _policies_bearerTokenAuthenticationPolicy_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./policies/bearerTokenAuthenticationPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/bearerTokenAuthenticationPolicy.js\");\n/* harmony import */ var _policies_ndJsonPolicy_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./policies/ndJsonPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/ndJsonPolicy.js\");\n/* harmony import */ var _policies_auxiliaryAuthenticationHeaderPolicy_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./policies/auxiliaryAuthenticationHeaderPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/auxiliaryAuthenticationHeaderPolicy.js\");\n/* harmony import */ var _policies_agentPolicy_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./policies/agentPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/agentPolicy.js\");\n/* harmony import */ var _util_file_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./util/file.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/file.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ3FEO0FBQ3VCO0FBQ1g7QUFDWjtBQUNRO0FBQ0w7QUFDeUQ7QUFDTjtBQUNNO0FBQzlDO0FBQ2tCO0FBQ2E7QUFDZjtBQUN3QjtBQUNIO0FBQ2hEO0FBQ3dCO0FBQ1Q7QUFDZTtBQUNuQjtBQUNlO0FBQ29EO0FBQzFEO0FBQ3NFO0FBQ3pFO0FBQ047QUFDbkUiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1yZXN0LXBpcGVsaW5lXFxkaXN0XFxlc21cXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuZXhwb3J0IHsgY3JlYXRlRW1wdHlQaXBlbGluZSwgfSBmcm9tIFwiLi9waXBlbGluZS5qc1wiO1xuZXhwb3J0IHsgY3JlYXRlUGlwZWxpbmVGcm9tT3B0aW9ucywgfSBmcm9tIFwiLi9jcmVhdGVQaXBlbGluZUZyb21PcHRpb25zLmpzXCI7XG5leHBvcnQgeyBjcmVhdGVEZWZhdWx0SHR0cENsaWVudCB9IGZyb20gXCIuL2RlZmF1bHRIdHRwQ2xpZW50LmpzXCI7XG5leHBvcnQgeyBjcmVhdGVIdHRwSGVhZGVycyB9IGZyb20gXCIuL2h0dHBIZWFkZXJzLmpzXCI7XG5leHBvcnQgeyBjcmVhdGVQaXBlbGluZVJlcXVlc3QgfSBmcm9tIFwiLi9waXBlbGluZVJlcXVlc3QuanNcIjtcbmV4cG9ydCB7IFJlc3RFcnJvciwgaXNSZXN0RXJyb3IgfSBmcm9tIFwiLi9yZXN0RXJyb3IuanNcIjtcbmV4cG9ydCB7IGRlY29tcHJlc3NSZXNwb25zZVBvbGljeSwgZGVjb21wcmVzc1Jlc3BvbnNlUG9saWN5TmFtZSwgfSBmcm9tIFwiLi9wb2xpY2llcy9kZWNvbXByZXNzUmVzcG9uc2VQb2xpY3kuanNcIjtcbmV4cG9ydCB7IGV4cG9uZW50aWFsUmV0cnlQb2xpY3ksIGV4cG9uZW50aWFsUmV0cnlQb2xpY3lOYW1lLCB9IGZyb20gXCIuL3BvbGljaWVzL2V4cG9uZW50aWFsUmV0cnlQb2xpY3kuanNcIjtcbmV4cG9ydCB7IHNldENsaWVudFJlcXVlc3RJZFBvbGljeSwgc2V0Q2xpZW50UmVxdWVzdElkUG9saWN5TmFtZSwgfSBmcm9tIFwiLi9wb2xpY2llcy9zZXRDbGllbnRSZXF1ZXN0SWRQb2xpY3kuanNcIjtcbmV4cG9ydCB7IGxvZ1BvbGljeSwgbG9nUG9saWN5TmFtZSB9IGZyb20gXCIuL3BvbGljaWVzL2xvZ1BvbGljeS5qc1wiO1xuZXhwb3J0IHsgbXVsdGlwYXJ0UG9saWN5LCBtdWx0aXBhcnRQb2xpY3lOYW1lIH0gZnJvbSBcIi4vcG9saWNpZXMvbXVsdGlwYXJ0UG9saWN5LmpzXCI7XG5leHBvcnQgeyBwcm94eVBvbGljeSwgcHJveHlQb2xpY3lOYW1lLCBnZXREZWZhdWx0UHJveHlTZXR0aW5ncyB9IGZyb20gXCIuL3BvbGljaWVzL3Byb3h5UG9saWN5LmpzXCI7XG5leHBvcnQgeyByZWRpcmVjdFBvbGljeSwgcmVkaXJlY3RQb2xpY3lOYW1lLCB9IGZyb20gXCIuL3BvbGljaWVzL3JlZGlyZWN0UG9saWN5LmpzXCI7XG5leHBvcnQgeyBzeXN0ZW1FcnJvclJldHJ5UG9saWN5LCBzeXN0ZW1FcnJvclJldHJ5UG9saWN5TmFtZSwgfSBmcm9tIFwiLi9wb2xpY2llcy9zeXN0ZW1FcnJvclJldHJ5UG9saWN5LmpzXCI7XG5leHBvcnQgeyB0aHJvdHRsaW5nUmV0cnlQb2xpY3ksIHRocm90dGxpbmdSZXRyeVBvbGljeU5hbWUsIH0gZnJvbSBcIi4vcG9saWNpZXMvdGhyb3R0bGluZ1JldHJ5UG9saWN5LmpzXCI7XG5leHBvcnQgeyByZXRyeVBvbGljeSB9IGZyb20gXCIuL3BvbGljaWVzL3JldHJ5UG9saWN5LmpzXCI7XG5leHBvcnQgeyB0cmFjaW5nUG9saWN5LCB0cmFjaW5nUG9saWN5TmFtZSwgfSBmcm9tIFwiLi9wb2xpY2llcy90cmFjaW5nUG9saWN5LmpzXCI7XG5leHBvcnQgeyBkZWZhdWx0UmV0cnlQb2xpY3ksIH0gZnJvbSBcIi4vcG9saWNpZXMvZGVmYXVsdFJldHJ5UG9saWN5LmpzXCI7XG5leHBvcnQgeyB1c2VyQWdlbnRQb2xpY3ksIHVzZXJBZ2VudFBvbGljeU5hbWUsIH0gZnJvbSBcIi4vcG9saWNpZXMvdXNlckFnZW50UG9saWN5LmpzXCI7XG5leHBvcnQgeyB0bHNQb2xpY3ksIHRsc1BvbGljeU5hbWUgfSBmcm9tIFwiLi9wb2xpY2llcy90bHNQb2xpY3kuanNcIjtcbmV4cG9ydCB7IGZvcm1EYXRhUG9saWN5LCBmb3JtRGF0YVBvbGljeU5hbWUgfSBmcm9tIFwiLi9wb2xpY2llcy9mb3JtRGF0YVBvbGljeS5qc1wiO1xuZXhwb3J0IHsgYmVhcmVyVG9rZW5BdXRoZW50aWNhdGlvblBvbGljeSwgYmVhcmVyVG9rZW5BdXRoZW50aWNhdGlvblBvbGljeU5hbWUsIH0gZnJvbSBcIi4vcG9saWNpZXMvYmVhcmVyVG9rZW5BdXRoZW50aWNhdGlvblBvbGljeS5qc1wiO1xuZXhwb3J0IHsgbmRKc29uUG9saWN5LCBuZEpzb25Qb2xpY3lOYW1lIH0gZnJvbSBcIi4vcG9saWNpZXMvbmRKc29uUG9saWN5LmpzXCI7XG5leHBvcnQgeyBhdXhpbGlhcnlBdXRoZW50aWNhdGlvbkhlYWRlclBvbGljeSwgYXV4aWxpYXJ5QXV0aGVudGljYXRpb25IZWFkZXJQb2xpY3lOYW1lLCB9IGZyb20gXCIuL3BvbGljaWVzL2F1eGlsaWFyeUF1dGhlbnRpY2F0aW9uSGVhZGVyUG9saWN5LmpzXCI7XG5leHBvcnQgeyBhZ2VudFBvbGljeSwgYWdlbnRQb2xpY3lOYW1lIH0gZnJvbSBcIi4vcG9saWNpZXMvYWdlbnRQb2xpY3kuanNcIjtcbmV4cG9ydCB7IGNyZWF0ZUZpbGUsIGNyZWF0ZUZpbGVGcm9tU3RyZWFtLCB9IGZyb20gXCIuL3V0aWwvZmlsZS5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/log.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/logger */ \"(ssr)/./node_modules/@azure/logger/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nconst logger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_0__.createClientLogger)(\"core-rest-pipeline\");\n//# sourceMappingURL=log.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9sb2cuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ21EO0FBQzVDLGVBQWUsaUVBQWtCO0FBQ3hDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZSAtIEhlbGxvIFNjcmlwdCBBSVxcbGlmZUFnZW50XFx2b2ljZS1saXZlLWFnZW50XFxzYW1wbGVzXFxyZWFjdFxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtcmVzdC1waXBlbGluZVxcZGlzdFxcZXNtXFxsb2cuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBjcmVhdGVDbGllbnRMb2dnZXIgfSBmcm9tIFwiQGF6dXJlL2xvZ2dlclwiO1xuZXhwb3J0IGNvbnN0IGxvZ2dlciA9IGNyZWF0ZUNsaWVudExvZ2dlcihcImNvcmUtcmVzdC1waXBlbGluZVwiKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvZy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/nodeHttpClient.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/nodeHttpClient.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNodeHttpClient: () => (/* binding */ createNodeHttpClient),\n/* harmony export */   getBodyLength: () => (/* binding */ getBodyLength)\n/* harmony export */ });\n/* harmony import */ var node_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:http */ \"node:http\");\n/* harmony import */ var node_https__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node:https */ \"node:https\");\n/* harmony import */ var node_zlib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! node:zlib */ \"node:zlib\");\n/* harmony import */ var node_stream__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! node:stream */ \"node:stream\");\n/* harmony import */ var _azure_abort_controller__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/abort-controller */ \"(ssr)/./node_modules/@azure/abort-controller/dist/esm/index.js\");\n/* harmony import */ var _httpHeaders_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./httpHeaders.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/httpHeaders.js\");\n/* harmony import */ var _restError_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./restError.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/restError.js\");\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./log.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js\");\n/* harmony import */ var _util_sanitizer_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./util/sanitizer.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/sanitizer.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n\nconst DEFAULT_TLS_SETTINGS = {};\nfunction isReadableStream(body) {\n    return body && typeof body.pipe === \"function\";\n}\nfunction isStreamComplete(stream) {\n    if (stream.readable === false) {\n        return Promise.resolve();\n    }\n    return new Promise((resolve) => {\n        const handler = () => {\n            resolve();\n            stream.removeListener(\"close\", handler);\n            stream.removeListener(\"end\", handler);\n            stream.removeListener(\"error\", handler);\n        };\n        stream.on(\"close\", handler);\n        stream.on(\"end\", handler);\n        stream.on(\"error\", handler);\n    });\n}\nfunction isArrayBuffer(body) {\n    return body && typeof body.byteLength === \"number\";\n}\nclass ReportTransform extends node_stream__WEBPACK_IMPORTED_MODULE_3__.Transform {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\n    _transform(chunk, _encoding, callback) {\n        this.push(chunk);\n        this.loadedBytes += chunk.length;\n        try {\n            this.progressCallback({ loadedBytes: this.loadedBytes });\n            callback();\n        }\n        catch (e) {\n            callback(e);\n        }\n    }\n    constructor(progressCallback) {\n        super();\n        this.loadedBytes = 0;\n        this.progressCallback = progressCallback;\n    }\n}\n/**\n * A HttpClient implementation that uses Node's \"https\" module to send HTTPS requests.\n * @internal\n */\nclass NodeHttpClient {\n    constructor() {\n        this.cachedHttpsAgents = new WeakMap();\n    }\n    /**\n     * Makes a request over an underlying transport layer and returns the response.\n     * @param request - The request to be made.\n     */\n    async sendRequest(request) {\n        var _a, _b, _c;\n        const abortController = new AbortController();\n        let abortListener;\n        if (request.abortSignal) {\n            if (request.abortSignal.aborted) {\n                throw new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_4__.AbortError(\"The operation was aborted. Request has already been canceled.\");\n            }\n            abortListener = (event) => {\n                if (event.type === \"abort\") {\n                    abortController.abort();\n                }\n            };\n            request.abortSignal.addEventListener(\"abort\", abortListener);\n        }\n        let timeoutId;\n        if (request.timeout > 0) {\n            timeoutId = setTimeout(() => {\n                const sanitizer = new _util_sanitizer_js__WEBPACK_IMPORTED_MODULE_8__.Sanitizer();\n                _log_js__WEBPACK_IMPORTED_MODULE_7__.logger.info(`request to '${sanitizer.sanitizeUrl(request.url)}' timed out. canceling...`);\n                abortController.abort();\n            }, request.timeout);\n        }\n        const acceptEncoding = request.headers.get(\"Accept-Encoding\");\n        const shouldDecompress = (acceptEncoding === null || acceptEncoding === void 0 ? void 0 : acceptEncoding.includes(\"gzip\")) || (acceptEncoding === null || acceptEncoding === void 0 ? void 0 : acceptEncoding.includes(\"deflate\"));\n        let body = typeof request.body === \"function\" ? request.body() : request.body;\n        if (body && !request.headers.has(\"Content-Length\")) {\n            const bodyLength = getBodyLength(body);\n            if (bodyLength !== null) {\n                request.headers.set(\"Content-Length\", bodyLength);\n            }\n        }\n        let responseStream;\n        try {\n            if (body && request.onUploadProgress) {\n                const onUploadProgress = request.onUploadProgress;\n                const uploadReportStream = new ReportTransform(onUploadProgress);\n                uploadReportStream.on(\"error\", (e) => {\n                    _log_js__WEBPACK_IMPORTED_MODULE_7__.logger.error(\"Error in upload progress\", e);\n                });\n                if (isReadableStream(body)) {\n                    body.pipe(uploadReportStream);\n                }\n                else {\n                    uploadReportStream.end(body);\n                }\n                body = uploadReportStream;\n            }\n            const res = await this.makeRequest(request, abortController, body);\n            if (timeoutId !== undefined) {\n                clearTimeout(timeoutId);\n            }\n            const headers = getResponseHeaders(res);\n            const status = (_a = res.statusCode) !== null && _a !== void 0 ? _a : 0;\n            const response = {\n                status,\n                headers,\n                request,\n            };\n            // Responses to HEAD must not have a body.\n            // If they do return a body, that body must be ignored.\n            if (request.method === \"HEAD\") {\n                // call resume() and not destroy() to avoid closing the socket\n                // and losing keep alive\n                res.resume();\n                return response;\n            }\n            responseStream = shouldDecompress ? getDecodedResponseStream(res, headers) : res;\n            const onDownloadProgress = request.onDownloadProgress;\n            if (onDownloadProgress) {\n                const downloadReportStream = new ReportTransform(onDownloadProgress);\n                downloadReportStream.on(\"error\", (e) => {\n                    _log_js__WEBPACK_IMPORTED_MODULE_7__.logger.error(\"Error in download progress\", e);\n                });\n                responseStream.pipe(downloadReportStream);\n                responseStream = downloadReportStream;\n            }\n            if (\n            // Value of POSITIVE_INFINITY in streamResponseStatusCodes is considered as any status code\n            ((_b = request.streamResponseStatusCodes) === null || _b === void 0 ? void 0 : _b.has(Number.POSITIVE_INFINITY)) ||\n                ((_c = request.streamResponseStatusCodes) === null || _c === void 0 ? void 0 : _c.has(response.status))) {\n                response.readableStreamBody = responseStream;\n            }\n            else {\n                response.bodyAsText = await streamToText(responseStream);\n            }\n            return response;\n        }\n        finally {\n            // clean up event listener\n            if (request.abortSignal && abortListener) {\n                let uploadStreamDone = Promise.resolve();\n                if (isReadableStream(body)) {\n                    uploadStreamDone = isStreamComplete(body);\n                }\n                let downloadStreamDone = Promise.resolve();\n                if (isReadableStream(responseStream)) {\n                    downloadStreamDone = isStreamComplete(responseStream);\n                }\n                Promise.all([uploadStreamDone, downloadStreamDone])\n                    .then(() => {\n                    var _a;\n                    // eslint-disable-next-line promise/always-return\n                    if (abortListener) {\n                        (_a = request.abortSignal) === null || _a === void 0 ? void 0 : _a.removeEventListener(\"abort\", abortListener);\n                    }\n                })\n                    .catch((e) => {\n                    _log_js__WEBPACK_IMPORTED_MODULE_7__.logger.warning(\"Error when cleaning up abortListener on httpRequest\", e);\n                });\n            }\n        }\n    }\n    makeRequest(request, abortController, body) {\n        var _a;\n        const url = new URL(request.url);\n        const isInsecure = url.protocol !== \"https:\";\n        if (isInsecure && !request.allowInsecureConnection) {\n            throw new Error(`Cannot connect to ${request.url} while allowInsecureConnection is false.`);\n        }\n        const agent = (_a = request.agent) !== null && _a !== void 0 ? _a : this.getOrCreateAgent(request, isInsecure);\n        const options = {\n            agent,\n            hostname: url.hostname,\n            path: `${url.pathname}${url.search}`,\n            port: url.port,\n            method: request.method,\n            headers: request.headers.toJSON({ preserveCase: true }),\n        };\n        return new Promise((resolve, reject) => {\n            const req = isInsecure ? node_http__WEBPACK_IMPORTED_MODULE_0__.request(options, resolve) : node_https__WEBPACK_IMPORTED_MODULE_1__.request(options, resolve);\n            req.once(\"error\", (err) => {\n                var _a;\n                reject(new _restError_js__WEBPACK_IMPORTED_MODULE_6__.RestError(err.message, { code: (_a = err.code) !== null && _a !== void 0 ? _a : _restError_js__WEBPACK_IMPORTED_MODULE_6__.RestError.REQUEST_SEND_ERROR, request }));\n            });\n            abortController.signal.addEventListener(\"abort\", () => {\n                const abortError = new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_4__.AbortError(\"The operation was aborted. Rejecting from abort signal callback while making request.\");\n                req.destroy(abortError);\n                reject(abortError);\n            });\n            if (body && isReadableStream(body)) {\n                body.pipe(req);\n            }\n            else if (body) {\n                if (typeof body === \"string\" || Buffer.isBuffer(body)) {\n                    req.end(body);\n                }\n                else if (isArrayBuffer(body)) {\n                    req.end(ArrayBuffer.isView(body) ? Buffer.from(body.buffer) : Buffer.from(body));\n                }\n                else {\n                    _log_js__WEBPACK_IMPORTED_MODULE_7__.logger.error(\"Unrecognized body type\", body);\n                    reject(new _restError_js__WEBPACK_IMPORTED_MODULE_6__.RestError(\"Unrecognized body type\"));\n                }\n            }\n            else {\n                // streams don't like \"undefined\" being passed as data\n                req.end();\n            }\n        });\n    }\n    getOrCreateAgent(request, isInsecure) {\n        var _a;\n        const disableKeepAlive = request.disableKeepAlive;\n        // Handle Insecure requests first\n        if (isInsecure) {\n            if (disableKeepAlive) {\n                // keepAlive:false is the default so we don't need a custom Agent\n                return node_http__WEBPACK_IMPORTED_MODULE_0__.globalAgent;\n            }\n            if (!this.cachedHttpAgent) {\n                // If there is no cached agent create a new one and cache it.\n                this.cachedHttpAgent = new node_http__WEBPACK_IMPORTED_MODULE_0__.Agent({ keepAlive: true });\n            }\n            return this.cachedHttpAgent;\n        }\n        else {\n            if (disableKeepAlive && !request.tlsSettings) {\n                // When there are no tlsSettings and keepAlive is false\n                // we don't need a custom agent\n                return node_https__WEBPACK_IMPORTED_MODULE_1__.globalAgent;\n            }\n            // We use the tlsSettings to index cached clients\n            const tlsSettings = (_a = request.tlsSettings) !== null && _a !== void 0 ? _a : DEFAULT_TLS_SETTINGS;\n            // Get the cached agent or create a new one with the\n            // provided values for keepAlive and tlsSettings\n            let agent = this.cachedHttpsAgents.get(tlsSettings);\n            if (agent && agent.options.keepAlive === !disableKeepAlive) {\n                return agent;\n            }\n            _log_js__WEBPACK_IMPORTED_MODULE_7__.logger.info(\"No cached TLS Agent exist, creating a new Agent\");\n            agent = new node_https__WEBPACK_IMPORTED_MODULE_1__.Agent(Object.assign({ \n                // keepAlive is true if disableKeepAlive is false.\n                keepAlive: !disableKeepAlive }, tlsSettings));\n            this.cachedHttpsAgents.set(tlsSettings, agent);\n            return agent;\n        }\n    }\n}\nfunction getResponseHeaders(res) {\n    const headers = (0,_httpHeaders_js__WEBPACK_IMPORTED_MODULE_5__.createHttpHeaders)();\n    for (const header of Object.keys(res.headers)) {\n        const value = res.headers[header];\n        if (Array.isArray(value)) {\n            if (value.length > 0) {\n                headers.set(header, value[0]);\n            }\n        }\n        else if (value) {\n            headers.set(header, value);\n        }\n    }\n    return headers;\n}\nfunction getDecodedResponseStream(stream, headers) {\n    const contentEncoding = headers.get(\"Content-Encoding\");\n    if (contentEncoding === \"gzip\") {\n        const unzip = node_zlib__WEBPACK_IMPORTED_MODULE_2__.createGunzip();\n        stream.pipe(unzip);\n        return unzip;\n    }\n    else if (contentEncoding === \"deflate\") {\n        const inflate = node_zlib__WEBPACK_IMPORTED_MODULE_2__.createInflate();\n        stream.pipe(inflate);\n        return inflate;\n    }\n    return stream;\n}\nfunction streamToText(stream) {\n    return new Promise((resolve, reject) => {\n        const buffer = [];\n        stream.on(\"data\", (chunk) => {\n            if (Buffer.isBuffer(chunk)) {\n                buffer.push(chunk);\n            }\n            else {\n                buffer.push(Buffer.from(chunk));\n            }\n        });\n        stream.on(\"end\", () => {\n            resolve(Buffer.concat(buffer).toString(\"utf8\"));\n        });\n        stream.on(\"error\", (e) => {\n            if (e && (e === null || e === void 0 ? void 0 : e.name) === \"AbortError\") {\n                reject(e);\n            }\n            else {\n                reject(new _restError_js__WEBPACK_IMPORTED_MODULE_6__.RestError(`Error reading response as text: ${e.message}`, {\n                    code: _restError_js__WEBPACK_IMPORTED_MODULE_6__.RestError.PARSE_ERROR,\n                }));\n            }\n        });\n    });\n}\n/** @internal */\nfunction getBodyLength(body) {\n    if (!body) {\n        return 0;\n    }\n    else if (Buffer.isBuffer(body)) {\n        return body.length;\n    }\n    else if (isReadableStream(body)) {\n        return null;\n    }\n    else if (isArrayBuffer(body)) {\n        return body.byteLength;\n    }\n    else if (typeof body === \"string\") {\n        return Buffer.from(body).length;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * Create a new HttpClient instance for the NodeJS environment.\n * @internal\n */\nfunction createNodeHttpClient() {\n    return new NodeHttpClient();\n}\n//# sourceMappingURL=nodeHttpClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/nodeHttpClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/pipeline.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/pipeline.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createEmptyPipeline: () => (/* binding */ createEmptyPipeline)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nconst ValidPhaseNames = new Set([\"Deserialize\", \"Serialize\", \"Retry\", \"Sign\"]);\n/**\n * A private implementation of Pipeline.\n * Do not export this class from the package.\n * @internal\n */\nclass HttpPipeline {\n    constructor(policies) {\n        var _a;\n        this._policies = [];\n        this._policies = (_a = policies === null || policies === void 0 ? void 0 : policies.slice(0)) !== null && _a !== void 0 ? _a : [];\n        this._orderedPolicies = undefined;\n    }\n    addPolicy(policy, options = {}) {\n        if (options.phase && options.afterPhase) {\n            throw new Error(\"Policies inside a phase cannot specify afterPhase.\");\n        }\n        if (options.phase && !ValidPhaseNames.has(options.phase)) {\n            throw new Error(`Invalid phase name: ${options.phase}`);\n        }\n        if (options.afterPhase && !ValidPhaseNames.has(options.afterPhase)) {\n            throw new Error(`Invalid afterPhase name: ${options.afterPhase}`);\n        }\n        this._policies.push({\n            policy,\n            options,\n        });\n        this._orderedPolicies = undefined;\n    }\n    removePolicy(options) {\n        const removedPolicies = [];\n        this._policies = this._policies.filter((policyDescriptor) => {\n            if ((options.name && policyDescriptor.policy.name === options.name) ||\n                (options.phase && policyDescriptor.options.phase === options.phase)) {\n                removedPolicies.push(policyDescriptor.policy);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n        this._orderedPolicies = undefined;\n        return removedPolicies;\n    }\n    sendRequest(httpClient, request) {\n        const policies = this.getOrderedPolicies();\n        const pipeline = policies.reduceRight((next, policy) => {\n            return (req) => {\n                return policy.sendRequest(req, next);\n            };\n        }, (req) => httpClient.sendRequest(req));\n        return pipeline(request);\n    }\n    getOrderedPolicies() {\n        if (!this._orderedPolicies) {\n            this._orderedPolicies = this.orderPolicies();\n        }\n        return this._orderedPolicies;\n    }\n    clone() {\n        return new HttpPipeline(this._policies);\n    }\n    static create() {\n        return new HttpPipeline();\n    }\n    orderPolicies() {\n        /**\n         * The goal of this method is to reliably order pipeline policies\n         * based on their declared requirements when they were added.\n         *\n         * Order is first determined by phase:\n         *\n         * 1. Serialize Phase\n         * 2. Policies not in a phase\n         * 3. Deserialize Phase\n         * 4. Retry Phase\n         * 5. Sign Phase\n         *\n         * Within each phase, policies are executed in the order\n         * they were added unless they were specified to execute\n         * before/after other policies or after a particular phase.\n         *\n         * To determine the final order, we will walk the policy list\n         * in phase order multiple times until all dependencies are\n         * satisfied.\n         *\n         * `afterPolicies` are the set of policies that must be\n         * executed before a given policy. This requirement is\n         * considered satisfied when each of the listed policies\n         * have been scheduled.\n         *\n         * `beforePolicies` are the set of policies that must be\n         * executed after a given policy. Since this dependency\n         * can be expressed by converting it into a equivalent\n         * `afterPolicies` declarations, they are normalized\n         * into that form for simplicity.\n         *\n         * An `afterPhase` dependency is considered satisfied when all\n         * policies in that phase have scheduled.\n         *\n         */\n        const result = [];\n        // Track all policies we know about.\n        const policyMap = new Map();\n        function createPhase(name) {\n            return {\n                name,\n                policies: new Set(),\n                hasRun: false,\n                hasAfterPolicies: false,\n            };\n        }\n        // Track policies for each phase.\n        const serializePhase = createPhase(\"Serialize\");\n        const noPhase = createPhase(\"None\");\n        const deserializePhase = createPhase(\"Deserialize\");\n        const retryPhase = createPhase(\"Retry\");\n        const signPhase = createPhase(\"Sign\");\n        // a list of phases in order\n        const orderedPhases = [serializePhase, noPhase, deserializePhase, retryPhase, signPhase];\n        // Small helper function to map phase name to each Phase\n        function getPhase(phase) {\n            if (phase === \"Retry\") {\n                return retryPhase;\n            }\n            else if (phase === \"Serialize\") {\n                return serializePhase;\n            }\n            else if (phase === \"Deserialize\") {\n                return deserializePhase;\n            }\n            else if (phase === \"Sign\") {\n                return signPhase;\n            }\n            else {\n                return noPhase;\n            }\n        }\n        // First walk each policy and create a node to track metadata.\n        for (const descriptor of this._policies) {\n            const policy = descriptor.policy;\n            const options = descriptor.options;\n            const policyName = policy.name;\n            if (policyMap.has(policyName)) {\n                throw new Error(\"Duplicate policy names not allowed in pipeline\");\n            }\n            const node = {\n                policy,\n                dependsOn: new Set(),\n                dependants: new Set(),\n            };\n            if (options.afterPhase) {\n                node.afterPhase = getPhase(options.afterPhase);\n                node.afterPhase.hasAfterPolicies = true;\n            }\n            policyMap.set(policyName, node);\n            const phase = getPhase(options.phase);\n            phase.policies.add(node);\n        }\n        // Now that each policy has a node, connect dependency references.\n        for (const descriptor of this._policies) {\n            const { policy, options } = descriptor;\n            const policyName = policy.name;\n            const node = policyMap.get(policyName);\n            if (!node) {\n                throw new Error(`Missing node for policy ${policyName}`);\n            }\n            if (options.afterPolicies) {\n                for (const afterPolicyName of options.afterPolicies) {\n                    const afterNode = policyMap.get(afterPolicyName);\n                    if (afterNode) {\n                        // Linking in both directions helps later\n                        // when we want to notify dependants.\n                        node.dependsOn.add(afterNode);\n                        afterNode.dependants.add(node);\n                    }\n                }\n            }\n            if (options.beforePolicies) {\n                for (const beforePolicyName of options.beforePolicies) {\n                    const beforeNode = policyMap.get(beforePolicyName);\n                    if (beforeNode) {\n                        // To execute before another node, make it\n                        // depend on the current node.\n                        beforeNode.dependsOn.add(node);\n                        node.dependants.add(beforeNode);\n                    }\n                }\n            }\n        }\n        function walkPhase(phase) {\n            phase.hasRun = true;\n            // Sets iterate in insertion order\n            for (const node of phase.policies) {\n                if (node.afterPhase && (!node.afterPhase.hasRun || node.afterPhase.policies.size)) {\n                    // If this node is waiting on a phase to complete,\n                    // we need to skip it for now.\n                    // Even if the phase is empty, we should wait for it\n                    // to be walked to avoid re-ordering policies.\n                    continue;\n                }\n                if (node.dependsOn.size === 0) {\n                    // If there's nothing else we're waiting for, we can\n                    // add this policy to the result list.\n                    result.push(node.policy);\n                    // Notify anything that depends on this policy that\n                    // the policy has been scheduled.\n                    for (const dependant of node.dependants) {\n                        dependant.dependsOn.delete(node);\n                    }\n                    policyMap.delete(node.policy.name);\n                    phase.policies.delete(node);\n                }\n            }\n        }\n        function walkPhases() {\n            for (const phase of orderedPhases) {\n                walkPhase(phase);\n                // if the phase isn't complete\n                if (phase.policies.size > 0 && phase !== noPhase) {\n                    if (!noPhase.hasRun) {\n                        // Try running noPhase to see if that unblocks this phase next tick.\n                        // This can happen if a phase that happens before noPhase\n                        // is waiting on a noPhase policy to complete.\n                        walkPhase(noPhase);\n                    }\n                    // Don't proceed to the next phase until this phase finishes.\n                    return;\n                }\n                if (phase.hasAfterPolicies) {\n                    // Run any policies unblocked by this phase\n                    walkPhase(noPhase);\n                }\n            }\n        }\n        // Iterate until we've put every node in the result list.\n        let iteration = 0;\n        while (policyMap.size > 0) {\n            iteration++;\n            const initialResultLength = result.length;\n            // Keep walking each phase in order until we can order every node.\n            walkPhases();\n            // The result list *should* get at least one larger each time\n            // after the first full pass.\n            // Otherwise, we're going to loop forever.\n            if (result.length <= initialResultLength && iteration > 1) {\n                throw new Error(\"Cannot satisfy policy dependencies due to requirements cycle.\");\n            }\n        }\n        return result;\n    }\n}\n/**\n * Creates a totally empty pipeline.\n * Useful for testing or creating a custom one.\n */\nfunction createEmptyPipeline() {\n    return HttpPipeline.create();\n}\n//# sourceMappingURL=pipeline.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/pipeline.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/pipelineRequest.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/pipelineRequest.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPipelineRequest: () => (/* binding */ createPipelineRequest)\n/* harmony export */ });\n/* harmony import */ var _httpHeaders_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./httpHeaders.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/httpHeaders.js\");\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/core-util */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\nclass PipelineRequestImpl {\n    constructor(options) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        this.url = options.url;\n        this.body = options.body;\n        this.headers = (_a = options.headers) !== null && _a !== void 0 ? _a : (0,_httpHeaders_js__WEBPACK_IMPORTED_MODULE_0__.createHttpHeaders)();\n        this.method = (_b = options.method) !== null && _b !== void 0 ? _b : \"GET\";\n        this.timeout = (_c = options.timeout) !== null && _c !== void 0 ? _c : 0;\n        this.multipartBody = options.multipartBody;\n        this.formData = options.formData;\n        this.disableKeepAlive = (_d = options.disableKeepAlive) !== null && _d !== void 0 ? _d : false;\n        this.proxySettings = options.proxySettings;\n        this.streamResponseStatusCodes = options.streamResponseStatusCodes;\n        this.withCredentials = (_e = options.withCredentials) !== null && _e !== void 0 ? _e : false;\n        this.abortSignal = options.abortSignal;\n        this.tracingOptions = options.tracingOptions;\n        this.onUploadProgress = options.onUploadProgress;\n        this.onDownloadProgress = options.onDownloadProgress;\n        this.requestId = options.requestId || (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_1__.randomUUID)();\n        this.allowInsecureConnection = (_f = options.allowInsecureConnection) !== null && _f !== void 0 ? _f : false;\n        this.enableBrowserStreams = (_g = options.enableBrowserStreams) !== null && _g !== void 0 ? _g : false;\n        this.agent = options.agent;\n        this.tlsSettings = options.tlsSettings;\n    }\n}\n/**\n * Creates a new pipeline request with the given options.\n * This method is to allow for the easy setting of default values and not required.\n * @param options - The options to create the request with.\n */\nfunction createPipelineRequest(options) {\n    return new PipelineRequestImpl(options);\n}\n//# sourceMappingURL=pipelineRequest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9waXBlbGluZVJlcXVlc3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNxRDtBQUNQO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrRUFBK0Usa0VBQWlCO0FBQ2hHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4Qyw0REFBVTtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1yZXN0LXBpcGVsaW5lXFxkaXN0XFxlc21cXHBpcGVsaW5lUmVxdWVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGNyZWF0ZUh0dHBIZWFkZXJzIH0gZnJvbSBcIi4vaHR0cEhlYWRlcnMuanNcIjtcbmltcG9ydCB7IHJhbmRvbVVVSUQgfSBmcm9tIFwiQGF6dXJlL2NvcmUtdXRpbFwiO1xuY2xhc3MgUGlwZWxpbmVSZXF1ZXN0SW1wbCB7XG4gICAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgICAgICB2YXIgX2EsIF9iLCBfYywgX2QsIF9lLCBfZiwgX2c7XG4gICAgICAgIHRoaXMudXJsID0gb3B0aW9ucy51cmw7XG4gICAgICAgIHRoaXMuYm9keSA9IG9wdGlvbnMuYm9keTtcbiAgICAgICAgdGhpcy5oZWFkZXJzID0gKF9hID0gb3B0aW9ucy5oZWFkZXJzKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBjcmVhdGVIdHRwSGVhZGVycygpO1xuICAgICAgICB0aGlzLm1ldGhvZCA9IChfYiA9IG9wdGlvbnMubWV0aG9kKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBcIkdFVFwiO1xuICAgICAgICB0aGlzLnRpbWVvdXQgPSAoX2MgPSBvcHRpb25zLnRpbWVvdXQpICE9PSBudWxsICYmIF9jICE9PSB2b2lkIDAgPyBfYyA6IDA7XG4gICAgICAgIHRoaXMubXVsdGlwYXJ0Qm9keSA9IG9wdGlvbnMubXVsdGlwYXJ0Qm9keTtcbiAgICAgICAgdGhpcy5mb3JtRGF0YSA9IG9wdGlvbnMuZm9ybURhdGE7XG4gICAgICAgIHRoaXMuZGlzYWJsZUtlZXBBbGl2ZSA9IChfZCA9IG9wdGlvbnMuZGlzYWJsZUtlZXBBbGl2ZSkgIT09IG51bGwgJiYgX2QgIT09IHZvaWQgMCA/IF9kIDogZmFsc2U7XG4gICAgICAgIHRoaXMucHJveHlTZXR0aW5ncyA9IG9wdGlvbnMucHJveHlTZXR0aW5ncztcbiAgICAgICAgdGhpcy5zdHJlYW1SZXNwb25zZVN0YXR1c0NvZGVzID0gb3B0aW9ucy5zdHJlYW1SZXNwb25zZVN0YXR1c0NvZGVzO1xuICAgICAgICB0aGlzLndpdGhDcmVkZW50aWFscyA9IChfZSA9IG9wdGlvbnMud2l0aENyZWRlbnRpYWxzKSAhPT0gbnVsbCAmJiBfZSAhPT0gdm9pZCAwID8gX2UgOiBmYWxzZTtcbiAgICAgICAgdGhpcy5hYm9ydFNpZ25hbCA9IG9wdGlvbnMuYWJvcnRTaWduYWw7XG4gICAgICAgIHRoaXMudHJhY2luZ09wdGlvbnMgPSBvcHRpb25zLnRyYWNpbmdPcHRpb25zO1xuICAgICAgICB0aGlzLm9uVXBsb2FkUHJvZ3Jlc3MgPSBvcHRpb25zLm9uVXBsb2FkUHJvZ3Jlc3M7XG4gICAgICAgIHRoaXMub25Eb3dubG9hZFByb2dyZXNzID0gb3B0aW9ucy5vbkRvd25sb2FkUHJvZ3Jlc3M7XG4gICAgICAgIHRoaXMucmVxdWVzdElkID0gb3B0aW9ucy5yZXF1ZXN0SWQgfHwgcmFuZG9tVVVJRCgpO1xuICAgICAgICB0aGlzLmFsbG93SW5zZWN1cmVDb25uZWN0aW9uID0gKF9mID0gb3B0aW9ucy5hbGxvd0luc2VjdXJlQ29ubmVjdGlvbikgIT09IG51bGwgJiYgX2YgIT09IHZvaWQgMCA/IF9mIDogZmFsc2U7XG4gICAgICAgIHRoaXMuZW5hYmxlQnJvd3NlclN0cmVhbXMgPSAoX2cgPSBvcHRpb25zLmVuYWJsZUJyb3dzZXJTdHJlYW1zKSAhPT0gbnVsbCAmJiBfZyAhPT0gdm9pZCAwID8gX2cgOiBmYWxzZTtcbiAgICAgICAgdGhpcy5hZ2VudCA9IG9wdGlvbnMuYWdlbnQ7XG4gICAgICAgIHRoaXMudGxzU2V0dGluZ3MgPSBvcHRpb25zLnRsc1NldHRpbmdzO1xuICAgIH1cbn1cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBwaXBlbGluZSByZXF1ZXN0IHdpdGggdGhlIGdpdmVuIG9wdGlvbnMuXG4gKiBUaGlzIG1ldGhvZCBpcyB0byBhbGxvdyBmb3IgdGhlIGVhc3kgc2V0dGluZyBvZiBkZWZhdWx0IHZhbHVlcyBhbmQgbm90IHJlcXVpcmVkLlxuICogQHBhcmFtIG9wdGlvbnMgLSBUaGUgb3B0aW9ucyB0byBjcmVhdGUgdGhlIHJlcXVlc3Qgd2l0aC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVBpcGVsaW5lUmVxdWVzdChvcHRpb25zKSB7XG4gICAgcmV0dXJuIG5ldyBQaXBlbGluZVJlcXVlc3RJbXBsKG9wdGlvbnMpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGlwZWxpbmVSZXF1ZXN0LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/pipelineRequest.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/agentPolicy.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/agentPolicy.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   agentPolicy: () => (/* binding */ agentPolicy),\n/* harmony export */   agentPolicyName: () => (/* binding */ agentPolicyName)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Name of the Agent Policy\n */\nconst agentPolicyName = \"agentPolicy\";\n/**\n * Gets a pipeline policy that sets http.agent\n */\nfunction agentPolicy(agent) {\n    return {\n        name: agentPolicyName,\n        sendRequest: async (req, next) => {\n            // Users may define an agent on the request, honor it over the client level one\n            if (!req.agent) {\n                req.agent = agent;\n            }\n            return next(req);\n        },\n    };\n}\n//# sourceMappingURL=agentPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9hZ2VudFBvbGljeS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1yZXN0LXBpcGVsaW5lXFxkaXN0XFxlc21cXHBvbGljaWVzXFxhZ2VudFBvbGljeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbi8qKlxuICogTmFtZSBvZiB0aGUgQWdlbnQgUG9saWN5XG4gKi9cbmV4cG9ydCBjb25zdCBhZ2VudFBvbGljeU5hbWUgPSBcImFnZW50UG9saWN5XCI7XG4vKipcbiAqIEdldHMgYSBwaXBlbGluZSBwb2xpY3kgdGhhdCBzZXRzIGh0dHAuYWdlbnRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFnZW50UG9saWN5KGFnZW50KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogYWdlbnRQb2xpY3lOYW1lLFxuICAgICAgICBzZW5kUmVxdWVzdDogYXN5bmMgKHJlcSwgbmV4dCkgPT4ge1xuICAgICAgICAgICAgLy8gVXNlcnMgbWF5IGRlZmluZSBhbiBhZ2VudCBvbiB0aGUgcmVxdWVzdCwgaG9ub3IgaXQgb3ZlciB0aGUgY2xpZW50IGxldmVsIG9uZVxuICAgICAgICAgICAgaWYgKCFyZXEuYWdlbnQpIHtcbiAgICAgICAgICAgICAgICByZXEuYWdlbnQgPSBhZ2VudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBuZXh0KHJlcSk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFnZW50UG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/agentPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/auxiliaryAuthenticationHeaderPolicy.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/auxiliaryAuthenticationHeaderPolicy.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   auxiliaryAuthenticationHeaderPolicy: () => (/* binding */ auxiliaryAuthenticationHeaderPolicy),\n/* harmony export */   auxiliaryAuthenticationHeaderPolicyName: () => (/* binding */ auxiliaryAuthenticationHeaderPolicyName)\n/* harmony export */ });\n/* harmony import */ var _util_tokenCycler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/tokenCycler.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/tokenCycler.js\");\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../log.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * The programmatic identifier of the auxiliaryAuthenticationHeaderPolicy.\n */\nconst auxiliaryAuthenticationHeaderPolicyName = \"auxiliaryAuthenticationHeaderPolicy\";\nconst AUTHORIZATION_AUXILIARY_HEADER = \"x-ms-authorization-auxiliary\";\nasync function sendAuthorizeRequest(options) {\n    var _a, _b;\n    const { scopes, getAccessToken, request } = options;\n    const getTokenOptions = {\n        abortSignal: request.abortSignal,\n        tracingOptions: request.tracingOptions,\n    };\n    return (_b = (_a = (await getAccessToken(scopes, getTokenOptions))) === null || _a === void 0 ? void 0 : _a.token) !== null && _b !== void 0 ? _b : \"\";\n}\n/**\n * A policy for external tokens to `x-ms-authorization-auxiliary` header.\n * This header will be used when creating a cross-tenant application we may need to handle authentication requests\n * for resources that are in different tenants.\n * You could see [ARM docs](https://learn.microsoft.com/en-us/azure/azure-resource-manager/management/authenticate-multi-tenant) for a rundown of how this feature works\n */\nfunction auxiliaryAuthenticationHeaderPolicy(options) {\n    const { credentials, scopes } = options;\n    const logger = options.logger || _log_js__WEBPACK_IMPORTED_MODULE_1__.logger;\n    const tokenCyclerMap = new WeakMap();\n    return {\n        name: auxiliaryAuthenticationHeaderPolicyName,\n        async sendRequest(request, next) {\n            if (!request.url.toLowerCase().startsWith(\"https://\")) {\n                throw new Error(\"Bearer token authentication for auxiliary header is not permitted for non-TLS protected (non-https) URLs.\");\n            }\n            if (!credentials || credentials.length === 0) {\n                logger.info(`${auxiliaryAuthenticationHeaderPolicyName} header will not be set due to empty credentials.`);\n                return next(request);\n            }\n            const tokenPromises = [];\n            for (const credential of credentials) {\n                let getAccessToken = tokenCyclerMap.get(credential);\n                if (!getAccessToken) {\n                    getAccessToken = (0,_util_tokenCycler_js__WEBPACK_IMPORTED_MODULE_0__.createTokenCycler)(credential);\n                    tokenCyclerMap.set(credential, getAccessToken);\n                }\n                tokenPromises.push(sendAuthorizeRequest({\n                    scopes: Array.isArray(scopes) ? scopes : [scopes],\n                    request,\n                    getAccessToken,\n                    logger,\n                }));\n            }\n            const auxiliaryTokens = (await Promise.all(tokenPromises)).filter((token) => Boolean(token));\n            if (auxiliaryTokens.length === 0) {\n                logger.warning(`None of the auxiliary tokens are valid. ${AUTHORIZATION_AUXILIARY_HEADER} header will not be set.`);\n                return next(request);\n            }\n            request.headers.set(AUTHORIZATION_AUXILIARY_HEADER, auxiliaryTokens.map((token) => `Bearer ${token}`).join(\", \"));\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=auxiliaryAuthenticationHeaderPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9hdXhpbGlhcnlBdXRoZW50aWNhdGlvbkhlYWRlclBvbGljeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUMyRDtBQUNWO0FBQ2pEO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsWUFBWSxrQ0FBa0M7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxZQUFZLHNCQUFzQjtBQUNsQyxxQ0FBcUMsMkNBQVU7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQix5Q0FBeUM7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLHVFQUFpQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSwwRUFBMEUsZ0NBQWdDO0FBQzFHO0FBQ0E7QUFDQSx5R0FBeUcsTUFBTTtBQUMvRztBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1yZXN0LXBpcGVsaW5lXFxkaXN0XFxlc21cXHBvbGljaWVzXFxhdXhpbGlhcnlBdXRoZW50aWNhdGlvbkhlYWRlclBvbGljeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGNyZWF0ZVRva2VuQ3ljbGVyIH0gZnJvbSBcIi4uL3V0aWwvdG9rZW5DeWNsZXIuanNcIjtcbmltcG9ydCB7IGxvZ2dlciBhcyBjb3JlTG9nZ2VyIH0gZnJvbSBcIi4uL2xvZy5qc1wiO1xuLyoqXG4gKiBUaGUgcHJvZ3JhbW1hdGljIGlkZW50aWZpZXIgb2YgdGhlIGF1eGlsaWFyeUF1dGhlbnRpY2F0aW9uSGVhZGVyUG9saWN5LlxuICovXG5leHBvcnQgY29uc3QgYXV4aWxpYXJ5QXV0aGVudGljYXRpb25IZWFkZXJQb2xpY3lOYW1lID0gXCJhdXhpbGlhcnlBdXRoZW50aWNhdGlvbkhlYWRlclBvbGljeVwiO1xuY29uc3QgQVVUSE9SSVpBVElPTl9BVVhJTElBUllfSEVBREVSID0gXCJ4LW1zLWF1dGhvcml6YXRpb24tYXV4aWxpYXJ5XCI7XG5hc3luYyBmdW5jdGlvbiBzZW5kQXV0aG9yaXplUmVxdWVzdChvcHRpb25zKSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBjb25zdCB7IHNjb3BlcywgZ2V0QWNjZXNzVG9rZW4sIHJlcXVlc3QgfSA9IG9wdGlvbnM7XG4gICAgY29uc3QgZ2V0VG9rZW5PcHRpb25zID0ge1xuICAgICAgICBhYm9ydFNpZ25hbDogcmVxdWVzdC5hYm9ydFNpZ25hbCxcbiAgICAgICAgdHJhY2luZ09wdGlvbnM6IHJlcXVlc3QudHJhY2luZ09wdGlvbnMsXG4gICAgfTtcbiAgICByZXR1cm4gKF9iID0gKF9hID0gKGF3YWl0IGdldEFjY2Vzc1Rva2VuKHNjb3BlcywgZ2V0VG9rZW5PcHRpb25zKSkpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS50b2tlbikgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogXCJcIjtcbn1cbi8qKlxuICogQSBwb2xpY3kgZm9yIGV4dGVybmFsIHRva2VucyB0byBgeC1tcy1hdXRob3JpemF0aW9uLWF1eGlsaWFyeWAgaGVhZGVyLlxuICogVGhpcyBoZWFkZXIgd2lsbCBiZSB1c2VkIHdoZW4gY3JlYXRpbmcgYSBjcm9zcy10ZW5hbnQgYXBwbGljYXRpb24gd2UgbWF5IG5lZWQgdG8gaGFuZGxlIGF1dGhlbnRpY2F0aW9uIHJlcXVlc3RzXG4gKiBmb3IgcmVzb3VyY2VzIHRoYXQgYXJlIGluIGRpZmZlcmVudCB0ZW5hbnRzLlxuICogWW91IGNvdWxkIHNlZSBbQVJNIGRvY3NdKGh0dHBzOi8vbGVhcm4ubWljcm9zb2Z0LmNvbS9lbi11cy9henVyZS9henVyZS1yZXNvdXJjZS1tYW5hZ2VyL21hbmFnZW1lbnQvYXV0aGVudGljYXRlLW11bHRpLXRlbmFudCkgZm9yIGEgcnVuZG93biBvZiBob3cgdGhpcyBmZWF0dXJlIHdvcmtzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhdXhpbGlhcnlBdXRoZW50aWNhdGlvbkhlYWRlclBvbGljeShvcHRpb25zKSB7XG4gICAgY29uc3QgeyBjcmVkZW50aWFscywgc2NvcGVzIH0gPSBvcHRpb25zO1xuICAgIGNvbnN0IGxvZ2dlciA9IG9wdGlvbnMubG9nZ2VyIHx8IGNvcmVMb2dnZXI7XG4gICAgY29uc3QgdG9rZW5DeWNsZXJNYXAgPSBuZXcgV2Vha01hcCgpO1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IGF1eGlsaWFyeUF1dGhlbnRpY2F0aW9uSGVhZGVyUG9saWN5TmFtZSxcbiAgICAgICAgYXN5bmMgc2VuZFJlcXVlc3QocmVxdWVzdCwgbmV4dCkge1xuICAgICAgICAgICAgaWYgKCFyZXF1ZXN0LnVybC50b0xvd2VyQ2FzZSgpLnN0YXJ0c1dpdGgoXCJodHRwczovL1wiKSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkJlYXJlciB0b2tlbiBhdXRoZW50aWNhdGlvbiBmb3IgYXV4aWxpYXJ5IGhlYWRlciBpcyBub3QgcGVybWl0dGVkIGZvciBub24tVExTIHByb3RlY3RlZCAobm9uLWh0dHBzKSBVUkxzLlwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghY3JlZGVudGlhbHMgfHwgY3JlZGVudGlhbHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgbG9nZ2VyLmluZm8oYCR7YXV4aWxpYXJ5QXV0aGVudGljYXRpb25IZWFkZXJQb2xpY3lOYW1lfSBoZWFkZXIgd2lsbCBub3QgYmUgc2V0IGR1ZSB0byBlbXB0eSBjcmVkZW50aWFscy5gKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV4dChyZXF1ZXN0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHRva2VuUHJvbWlzZXMgPSBbXTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgY3JlZGVudGlhbCBvZiBjcmVkZW50aWFscykge1xuICAgICAgICAgICAgICAgIGxldCBnZXRBY2Nlc3NUb2tlbiA9IHRva2VuQ3ljbGVyTWFwLmdldChjcmVkZW50aWFsKTtcbiAgICAgICAgICAgICAgICBpZiAoIWdldEFjY2Vzc1Rva2VuKSB7XG4gICAgICAgICAgICAgICAgICAgIGdldEFjY2Vzc1Rva2VuID0gY3JlYXRlVG9rZW5DeWNsZXIoY3JlZGVudGlhbCk7XG4gICAgICAgICAgICAgICAgICAgIHRva2VuQ3ljbGVyTWFwLnNldChjcmVkZW50aWFsLCBnZXRBY2Nlc3NUb2tlbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRva2VuUHJvbWlzZXMucHVzaChzZW5kQXV0aG9yaXplUmVxdWVzdCh7XG4gICAgICAgICAgICAgICAgICAgIHNjb3BlczogQXJyYXkuaXNBcnJheShzY29wZXMpID8gc2NvcGVzIDogW3Njb3Blc10sXG4gICAgICAgICAgICAgICAgICAgIHJlcXVlc3QsXG4gICAgICAgICAgICAgICAgICAgIGdldEFjY2Vzc1Rva2VuLFxuICAgICAgICAgICAgICAgICAgICBsb2dnZXIsXG4gICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgYXV4aWxpYXJ5VG9rZW5zID0gKGF3YWl0IFByb21pc2UuYWxsKHRva2VuUHJvbWlzZXMpKS5maWx0ZXIoKHRva2VuKSA9PiBCb29sZWFuKHRva2VuKSk7XG4gICAgICAgICAgICBpZiAoYXV4aWxpYXJ5VG9rZW5zLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGxvZ2dlci53YXJuaW5nKGBOb25lIG9mIHRoZSBhdXhpbGlhcnkgdG9rZW5zIGFyZSB2YWxpZC4gJHtBVVRIT1JJWkFUSU9OX0FVWElMSUFSWV9IRUFERVJ9IGhlYWRlciB3aWxsIG5vdCBiZSBzZXQuYCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5leHQocmVxdWVzdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXF1ZXN0LmhlYWRlcnMuc2V0KEFVVEhPUklaQVRJT05fQVVYSUxJQVJZX0hFQURFUiwgYXV4aWxpYXJ5VG9rZW5zLm1hcCgodG9rZW4pID0+IGBCZWFyZXIgJHt0b2tlbn1gKS5qb2luKFwiLCBcIikpO1xuICAgICAgICAgICAgcmV0dXJuIG5leHQocmVxdWVzdCk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF1eGlsaWFyeUF1dGhlbnRpY2F0aW9uSGVhZGVyUG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/auxiliaryAuthenticationHeaderPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/bearerTokenAuthenticationPolicy.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/bearerTokenAuthenticationPolicy.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bearerTokenAuthenticationPolicy: () => (/* binding */ bearerTokenAuthenticationPolicy),\n/* harmony export */   bearerTokenAuthenticationPolicyName: () => (/* binding */ bearerTokenAuthenticationPolicyName),\n/* harmony export */   parseChallenges: () => (/* binding */ parseChallenges)\n/* harmony export */ });\n/* harmony import */ var _util_tokenCycler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/tokenCycler.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/tokenCycler.js\");\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../log.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js\");\n/* harmony import */ var _restError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../restError.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/restError.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n/**\n * The programmatic identifier of the bearerTokenAuthenticationPolicy.\n */\nconst bearerTokenAuthenticationPolicyName = \"bearerTokenAuthenticationPolicy\";\n/**\n * Try to send the given request.\n *\n * When a response is received, returns a tuple of the response received and, if the response was received\n * inside a thrown RestError, the RestError that was thrown.\n *\n * Otherwise, if an error was thrown while sending the request that did not provide an underlying response, it\n * will be rethrown.\n */\nasync function trySendRequest(request, next) {\n    try {\n        return [await next(request), undefined];\n    }\n    catch (e) {\n        if ((0,_restError_js__WEBPACK_IMPORTED_MODULE_2__.isRestError)(e) && e.response) {\n            return [e.response, e];\n        }\n        else {\n            throw e;\n        }\n    }\n}\n/**\n * Default authorize request handler\n */\nasync function defaultAuthorizeRequest(options) {\n    const { scopes, getAccessToken, request } = options;\n    // Enable CAE true by default\n    const getTokenOptions = {\n        abortSignal: request.abortSignal,\n        tracingOptions: request.tracingOptions,\n        enableCae: true,\n    };\n    const accessToken = await getAccessToken(scopes, getTokenOptions);\n    if (accessToken) {\n        options.request.headers.set(\"Authorization\", `Bearer ${accessToken.token}`);\n    }\n}\n/**\n * We will retrieve the challenge only if the response status code was 401,\n * and if the response contained the header \"WWW-Authenticate\" with a non-empty value.\n */\nfunction isChallengeResponse(response) {\n    return response.status === 401 && response.headers.has(\"WWW-Authenticate\");\n}\n/**\n * Re-authorize the request for CAE challenge.\n * The response containing the challenge is `options.response`.\n * If this method returns true, the underlying request will be sent once again.\n */\nasync function authorizeRequestOnCaeChallenge(onChallengeOptions, caeClaims) {\n    var _a;\n    const { scopes } = onChallengeOptions;\n    const accessToken = await onChallengeOptions.getAccessToken(scopes, {\n        enableCae: true,\n        claims: caeClaims,\n    });\n    if (!accessToken) {\n        return false;\n    }\n    onChallengeOptions.request.headers.set(\"Authorization\", `${(_a = accessToken.tokenType) !== null && _a !== void 0 ? _a : \"Bearer\"} ${accessToken.token}`);\n    return true;\n}\n/**\n * A policy that can request a token from a TokenCredential implementation and\n * then apply it to the Authorization header of a request as a Bearer token.\n */\nfunction bearerTokenAuthenticationPolicy(options) {\n    var _a, _b, _c;\n    const { credential, scopes, challengeCallbacks } = options;\n    const logger = options.logger || _log_js__WEBPACK_IMPORTED_MODULE_1__.logger;\n    const callbacks = {\n        authorizeRequest: (_b = (_a = challengeCallbacks === null || challengeCallbacks === void 0 ? void 0 : challengeCallbacks.authorizeRequest) === null || _a === void 0 ? void 0 : _a.bind(challengeCallbacks)) !== null && _b !== void 0 ? _b : defaultAuthorizeRequest,\n        authorizeRequestOnChallenge: (_c = challengeCallbacks === null || challengeCallbacks === void 0 ? void 0 : challengeCallbacks.authorizeRequestOnChallenge) === null || _c === void 0 ? void 0 : _c.bind(challengeCallbacks),\n    };\n    // This function encapsulates the entire process of reliably retrieving the token\n    // The options are left out of the public API until there's demand to configure this.\n    // Remember to extend `BearerTokenAuthenticationPolicyOptions` with `TokenCyclerOptions`\n    // in order to pass through the `options` object.\n    const getAccessToken = credential\n        ? (0,_util_tokenCycler_js__WEBPACK_IMPORTED_MODULE_0__.createTokenCycler)(credential /* , options */)\n        : () => Promise.resolve(null);\n    return {\n        name: bearerTokenAuthenticationPolicyName,\n        /**\n         * If there's no challenge parameter:\n         * - It will try to retrieve the token using the cache, or the credential's getToken.\n         * - Then it will try the next policy with or without the retrieved token.\n         *\n         * It uses the challenge parameters to:\n         * - Skip a first attempt to get the token from the credential if there's no cached token,\n         *   since it expects the token to be retrievable only after the challenge.\n         * - Prepare the outgoing request if the `prepareRequest` method has been provided.\n         * - Send an initial request to receive the challenge if it fails.\n         * - Process a challenge if the response contains it.\n         * - Retrieve a token with the challenge information, then re-send the request.\n         */\n        async sendRequest(request, next) {\n            if (!request.url.toLowerCase().startsWith(\"https://\")) {\n                throw new Error(\"Bearer token authentication is not permitted for non-TLS protected (non-https) URLs.\");\n            }\n            await callbacks.authorizeRequest({\n                scopes: Array.isArray(scopes) ? scopes : [scopes],\n                request,\n                getAccessToken,\n                logger,\n            });\n            let response;\n            let error;\n            let shouldSendRequest;\n            [response, error] = await trySendRequest(request, next);\n            if (isChallengeResponse(response)) {\n                let claims = getCaeChallengeClaims(response.headers.get(\"WWW-Authenticate\"));\n                // Handle CAE by default when receive CAE claim\n                if (claims) {\n                    let parsedClaim;\n                    // Return the response immediately if claims is not a valid base64 encoded string\n                    try {\n                        parsedClaim = atob(claims);\n                    }\n                    catch (e) {\n                        logger.warning(`The WWW-Authenticate header contains \"claims\" that cannot be parsed. Unable to perform the Continuous Access Evaluation authentication flow. Unparsable claims: ${claims}`);\n                        return response;\n                    }\n                    shouldSendRequest = await authorizeRequestOnCaeChallenge({\n                        scopes: Array.isArray(scopes) ? scopes : [scopes],\n                        response,\n                        request,\n                        getAccessToken,\n                        logger,\n                    }, parsedClaim);\n                    // Send updated request and handle response for RestError\n                    if (shouldSendRequest) {\n                        [response, error] = await trySendRequest(request, next);\n                    }\n                }\n                else if (callbacks.authorizeRequestOnChallenge) {\n                    // Handle custom challenges when client provides custom callback\n                    shouldSendRequest = await callbacks.authorizeRequestOnChallenge({\n                        scopes: Array.isArray(scopes) ? scopes : [scopes],\n                        request,\n                        response,\n                        getAccessToken,\n                        logger,\n                    });\n                    // Send updated request and handle response for RestError\n                    if (shouldSendRequest) {\n                        [response, error] = await trySendRequest(request, next);\n                    }\n                    // If we get another CAE Claim, we will handle it by default and return whatever value we receive for this\n                    if (isChallengeResponse(response)) {\n                        claims = getCaeChallengeClaims(response.headers.get(\"WWW-Authenticate\"));\n                        if (claims) {\n                            let parsedClaim;\n                            try {\n                                parsedClaim = atob(claims);\n                            }\n                            catch (e) {\n                                logger.warning(`The WWW-Authenticate header contains \"claims\" that cannot be parsed. Unable to perform the Continuous Access Evaluation authentication flow. Unparsable claims: ${claims}`);\n                                return response;\n                            }\n                            shouldSendRequest = await authorizeRequestOnCaeChallenge({\n                                scopes: Array.isArray(scopes) ? scopes : [scopes],\n                                response,\n                                request,\n                                getAccessToken,\n                                logger,\n                            }, parsedClaim);\n                            // Send updated request and handle response for RestError\n                            if (shouldSendRequest) {\n                                [response, error] = await trySendRequest(request, next);\n                            }\n                        }\n                    }\n                }\n            }\n            if (error) {\n                throw error;\n            }\n            else {\n                return response;\n            }\n        },\n    };\n}\n/**\n * Converts: `Bearer a=\"b\", c=\"d\", Pop e=\"f\", g=\"h\"`.\n * Into: `[ { scheme: 'Bearer', params: { a: 'b', c: 'd' } }, { scheme: 'Pop', params: { e: 'f', g: 'h' } } ]`.\n *\n * @internal\n */\nfunction parseChallenges(challenges) {\n    // Challenge regex seperates the string to individual challenges with different schemes in the format `Scheme a=\"b\", c=d`\n    // The challenge regex captures parameteres with either quotes values or unquoted values\n    const challengeRegex = /(\\w+)\\s+((?:\\w+=(?:\"[^\"]*\"|[^,]*),?\\s*)+)/g;\n    // Parameter regex captures the claims group removed from the scheme in the format `a=\"b\"` and `c=\"d\"`\n    // CAE challenge always have quoted parameters. For more reference, https://learn.microsoft.com/entra/identity-platform/claims-challenge\n    const paramRegex = /(\\w+)=\"([^\"]*)\"/g;\n    const parsedChallenges = [];\n    let match;\n    // Iterate over each challenge match\n    while ((match = challengeRegex.exec(challenges)) !== null) {\n        const scheme = match[1];\n        const paramsString = match[2];\n        const params = {};\n        let paramMatch;\n        // Iterate over each parameter match\n        while ((paramMatch = paramRegex.exec(paramsString)) !== null) {\n            params[paramMatch[1]] = paramMatch[2];\n        }\n        parsedChallenges.push({ scheme, params });\n    }\n    return parsedChallenges;\n}\n/**\n * Parse a pipeline response and look for a CAE challenge with \"Bearer\" scheme\n * Return the value in the header without parsing the challenge\n * @internal\n */\nfunction getCaeChallengeClaims(challenges) {\n    var _a;\n    if (!challenges) {\n        return;\n    }\n    // Find all challenges present in the header\n    const parsedChallenges = parseChallenges(challenges);\n    return (_a = parsedChallenges.find((x) => x.scheme === \"Bearer\" && x.params.claims && x.params.error === \"insufficient_claims\")) === null || _a === void 0 ? void 0 : _a.params.claims;\n}\n//# sourceMappingURL=bearerTokenAuthenticationPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9iZWFyZXJUb2tlbkF1dGhlbnRpY2F0aW9uUG9saWN5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDMkQ7QUFDVjtBQUNIO0FBQzlDO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMERBQVc7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksa0NBQWtDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrREFBK0Qsa0JBQWtCO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxTQUFTO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSwrREFBK0Qsd0VBQXdFLEVBQUUsa0JBQWtCO0FBQzNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxZQUFZLHlDQUF5QztBQUNyRCxxQ0FBcUMsMkNBQVU7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSx1RUFBaUI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBNQUEwTSxPQUFPO0FBQ2pOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrTkFBa04sT0FBTztBQUN6TjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLDRCQUE0QixrQkFBa0IsSUFBSSx5QkFBeUIsbUJBQW1CO0FBQzVHO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLGdCQUFnQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1yZXN0LXBpcGVsaW5lXFxkaXN0XFxlc21cXHBvbGljaWVzXFxiZWFyZXJUb2tlbkF1dGhlbnRpY2F0aW9uUG9saWN5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgY3JlYXRlVG9rZW5DeWNsZXIgfSBmcm9tIFwiLi4vdXRpbC90b2tlbkN5Y2xlci5qc1wiO1xuaW1wb3J0IHsgbG9nZ2VyIGFzIGNvcmVMb2dnZXIgfSBmcm9tIFwiLi4vbG9nLmpzXCI7XG5pbXBvcnQgeyBpc1Jlc3RFcnJvciB9IGZyb20gXCIuLi9yZXN0RXJyb3IuanNcIjtcbi8qKlxuICogVGhlIHByb2dyYW1tYXRpYyBpZGVudGlmaWVyIG9mIHRoZSBiZWFyZXJUb2tlbkF1dGhlbnRpY2F0aW9uUG9saWN5LlxuICovXG5leHBvcnQgY29uc3QgYmVhcmVyVG9rZW5BdXRoZW50aWNhdGlvblBvbGljeU5hbWUgPSBcImJlYXJlclRva2VuQXV0aGVudGljYXRpb25Qb2xpY3lcIjtcbi8qKlxuICogVHJ5IHRvIHNlbmQgdGhlIGdpdmVuIHJlcXVlc3QuXG4gKlxuICogV2hlbiBhIHJlc3BvbnNlIGlzIHJlY2VpdmVkLCByZXR1cm5zIGEgdHVwbGUgb2YgdGhlIHJlc3BvbnNlIHJlY2VpdmVkIGFuZCwgaWYgdGhlIHJlc3BvbnNlIHdhcyByZWNlaXZlZFxuICogaW5zaWRlIGEgdGhyb3duIFJlc3RFcnJvciwgdGhlIFJlc3RFcnJvciB0aGF0IHdhcyB0aHJvd24uXG4gKlxuICogT3RoZXJ3aXNlLCBpZiBhbiBlcnJvciB3YXMgdGhyb3duIHdoaWxlIHNlbmRpbmcgdGhlIHJlcXVlc3QgdGhhdCBkaWQgbm90IHByb3ZpZGUgYW4gdW5kZXJseWluZyByZXNwb25zZSwgaXRcbiAqIHdpbGwgYmUgcmV0aHJvd24uXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIHRyeVNlbmRSZXF1ZXN0KHJlcXVlc3QsIG5leHQpIHtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gW2F3YWl0IG5leHQocmVxdWVzdCksIHVuZGVmaW5lZF07XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIGlmIChpc1Jlc3RFcnJvcihlKSAmJiBlLnJlc3BvbnNlKSB7XG4gICAgICAgICAgICByZXR1cm4gW2UucmVzcG9uc2UsIGVdO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8qKlxuICogRGVmYXVsdCBhdXRob3JpemUgcmVxdWVzdCBoYW5kbGVyXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGRlZmF1bHRBdXRob3JpemVSZXF1ZXN0KG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IHNjb3BlcywgZ2V0QWNjZXNzVG9rZW4sIHJlcXVlc3QgfSA9IG9wdGlvbnM7XG4gICAgLy8gRW5hYmxlIENBRSB0cnVlIGJ5IGRlZmF1bHRcbiAgICBjb25zdCBnZXRUb2tlbk9wdGlvbnMgPSB7XG4gICAgICAgIGFib3J0U2lnbmFsOiByZXF1ZXN0LmFib3J0U2lnbmFsLFxuICAgICAgICB0cmFjaW5nT3B0aW9uczogcmVxdWVzdC50cmFjaW5nT3B0aW9ucyxcbiAgICAgICAgZW5hYmxlQ2FlOiB0cnVlLFxuICAgIH07XG4gICAgY29uc3QgYWNjZXNzVG9rZW4gPSBhd2FpdCBnZXRBY2Nlc3NUb2tlbihzY29wZXMsIGdldFRva2VuT3B0aW9ucyk7XG4gICAgaWYgKGFjY2Vzc1Rva2VuKSB7XG4gICAgICAgIG9wdGlvbnMucmVxdWVzdC5oZWFkZXJzLnNldChcIkF1dGhvcml6YXRpb25cIiwgYEJlYXJlciAke2FjY2Vzc1Rva2VuLnRva2VufWApO1xuICAgIH1cbn1cbi8qKlxuICogV2Ugd2lsbCByZXRyaWV2ZSB0aGUgY2hhbGxlbmdlIG9ubHkgaWYgdGhlIHJlc3BvbnNlIHN0YXR1cyBjb2RlIHdhcyA0MDEsXG4gKiBhbmQgaWYgdGhlIHJlc3BvbnNlIGNvbnRhaW5lZCB0aGUgaGVhZGVyIFwiV1dXLUF1dGhlbnRpY2F0ZVwiIHdpdGggYSBub24tZW1wdHkgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIGlzQ2hhbGxlbmdlUmVzcG9uc2UocmVzcG9uc2UpIHtcbiAgICByZXR1cm4gcmVzcG9uc2Uuc3RhdHVzID09PSA0MDEgJiYgcmVzcG9uc2UuaGVhZGVycy5oYXMoXCJXV1ctQXV0aGVudGljYXRlXCIpO1xufVxuLyoqXG4gKiBSZS1hdXRob3JpemUgdGhlIHJlcXVlc3QgZm9yIENBRSBjaGFsbGVuZ2UuXG4gKiBUaGUgcmVzcG9uc2UgY29udGFpbmluZyB0aGUgY2hhbGxlbmdlIGlzIGBvcHRpb25zLnJlc3BvbnNlYC5cbiAqIElmIHRoaXMgbWV0aG9kIHJldHVybnMgdHJ1ZSwgdGhlIHVuZGVybHlpbmcgcmVxdWVzdCB3aWxsIGJlIHNlbnQgb25jZSBhZ2Fpbi5cbiAqL1xuYXN5bmMgZnVuY3Rpb24gYXV0aG9yaXplUmVxdWVzdE9uQ2FlQ2hhbGxlbmdlKG9uQ2hhbGxlbmdlT3B0aW9ucywgY2FlQ2xhaW1zKSB7XG4gICAgdmFyIF9hO1xuICAgIGNvbnN0IHsgc2NvcGVzIH0gPSBvbkNoYWxsZW5nZU9wdGlvbnM7XG4gICAgY29uc3QgYWNjZXNzVG9rZW4gPSBhd2FpdCBvbkNoYWxsZW5nZU9wdGlvbnMuZ2V0QWNjZXNzVG9rZW4oc2NvcGVzLCB7XG4gICAgICAgIGVuYWJsZUNhZTogdHJ1ZSxcbiAgICAgICAgY2xhaW1zOiBjYWVDbGFpbXMsXG4gICAgfSk7XG4gICAgaWYgKCFhY2Nlc3NUb2tlbikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIG9uQ2hhbGxlbmdlT3B0aW9ucy5yZXF1ZXN0LmhlYWRlcnMuc2V0KFwiQXV0aG9yaXphdGlvblwiLCBgJHsoX2EgPSBhY2Nlc3NUb2tlbi50b2tlblR5cGUpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFwiQmVhcmVyXCJ9ICR7YWNjZXNzVG9rZW4udG9rZW59YCk7XG4gICAgcmV0dXJuIHRydWU7XG59XG4vKipcbiAqIEEgcG9saWN5IHRoYXQgY2FuIHJlcXVlc3QgYSB0b2tlbiBmcm9tIGEgVG9rZW5DcmVkZW50aWFsIGltcGxlbWVudGF0aW9uIGFuZFxuICogdGhlbiBhcHBseSBpdCB0byB0aGUgQXV0aG9yaXphdGlvbiBoZWFkZXIgb2YgYSByZXF1ZXN0IGFzIGEgQmVhcmVyIHRva2VuLlxuICovXG5leHBvcnQgZnVuY3Rpb24gYmVhcmVyVG9rZW5BdXRoZW50aWNhdGlvblBvbGljeShvcHRpb25zKSB7XG4gICAgdmFyIF9hLCBfYiwgX2M7XG4gICAgY29uc3QgeyBjcmVkZW50aWFsLCBzY29wZXMsIGNoYWxsZW5nZUNhbGxiYWNrcyB9ID0gb3B0aW9ucztcbiAgICBjb25zdCBsb2dnZXIgPSBvcHRpb25zLmxvZ2dlciB8fCBjb3JlTG9nZ2VyO1xuICAgIGNvbnN0IGNhbGxiYWNrcyA9IHtcbiAgICAgICAgYXV0aG9yaXplUmVxdWVzdDogKF9iID0gKF9hID0gY2hhbGxlbmdlQ2FsbGJhY2tzID09PSBudWxsIHx8IGNoYWxsZW5nZUNhbGxiYWNrcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY2hhbGxlbmdlQ2FsbGJhY2tzLmF1dGhvcml6ZVJlcXVlc3QpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5iaW5kKGNoYWxsZW5nZUNhbGxiYWNrcykpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IGRlZmF1bHRBdXRob3JpemVSZXF1ZXN0LFxuICAgICAgICBhdXRob3JpemVSZXF1ZXN0T25DaGFsbGVuZ2U6IChfYyA9IGNoYWxsZW5nZUNhbGxiYWNrcyA9PT0gbnVsbCB8fCBjaGFsbGVuZ2VDYWxsYmFja3MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNoYWxsZW5nZUNhbGxiYWNrcy5hdXRob3JpemVSZXF1ZXN0T25DaGFsbGVuZ2UpID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy5iaW5kKGNoYWxsZW5nZUNhbGxiYWNrcyksXG4gICAgfTtcbiAgICAvLyBUaGlzIGZ1bmN0aW9uIGVuY2Fwc3VsYXRlcyB0aGUgZW50aXJlIHByb2Nlc3Mgb2YgcmVsaWFibHkgcmV0cmlldmluZyB0aGUgdG9rZW5cbiAgICAvLyBUaGUgb3B0aW9ucyBhcmUgbGVmdCBvdXQgb2YgdGhlIHB1YmxpYyBBUEkgdW50aWwgdGhlcmUncyBkZW1hbmQgdG8gY29uZmlndXJlIHRoaXMuXG4gICAgLy8gUmVtZW1iZXIgdG8gZXh0ZW5kIGBCZWFyZXJUb2tlbkF1dGhlbnRpY2F0aW9uUG9saWN5T3B0aW9uc2Agd2l0aCBgVG9rZW5DeWNsZXJPcHRpb25zYFxuICAgIC8vIGluIG9yZGVyIHRvIHBhc3MgdGhyb3VnaCB0aGUgYG9wdGlvbnNgIG9iamVjdC5cbiAgICBjb25zdCBnZXRBY2Nlc3NUb2tlbiA9IGNyZWRlbnRpYWxcbiAgICAgICAgPyBjcmVhdGVUb2tlbkN5Y2xlcihjcmVkZW50aWFsIC8qICwgb3B0aW9ucyAqLylcbiAgICAgICAgOiAoKSA9PiBQcm9taXNlLnJlc29sdmUobnVsbCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogYmVhcmVyVG9rZW5BdXRoZW50aWNhdGlvblBvbGljeU5hbWUsXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBJZiB0aGVyZSdzIG5vIGNoYWxsZW5nZSBwYXJhbWV0ZXI6XG4gICAgICAgICAqIC0gSXQgd2lsbCB0cnkgdG8gcmV0cmlldmUgdGhlIHRva2VuIHVzaW5nIHRoZSBjYWNoZSwgb3IgdGhlIGNyZWRlbnRpYWwncyBnZXRUb2tlbi5cbiAgICAgICAgICogLSBUaGVuIGl0IHdpbGwgdHJ5IHRoZSBuZXh0IHBvbGljeSB3aXRoIG9yIHdpdGhvdXQgdGhlIHJldHJpZXZlZCB0b2tlbi5cbiAgICAgICAgICpcbiAgICAgICAgICogSXQgdXNlcyB0aGUgY2hhbGxlbmdlIHBhcmFtZXRlcnMgdG86XG4gICAgICAgICAqIC0gU2tpcCBhIGZpcnN0IGF0dGVtcHQgdG8gZ2V0IHRoZSB0b2tlbiBmcm9tIHRoZSBjcmVkZW50aWFsIGlmIHRoZXJlJ3Mgbm8gY2FjaGVkIHRva2VuLFxuICAgICAgICAgKiAgIHNpbmNlIGl0IGV4cGVjdHMgdGhlIHRva2VuIHRvIGJlIHJldHJpZXZhYmxlIG9ubHkgYWZ0ZXIgdGhlIGNoYWxsZW5nZS5cbiAgICAgICAgICogLSBQcmVwYXJlIHRoZSBvdXRnb2luZyByZXF1ZXN0IGlmIHRoZSBgcHJlcGFyZVJlcXVlc3RgIG1ldGhvZCBoYXMgYmVlbiBwcm92aWRlZC5cbiAgICAgICAgICogLSBTZW5kIGFuIGluaXRpYWwgcmVxdWVzdCB0byByZWNlaXZlIHRoZSBjaGFsbGVuZ2UgaWYgaXQgZmFpbHMuXG4gICAgICAgICAqIC0gUHJvY2VzcyBhIGNoYWxsZW5nZSBpZiB0aGUgcmVzcG9uc2UgY29udGFpbnMgaXQuXG4gICAgICAgICAqIC0gUmV0cmlldmUgYSB0b2tlbiB3aXRoIHRoZSBjaGFsbGVuZ2UgaW5mb3JtYXRpb24sIHRoZW4gcmUtc2VuZCB0aGUgcmVxdWVzdC5cbiAgICAgICAgICovXG4gICAgICAgIGFzeW5jIHNlbmRSZXF1ZXN0KHJlcXVlc3QsIG5leHQpIHtcbiAgICAgICAgICAgIGlmICghcmVxdWVzdC51cmwudG9Mb3dlckNhc2UoKS5zdGFydHNXaXRoKFwiaHR0cHM6Ly9cIikpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJCZWFyZXIgdG9rZW4gYXV0aGVudGljYXRpb24gaXMgbm90IHBlcm1pdHRlZCBmb3Igbm9uLVRMUyBwcm90ZWN0ZWQgKG5vbi1odHRwcykgVVJMcy5cIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhd2FpdCBjYWxsYmFja3MuYXV0aG9yaXplUmVxdWVzdCh7XG4gICAgICAgICAgICAgICAgc2NvcGVzOiBBcnJheS5pc0FycmF5KHNjb3BlcykgPyBzY29wZXMgOiBbc2NvcGVzXSxcbiAgICAgICAgICAgICAgICByZXF1ZXN0LFxuICAgICAgICAgICAgICAgIGdldEFjY2Vzc1Rva2VuLFxuICAgICAgICAgICAgICAgIGxvZ2dlcixcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgbGV0IHJlc3BvbnNlO1xuICAgICAgICAgICAgbGV0IGVycm9yO1xuICAgICAgICAgICAgbGV0IHNob3VsZFNlbmRSZXF1ZXN0O1xuICAgICAgICAgICAgW3Jlc3BvbnNlLCBlcnJvcl0gPSBhd2FpdCB0cnlTZW5kUmVxdWVzdChyZXF1ZXN0LCBuZXh0KTtcbiAgICAgICAgICAgIGlmIChpc0NoYWxsZW5nZVJlc3BvbnNlKHJlc3BvbnNlKSkge1xuICAgICAgICAgICAgICAgIGxldCBjbGFpbXMgPSBnZXRDYWVDaGFsbGVuZ2VDbGFpbXMocmVzcG9uc2UuaGVhZGVycy5nZXQoXCJXV1ctQXV0aGVudGljYXRlXCIpKTtcbiAgICAgICAgICAgICAgICAvLyBIYW5kbGUgQ0FFIGJ5IGRlZmF1bHQgd2hlbiByZWNlaXZlIENBRSBjbGFpbVxuICAgICAgICAgICAgICAgIGlmIChjbGFpbXMpIHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IHBhcnNlZENsYWltO1xuICAgICAgICAgICAgICAgICAgICAvLyBSZXR1cm4gdGhlIHJlc3BvbnNlIGltbWVkaWF0ZWx5IGlmIGNsYWltcyBpcyBub3QgYSB2YWxpZCBiYXNlNjQgZW5jb2RlZCBzdHJpbmdcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcnNlZENsYWltID0gYXRvYihjbGFpbXMpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsb2dnZXIud2FybmluZyhgVGhlIFdXVy1BdXRoZW50aWNhdGUgaGVhZGVyIGNvbnRhaW5zIFwiY2xhaW1zXCIgdGhhdCBjYW5ub3QgYmUgcGFyc2VkLiBVbmFibGUgdG8gcGVyZm9ybSB0aGUgQ29udGludW91cyBBY2Nlc3MgRXZhbHVhdGlvbiBhdXRoZW50aWNhdGlvbiBmbG93LiBVbnBhcnNhYmxlIGNsYWltczogJHtjbGFpbXN9YCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgc2hvdWxkU2VuZFJlcXVlc3QgPSBhd2FpdCBhdXRob3JpemVSZXF1ZXN0T25DYWVDaGFsbGVuZ2Uoe1xuICAgICAgICAgICAgICAgICAgICAgICAgc2NvcGVzOiBBcnJheS5pc0FycmF5KHNjb3BlcykgPyBzY29wZXMgOiBbc2NvcGVzXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWVzdCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldEFjY2Vzc1Rva2VuLFxuICAgICAgICAgICAgICAgICAgICAgICAgbG9nZ2VyLFxuICAgICAgICAgICAgICAgICAgICB9LCBwYXJzZWRDbGFpbSk7XG4gICAgICAgICAgICAgICAgICAgIC8vIFNlbmQgdXBkYXRlZCByZXF1ZXN0IGFuZCBoYW5kbGUgcmVzcG9uc2UgZm9yIFJlc3RFcnJvclxuICAgICAgICAgICAgICAgICAgICBpZiAoc2hvdWxkU2VuZFJlcXVlc3QpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFtyZXNwb25zZSwgZXJyb3JdID0gYXdhaXQgdHJ5U2VuZFJlcXVlc3QocmVxdWVzdCwgbmV4dCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoY2FsbGJhY2tzLmF1dGhvcml6ZVJlcXVlc3RPbkNoYWxsZW5nZSkge1xuICAgICAgICAgICAgICAgICAgICAvLyBIYW5kbGUgY3VzdG9tIGNoYWxsZW5nZXMgd2hlbiBjbGllbnQgcHJvdmlkZXMgY3VzdG9tIGNhbGxiYWNrXG4gICAgICAgICAgICAgICAgICAgIHNob3VsZFNlbmRSZXF1ZXN0ID0gYXdhaXQgY2FsbGJhY2tzLmF1dGhvcml6ZVJlcXVlc3RPbkNoYWxsZW5nZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICBzY29wZXM6IEFycmF5LmlzQXJyYXkoc2NvcGVzKSA/IHNjb3BlcyA6IFtzY29wZXNdLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWVzdCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0QWNjZXNzVG9rZW4sXG4gICAgICAgICAgICAgICAgICAgICAgICBsb2dnZXIsXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAvLyBTZW5kIHVwZGF0ZWQgcmVxdWVzdCBhbmQgaGFuZGxlIHJlc3BvbnNlIGZvciBSZXN0RXJyb3JcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNob3VsZFNlbmRSZXF1ZXN0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBbcmVzcG9uc2UsIGVycm9yXSA9IGF3YWl0IHRyeVNlbmRSZXF1ZXN0KHJlcXVlc3QsIG5leHQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8vIElmIHdlIGdldCBhbm90aGVyIENBRSBDbGFpbSwgd2Ugd2lsbCBoYW5kbGUgaXQgYnkgZGVmYXVsdCBhbmQgcmV0dXJuIHdoYXRldmVyIHZhbHVlIHdlIHJlY2VpdmUgZm9yIHRoaXNcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzQ2hhbGxlbmdlUmVzcG9uc2UocmVzcG9uc2UpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFpbXMgPSBnZXRDYWVDaGFsbGVuZ2VDbGFpbXMocmVzcG9uc2UuaGVhZGVycy5nZXQoXCJXV1ctQXV0aGVudGljYXRlXCIpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjbGFpbXMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgcGFyc2VkQ2xhaW07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyc2VkQ2xhaW0gPSBhdG9iKGNsYWltcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvZ2dlci53YXJuaW5nKGBUaGUgV1dXLUF1dGhlbnRpY2F0ZSBoZWFkZXIgY29udGFpbnMgXCJjbGFpbXNcIiB0aGF0IGNhbm5vdCBiZSBwYXJzZWQuIFVuYWJsZSB0byBwZXJmb3JtIHRoZSBDb250aW51b3VzIEFjY2VzcyBFdmFsdWF0aW9uIGF1dGhlbnRpY2F0aW9uIGZsb3cuIFVucGFyc2FibGUgY2xhaW1zOiAke2NsYWltc31gKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG91bGRTZW5kUmVxdWVzdCA9IGF3YWl0IGF1dGhvcml6ZVJlcXVlc3RPbkNhZUNoYWxsZW5nZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNjb3BlczogQXJyYXkuaXNBcnJheShzY29wZXMpID8gc2NvcGVzIDogW3Njb3Blc10sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1ZXN0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXRBY2Nlc3NUb2tlbixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9nZ2VyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIHBhcnNlZENsYWltKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBTZW5kIHVwZGF0ZWQgcmVxdWVzdCBhbmQgaGFuZGxlIHJlc3BvbnNlIGZvciBSZXN0RXJyb3JcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2hvdWxkU2VuZFJlcXVlc3QpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW3Jlc3BvbnNlLCBlcnJvcl0gPSBhd2FpdCB0cnlTZW5kUmVxdWVzdChyZXF1ZXN0LCBuZXh0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICB9O1xufVxuLyoqXG4gKiBDb252ZXJ0czogYEJlYXJlciBhPVwiYlwiLCBjPVwiZFwiLCBQb3AgZT1cImZcIiwgZz1cImhcImAuXG4gKiBJbnRvOiBgWyB7IHNjaGVtZTogJ0JlYXJlcicsIHBhcmFtczogeyBhOiAnYicsIGM6ICdkJyB9IH0sIHsgc2NoZW1lOiAnUG9wJywgcGFyYW1zOiB7IGU6ICdmJywgZzogJ2gnIH0gfSBdYC5cbiAqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQ2hhbGxlbmdlcyhjaGFsbGVuZ2VzKSB7XG4gICAgLy8gQ2hhbGxlbmdlIHJlZ2V4IHNlcGVyYXRlcyB0aGUgc3RyaW5nIHRvIGluZGl2aWR1YWwgY2hhbGxlbmdlcyB3aXRoIGRpZmZlcmVudCBzY2hlbWVzIGluIHRoZSBmb3JtYXQgYFNjaGVtZSBhPVwiYlwiLCBjPWRgXG4gICAgLy8gVGhlIGNoYWxsZW5nZSByZWdleCBjYXB0dXJlcyBwYXJhbWV0ZXJlcyB3aXRoIGVpdGhlciBxdW90ZXMgdmFsdWVzIG9yIHVucXVvdGVkIHZhbHVlc1xuICAgIGNvbnN0IGNoYWxsZW5nZVJlZ2V4ID0gLyhcXHcrKVxccysoKD86XFx3Kz0oPzpcIlteXCJdKlwifFteLF0qKSw/XFxzKikrKS9nO1xuICAgIC8vIFBhcmFtZXRlciByZWdleCBjYXB0dXJlcyB0aGUgY2xhaW1zIGdyb3VwIHJlbW92ZWQgZnJvbSB0aGUgc2NoZW1lIGluIHRoZSBmb3JtYXQgYGE9XCJiXCJgIGFuZCBgYz1cImRcImBcbiAgICAvLyBDQUUgY2hhbGxlbmdlIGFsd2F5cyBoYXZlIHF1b3RlZCBwYXJhbWV0ZXJzLiBGb3IgbW9yZSByZWZlcmVuY2UsIGh0dHBzOi8vbGVhcm4ubWljcm9zb2Z0LmNvbS9lbnRyYS9pZGVudGl0eS1wbGF0Zm9ybS9jbGFpbXMtY2hhbGxlbmdlXG4gICAgY29uc3QgcGFyYW1SZWdleCA9IC8oXFx3Kyk9XCIoW15cIl0qKVwiL2c7XG4gICAgY29uc3QgcGFyc2VkQ2hhbGxlbmdlcyA9IFtdO1xuICAgIGxldCBtYXRjaDtcbiAgICAvLyBJdGVyYXRlIG92ZXIgZWFjaCBjaGFsbGVuZ2UgbWF0Y2hcbiAgICB3aGlsZSAoKG1hdGNoID0gY2hhbGxlbmdlUmVnZXguZXhlYyhjaGFsbGVuZ2VzKSkgIT09IG51bGwpIHtcbiAgICAgICAgY29uc3Qgc2NoZW1lID0gbWF0Y2hbMV07XG4gICAgICAgIGNvbnN0IHBhcmFtc1N0cmluZyA9IG1hdGNoWzJdO1xuICAgICAgICBjb25zdCBwYXJhbXMgPSB7fTtcbiAgICAgICAgbGV0IHBhcmFtTWF0Y2g7XG4gICAgICAgIC8vIEl0ZXJhdGUgb3ZlciBlYWNoIHBhcmFtZXRlciBtYXRjaFxuICAgICAgICB3aGlsZSAoKHBhcmFtTWF0Y2ggPSBwYXJhbVJlZ2V4LmV4ZWMocGFyYW1zU3RyaW5nKSkgIT09IG51bGwpIHtcbiAgICAgICAgICAgIHBhcmFtc1twYXJhbU1hdGNoWzFdXSA9IHBhcmFtTWF0Y2hbMl07XG4gICAgICAgIH1cbiAgICAgICAgcGFyc2VkQ2hhbGxlbmdlcy5wdXNoKHsgc2NoZW1lLCBwYXJhbXMgfSk7XG4gICAgfVxuICAgIHJldHVybiBwYXJzZWRDaGFsbGVuZ2VzO1xufVxuLyoqXG4gKiBQYXJzZSBhIHBpcGVsaW5lIHJlc3BvbnNlIGFuZCBsb29rIGZvciBhIENBRSBjaGFsbGVuZ2Ugd2l0aCBcIkJlYXJlclwiIHNjaGVtZVxuICogUmV0dXJuIHRoZSB2YWx1ZSBpbiB0aGUgaGVhZGVyIHdpdGhvdXQgcGFyc2luZyB0aGUgY2hhbGxlbmdlXG4gKiBAaW50ZXJuYWxcbiAqL1xuZnVuY3Rpb24gZ2V0Q2FlQ2hhbGxlbmdlQ2xhaW1zKGNoYWxsZW5nZXMpIHtcbiAgICB2YXIgX2E7XG4gICAgaWYgKCFjaGFsbGVuZ2VzKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgLy8gRmluZCBhbGwgY2hhbGxlbmdlcyBwcmVzZW50IGluIHRoZSBoZWFkZXJcbiAgICBjb25zdCBwYXJzZWRDaGFsbGVuZ2VzID0gcGFyc2VDaGFsbGVuZ2VzKGNoYWxsZW5nZXMpO1xuICAgIHJldHVybiAoX2EgPSBwYXJzZWRDaGFsbGVuZ2VzLmZpbmQoKHgpID0+IHguc2NoZW1lID09PSBcIkJlYXJlclwiICYmIHgucGFyYW1zLmNsYWltcyAmJiB4LnBhcmFtcy5lcnJvciA9PT0gXCJpbnN1ZmZpY2llbnRfY2xhaW1zXCIpKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EucGFyYW1zLmNsYWltcztcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJlYXJlclRva2VuQXV0aGVudGljYXRpb25Qb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/bearerTokenAuthenticationPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/decompressResponsePolicy.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/decompressResponsePolicy.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decompressResponsePolicy: () => (/* binding */ decompressResponsePolicy),\n/* harmony export */   decompressResponsePolicyName: () => (/* binding */ decompressResponsePolicyName)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * The programmatic identifier of the decompressResponsePolicy.\n */\nconst decompressResponsePolicyName = \"decompressResponsePolicy\";\n/**\n * A policy to enable response decompression according to Accept-Encoding header\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Encoding\n */\nfunction decompressResponsePolicy() {\n    return {\n        name: decompressResponsePolicyName,\n        async sendRequest(request, next) {\n            // HEAD requests have no body\n            if (request.method !== \"HEAD\") {\n                request.headers.set(\"Accept-Encoding\", \"gzip,deflate\");\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=decompressResponsePolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9kZWNvbXByZXNzUmVzcG9uc2VQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1yZXN0LXBpcGVsaW5lXFxkaXN0XFxlc21cXHBvbGljaWVzXFxkZWNvbXByZXNzUmVzcG9uc2VQb2xpY3kuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vKipcbiAqIFRoZSBwcm9ncmFtbWF0aWMgaWRlbnRpZmllciBvZiB0aGUgZGVjb21wcmVzc1Jlc3BvbnNlUG9saWN5LlxuICovXG5leHBvcnQgY29uc3QgZGVjb21wcmVzc1Jlc3BvbnNlUG9saWN5TmFtZSA9IFwiZGVjb21wcmVzc1Jlc3BvbnNlUG9saWN5XCI7XG4vKipcbiAqIEEgcG9saWN5IHRvIGVuYWJsZSByZXNwb25zZSBkZWNvbXByZXNzaW9uIGFjY29yZGluZyB0byBBY2NlcHQtRW5jb2RpbmcgaGVhZGVyXG4gKiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9IVFRQL0hlYWRlcnMvQWNjZXB0LUVuY29kaW5nXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvbXByZXNzUmVzcG9uc2VQb2xpY3koKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogZGVjb21wcmVzc1Jlc3BvbnNlUG9saWN5TmFtZSxcbiAgICAgICAgYXN5bmMgc2VuZFJlcXVlc3QocmVxdWVzdCwgbmV4dCkge1xuICAgICAgICAgICAgLy8gSEVBRCByZXF1ZXN0cyBoYXZlIG5vIGJvZHlcbiAgICAgICAgICAgIGlmIChyZXF1ZXN0Lm1ldGhvZCAhPT0gXCJIRUFEXCIpIHtcbiAgICAgICAgICAgICAgICByZXF1ZXN0LmhlYWRlcnMuc2V0KFwiQWNjZXB0LUVuY29kaW5nXCIsIFwiZ3ppcCxkZWZsYXRlXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG5leHQocmVxdWVzdCk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlY29tcHJlc3NSZXNwb25zZVBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/decompressResponsePolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/defaultRetryPolicy.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/defaultRetryPolicy.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultRetryPolicy: () => (/* binding */ defaultRetryPolicy),\n/* harmony export */   defaultRetryPolicyName: () => (/* binding */ defaultRetryPolicyName)\n/* harmony export */ });\n/* harmony import */ var _retryStrategies_exponentialRetryStrategy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../retryStrategies/exponentialRetryStrategy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/exponentialRetryStrategy.js\");\n/* harmony import */ var _retryStrategies_throttlingRetryStrategy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../retryStrategies/throttlingRetryStrategy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/throttlingRetryStrategy.js\");\n/* harmony import */ var _retryPolicy_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./retryPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/retryPolicy.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n/**\n * Name of the {@link defaultRetryPolicy}\n */\nconst defaultRetryPolicyName = \"defaultRetryPolicy\";\n/**\n * A policy that retries according to three strategies:\n * - When the server sends a 429 response with a Retry-After header.\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails, it will retry with an exponentially increasing delay.\n */\nfunction defaultRetryPolicy(options = {}) {\n    var _a;\n    return {\n        name: defaultRetryPolicyName,\n        sendRequest: (0,_retryPolicy_js__WEBPACK_IMPORTED_MODULE_2__.retryPolicy)([(0,_retryStrategies_throttlingRetryStrategy_js__WEBPACK_IMPORTED_MODULE_1__.throttlingRetryStrategy)(), (0,_retryStrategies_exponentialRetryStrategy_js__WEBPACK_IMPORTED_MODULE_0__.exponentialRetryStrategy)(options)], {\n            maxRetries: (_a = options.maxRetries) !== null && _a !== void 0 ? _a : _constants_js__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_RETRY_POLICY_COUNT,\n        }).sendRequest,\n    };\n}\n//# sourceMappingURL=defaultRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9kZWZhdWx0UmV0cnlQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUMwRjtBQUNGO0FBQ3pDO0FBQ2M7QUFDN0Q7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHdDQUF3QztBQUMvQztBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsNERBQVcsRUFBRSxvR0FBdUIsSUFBSSxzR0FBd0I7QUFDckYsbUZBQW1GLHFFQUEwQjtBQUM3RyxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZSAtIEhlbGxvIFNjcmlwdCBBSVxcbGlmZUFnZW50XFx2b2ljZS1saXZlLWFnZW50XFxzYW1wbGVzXFxyZWFjdFxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtcmVzdC1waXBlbGluZVxcZGlzdFxcZXNtXFxwb2xpY2llc1xcZGVmYXVsdFJldHJ5UG9saWN5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgZXhwb25lbnRpYWxSZXRyeVN0cmF0ZWd5IH0gZnJvbSBcIi4uL3JldHJ5U3RyYXRlZ2llcy9leHBvbmVudGlhbFJldHJ5U3RyYXRlZ3kuanNcIjtcbmltcG9ydCB7IHRocm90dGxpbmdSZXRyeVN0cmF0ZWd5IH0gZnJvbSBcIi4uL3JldHJ5U3RyYXRlZ2llcy90aHJvdHRsaW5nUmV0cnlTdHJhdGVneS5qc1wiO1xuaW1wb3J0IHsgcmV0cnlQb2xpY3kgfSBmcm9tIFwiLi9yZXRyeVBvbGljeS5qc1wiO1xuaW1wb3J0IHsgREVGQVVMVF9SRVRSWV9QT0xJQ1lfQ09VTlQgfSBmcm9tIFwiLi4vY29uc3RhbnRzLmpzXCI7XG4vKipcbiAqIE5hbWUgb2YgdGhlIHtAbGluayBkZWZhdWx0UmV0cnlQb2xpY3l9XG4gKi9cbmV4cG9ydCBjb25zdCBkZWZhdWx0UmV0cnlQb2xpY3lOYW1lID0gXCJkZWZhdWx0UmV0cnlQb2xpY3lcIjtcbi8qKlxuICogQSBwb2xpY3kgdGhhdCByZXRyaWVzIGFjY29yZGluZyB0byB0aHJlZSBzdHJhdGVnaWVzOlxuICogLSBXaGVuIHRoZSBzZXJ2ZXIgc2VuZHMgYSA0MjkgcmVzcG9uc2Ugd2l0aCBhIFJldHJ5LUFmdGVyIGhlYWRlci5cbiAqIC0gV2hlbiB0aGVyZSBhcmUgZXJyb3JzIGluIHRoZSB1bmRlcmx5aW5nIHRyYW5zcG9ydCBsYXllciAoZS5nLiBETlMgbG9va3VwIGZhaWx1cmVzKS5cbiAqIC0gT3Igb3RoZXJ3aXNlIGlmIHRoZSBvdXRnb2luZyByZXF1ZXN0IGZhaWxzLCBpdCB3aWxsIHJldHJ5IHdpdGggYW4gZXhwb25lbnRpYWxseSBpbmNyZWFzaW5nIGRlbGF5LlxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVmYXVsdFJldHJ5UG9saWN5KG9wdGlvbnMgPSB7fSkge1xuICAgIHZhciBfYTtcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBkZWZhdWx0UmV0cnlQb2xpY3lOYW1lLFxuICAgICAgICBzZW5kUmVxdWVzdDogcmV0cnlQb2xpY3koW3Rocm90dGxpbmdSZXRyeVN0cmF0ZWd5KCksIGV4cG9uZW50aWFsUmV0cnlTdHJhdGVneShvcHRpb25zKV0sIHtcbiAgICAgICAgICAgIG1heFJldHJpZXM6IChfYSA9IG9wdGlvbnMubWF4UmV0cmllcykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogREVGQVVMVF9SRVRSWV9QT0xJQ1lfQ09VTlQsXG4gICAgICAgIH0pLnNlbmRSZXF1ZXN0LFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWZhdWx0UmV0cnlQb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/defaultRetryPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/exponentialRetryPolicy.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/exponentialRetryPolicy.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   exponentialRetryPolicy: () => (/* binding */ exponentialRetryPolicy),\n/* harmony export */   exponentialRetryPolicyName: () => (/* binding */ exponentialRetryPolicyName)\n/* harmony export */ });\n/* harmony import */ var _retryStrategies_exponentialRetryStrategy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../retryStrategies/exponentialRetryStrategy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/exponentialRetryStrategy.js\");\n/* harmony import */ var _retryPolicy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./retryPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/retryPolicy.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n/**\n * The programmatic identifier of the exponentialRetryPolicy.\n */\nconst exponentialRetryPolicyName = \"exponentialRetryPolicy\";\n/**\n * A policy that attempts to retry requests while introducing an exponentially increasing delay.\n * @param options - Options that configure retry logic.\n */\nfunction exponentialRetryPolicy(options = {}) {\n    var _a;\n    return (0,_retryPolicy_js__WEBPACK_IMPORTED_MODULE_1__.retryPolicy)([\n        (0,_retryStrategies_exponentialRetryStrategy_js__WEBPACK_IMPORTED_MODULE_0__.exponentialRetryStrategy)(Object.assign(Object.assign({}, options), { ignoreSystemErrors: true })),\n    ], {\n        maxRetries: (_a = options.maxRetries) !== null && _a !== void 0 ? _a : _constants_js__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_RETRY_POLICY_COUNT,\n    });\n}\n//# sourceMappingURL=exponentialRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9leHBvbmVudGlhbFJldHJ5UG9saWN5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUMwRjtBQUMzQztBQUNjO0FBQzdEO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDTyw0Q0FBNEM7QUFDbkQ7QUFDQSxXQUFXLDREQUFXO0FBQ3RCLFFBQVEsc0dBQXdCLCtCQUErQixjQUFjLDBCQUEwQjtBQUN2RztBQUNBLCtFQUErRSxxRUFBMEI7QUFDekcsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1yZXN0LXBpcGVsaW5lXFxkaXN0XFxlc21cXHBvbGljaWVzXFxleHBvbmVudGlhbFJldHJ5UG9saWN5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgZXhwb25lbnRpYWxSZXRyeVN0cmF0ZWd5IH0gZnJvbSBcIi4uL3JldHJ5U3RyYXRlZ2llcy9leHBvbmVudGlhbFJldHJ5U3RyYXRlZ3kuanNcIjtcbmltcG9ydCB7IHJldHJ5UG9saWN5IH0gZnJvbSBcIi4vcmV0cnlQb2xpY3kuanNcIjtcbmltcG9ydCB7IERFRkFVTFRfUkVUUllfUE9MSUNZX0NPVU5UIH0gZnJvbSBcIi4uL2NvbnN0YW50cy5qc1wiO1xuLyoqXG4gKiBUaGUgcHJvZ3JhbW1hdGljIGlkZW50aWZpZXIgb2YgdGhlIGV4cG9uZW50aWFsUmV0cnlQb2xpY3kuXG4gKi9cbmV4cG9ydCBjb25zdCBleHBvbmVudGlhbFJldHJ5UG9saWN5TmFtZSA9IFwiZXhwb25lbnRpYWxSZXRyeVBvbGljeVwiO1xuLyoqXG4gKiBBIHBvbGljeSB0aGF0IGF0dGVtcHRzIHRvIHJldHJ5IHJlcXVlc3RzIHdoaWxlIGludHJvZHVjaW5nIGFuIGV4cG9uZW50aWFsbHkgaW5jcmVhc2luZyBkZWxheS5cbiAqIEBwYXJhbSBvcHRpb25zIC0gT3B0aW9ucyB0aGF0IGNvbmZpZ3VyZSByZXRyeSBsb2dpYy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGV4cG9uZW50aWFsUmV0cnlQb2xpY3kob3B0aW9ucyA9IHt9KSB7XG4gICAgdmFyIF9hO1xuICAgIHJldHVybiByZXRyeVBvbGljeShbXG4gICAgICAgIGV4cG9uZW50aWFsUmV0cnlTdHJhdGVneShPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbnMpLCB7IGlnbm9yZVN5c3RlbUVycm9yczogdHJ1ZSB9KSksXG4gICAgXSwge1xuICAgICAgICBtYXhSZXRyaWVzOiAoX2EgPSBvcHRpb25zLm1heFJldHJpZXMpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IERFRkFVTFRfUkVUUllfUE9MSUNZX0NPVU5ULFxuICAgIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXhwb25lbnRpYWxSZXRyeVBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/exponentialRetryPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/formDataPolicy.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/formDataPolicy.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formDataPolicy: () => (/* binding */ formDataPolicy),\n/* harmony export */   formDataPolicyName: () => (/* binding */ formDataPolicyName)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _httpHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../httpHeaders.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/httpHeaders.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * The programmatic identifier of the formDataPolicy.\n */\nconst formDataPolicyName = \"formDataPolicy\";\nfunction formDataToFormDataMap(formData) {\n    var _a;\n    const formDataMap = {};\n    for (const [key, value] of formData.entries()) {\n        (_a = formDataMap[key]) !== null && _a !== void 0 ? _a : (formDataMap[key] = []);\n        formDataMap[key].push(value);\n    }\n    return formDataMap;\n}\n/**\n * A policy that encodes FormData on the request into the body.\n */\nfunction formDataPolicy() {\n    return {\n        name: formDataPolicyName,\n        async sendRequest(request, next) {\n            if (_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.isNodeLike && typeof FormData !== \"undefined\" && request.body instanceof FormData) {\n                request.formData = formDataToFormDataMap(request.body);\n                request.body = undefined;\n            }\n            if (request.formData) {\n                const contentType = request.headers.get(\"Content-Type\");\n                if (contentType && contentType.indexOf(\"application/x-www-form-urlencoded\") !== -1) {\n                    request.body = wwwFormUrlEncode(request.formData);\n                }\n                else {\n                    await prepareFormData(request.formData, request);\n                }\n                request.formData = undefined;\n            }\n            return next(request);\n        },\n    };\n}\nfunction wwwFormUrlEncode(formData) {\n    const urlSearchParams = new URLSearchParams();\n    for (const [key, value] of Object.entries(formData)) {\n        if (Array.isArray(value)) {\n            for (const subValue of value) {\n                urlSearchParams.append(key, subValue.toString());\n            }\n        }\n        else {\n            urlSearchParams.append(key, value.toString());\n        }\n    }\n    return urlSearchParams.toString();\n}\nasync function prepareFormData(formData, request) {\n    // validate content type (multipart/form-data)\n    const contentType = request.headers.get(\"Content-Type\");\n    if (contentType && !contentType.startsWith(\"multipart/form-data\")) {\n        // content type is specified and is not multipart/form-data. Exit.\n        return;\n    }\n    request.headers.set(\"Content-Type\", contentType !== null && contentType !== void 0 ? contentType : \"multipart/form-data\");\n    // set body to MultipartRequestBody using content from FormDataMap\n    const parts = [];\n    for (const [fieldName, values] of Object.entries(formData)) {\n        for (const value of Array.isArray(values) ? values : [values]) {\n            if (typeof value === \"string\") {\n                parts.push({\n                    headers: (0,_httpHeaders_js__WEBPACK_IMPORTED_MODULE_1__.createHttpHeaders)({\n                        \"Content-Disposition\": `form-data; name=\"${fieldName}\"`,\n                    }),\n                    body: (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(value, \"utf-8\"),\n                });\n            }\n            else if (value === undefined || value === null || typeof value !== \"object\") {\n                throw new Error(`Unexpected value for key ${fieldName}: ${value}. Value should be serialized to string first.`);\n            }\n            else {\n                // using || instead of ?? here since if value.name is empty we should create a file name\n                const fileName = value.name || \"blob\";\n                const headers = (0,_httpHeaders_js__WEBPACK_IMPORTED_MODULE_1__.createHttpHeaders)();\n                headers.set(\"Content-Disposition\", `form-data; name=\"${fieldName}\"; filename=\"${fileName}\"`);\n                // again, || is used since an empty value.type means the content type is unset\n                headers.set(\"Content-Type\", value.type || \"application/octet-stream\");\n                parts.push({\n                    headers,\n                    body: value,\n                });\n            }\n        }\n    }\n    request.multipartBody = { parts };\n}\n//# sourceMappingURL=formDataPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9mb3JtRGF0YVBvbGljeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNrRTtBQUNaO0FBQ3REO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isd0RBQVU7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsa0VBQWlCO0FBQzlDLDJEQUEyRCxRQUFRLFVBQVU7QUFDN0UscUJBQXFCO0FBQ3JCLDBCQUEwQixvRUFBa0I7QUFDNUMsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSw0REFBNEQsVUFBVSxJQUFJLE1BQU07QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0Msa0VBQWlCO0FBQ2pELCtEQUErRCxRQUFRLFVBQVUsR0FBRyxZQUFZLFNBQVM7QUFDekc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmUgLSBIZWxsbyBTY3JpcHQgQUlcXGxpZmVBZ2VudFxcdm9pY2UtbGl2ZS1hZ2VudFxcc2FtcGxlc1xccmVhY3RcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXJlc3QtcGlwZWxpbmVcXGRpc3RcXGVzbVxccG9saWNpZXNcXGZvcm1EYXRhUG9saWN5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgaXNOb2RlTGlrZSwgc3RyaW5nVG9VaW50OEFycmF5IH0gZnJvbSBcIkBhenVyZS9jb3JlLXV0aWxcIjtcbmltcG9ydCB7IGNyZWF0ZUh0dHBIZWFkZXJzIH0gZnJvbSBcIi4uL2h0dHBIZWFkZXJzLmpzXCI7XG4vKipcbiAqIFRoZSBwcm9ncmFtbWF0aWMgaWRlbnRpZmllciBvZiB0aGUgZm9ybURhdGFQb2xpY3kuXG4gKi9cbmV4cG9ydCBjb25zdCBmb3JtRGF0YVBvbGljeU5hbWUgPSBcImZvcm1EYXRhUG9saWN5XCI7XG5mdW5jdGlvbiBmb3JtRGF0YVRvRm9ybURhdGFNYXAoZm9ybURhdGEpIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3QgZm9ybURhdGFNYXAgPSB7fTtcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBmb3JtRGF0YS5lbnRyaWVzKCkpIHtcbiAgICAgICAgKF9hID0gZm9ybURhdGFNYXBba2V5XSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogKGZvcm1EYXRhTWFwW2tleV0gPSBbXSk7XG4gICAgICAgIGZvcm1EYXRhTWFwW2tleV0ucHVzaCh2YWx1ZSk7XG4gICAgfVxuICAgIHJldHVybiBmb3JtRGF0YU1hcDtcbn1cbi8qKlxuICogQSBwb2xpY3kgdGhhdCBlbmNvZGVzIEZvcm1EYXRhIG9uIHRoZSByZXF1ZXN0IGludG8gdGhlIGJvZHkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmb3JtRGF0YVBvbGljeSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBmb3JtRGF0YVBvbGljeU5hbWUsXG4gICAgICAgIGFzeW5jIHNlbmRSZXF1ZXN0KHJlcXVlc3QsIG5leHQpIHtcbiAgICAgICAgICAgIGlmIChpc05vZGVMaWtlICYmIHR5cGVvZiBGb3JtRGF0YSAhPT0gXCJ1bmRlZmluZWRcIiAmJiByZXF1ZXN0LmJvZHkgaW5zdGFuY2VvZiBGb3JtRGF0YSkge1xuICAgICAgICAgICAgICAgIHJlcXVlc3QuZm9ybURhdGEgPSBmb3JtRGF0YVRvRm9ybURhdGFNYXAocmVxdWVzdC5ib2R5KTtcbiAgICAgICAgICAgICAgICByZXF1ZXN0LmJvZHkgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocmVxdWVzdC5mb3JtRGF0YSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRlbnRUeXBlID0gcmVxdWVzdC5oZWFkZXJzLmdldChcIkNvbnRlbnQtVHlwZVwiKTtcbiAgICAgICAgICAgICAgICBpZiAoY29udGVudFR5cGUgJiYgY29udGVudFR5cGUuaW5kZXhPZihcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiKSAhPT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVxdWVzdC5ib2R5ID0gd3d3Rm9ybVVybEVuY29kZShyZXF1ZXN0LmZvcm1EYXRhKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGF3YWl0IHByZXBhcmVGb3JtRGF0YShyZXF1ZXN0LmZvcm1EYXRhLCByZXF1ZXN0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmVxdWVzdC5mb3JtRGF0YSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBuZXh0KHJlcXVlc3QpO1xuICAgICAgICB9LFxuICAgIH07XG59XG5mdW5jdGlvbiB3d3dGb3JtVXJsRW5jb2RlKGZvcm1EYXRhKSB7XG4gICAgY29uc3QgdXJsU2VhcmNoUGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcygpO1xuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKGZvcm1EYXRhKSkge1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3Qgc3ViVmFsdWUgb2YgdmFsdWUpIHtcbiAgICAgICAgICAgICAgICB1cmxTZWFyY2hQYXJhbXMuYXBwZW5kKGtleSwgc3ViVmFsdWUudG9TdHJpbmcoKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB1cmxTZWFyY2hQYXJhbXMuYXBwZW5kKGtleSwgdmFsdWUudG9TdHJpbmcoKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHVybFNlYXJjaFBhcmFtcy50b1N0cmluZygpO1xufVxuYXN5bmMgZnVuY3Rpb24gcHJlcGFyZUZvcm1EYXRhKGZvcm1EYXRhLCByZXF1ZXN0KSB7XG4gICAgLy8gdmFsaWRhdGUgY29udGVudCB0eXBlIChtdWx0aXBhcnQvZm9ybS1kYXRhKVxuICAgIGNvbnN0IGNvbnRlbnRUeXBlID0gcmVxdWVzdC5oZWFkZXJzLmdldChcIkNvbnRlbnQtVHlwZVwiKTtcbiAgICBpZiAoY29udGVudFR5cGUgJiYgIWNvbnRlbnRUeXBlLnN0YXJ0c1dpdGgoXCJtdWx0aXBhcnQvZm9ybS1kYXRhXCIpKSB7XG4gICAgICAgIC8vIGNvbnRlbnQgdHlwZSBpcyBzcGVjaWZpZWQgYW5kIGlzIG5vdCBtdWx0aXBhcnQvZm9ybS1kYXRhLiBFeGl0LlxuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHJlcXVlc3QuaGVhZGVycy5zZXQoXCJDb250ZW50LVR5cGVcIiwgY29udGVudFR5cGUgIT09IG51bGwgJiYgY29udGVudFR5cGUgIT09IHZvaWQgMCA/IGNvbnRlbnRUeXBlIDogXCJtdWx0aXBhcnQvZm9ybS1kYXRhXCIpO1xuICAgIC8vIHNldCBib2R5IHRvIE11bHRpcGFydFJlcXVlc3RCb2R5IHVzaW5nIGNvbnRlbnQgZnJvbSBGb3JtRGF0YU1hcFxuICAgIGNvbnN0IHBhcnRzID0gW107XG4gICAgZm9yIChjb25zdCBbZmllbGROYW1lLCB2YWx1ZXNdIG9mIE9iamVjdC5lbnRyaWVzKGZvcm1EYXRhKSkge1xuICAgICAgICBmb3IgKGNvbnN0IHZhbHVlIG9mIEFycmF5LmlzQXJyYXkodmFsdWVzKSA/IHZhbHVlcyA6IFt2YWx1ZXNdKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgcGFydHMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IGNyZWF0ZUh0dHBIZWFkZXJzKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiQ29udGVudC1EaXNwb3NpdGlvblwiOiBgZm9ybS1kYXRhOyBuYW1lPVwiJHtmaWVsZE5hbWV9XCJgLFxuICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgYm9keTogc3RyaW5nVG9VaW50OEFycmF5KHZhbHVlLCBcInV0Zi04XCIpLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCB8fCB2YWx1ZSA9PT0gbnVsbCB8fCB0eXBlb2YgdmFsdWUgIT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuZXhwZWN0ZWQgdmFsdWUgZm9yIGtleSAke2ZpZWxkTmFtZX06ICR7dmFsdWV9LiBWYWx1ZSBzaG91bGQgYmUgc2VyaWFsaXplZCB0byBzdHJpbmcgZmlyc3QuYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyB1c2luZyB8fCBpbnN0ZWFkIG9mID8/IGhlcmUgc2luY2UgaWYgdmFsdWUubmFtZSBpcyBlbXB0eSB3ZSBzaG91bGQgY3JlYXRlIGEgZmlsZSBuYW1lXG4gICAgICAgICAgICAgICAgY29uc3QgZmlsZU5hbWUgPSB2YWx1ZS5uYW1lIHx8IFwiYmxvYlwiO1xuICAgICAgICAgICAgICAgIGNvbnN0IGhlYWRlcnMgPSBjcmVhdGVIdHRwSGVhZGVycygpO1xuICAgICAgICAgICAgICAgIGhlYWRlcnMuc2V0KFwiQ29udGVudC1EaXNwb3NpdGlvblwiLCBgZm9ybS1kYXRhOyBuYW1lPVwiJHtmaWVsZE5hbWV9XCI7IGZpbGVuYW1lPVwiJHtmaWxlTmFtZX1cImApO1xuICAgICAgICAgICAgICAgIC8vIGFnYWluLCB8fCBpcyB1c2VkIHNpbmNlIGFuIGVtcHR5IHZhbHVlLnR5cGUgbWVhbnMgdGhlIGNvbnRlbnQgdHlwZSBpcyB1bnNldFxuICAgICAgICAgICAgICAgIGhlYWRlcnMuc2V0KFwiQ29udGVudC1UeXBlXCIsIHZhbHVlLnR5cGUgfHwgXCJhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW1cIik7XG4gICAgICAgICAgICAgICAgcGFydHMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgIGhlYWRlcnMsXG4gICAgICAgICAgICAgICAgICAgIGJvZHk6IHZhbHVlLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJlcXVlc3QubXVsdGlwYXJ0Qm9keSA9IHsgcGFydHMgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZvcm1EYXRhUG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/formDataPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/logPolicy.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/logPolicy.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logPolicy: () => (/* binding */ logPolicy),\n/* harmony export */   logPolicyName: () => (/* binding */ logPolicyName)\n/* harmony export */ });\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../log.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js\");\n/* harmony import */ var _util_sanitizer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/sanitizer.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/sanitizer.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * The programmatic identifier of the logPolicy.\n */\nconst logPolicyName = \"logPolicy\";\n/**\n * A policy that logs all requests and responses.\n * @param options - Options to configure logPolicy.\n */\nfunction logPolicy(options = {}) {\n    var _a;\n    const logger = (_a = options.logger) !== null && _a !== void 0 ? _a : _log_js__WEBPACK_IMPORTED_MODULE_0__.logger.info;\n    const sanitizer = new _util_sanitizer_js__WEBPACK_IMPORTED_MODULE_1__.Sanitizer({\n        additionalAllowedHeaderNames: options.additionalAllowedHeaderNames,\n        additionalAllowedQueryParameters: options.additionalAllowedQueryParameters,\n    });\n    return {\n        name: logPolicyName,\n        async sendRequest(request, next) {\n            if (!logger.enabled) {\n                return next(request);\n            }\n            logger(`Request: ${sanitizer.sanitize(request)}`);\n            const response = await next(request);\n            logger(`Response status code: ${response.status}`);\n            logger(`Headers: ${sanitizer.sanitize(response.headers)}`);\n            return response;\n        },\n    };\n}\n//# sourceMappingURL=logPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9sb2dQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDaUQ7QUFDQTtBQUNqRDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ08sK0JBQStCO0FBQ3RDO0FBQ0EsMEVBQTBFLDJDQUFVO0FBQ3BGLDBCQUEwQix5REFBUztBQUNuQztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiw0QkFBNEI7QUFDM0Q7QUFDQSw0Q0FBNEMsZ0JBQWdCO0FBQzVELCtCQUErQixxQ0FBcUM7QUFDcEU7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZSAtIEhlbGxvIFNjcmlwdCBBSVxcbGlmZUFnZW50XFx2b2ljZS1saXZlLWFnZW50XFxzYW1wbGVzXFxyZWFjdFxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtcmVzdC1waXBlbGluZVxcZGlzdFxcZXNtXFxwb2xpY2llc1xcbG9nUG9saWN5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgbG9nZ2VyIGFzIGNvcmVMb2dnZXIgfSBmcm9tIFwiLi4vbG9nLmpzXCI7XG5pbXBvcnQgeyBTYW5pdGl6ZXIgfSBmcm9tIFwiLi4vdXRpbC9zYW5pdGl6ZXIuanNcIjtcbi8qKlxuICogVGhlIHByb2dyYW1tYXRpYyBpZGVudGlmaWVyIG9mIHRoZSBsb2dQb2xpY3kuXG4gKi9cbmV4cG9ydCBjb25zdCBsb2dQb2xpY3lOYW1lID0gXCJsb2dQb2xpY3lcIjtcbi8qKlxuICogQSBwb2xpY3kgdGhhdCBsb2dzIGFsbCByZXF1ZXN0cyBhbmQgcmVzcG9uc2VzLlxuICogQHBhcmFtIG9wdGlvbnMgLSBPcHRpb25zIHRvIGNvbmZpZ3VyZSBsb2dQb2xpY3kuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBsb2dQb2xpY3kob3B0aW9ucyA9IHt9KSB7XG4gICAgdmFyIF9hO1xuICAgIGNvbnN0IGxvZ2dlciA9IChfYSA9IG9wdGlvbnMubG9nZ2VyKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBjb3JlTG9nZ2VyLmluZm87XG4gICAgY29uc3Qgc2FuaXRpemVyID0gbmV3IFNhbml0aXplcih7XG4gICAgICAgIGFkZGl0aW9uYWxBbGxvd2VkSGVhZGVyTmFtZXM6IG9wdGlvbnMuYWRkaXRpb25hbEFsbG93ZWRIZWFkZXJOYW1lcyxcbiAgICAgICAgYWRkaXRpb25hbEFsbG93ZWRRdWVyeVBhcmFtZXRlcnM6IG9wdGlvbnMuYWRkaXRpb25hbEFsbG93ZWRRdWVyeVBhcmFtZXRlcnMsXG4gICAgfSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogbG9nUG9saWN5TmFtZSxcbiAgICAgICAgYXN5bmMgc2VuZFJlcXVlc3QocmVxdWVzdCwgbmV4dCkge1xuICAgICAgICAgICAgaWYgKCFsb2dnZXIuZW5hYmxlZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXh0KHJlcXVlc3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbG9nZ2VyKGBSZXF1ZXN0OiAke3Nhbml0aXplci5zYW5pdGl6ZShyZXF1ZXN0KX1gKTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgbmV4dChyZXF1ZXN0KTtcbiAgICAgICAgICAgIGxvZ2dlcihgUmVzcG9uc2Ugc3RhdHVzIGNvZGU6ICR7cmVzcG9uc2Uuc3RhdHVzfWApO1xuICAgICAgICAgICAgbG9nZ2VyKGBIZWFkZXJzOiAke3Nhbml0aXplci5zYW5pdGl6ZShyZXNwb25zZS5oZWFkZXJzKX1gKTtcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9nUG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/logPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/multipartPolicy.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/multipartPolicy.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   multipartPolicy: () => (/* binding */ multipartPolicy),\n/* harmony export */   multipartPolicyName: () => (/* binding */ multipartPolicyName)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _util_concat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/concat.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/concat.js\");\n/* harmony import */ var _util_typeGuards_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/typeGuards.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/typeGuards.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\nfunction generateBoundary() {\n    return `----AzSDKFormBoundary${(0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.randomUUID)()}`;\n}\nfunction encodeHeaders(headers) {\n    let result = \"\";\n    for (const [key, value] of headers) {\n        result += `${key}: ${value}\\r\\n`;\n    }\n    return result;\n}\nfunction getLength(source) {\n    if (source instanceof Uint8Array) {\n        return source.byteLength;\n    }\n    else if ((0,_util_typeGuards_js__WEBPACK_IMPORTED_MODULE_2__.isBlob)(source)) {\n        // if was created using createFile then -1 means we have an unknown size\n        return source.size === -1 ? undefined : source.size;\n    }\n    else {\n        return undefined;\n    }\n}\nfunction getTotalLength(sources) {\n    let total = 0;\n    for (const source of sources) {\n        const partLength = getLength(source);\n        if (partLength === undefined) {\n            return undefined;\n        }\n        else {\n            total += partLength;\n        }\n    }\n    return total;\n}\nasync function buildRequestBody(request, parts, boundary) {\n    const sources = [\n        (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(`--${boundary}`, \"utf-8\"),\n        ...parts.flatMap((part) => [\n            (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(\"\\r\\n\", \"utf-8\"),\n            (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(encodeHeaders(part.headers), \"utf-8\"),\n            (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(\"\\r\\n\", \"utf-8\"),\n            part.body,\n            (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(`\\r\\n--${boundary}`, \"utf-8\"),\n        ]),\n        (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(\"--\\r\\n\\r\\n\", \"utf-8\"),\n    ];\n    const contentLength = getTotalLength(sources);\n    if (contentLength) {\n        request.headers.set(\"Content-Length\", contentLength);\n    }\n    request.body = await (0,_util_concat_js__WEBPACK_IMPORTED_MODULE_1__.concat)(sources);\n}\n/**\n * Name of multipart policy\n */\nconst multipartPolicyName = \"multipartPolicy\";\nconst maxBoundaryLength = 70;\nconst validBoundaryCharacters = new Set(`abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'()+,-./:=?`);\nfunction assertValidBoundary(boundary) {\n    if (boundary.length > maxBoundaryLength) {\n        throw new Error(`Multipart boundary \"${boundary}\" exceeds maximum length of 70 characters`);\n    }\n    if (Array.from(boundary).some((x) => !validBoundaryCharacters.has(x))) {\n        throw new Error(`Multipart boundary \"${boundary}\" contains invalid characters`);\n    }\n}\n/**\n * Pipeline policy for multipart requests\n */\nfunction multipartPolicy() {\n    return {\n        name: multipartPolicyName,\n        async sendRequest(request, next) {\n            var _a;\n            if (!request.multipartBody) {\n                return next(request);\n            }\n            if (request.body) {\n                throw new Error(\"multipartBody and regular body cannot be set at the same time\");\n            }\n            let boundary = request.multipartBody.boundary;\n            const contentTypeHeader = (_a = request.headers.get(\"Content-Type\")) !== null && _a !== void 0 ? _a : \"multipart/mixed\";\n            const parsedHeader = contentTypeHeader.match(/^(multipart\\/[^ ;]+)(?:; *boundary=(.+))?$/);\n            if (!parsedHeader) {\n                throw new Error(`Got multipart request body, but content-type header was not multipart: ${contentTypeHeader}`);\n            }\n            const [, contentType, parsedBoundary] = parsedHeader;\n            if (parsedBoundary && boundary && parsedBoundary !== boundary) {\n                throw new Error(`Multipart boundary was specified as ${parsedBoundary} in the header, but got ${boundary} in the request body`);\n            }\n            boundary !== null && boundary !== void 0 ? boundary : (boundary = parsedBoundary);\n            if (boundary) {\n                assertValidBoundary(boundary);\n            }\n            else {\n                boundary = generateBoundary();\n            }\n            request.headers.set(\"Content-Type\", `${contentType}; boundary=${boundary}`);\n            await buildRequestBody(request, request.multipartBody.parts, boundary);\n            request.multipartBody = undefined;\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=multipartPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9tdWx0aXBhcnRQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ2tFO0FBQ3ZCO0FBQ0k7QUFDL0M7QUFDQSxtQ0FBbUMsNERBQVUsR0FBRztBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixJQUFJLElBQUksTUFBTTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsMkRBQU07QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLG9FQUFrQixNQUFNLFNBQVM7QUFDekM7QUFDQSxZQUFZLG9FQUFrQjtBQUM5QixZQUFZLG9FQUFrQjtBQUM5QixZQUFZLG9FQUFrQjtBQUM5QjtBQUNBLFlBQVksb0VBQWtCLFVBQVUsU0FBUztBQUNqRDtBQUNBLFFBQVEsb0VBQWtCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsdURBQU07QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLFNBQVM7QUFDeEQ7QUFDQTtBQUNBLCtDQUErQyxTQUFTO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJFQUEyRSxRQUFRO0FBQ25GO0FBQ0EsMEdBQTBHLGtCQUFrQjtBQUM1SDtBQUNBO0FBQ0E7QUFDQSx1RUFBdUUsZ0JBQWdCLHlCQUF5QixVQUFVO0FBQzFIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsY0FBYyxXQUFXLFNBQVM7QUFDckY7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmUgLSBIZWxsbyBTY3JpcHQgQUlcXGxpZmVBZ2VudFxcdm9pY2UtbGl2ZS1hZ2VudFxcc2FtcGxlc1xccmVhY3RcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXJlc3QtcGlwZWxpbmVcXGRpc3RcXGVzbVxccG9saWNpZXNcXG11bHRpcGFydFBvbGljeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IHJhbmRvbVVVSUQsIHN0cmluZ1RvVWludDhBcnJheSB9IGZyb20gXCJAYXp1cmUvY29yZS11dGlsXCI7XG5pbXBvcnQgeyBjb25jYXQgfSBmcm9tIFwiLi4vdXRpbC9jb25jYXQuanNcIjtcbmltcG9ydCB7IGlzQmxvYiB9IGZyb20gXCIuLi91dGlsL3R5cGVHdWFyZHMuanNcIjtcbmZ1bmN0aW9uIGdlbmVyYXRlQm91bmRhcnkoKSB7XG4gICAgcmV0dXJuIGAtLS0tQXpTREtGb3JtQm91bmRhcnkke3JhbmRvbVVVSUQoKX1gO1xufVxuZnVuY3Rpb24gZW5jb2RlSGVhZGVycyhoZWFkZXJzKSB7XG4gICAgbGV0IHJlc3VsdCA9IFwiXCI7XG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgaGVhZGVycykge1xuICAgICAgICByZXN1bHQgKz0gYCR7a2V5fTogJHt2YWx1ZX1cXHJcXG5gO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gZ2V0TGVuZ3RoKHNvdXJjZSkge1xuICAgIGlmIChzb3VyY2UgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICAgIHJldHVybiBzb3VyY2UuYnl0ZUxlbmd0aDtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNCbG9iKHNvdXJjZSkpIHtcbiAgICAgICAgLy8gaWYgd2FzIGNyZWF0ZWQgdXNpbmcgY3JlYXRlRmlsZSB0aGVuIC0xIG1lYW5zIHdlIGhhdmUgYW4gdW5rbm93biBzaXplXG4gICAgICAgIHJldHVybiBzb3VyY2Uuc2l6ZSA9PT0gLTEgPyB1bmRlZmluZWQgOiBzb3VyY2Uuc2l6ZTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxufVxuZnVuY3Rpb24gZ2V0VG90YWxMZW5ndGgoc291cmNlcykge1xuICAgIGxldCB0b3RhbCA9IDA7XG4gICAgZm9yIChjb25zdCBzb3VyY2Ugb2Ygc291cmNlcykge1xuICAgICAgICBjb25zdCBwYXJ0TGVuZ3RoID0gZ2V0TGVuZ3RoKHNvdXJjZSk7XG4gICAgICAgIGlmIChwYXJ0TGVuZ3RoID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0b3RhbCArPSBwYXJ0TGVuZ3RoO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0b3RhbDtcbn1cbmFzeW5jIGZ1bmN0aW9uIGJ1aWxkUmVxdWVzdEJvZHkocmVxdWVzdCwgcGFydHMsIGJvdW5kYXJ5KSB7XG4gICAgY29uc3Qgc291cmNlcyA9IFtcbiAgICAgICAgc3RyaW5nVG9VaW50OEFycmF5KGAtLSR7Ym91bmRhcnl9YCwgXCJ1dGYtOFwiKSxcbiAgICAgICAgLi4ucGFydHMuZmxhdE1hcCgocGFydCkgPT4gW1xuICAgICAgICAgICAgc3RyaW5nVG9VaW50OEFycmF5KFwiXFxyXFxuXCIsIFwidXRmLThcIiksXG4gICAgICAgICAgICBzdHJpbmdUb1VpbnQ4QXJyYXkoZW5jb2RlSGVhZGVycyhwYXJ0LmhlYWRlcnMpLCBcInV0Zi04XCIpLFxuICAgICAgICAgICAgc3RyaW5nVG9VaW50OEFycmF5KFwiXFxyXFxuXCIsIFwidXRmLThcIiksXG4gICAgICAgICAgICBwYXJ0LmJvZHksXG4gICAgICAgICAgICBzdHJpbmdUb1VpbnQ4QXJyYXkoYFxcclxcbi0tJHtib3VuZGFyeX1gLCBcInV0Zi04XCIpLFxuICAgICAgICBdKSxcbiAgICAgICAgc3RyaW5nVG9VaW50OEFycmF5KFwiLS1cXHJcXG5cXHJcXG5cIiwgXCJ1dGYtOFwiKSxcbiAgICBdO1xuICAgIGNvbnN0IGNvbnRlbnRMZW5ndGggPSBnZXRUb3RhbExlbmd0aChzb3VyY2VzKTtcbiAgICBpZiAoY29udGVudExlbmd0aCkge1xuICAgICAgICByZXF1ZXN0LmhlYWRlcnMuc2V0KFwiQ29udGVudC1MZW5ndGhcIiwgY29udGVudExlbmd0aCk7XG4gICAgfVxuICAgIHJlcXVlc3QuYm9keSA9IGF3YWl0IGNvbmNhdChzb3VyY2VzKTtcbn1cbi8qKlxuICogTmFtZSBvZiBtdWx0aXBhcnQgcG9saWN5XG4gKi9cbmV4cG9ydCBjb25zdCBtdWx0aXBhcnRQb2xpY3lOYW1lID0gXCJtdWx0aXBhcnRQb2xpY3lcIjtcbmNvbnN0IG1heEJvdW5kYXJ5TGVuZ3RoID0gNzA7XG5jb25zdCB2YWxpZEJvdW5kYXJ5Q2hhcmFjdGVycyA9IG5ldyBTZXQoYGFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVowMTIzNDU2Nzg5JygpKywtLi86PT9gKTtcbmZ1bmN0aW9uIGFzc2VydFZhbGlkQm91bmRhcnkoYm91bmRhcnkpIHtcbiAgICBpZiAoYm91bmRhcnkubGVuZ3RoID4gbWF4Qm91bmRhcnlMZW5ndGgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBNdWx0aXBhcnQgYm91bmRhcnkgXCIke2JvdW5kYXJ5fVwiIGV4Y2VlZHMgbWF4aW11bSBsZW5ndGggb2YgNzAgY2hhcmFjdGVyc2ApO1xuICAgIH1cbiAgICBpZiAoQXJyYXkuZnJvbShib3VuZGFyeSkuc29tZSgoeCkgPT4gIXZhbGlkQm91bmRhcnlDaGFyYWN0ZXJzLmhhcyh4KSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBNdWx0aXBhcnQgYm91bmRhcnkgXCIke2JvdW5kYXJ5fVwiIGNvbnRhaW5zIGludmFsaWQgY2hhcmFjdGVyc2ApO1xuICAgIH1cbn1cbi8qKlxuICogUGlwZWxpbmUgcG9saWN5IGZvciBtdWx0aXBhcnQgcmVxdWVzdHNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG11bHRpcGFydFBvbGljeSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBtdWx0aXBhcnRQb2xpY3lOYW1lLFxuICAgICAgICBhc3luYyBzZW5kUmVxdWVzdChyZXF1ZXN0LCBuZXh0KSB7XG4gICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICBpZiAoIXJlcXVlc3QubXVsdGlwYXJ0Qm9keSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXh0KHJlcXVlc3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHJlcXVlc3QuYm9keSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIm11bHRpcGFydEJvZHkgYW5kIHJlZ3VsYXIgYm9keSBjYW5ub3QgYmUgc2V0IGF0IHRoZSBzYW1lIHRpbWVcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsZXQgYm91bmRhcnkgPSByZXF1ZXN0Lm11bHRpcGFydEJvZHkuYm91bmRhcnk7XG4gICAgICAgICAgICBjb25zdCBjb250ZW50VHlwZUhlYWRlciA9IChfYSA9IHJlcXVlc3QuaGVhZGVycy5nZXQoXCJDb250ZW50LVR5cGVcIikpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFwibXVsdGlwYXJ0L21peGVkXCI7XG4gICAgICAgICAgICBjb25zdCBwYXJzZWRIZWFkZXIgPSBjb250ZW50VHlwZUhlYWRlci5tYXRjaCgvXihtdWx0aXBhcnRcXC9bXiA7XSspKD86OyAqYm91bmRhcnk9KC4rKSk/JC8pO1xuICAgICAgICAgICAgaWYgKCFwYXJzZWRIZWFkZXIpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEdvdCBtdWx0aXBhcnQgcmVxdWVzdCBib2R5LCBidXQgY29udGVudC10eXBlIGhlYWRlciB3YXMgbm90IG11bHRpcGFydDogJHtjb250ZW50VHlwZUhlYWRlcn1gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IFssIGNvbnRlbnRUeXBlLCBwYXJzZWRCb3VuZGFyeV0gPSBwYXJzZWRIZWFkZXI7XG4gICAgICAgICAgICBpZiAocGFyc2VkQm91bmRhcnkgJiYgYm91bmRhcnkgJiYgcGFyc2VkQm91bmRhcnkgIT09IGJvdW5kYXJ5KSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBNdWx0aXBhcnQgYm91bmRhcnkgd2FzIHNwZWNpZmllZCBhcyAke3BhcnNlZEJvdW5kYXJ5fSBpbiB0aGUgaGVhZGVyLCBidXQgZ290ICR7Ym91bmRhcnl9IGluIHRoZSByZXF1ZXN0IGJvZHlgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGJvdW5kYXJ5ICE9PSBudWxsICYmIGJvdW5kYXJ5ICE9PSB2b2lkIDAgPyBib3VuZGFyeSA6IChib3VuZGFyeSA9IHBhcnNlZEJvdW5kYXJ5KTtcbiAgICAgICAgICAgIGlmIChib3VuZGFyeSkge1xuICAgICAgICAgICAgICAgIGFzc2VydFZhbGlkQm91bmRhcnkoYm91bmRhcnkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgYm91bmRhcnkgPSBnZW5lcmF0ZUJvdW5kYXJ5KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXF1ZXN0LmhlYWRlcnMuc2V0KFwiQ29udGVudC1UeXBlXCIsIGAke2NvbnRlbnRUeXBlfTsgYm91bmRhcnk9JHtib3VuZGFyeX1gKTtcbiAgICAgICAgICAgIGF3YWl0IGJ1aWxkUmVxdWVzdEJvZHkocmVxdWVzdCwgcmVxdWVzdC5tdWx0aXBhcnRCb2R5LnBhcnRzLCBib3VuZGFyeSk7XG4gICAgICAgICAgICByZXF1ZXN0Lm11bHRpcGFydEJvZHkgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICByZXR1cm4gbmV4dChyZXF1ZXN0KTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bXVsdGlwYXJ0UG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/multipartPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/ndJsonPolicy.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/ndJsonPolicy.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ndJsonPolicy: () => (/* binding */ ndJsonPolicy),\n/* harmony export */   ndJsonPolicyName: () => (/* binding */ ndJsonPolicyName)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * The programmatic identifier of the ndJsonPolicy.\n */\nconst ndJsonPolicyName = \"ndJsonPolicy\";\n/**\n * ndJsonPolicy is a policy used to control keep alive settings for every request.\n */\nfunction ndJsonPolicy() {\n    return {\n        name: ndJsonPolicyName,\n        async sendRequest(request, next) {\n            // There currently isn't a good way to bypass the serializer\n            if (typeof request.body === \"string\" && request.body.startsWith(\"[\")) {\n                const body = JSON.parse(request.body);\n                if (Array.isArray(body)) {\n                    request.body = body.map((item) => JSON.stringify(item) + \"\\n\").join(\"\");\n                }\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=ndJsonPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9uZEpzb25Qb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZSAtIEhlbGxvIFNjcmlwdCBBSVxcbGlmZUFnZW50XFx2b2ljZS1saXZlLWFnZW50XFxzYW1wbGVzXFxyZWFjdFxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtcmVzdC1waXBlbGluZVxcZGlzdFxcZXNtXFxwb2xpY2llc1xcbmRKc29uUG9saWN5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqXG4gKiBUaGUgcHJvZ3JhbW1hdGljIGlkZW50aWZpZXIgb2YgdGhlIG5kSnNvblBvbGljeS5cbiAqL1xuZXhwb3J0IGNvbnN0IG5kSnNvblBvbGljeU5hbWUgPSBcIm5kSnNvblBvbGljeVwiO1xuLyoqXG4gKiBuZEpzb25Qb2xpY3kgaXMgYSBwb2xpY3kgdXNlZCB0byBjb250cm9sIGtlZXAgYWxpdmUgc2V0dGluZ3MgZm9yIGV2ZXJ5IHJlcXVlc3QuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBuZEpzb25Qb2xpY3koKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogbmRKc29uUG9saWN5TmFtZSxcbiAgICAgICAgYXN5bmMgc2VuZFJlcXVlc3QocmVxdWVzdCwgbmV4dCkge1xuICAgICAgICAgICAgLy8gVGhlcmUgY3VycmVudGx5IGlzbid0IGEgZ29vZCB3YXkgdG8gYnlwYXNzIHRoZSBzZXJpYWxpemVyXG4gICAgICAgICAgICBpZiAodHlwZW9mIHJlcXVlc3QuYm9keSA9PT0gXCJzdHJpbmdcIiAmJiByZXF1ZXN0LmJvZHkuc3RhcnRzV2l0aChcIltcIikpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBib2R5ID0gSlNPTi5wYXJzZShyZXF1ZXN0LmJvZHkpO1xuICAgICAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KGJvZHkpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlcXVlc3QuYm9keSA9IGJvZHkubWFwKChpdGVtKSA9PiBKU09OLnN0cmluZ2lmeShpdGVtKSArIFwiXFxuXCIpLmpvaW4oXCJcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG5leHQocmVxdWVzdCk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5kSnNvblBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/ndJsonPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/proxyPolicy.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/proxyPolicy.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDefaultProxySettings: () => (/* binding */ getDefaultProxySettings),\n/* harmony export */   globalNoProxyList: () => (/* binding */ globalNoProxyList),\n/* harmony export */   loadNoProxy: () => (/* binding */ loadNoProxy),\n/* harmony export */   proxyPolicy: () => (/* binding */ proxyPolicy),\n/* harmony export */   proxyPolicyName: () => (/* binding */ proxyPolicyName)\n/* harmony export */ });\n/* harmony import */ var https_proxy_agent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! https-proxy-agent */ \"(ssr)/./node_modules/https-proxy-agent/dist/index.js\");\n/* harmony import */ var http_proxy_agent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! http-proxy-agent */ \"(ssr)/./node_modules/http-proxy-agent/dist/index.js\");\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../log.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\nconst HTTPS_PROXY = \"HTTPS_PROXY\";\nconst HTTP_PROXY = \"HTTP_PROXY\";\nconst ALL_PROXY = \"ALL_PROXY\";\nconst NO_PROXY = \"NO_PROXY\";\n/**\n * The programmatic identifier of the proxyPolicy.\n */\nconst proxyPolicyName = \"proxyPolicy\";\n/**\n * Stores the patterns specified in NO_PROXY environment variable.\n * @internal\n */\nconst globalNoProxyList = [];\nlet noProxyListLoaded = false;\n/** A cache of whether a host should bypass the proxy. */\nconst globalBypassedMap = new Map();\nfunction getEnvironmentValue(name) {\n    if (process.env[name]) {\n        return process.env[name];\n    }\n    else if (process.env[name.toLowerCase()]) {\n        return process.env[name.toLowerCase()];\n    }\n    return undefined;\n}\nfunction loadEnvironmentProxyValue() {\n    if (!process) {\n        return undefined;\n    }\n    const httpsProxy = getEnvironmentValue(HTTPS_PROXY);\n    const allProxy = getEnvironmentValue(ALL_PROXY);\n    const httpProxy = getEnvironmentValue(HTTP_PROXY);\n    return httpsProxy || allProxy || httpProxy;\n}\n/**\n * Check whether the host of a given `uri` matches any pattern in the no proxy list.\n * If there's a match, any request sent to the same host shouldn't have the proxy settings set.\n * This implementation is a port of https://github.com/Azure/azure-sdk-for-net/blob/8cca811371159e527159c7eb65602477898683e2/sdk/core/Azure.Core/src/Pipeline/Internal/HttpEnvironmentProxy.cs#L210\n */\nfunction isBypassed(uri, noProxyList, bypassedMap) {\n    if (noProxyList.length === 0) {\n        return false;\n    }\n    const host = new URL(uri).hostname;\n    if (bypassedMap === null || bypassedMap === void 0 ? void 0 : bypassedMap.has(host)) {\n        return bypassedMap.get(host);\n    }\n    let isBypassedFlag = false;\n    for (const pattern of noProxyList) {\n        if (pattern[0] === \".\") {\n            // This should match either domain it self or any subdomain or host\n            // .foo.com will match foo.com it self or *.foo.com\n            if (host.endsWith(pattern)) {\n                isBypassedFlag = true;\n            }\n            else {\n                if (host.length === pattern.length - 1 && host === pattern.slice(1)) {\n                    isBypassedFlag = true;\n                }\n            }\n        }\n        else {\n            if (host === pattern) {\n                isBypassedFlag = true;\n            }\n        }\n    }\n    bypassedMap === null || bypassedMap === void 0 ? void 0 : bypassedMap.set(host, isBypassedFlag);\n    return isBypassedFlag;\n}\nfunction loadNoProxy() {\n    const noProxy = getEnvironmentValue(NO_PROXY);\n    noProxyListLoaded = true;\n    if (noProxy) {\n        return noProxy\n            .split(\",\")\n            .map((item) => item.trim())\n            .filter((item) => item.length);\n    }\n    return [];\n}\n/**\n * This method converts a proxy url into `ProxySettings` for use with ProxyPolicy.\n * If no argument is given, it attempts to parse a proxy URL from the environment\n * variables `HTTPS_PROXY` or `HTTP_PROXY`.\n * @param proxyUrl - The url of the proxy to use. May contain authentication information.\n * @deprecated - Internally this method is no longer necessary when setting proxy information.\n */\nfunction getDefaultProxySettings(proxyUrl) {\n    if (!proxyUrl) {\n        proxyUrl = loadEnvironmentProxyValue();\n        if (!proxyUrl) {\n            return undefined;\n        }\n    }\n    const parsedUrl = new URL(proxyUrl);\n    const schema = parsedUrl.protocol ? parsedUrl.protocol + \"//\" : \"\";\n    return {\n        host: schema + parsedUrl.hostname,\n        port: Number.parseInt(parsedUrl.port || \"80\"),\n        username: parsedUrl.username,\n        password: parsedUrl.password,\n    };\n}\n/**\n * This method attempts to parse a proxy URL from the environment\n * variables `HTTPS_PROXY` or `HTTP_PROXY`.\n */\nfunction getDefaultProxySettingsInternal() {\n    const envProxy = loadEnvironmentProxyValue();\n    return envProxy ? new URL(envProxy) : undefined;\n}\nfunction getUrlFromProxySettings(settings) {\n    let parsedProxyUrl;\n    try {\n        parsedProxyUrl = new URL(settings.host);\n    }\n    catch (_a) {\n        throw new Error(`Expecting a valid host string in proxy settings, but found \"${settings.host}\".`);\n    }\n    parsedProxyUrl.port = String(settings.port);\n    if (settings.username) {\n        parsedProxyUrl.username = settings.username;\n    }\n    if (settings.password) {\n        parsedProxyUrl.password = settings.password;\n    }\n    return parsedProxyUrl;\n}\nfunction setProxyAgentOnRequest(request, cachedAgents, proxyUrl) {\n    // Custom Agent should take precedence so if one is present\n    // we should skip to avoid overwriting it.\n    if (request.agent) {\n        return;\n    }\n    const url = new URL(request.url);\n    const isInsecure = url.protocol !== \"https:\";\n    if (request.tlsSettings) {\n        _log_js__WEBPACK_IMPORTED_MODULE_2__.logger.warning(\"TLS settings are not supported in combination with custom Proxy, certificates provided to the client will be ignored.\");\n    }\n    const headers = request.headers.toJSON();\n    if (isInsecure) {\n        if (!cachedAgents.httpProxyAgent) {\n            cachedAgents.httpProxyAgent = new http_proxy_agent__WEBPACK_IMPORTED_MODULE_1__.HttpProxyAgent(proxyUrl, { headers });\n        }\n        request.agent = cachedAgents.httpProxyAgent;\n    }\n    else {\n        if (!cachedAgents.httpsProxyAgent) {\n            cachedAgents.httpsProxyAgent = new https_proxy_agent__WEBPACK_IMPORTED_MODULE_0__.HttpsProxyAgent(proxyUrl, { headers });\n        }\n        request.agent = cachedAgents.httpsProxyAgent;\n    }\n}\n/**\n * A policy that allows one to apply proxy settings to all requests.\n * If not passed static settings, they will be retrieved from the HTTPS_PROXY\n * or HTTP_PROXY environment variables.\n * @param proxySettings - ProxySettings to use on each request.\n * @param options - additional settings, for example, custom NO_PROXY patterns\n */\nfunction proxyPolicy(proxySettings, options) {\n    if (!noProxyListLoaded) {\n        globalNoProxyList.push(...loadNoProxy());\n    }\n    const defaultProxy = proxySettings\n        ? getUrlFromProxySettings(proxySettings)\n        : getDefaultProxySettingsInternal();\n    const cachedAgents = {};\n    return {\n        name: proxyPolicyName,\n        async sendRequest(request, next) {\n            var _a;\n            if (!request.proxySettings &&\n                defaultProxy &&\n                !isBypassed(request.url, (_a = options === null || options === void 0 ? void 0 : options.customNoProxyList) !== null && _a !== void 0 ? _a : globalNoProxyList, (options === null || options === void 0 ? void 0 : options.customNoProxyList) ? undefined : globalBypassedMap)) {\n                setProxyAgentOnRequest(request, cachedAgents, defaultProxy);\n            }\n            else if (request.proxySettings) {\n                setProxyAgentOnRequest(request, cachedAgents, getUrlFromProxySettings(request.proxySettings));\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=proxyPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/proxyPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/redirectPolicy.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/redirectPolicy.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   redirectPolicy: () => (/* binding */ redirectPolicy),\n/* harmony export */   redirectPolicyName: () => (/* binding */ redirectPolicyName)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * The programmatic identifier of the redirectPolicy.\n */\nconst redirectPolicyName = \"redirectPolicy\";\n/**\n * Methods that are allowed to follow redirects 301 and 302\n */\nconst allowedRedirect = [\"GET\", \"HEAD\"];\n/**\n * A policy to follow Location headers from the server in order\n * to support server-side redirection.\n * In the browser, this policy is not used.\n * @param options - Options to control policy behavior.\n */\nfunction redirectPolicy(options = {}) {\n    const { maxRetries = 20 } = options;\n    return {\n        name: redirectPolicyName,\n        async sendRequest(request, next) {\n            const response = await next(request);\n            return handleRedirect(next, response, maxRetries);\n        },\n    };\n}\nasync function handleRedirect(next, response, maxRetries, currentRetries = 0) {\n    const { request, status, headers } = response;\n    const locationHeader = headers.get(\"location\");\n    if (locationHeader &&\n        (status === 300 ||\n            (status === 301 && allowedRedirect.includes(request.method)) ||\n            (status === 302 && allowedRedirect.includes(request.method)) ||\n            (status === 303 && request.method === \"POST\") ||\n            status === 307) &&\n        currentRetries < maxRetries) {\n        const url = new URL(locationHeader, request.url);\n        request.url = url.toString();\n        // POST request with Status code 303 should be converted into a\n        // redirected GET request if the redirect url is present in the location header\n        if (status === 303) {\n            request.method = \"GET\";\n            request.headers.delete(\"Content-Length\");\n            delete request.body;\n        }\n        request.headers.delete(\"Authorization\");\n        const res = await next(request);\n        return handleRedirect(next, res, maxRetries, currentRetries + 1);\n    }\n    return response;\n}\n//# sourceMappingURL=redirectPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9yZWRpcmVjdFBvbGljeS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sb0NBQW9DO0FBQzNDLFlBQVksa0JBQWtCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsWUFBWSwyQkFBMkI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZSAtIEhlbGxvIFNjcmlwdCBBSVxcbGlmZUFnZW50XFx2b2ljZS1saXZlLWFnZW50XFxzYW1wbGVzXFxyZWFjdFxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtcmVzdC1waXBlbGluZVxcZGlzdFxcZXNtXFxwb2xpY2llc1xccmVkaXJlY3RQb2xpY3kuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vKipcbiAqIFRoZSBwcm9ncmFtbWF0aWMgaWRlbnRpZmllciBvZiB0aGUgcmVkaXJlY3RQb2xpY3kuXG4gKi9cbmV4cG9ydCBjb25zdCByZWRpcmVjdFBvbGljeU5hbWUgPSBcInJlZGlyZWN0UG9saWN5XCI7XG4vKipcbiAqIE1ldGhvZHMgdGhhdCBhcmUgYWxsb3dlZCB0byBmb2xsb3cgcmVkaXJlY3RzIDMwMSBhbmQgMzAyXG4gKi9cbmNvbnN0IGFsbG93ZWRSZWRpcmVjdCA9IFtcIkdFVFwiLCBcIkhFQURcIl07XG4vKipcbiAqIEEgcG9saWN5IHRvIGZvbGxvdyBMb2NhdGlvbiBoZWFkZXJzIGZyb20gdGhlIHNlcnZlciBpbiBvcmRlclxuICogdG8gc3VwcG9ydCBzZXJ2ZXItc2lkZSByZWRpcmVjdGlvbi5cbiAqIEluIHRoZSBicm93c2VyLCB0aGlzIHBvbGljeSBpcyBub3QgdXNlZC5cbiAqIEBwYXJhbSBvcHRpb25zIC0gT3B0aW9ucyB0byBjb250cm9sIHBvbGljeSBiZWhhdmlvci5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlZGlyZWN0UG9saWN5KG9wdGlvbnMgPSB7fSkge1xuICAgIGNvbnN0IHsgbWF4UmV0cmllcyA9IDIwIH0gPSBvcHRpb25zO1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IHJlZGlyZWN0UG9saWN5TmFtZSxcbiAgICAgICAgYXN5bmMgc2VuZFJlcXVlc3QocmVxdWVzdCwgbmV4dCkge1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBuZXh0KHJlcXVlc3QpO1xuICAgICAgICAgICAgcmV0dXJuIGhhbmRsZVJlZGlyZWN0KG5leHQsIHJlc3BvbnNlLCBtYXhSZXRyaWVzKTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuYXN5bmMgZnVuY3Rpb24gaGFuZGxlUmVkaXJlY3QobmV4dCwgcmVzcG9uc2UsIG1heFJldHJpZXMsIGN1cnJlbnRSZXRyaWVzID0gMCkge1xuICAgIGNvbnN0IHsgcmVxdWVzdCwgc3RhdHVzLCBoZWFkZXJzIH0gPSByZXNwb25zZTtcbiAgICBjb25zdCBsb2NhdGlvbkhlYWRlciA9IGhlYWRlcnMuZ2V0KFwibG9jYXRpb25cIik7XG4gICAgaWYgKGxvY2F0aW9uSGVhZGVyICYmXG4gICAgICAgIChzdGF0dXMgPT09IDMwMCB8fFxuICAgICAgICAgICAgKHN0YXR1cyA9PT0gMzAxICYmIGFsbG93ZWRSZWRpcmVjdC5pbmNsdWRlcyhyZXF1ZXN0Lm1ldGhvZCkpIHx8XG4gICAgICAgICAgICAoc3RhdHVzID09PSAzMDIgJiYgYWxsb3dlZFJlZGlyZWN0LmluY2x1ZGVzKHJlcXVlc3QubWV0aG9kKSkgfHxcbiAgICAgICAgICAgIChzdGF0dXMgPT09IDMwMyAmJiByZXF1ZXN0Lm1ldGhvZCA9PT0gXCJQT1NUXCIpIHx8XG4gICAgICAgICAgICBzdGF0dXMgPT09IDMwNykgJiZcbiAgICAgICAgY3VycmVudFJldHJpZXMgPCBtYXhSZXRyaWVzKSB7XG4gICAgICAgIGNvbnN0IHVybCA9IG5ldyBVUkwobG9jYXRpb25IZWFkZXIsIHJlcXVlc3QudXJsKTtcbiAgICAgICAgcmVxdWVzdC51cmwgPSB1cmwudG9TdHJpbmcoKTtcbiAgICAgICAgLy8gUE9TVCByZXF1ZXN0IHdpdGggU3RhdHVzIGNvZGUgMzAzIHNob3VsZCBiZSBjb252ZXJ0ZWQgaW50byBhXG4gICAgICAgIC8vIHJlZGlyZWN0ZWQgR0VUIHJlcXVlc3QgaWYgdGhlIHJlZGlyZWN0IHVybCBpcyBwcmVzZW50IGluIHRoZSBsb2NhdGlvbiBoZWFkZXJcbiAgICAgICAgaWYgKHN0YXR1cyA9PT0gMzAzKSB7XG4gICAgICAgICAgICByZXF1ZXN0Lm1ldGhvZCA9IFwiR0VUXCI7XG4gICAgICAgICAgICByZXF1ZXN0LmhlYWRlcnMuZGVsZXRlKFwiQ29udGVudC1MZW5ndGhcIik7XG4gICAgICAgICAgICBkZWxldGUgcmVxdWVzdC5ib2R5O1xuICAgICAgICB9XG4gICAgICAgIHJlcXVlc3QuaGVhZGVycy5kZWxldGUoXCJBdXRob3JpemF0aW9uXCIpO1xuICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBuZXh0KHJlcXVlc3QpO1xuICAgICAgICByZXR1cm4gaGFuZGxlUmVkaXJlY3QobmV4dCwgcmVzLCBtYXhSZXRyaWVzLCBjdXJyZW50UmV0cmllcyArIDEpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzcG9uc2U7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWRpcmVjdFBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/redirectPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/retryPolicy.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/retryPolicy.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   retryPolicy: () => (/* binding */ retryPolicy)\n/* harmony export */ });\n/* harmony import */ var _util_helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/helpers.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/helpers.js\");\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/logger */ \"(ssr)/./node_modules/@azure/logger/dist/esm/index.js\");\n/* harmony import */ var _azure_abort_controller__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/abort-controller */ \"(ssr)/./node_modules/@azure/abort-controller/dist/esm/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\nconst retryPolicyLogger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_1__.createClientLogger)(\"core-rest-pipeline retryPolicy\");\n/**\n * The programmatic identifier of the retryPolicy.\n */\nconst retryPolicyName = \"retryPolicy\";\n/**\n * retryPolicy is a generic policy to enable retrying requests when certain conditions are met\n */\nfunction retryPolicy(strategies, options = { maxRetries: _constants_js__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_RETRY_POLICY_COUNT }) {\n    const logger = options.logger || retryPolicyLogger;\n    return {\n        name: retryPolicyName,\n        async sendRequest(request, next) {\n            var _a, _b;\n            let response;\n            let responseError;\n            let retryCount = -1;\n            retryRequest: while (true) {\n                retryCount += 1;\n                response = undefined;\n                responseError = undefined;\n                try {\n                    logger.info(`Retry ${retryCount}: Attempting to send request`, request.requestId);\n                    response = await next(request);\n                    logger.info(`Retry ${retryCount}: Received a response from request`, request.requestId);\n                }\n                catch (e) {\n                    logger.error(`Retry ${retryCount}: Received an error from request`, request.requestId);\n                    // RestErrors are valid targets for the retry strategies.\n                    // If none of the retry strategies can work with them, they will be thrown later in this policy.\n                    // If the received error is not a RestError, it is immediately thrown.\n                    responseError = e;\n                    if (!e || responseError.name !== \"RestError\") {\n                        throw e;\n                    }\n                    response = responseError.response;\n                }\n                if ((_a = request.abortSignal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                    logger.error(`Retry ${retryCount}: Request aborted.`);\n                    const abortError = new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_2__.AbortError();\n                    throw abortError;\n                }\n                if (retryCount >= ((_b = options.maxRetries) !== null && _b !== void 0 ? _b : _constants_js__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_RETRY_POLICY_COUNT)) {\n                    logger.info(`Retry ${retryCount}: Maximum retries reached. Returning the last received response, or throwing the last received error.`);\n                    if (responseError) {\n                        throw responseError;\n                    }\n                    else if (response) {\n                        return response;\n                    }\n                    else {\n                        throw new Error(\"Maximum retries reached with no response or error to throw\");\n                    }\n                }\n                logger.info(`Retry ${retryCount}: Processing ${strategies.length} retry strategies.`);\n                strategiesLoop: for (const strategy of strategies) {\n                    const strategyLogger = strategy.logger || retryPolicyLogger;\n                    strategyLogger.info(`Retry ${retryCount}: Processing retry strategy ${strategy.name}.`);\n                    const modifiers = strategy.retry({\n                        retryCount,\n                        response,\n                        responseError,\n                    });\n                    if (modifiers.skipStrategy) {\n                        strategyLogger.info(`Retry ${retryCount}: Skipped.`);\n                        continue strategiesLoop;\n                    }\n                    const { errorToThrow, retryAfterInMs, redirectTo } = modifiers;\n                    if (errorToThrow) {\n                        strategyLogger.error(`Retry ${retryCount}: Retry strategy ${strategy.name} throws error:`, errorToThrow);\n                        throw errorToThrow;\n                    }\n                    if (retryAfterInMs || retryAfterInMs === 0) {\n                        strategyLogger.info(`Retry ${retryCount}: Retry strategy ${strategy.name} retries after ${retryAfterInMs}`);\n                        await (0,_util_helpers_js__WEBPACK_IMPORTED_MODULE_0__.delay)(retryAfterInMs, undefined, { abortSignal: request.abortSignal });\n                        continue retryRequest;\n                    }\n                    if (redirectTo) {\n                        strategyLogger.info(`Retry ${retryCount}: Retry strategy ${strategy.name} redirects to ${redirectTo}`);\n                        request.url = redirectTo;\n                        continue retryRequest;\n                    }\n                }\n                if (responseError) {\n                    logger.info(`None of the retry strategies could work with the received error. Throwing it.`);\n                    throw responseError;\n                }\n                if (response) {\n                    logger.info(`None of the retry strategies could work with the received response. Returning it.`);\n                    return response;\n                }\n                // If all the retries skip and there's no response,\n                // we're still in the retry loop, so a new request will be sent\n                // until `maxRetries` is reached.\n            }\n        },\n    };\n}\n//# sourceMappingURL=retryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/retryPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/setClientRequestIdPolicy.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/setClientRequestIdPolicy.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setClientRequestIdPolicy: () => (/* binding */ setClientRequestIdPolicy),\n/* harmony export */   setClientRequestIdPolicyName: () => (/* binding */ setClientRequestIdPolicyName)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * The programmatic identifier of the setClientRequestIdPolicy.\n */\nconst setClientRequestIdPolicyName = \"setClientRequestIdPolicy\";\n/**\n * Each PipelineRequest gets a unique id upon creation.\n * This policy passes that unique id along via an HTTP header to enable better\n * telemetry and tracing.\n * @param requestIdHeaderName - The name of the header to pass the request ID to.\n */\nfunction setClientRequestIdPolicy(requestIdHeaderName = \"x-ms-client-request-id\") {\n    return {\n        name: setClientRequestIdPolicyName,\n        async sendRequest(request, next) {\n            if (!request.headers.has(requestIdHeaderName)) {\n                request.headers.set(requestIdHeaderName, request.requestId);\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=setClientRequestIdPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9zZXRDbGllbnRSZXF1ZXN0SWRQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmUgLSBIZWxsbyBTY3JpcHQgQUlcXGxpZmVBZ2VudFxcdm9pY2UtbGl2ZS1hZ2VudFxcc2FtcGxlc1xccmVhY3RcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXJlc3QtcGlwZWxpbmVcXGRpc3RcXGVzbVxccG9saWNpZXNcXHNldENsaWVudFJlcXVlc3RJZFBvbGljeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbi8qKlxuICogVGhlIHByb2dyYW1tYXRpYyBpZGVudGlmaWVyIG9mIHRoZSBzZXRDbGllbnRSZXF1ZXN0SWRQb2xpY3kuXG4gKi9cbmV4cG9ydCBjb25zdCBzZXRDbGllbnRSZXF1ZXN0SWRQb2xpY3lOYW1lID0gXCJzZXRDbGllbnRSZXF1ZXN0SWRQb2xpY3lcIjtcbi8qKlxuICogRWFjaCBQaXBlbGluZVJlcXVlc3QgZ2V0cyBhIHVuaXF1ZSBpZCB1cG9uIGNyZWF0aW9uLlxuICogVGhpcyBwb2xpY3kgcGFzc2VzIHRoYXQgdW5pcXVlIGlkIGFsb25nIHZpYSBhbiBIVFRQIGhlYWRlciB0byBlbmFibGUgYmV0dGVyXG4gKiB0ZWxlbWV0cnkgYW5kIHRyYWNpbmcuXG4gKiBAcGFyYW0gcmVxdWVzdElkSGVhZGVyTmFtZSAtIFRoZSBuYW1lIG9mIHRoZSBoZWFkZXIgdG8gcGFzcyB0aGUgcmVxdWVzdCBJRCB0by5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldENsaWVudFJlcXVlc3RJZFBvbGljeShyZXF1ZXN0SWRIZWFkZXJOYW1lID0gXCJ4LW1zLWNsaWVudC1yZXF1ZXN0LWlkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBzZXRDbGllbnRSZXF1ZXN0SWRQb2xpY3lOYW1lLFxuICAgICAgICBhc3luYyBzZW5kUmVxdWVzdChyZXF1ZXN0LCBuZXh0KSB7XG4gICAgICAgICAgICBpZiAoIXJlcXVlc3QuaGVhZGVycy5oYXMocmVxdWVzdElkSGVhZGVyTmFtZSkpIHtcbiAgICAgICAgICAgICAgICByZXF1ZXN0LmhlYWRlcnMuc2V0KHJlcXVlc3RJZEhlYWRlck5hbWUsIHJlcXVlc3QucmVxdWVzdElkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBuZXh0KHJlcXVlc3QpO1xuICAgICAgICB9LFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZXRDbGllbnRSZXF1ZXN0SWRQb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/setClientRequestIdPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/systemErrorRetryPolicy.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/systemErrorRetryPolicy.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   systemErrorRetryPolicy: () => (/* binding */ systemErrorRetryPolicy),\n/* harmony export */   systemErrorRetryPolicyName: () => (/* binding */ systemErrorRetryPolicyName)\n/* harmony export */ });\n/* harmony import */ var _retryStrategies_exponentialRetryStrategy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../retryStrategies/exponentialRetryStrategy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/exponentialRetryStrategy.js\");\n/* harmony import */ var _retryPolicy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./retryPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/retryPolicy.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n/**\n * Name of the {@link systemErrorRetryPolicy}\n */\nconst systemErrorRetryPolicyName = \"systemErrorRetryPolicy\";\n/**\n * A retry policy that specifically seeks to handle errors in the\n * underlying transport layer (e.g. DNS lookup failures) rather than\n * retryable error codes from the server itself.\n * @param options - Options that customize the policy.\n */\nfunction systemErrorRetryPolicy(options = {}) {\n    var _a;\n    return {\n        name: systemErrorRetryPolicyName,\n        sendRequest: (0,_retryPolicy_js__WEBPACK_IMPORTED_MODULE_1__.retryPolicy)([\n            (0,_retryStrategies_exponentialRetryStrategy_js__WEBPACK_IMPORTED_MODULE_0__.exponentialRetryStrategy)(Object.assign(Object.assign({}, options), { ignoreHttpStatusCodes: true })),\n        ], {\n            maxRetries: (_a = options.maxRetries) !== null && _a !== void 0 ? _a : _constants_js__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_RETRY_POLICY_COUNT,\n        }).sendRequest,\n    };\n}\n//# sourceMappingURL=systemErrorRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9zeXN0ZW1FcnJvclJldHJ5UG9saWN5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUMwRjtBQUMzQztBQUNjO0FBQzdEO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyw0Q0FBNEM7QUFDbkQ7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDREQUFXO0FBQ2hDLFlBQVksc0dBQXdCLCtCQUErQixjQUFjLDZCQUE2QjtBQUM5RztBQUNBLG1GQUFtRixxRUFBMEI7QUFDN0csU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmUgLSBIZWxsbyBTY3JpcHQgQUlcXGxpZmVBZ2VudFxcdm9pY2UtbGl2ZS1hZ2VudFxcc2FtcGxlc1xccmVhY3RcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXJlc3QtcGlwZWxpbmVcXGRpc3RcXGVzbVxccG9saWNpZXNcXHN5c3RlbUVycm9yUmV0cnlQb2xpY3kuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBleHBvbmVudGlhbFJldHJ5U3RyYXRlZ3kgfSBmcm9tIFwiLi4vcmV0cnlTdHJhdGVnaWVzL2V4cG9uZW50aWFsUmV0cnlTdHJhdGVneS5qc1wiO1xuaW1wb3J0IHsgcmV0cnlQb2xpY3kgfSBmcm9tIFwiLi9yZXRyeVBvbGljeS5qc1wiO1xuaW1wb3J0IHsgREVGQVVMVF9SRVRSWV9QT0xJQ1lfQ09VTlQgfSBmcm9tIFwiLi4vY29uc3RhbnRzLmpzXCI7XG4vKipcbiAqIE5hbWUgb2YgdGhlIHtAbGluayBzeXN0ZW1FcnJvclJldHJ5UG9saWN5fVxuICovXG5leHBvcnQgY29uc3Qgc3lzdGVtRXJyb3JSZXRyeVBvbGljeU5hbWUgPSBcInN5c3RlbUVycm9yUmV0cnlQb2xpY3lcIjtcbi8qKlxuICogQSByZXRyeSBwb2xpY3kgdGhhdCBzcGVjaWZpY2FsbHkgc2Vla3MgdG8gaGFuZGxlIGVycm9ycyBpbiB0aGVcbiAqIHVuZGVybHlpbmcgdHJhbnNwb3J0IGxheWVyIChlLmcuIEROUyBsb29rdXAgZmFpbHVyZXMpIHJhdGhlciB0aGFuXG4gKiByZXRyeWFibGUgZXJyb3IgY29kZXMgZnJvbSB0aGUgc2VydmVyIGl0c2VsZi5cbiAqIEBwYXJhbSBvcHRpb25zIC0gT3B0aW9ucyB0aGF0IGN1c3RvbWl6ZSB0aGUgcG9saWN5LlxuICovXG5leHBvcnQgZnVuY3Rpb24gc3lzdGVtRXJyb3JSZXRyeVBvbGljeShvcHRpb25zID0ge30pIHtcbiAgICB2YXIgX2E7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogc3lzdGVtRXJyb3JSZXRyeVBvbGljeU5hbWUsXG4gICAgICAgIHNlbmRSZXF1ZXN0OiByZXRyeVBvbGljeShbXG4gICAgICAgICAgICBleHBvbmVudGlhbFJldHJ5U3RyYXRlZ3koT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBvcHRpb25zKSwgeyBpZ25vcmVIdHRwU3RhdHVzQ29kZXM6IHRydWUgfSkpLFxuICAgICAgICBdLCB7XG4gICAgICAgICAgICBtYXhSZXRyaWVzOiAoX2EgPSBvcHRpb25zLm1heFJldHJpZXMpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IERFRkFVTFRfUkVUUllfUE9MSUNZX0NPVU5ULFxuICAgICAgICB9KS5zZW5kUmVxdWVzdCxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3lzdGVtRXJyb3JSZXRyeVBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/systemErrorRetryPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/throttlingRetryPolicy.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/throttlingRetryPolicy.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   throttlingRetryPolicy: () => (/* binding */ throttlingRetryPolicy),\n/* harmony export */   throttlingRetryPolicyName: () => (/* binding */ throttlingRetryPolicyName)\n/* harmony export */ });\n/* harmony import */ var _retryStrategies_throttlingRetryStrategy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../retryStrategies/throttlingRetryStrategy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/throttlingRetryStrategy.js\");\n/* harmony import */ var _retryPolicy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./retryPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/retryPolicy.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n/**\n * Name of the {@link throttlingRetryPolicy}\n */\nconst throttlingRetryPolicyName = \"throttlingRetryPolicy\";\n/**\n * A policy that retries when the server sends a 429 response with a Retry-After header.\n *\n * To learn more, please refer to\n * https://learn.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-request-limits,\n * https://learn.microsoft.com/en-us/azure/azure-subscription-service-limits and\n * https://learn.microsoft.com/en-us/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors\n *\n * @param options - Options that configure retry logic.\n */\nfunction throttlingRetryPolicy(options = {}) {\n    var _a;\n    return {\n        name: throttlingRetryPolicyName,\n        sendRequest: (0,_retryPolicy_js__WEBPACK_IMPORTED_MODULE_1__.retryPolicy)([(0,_retryStrategies_throttlingRetryStrategy_js__WEBPACK_IMPORTED_MODULE_0__.throttlingRetryStrategy)()], {\n            maxRetries: (_a = options.maxRetries) !== null && _a !== void 0 ? _a : _constants_js__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_RETRY_POLICY_COUNT,\n        }).sendRequest,\n    };\n}\n//# sourceMappingURL=throttlingRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy90aHJvdHRsaW5nUmV0cnlQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ3dGO0FBQ3pDO0FBQ2M7QUFDN0Q7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sMkNBQTJDO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw0REFBVyxFQUFFLG9HQUF1QjtBQUN6RCxtRkFBbUYscUVBQTBCO0FBQzdHLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1yZXN0LXBpcGVsaW5lXFxkaXN0XFxlc21cXHBvbGljaWVzXFx0aHJvdHRsaW5nUmV0cnlQb2xpY3kuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyB0aHJvdHRsaW5nUmV0cnlTdHJhdGVneSB9IGZyb20gXCIuLi9yZXRyeVN0cmF0ZWdpZXMvdGhyb3R0bGluZ1JldHJ5U3RyYXRlZ3kuanNcIjtcbmltcG9ydCB7IHJldHJ5UG9saWN5IH0gZnJvbSBcIi4vcmV0cnlQb2xpY3kuanNcIjtcbmltcG9ydCB7IERFRkFVTFRfUkVUUllfUE9MSUNZX0NPVU5UIH0gZnJvbSBcIi4uL2NvbnN0YW50cy5qc1wiO1xuLyoqXG4gKiBOYW1lIG9mIHRoZSB7QGxpbmsgdGhyb3R0bGluZ1JldHJ5UG9saWN5fVxuICovXG5leHBvcnQgY29uc3QgdGhyb3R0bGluZ1JldHJ5UG9saWN5TmFtZSA9IFwidGhyb3R0bGluZ1JldHJ5UG9saWN5XCI7XG4vKipcbiAqIEEgcG9saWN5IHRoYXQgcmV0cmllcyB3aGVuIHRoZSBzZXJ2ZXIgc2VuZHMgYSA0MjkgcmVzcG9uc2Ugd2l0aCBhIFJldHJ5LUFmdGVyIGhlYWRlci5cbiAqXG4gKiBUbyBsZWFybiBtb3JlLCBwbGVhc2UgcmVmZXIgdG9cbiAqIGh0dHBzOi8vbGVhcm4ubWljcm9zb2Z0LmNvbS9lbi11cy9henVyZS9henVyZS1yZXNvdXJjZS1tYW5hZ2VyL3Jlc291cmNlLW1hbmFnZXItcmVxdWVzdC1saW1pdHMsXG4gKiBodHRwczovL2xlYXJuLm1pY3Jvc29mdC5jb20vZW4tdXMvYXp1cmUvYXp1cmUtc3Vic2NyaXB0aW9uLXNlcnZpY2UtbGltaXRzIGFuZFxuICogaHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL2VuLXVzL2F6dXJlL3ZpcnR1YWwtbWFjaGluZXMvdHJvdWJsZXNob290aW5nL3Ryb3VibGVzaG9vdGluZy10aHJvdHRsaW5nLWVycm9yc1xuICpcbiAqIEBwYXJhbSBvcHRpb25zIC0gT3B0aW9ucyB0aGF0IGNvbmZpZ3VyZSByZXRyeSBsb2dpYy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRocm90dGxpbmdSZXRyeVBvbGljeShvcHRpb25zID0ge30pIHtcbiAgICB2YXIgX2E7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogdGhyb3R0bGluZ1JldHJ5UG9saWN5TmFtZSxcbiAgICAgICAgc2VuZFJlcXVlc3Q6IHJldHJ5UG9saWN5KFt0aHJvdHRsaW5nUmV0cnlTdHJhdGVneSgpXSwge1xuICAgICAgICAgICAgbWF4UmV0cmllczogKF9hID0gb3B0aW9ucy5tYXhSZXRyaWVzKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBERUZBVUxUX1JFVFJZX1BPTElDWV9DT1VOVCxcbiAgICAgICAgfSkuc2VuZFJlcXVlc3QsXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRocm90dGxpbmdSZXRyeVBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/throttlingRetryPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tlsPolicy.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tlsPolicy.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tlsPolicy: () => (/* binding */ tlsPolicy),\n/* harmony export */   tlsPolicyName: () => (/* binding */ tlsPolicyName)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Name of the TLS Policy\n */\nconst tlsPolicyName = \"tlsPolicy\";\n/**\n * Gets a pipeline policy that adds the client certificate to the HttpClient agent for authentication.\n */\nfunction tlsPolicy(tlsSettings) {\n    return {\n        name: tlsPolicyName,\n        sendRequest: async (req, next) => {\n            // Users may define a request tlsSettings, honor those over the client level one\n            if (!req.tlsSettings) {\n                req.tlsSettings = tlsSettings;\n            }\n            return next(req);\n        },\n    };\n}\n//# sourceMappingURL=tlsPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy90bHNQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZSAtIEhlbGxvIFNjcmlwdCBBSVxcbGlmZUFnZW50XFx2b2ljZS1saXZlLWFnZW50XFxzYW1wbGVzXFxyZWFjdFxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtcmVzdC1waXBlbGluZVxcZGlzdFxcZXNtXFxwb2xpY2llc1xcdGxzUG9saWN5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqXG4gKiBOYW1lIG9mIHRoZSBUTFMgUG9saWN5XG4gKi9cbmV4cG9ydCBjb25zdCB0bHNQb2xpY3lOYW1lID0gXCJ0bHNQb2xpY3lcIjtcbi8qKlxuICogR2V0cyBhIHBpcGVsaW5lIHBvbGljeSB0aGF0IGFkZHMgdGhlIGNsaWVudCBjZXJ0aWZpY2F0ZSB0byB0aGUgSHR0cENsaWVudCBhZ2VudCBmb3IgYXV0aGVudGljYXRpb24uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0bHNQb2xpY3kodGxzU2V0dGluZ3MpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiB0bHNQb2xpY3lOYW1lLFxuICAgICAgICBzZW5kUmVxdWVzdDogYXN5bmMgKHJlcSwgbmV4dCkgPT4ge1xuICAgICAgICAgICAgLy8gVXNlcnMgbWF5IGRlZmluZSBhIHJlcXVlc3QgdGxzU2V0dGluZ3MsIGhvbm9yIHRob3NlIG92ZXIgdGhlIGNsaWVudCBsZXZlbCBvbmVcbiAgICAgICAgICAgIGlmICghcmVxLnRsc1NldHRpbmdzKSB7XG4gICAgICAgICAgICAgICAgcmVxLnRsc1NldHRpbmdzID0gdGxzU2V0dGluZ3M7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbmV4dChyZXEpO1xuICAgICAgICB9LFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10bHNQb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tlsPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tracingPolicy.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tracingPolicy.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tracingPolicy: () => (/* binding */ tracingPolicy),\n/* harmony export */   tracingPolicyName: () => (/* binding */ tracingPolicyName)\n/* harmony export */ });\n/* harmony import */ var _azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-tracing */ \"(ssr)/./node_modules/@azure/core-tracing/dist/esm/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js\");\n/* harmony import */ var _util_userAgent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/userAgent.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgent.js\");\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../log.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js\");\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/core-util */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _restError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../restError.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/restError.js\");\n/* harmony import */ var _util_sanitizer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/sanitizer.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/sanitizer.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n/**\n * The programmatic identifier of the tracingPolicy.\n */\nconst tracingPolicyName = \"tracingPolicy\";\n/**\n * A simple policy to create OpenTelemetry Spans for each request made by the pipeline\n * that has SpanOptions with a parent.\n * Requests made without a parent Span will not be recorded.\n * @param options - Options to configure the telemetry logged by the tracing policy.\n */\nfunction tracingPolicy(options = {}) {\n    const userAgentPromise = (0,_util_userAgent_js__WEBPACK_IMPORTED_MODULE_2__.getUserAgentValue)(options.userAgentPrefix);\n    const sanitizer = new _util_sanitizer_js__WEBPACK_IMPORTED_MODULE_6__.Sanitizer({\n        additionalAllowedQueryParameters: options.additionalAllowedQueryParameters,\n    });\n    const tracingClient = tryCreateTracingClient();\n    return {\n        name: tracingPolicyName,\n        async sendRequest(request, next) {\n            var _a;\n            if (!tracingClient) {\n                return next(request);\n            }\n            const userAgent = await userAgentPromise;\n            const spanAttributes = {\n                \"http.url\": sanitizer.sanitizeUrl(request.url),\n                \"http.method\": request.method,\n                \"http.user_agent\": userAgent,\n                requestId: request.requestId,\n            };\n            if (userAgent) {\n                spanAttributes[\"http.user_agent\"] = userAgent;\n            }\n            const { span, tracingContext } = (_a = tryCreateSpan(tracingClient, request, spanAttributes)) !== null && _a !== void 0 ? _a : {};\n            if (!span || !tracingContext) {\n                return next(request);\n            }\n            try {\n                const response = await tracingClient.withContext(tracingContext, next, request);\n                tryProcessResponse(span, response);\n                return response;\n            }\n            catch (err) {\n                tryProcessError(span, err);\n                throw err;\n            }\n        },\n    };\n}\nfunction tryCreateTracingClient() {\n    try {\n        return (0,_azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__.createTracingClient)({\n            namespace: \"\",\n            packageName: \"@azure/core-rest-pipeline\",\n            packageVersion: _constants_js__WEBPACK_IMPORTED_MODULE_1__.SDK_VERSION,\n        });\n    }\n    catch (e) {\n        _log_js__WEBPACK_IMPORTED_MODULE_3__.logger.warning(`Error when creating the TracingClient: ${(0,_azure_core_util__WEBPACK_IMPORTED_MODULE_4__.getErrorMessage)(e)}`);\n        return undefined;\n    }\n}\nfunction tryCreateSpan(tracingClient, request, spanAttributes) {\n    try {\n        // As per spec, we do not need to differentiate between HTTP and HTTPS in span name.\n        const { span, updatedOptions } = tracingClient.startSpan(`HTTP ${request.method}`, { tracingOptions: request.tracingOptions }, {\n            spanKind: \"client\",\n            spanAttributes,\n        });\n        // If the span is not recording, don't do any more work.\n        if (!span.isRecording()) {\n            span.end();\n            return undefined;\n        }\n        // set headers\n        const headers = tracingClient.createRequestHeaders(updatedOptions.tracingOptions.tracingContext);\n        for (const [key, value] of Object.entries(headers)) {\n            request.headers.set(key, value);\n        }\n        return { span, tracingContext: updatedOptions.tracingOptions.tracingContext };\n    }\n    catch (e) {\n        _log_js__WEBPACK_IMPORTED_MODULE_3__.logger.warning(`Skipping creating a tracing span due to an error: ${(0,_azure_core_util__WEBPACK_IMPORTED_MODULE_4__.getErrorMessage)(e)}`);\n        return undefined;\n    }\n}\nfunction tryProcessError(span, error) {\n    try {\n        span.setStatus({\n            status: \"error\",\n            error: (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_4__.isError)(error) ? error : undefined,\n        });\n        if ((0,_restError_js__WEBPACK_IMPORTED_MODULE_5__.isRestError)(error) && error.statusCode) {\n            span.setAttribute(\"http.status_code\", error.statusCode);\n        }\n        span.end();\n    }\n    catch (e) {\n        _log_js__WEBPACK_IMPORTED_MODULE_3__.logger.warning(`Skipping tracing span processing due to an error: ${(0,_azure_core_util__WEBPACK_IMPORTED_MODULE_4__.getErrorMessage)(e)}`);\n    }\n}\nfunction tryProcessResponse(span, response) {\n    try {\n        span.setAttribute(\"http.status_code\", response.status);\n        const serviceRequestId = response.headers.get(\"x-ms-request-id\");\n        if (serviceRequestId) {\n            span.setAttribute(\"serviceRequestId\", serviceRequestId);\n        }\n        // Per semantic conventions, only set the status to error if the status code is 4xx or 5xx.\n        // Otherwise, the status MUST remain unset.\n        // https://opentelemetry.io/docs/specs/semconv/http/http-spans/#status\n        if (response.status >= 400) {\n            span.setStatus({\n                status: \"error\",\n            });\n        }\n        span.end();\n    }\n    catch (e) {\n        _log_js__WEBPACK_IMPORTED_MODULE_3__.logger.warning(`Skipping tracing span processing due to an error: ${(0,_azure_core_util__WEBPACK_IMPORTED_MODULE_4__.getErrorMessage)(e)}`);\n    }\n}\n//# sourceMappingURL=tracingPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tracingPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/userAgentPolicy.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/userAgentPolicy.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   userAgentPolicy: () => (/* binding */ userAgentPolicy),\n/* harmony export */   userAgentPolicyName: () => (/* binding */ userAgentPolicyName)\n/* harmony export */ });\n/* harmony import */ var _util_userAgent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/userAgent.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgent.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nconst UserAgentHeaderName = (0,_util_userAgent_js__WEBPACK_IMPORTED_MODULE_0__.getUserAgentHeaderName)();\n/**\n * The programmatic identifier of the userAgentPolicy.\n */\nconst userAgentPolicyName = \"userAgentPolicy\";\n/**\n * A policy that sets the User-Agent header (or equivalent) to reflect\n * the library version.\n * @param options - Options to customize the user agent value.\n */\nfunction userAgentPolicy(options = {}) {\n    const userAgentValue = (0,_util_userAgent_js__WEBPACK_IMPORTED_MODULE_0__.getUserAgentValue)(options.userAgentPrefix);\n    return {\n        name: userAgentPolicyName,\n        async sendRequest(request, next) {\n            if (!request.headers.has(UserAgentHeaderName)) {\n                request.headers.set(UserAgentHeaderName, await userAgentValue);\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=userAgentPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy91c2VyQWdlbnRQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNpRjtBQUNqRiw0QkFBNEIsMEVBQXNCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHFDQUFxQztBQUM1QywyQkFBMkIscUVBQWlCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmUgLSBIZWxsbyBTY3JpcHQgQUlcXGxpZmVBZ2VudFxcdm9pY2UtbGl2ZS1hZ2VudFxcc2FtcGxlc1xccmVhY3RcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXJlc3QtcGlwZWxpbmVcXGRpc3RcXGVzbVxccG9saWNpZXNcXHVzZXJBZ2VudFBvbGljeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGdldFVzZXJBZ2VudEhlYWRlck5hbWUsIGdldFVzZXJBZ2VudFZhbHVlIH0gZnJvbSBcIi4uL3V0aWwvdXNlckFnZW50LmpzXCI7XG5jb25zdCBVc2VyQWdlbnRIZWFkZXJOYW1lID0gZ2V0VXNlckFnZW50SGVhZGVyTmFtZSgpO1xuLyoqXG4gKiBUaGUgcHJvZ3JhbW1hdGljIGlkZW50aWZpZXIgb2YgdGhlIHVzZXJBZ2VudFBvbGljeS5cbiAqL1xuZXhwb3J0IGNvbnN0IHVzZXJBZ2VudFBvbGljeU5hbWUgPSBcInVzZXJBZ2VudFBvbGljeVwiO1xuLyoqXG4gKiBBIHBvbGljeSB0aGF0IHNldHMgdGhlIFVzZXItQWdlbnQgaGVhZGVyIChvciBlcXVpdmFsZW50KSB0byByZWZsZWN0XG4gKiB0aGUgbGlicmFyeSB2ZXJzaW9uLlxuICogQHBhcmFtIG9wdGlvbnMgLSBPcHRpb25zIHRvIGN1c3RvbWl6ZSB0aGUgdXNlciBhZ2VudCB2YWx1ZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVzZXJBZ2VudFBvbGljeShvcHRpb25zID0ge30pIHtcbiAgICBjb25zdCB1c2VyQWdlbnRWYWx1ZSA9IGdldFVzZXJBZ2VudFZhbHVlKG9wdGlvbnMudXNlckFnZW50UHJlZml4KTtcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiB1c2VyQWdlbnRQb2xpY3lOYW1lLFxuICAgICAgICBhc3luYyBzZW5kUmVxdWVzdChyZXF1ZXN0LCBuZXh0KSB7XG4gICAgICAgICAgICBpZiAoIXJlcXVlc3QuaGVhZGVycy5oYXMoVXNlckFnZW50SGVhZGVyTmFtZSkpIHtcbiAgICAgICAgICAgICAgICByZXF1ZXN0LmhlYWRlcnMuc2V0KFVzZXJBZ2VudEhlYWRlck5hbWUsIGF3YWl0IHVzZXJBZ2VudFZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBuZXh0KHJlcXVlc3QpO1xuICAgICAgICB9LFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2VyQWdlbnRQb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/userAgentPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/restError.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/restError.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RestError: () => (/* binding */ RestError),\n/* harmony export */   isRestError: () => (/* binding */ isRestError)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _util_inspect_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/inspect.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/inspect.js\");\n/* harmony import */ var _util_sanitizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/sanitizer.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/sanitizer.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\nconst errorSanitizer = new _util_sanitizer_js__WEBPACK_IMPORTED_MODULE_2__.Sanitizer();\n/**\n * A custom error type for failed pipeline requests.\n */\nclass RestError extends Error {\n    constructor(message, options = {}) {\n        super(message);\n        this.name = \"RestError\";\n        this.code = options.code;\n        this.statusCode = options.statusCode;\n        // The request and response may contain sensitive information in the headers or body.\n        // To help prevent this sensitive information being accidentally logged, the request and response\n        // properties are marked as non-enumerable here. This prevents them showing up in the output of\n        // JSON.stringify and console.log.\n        Object.defineProperty(this, \"request\", { value: options.request, enumerable: false });\n        Object.defineProperty(this, \"response\", { value: options.response, enumerable: false });\n        Object.setPrototypeOf(this, RestError.prototype);\n    }\n    /**\n     * Logging method for util.inspect in Node\n     */\n    [_util_inspect_js__WEBPACK_IMPORTED_MODULE_1__.custom]() {\n        // Extract non-enumerable properties and add them back. This is OK since in this output the request and\n        // response get sanitized.\n        return `RestError: ${this.message} \\n ${errorSanitizer.sanitize(Object.assign(Object.assign({}, this), { request: this.request, response: this.response }))}`;\n    }\n}\n/**\n * Something went wrong when making the request.\n * This means the actual request failed for some reason,\n * such as a DNS issue or the connection being lost.\n */\nRestError.REQUEST_SEND_ERROR = \"REQUEST_SEND_ERROR\";\n/**\n * This means that parsing the response from the server failed.\n * It may have been malformed.\n */\nRestError.PARSE_ERROR = \"PARSE_ERROR\";\n/**\n * Typeguard for RestError\n * @param e - Something caught by a catch clause.\n */\nfunction isRestError(e) {\n    if (e instanceof RestError) {\n        return true;\n    }\n    return (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.isError)(e) && e.name === \"RestError\";\n}\n//# sourceMappingURL=restError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9yZXN0RXJyb3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQzJDO0FBQ0E7QUFDSztBQUNoRCwyQkFBMkIseURBQVM7QUFDcEM7QUFDQTtBQUNBO0FBQ087QUFDUCxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCwyQ0FBMkM7QUFDNUYsa0RBQWtELDRDQUE0QztBQUM5RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxvREFBTTtBQUNYO0FBQ0E7QUFDQSw2QkFBNkIsY0FBYyxLQUFLLHNEQUFzRCxXQUFXLGdEQUFnRCxHQUFHO0FBQ3BLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLFdBQVcseURBQU87QUFDbEI7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmUgLSBIZWxsbyBTY3JpcHQgQUlcXGxpZmVBZ2VudFxcdm9pY2UtbGl2ZS1hZ2VudFxcc2FtcGxlc1xccmVhY3RcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXJlc3QtcGlwZWxpbmVcXGRpc3RcXGVzbVxccmVzdEVycm9yLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgaXNFcnJvciB9IGZyb20gXCJAYXp1cmUvY29yZS11dGlsXCI7XG5pbXBvcnQgeyBjdXN0b20gfSBmcm9tIFwiLi91dGlsL2luc3BlY3QuanNcIjtcbmltcG9ydCB7IFNhbml0aXplciB9IGZyb20gXCIuL3V0aWwvc2FuaXRpemVyLmpzXCI7XG5jb25zdCBlcnJvclNhbml0aXplciA9IG5ldyBTYW5pdGl6ZXIoKTtcbi8qKlxuICogQSBjdXN0b20gZXJyb3IgdHlwZSBmb3IgZmFpbGVkIHBpcGVsaW5lIHJlcXVlc3RzLlxuICovXG5leHBvcnQgY2xhc3MgUmVzdEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5uYW1lID0gXCJSZXN0RXJyb3JcIjtcbiAgICAgICAgdGhpcy5jb2RlID0gb3B0aW9ucy5jb2RlO1xuICAgICAgICB0aGlzLnN0YXR1c0NvZGUgPSBvcHRpb25zLnN0YXR1c0NvZGU7XG4gICAgICAgIC8vIFRoZSByZXF1ZXN0IGFuZCByZXNwb25zZSBtYXkgY29udGFpbiBzZW5zaXRpdmUgaW5mb3JtYXRpb24gaW4gdGhlIGhlYWRlcnMgb3IgYm9keS5cbiAgICAgICAgLy8gVG8gaGVscCBwcmV2ZW50IHRoaXMgc2Vuc2l0aXZlIGluZm9ybWF0aW9uIGJlaW5nIGFjY2lkZW50YWxseSBsb2dnZWQsIHRoZSByZXF1ZXN0IGFuZCByZXNwb25zZVxuICAgICAgICAvLyBwcm9wZXJ0aWVzIGFyZSBtYXJrZWQgYXMgbm9uLWVudW1lcmFibGUgaGVyZS4gVGhpcyBwcmV2ZW50cyB0aGVtIHNob3dpbmcgdXAgaW4gdGhlIG91dHB1dCBvZlxuICAgICAgICAvLyBKU09OLnN0cmluZ2lmeSBhbmQgY29uc29sZS5sb2cuXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInJlcXVlc3RcIiwgeyB2YWx1ZTogb3B0aW9ucy5yZXF1ZXN0LCBlbnVtZXJhYmxlOiBmYWxzZSB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwicmVzcG9uc2VcIiwgeyB2YWx1ZTogb3B0aW9ucy5yZXNwb25zZSwgZW51bWVyYWJsZTogZmFsc2UgfSk7XG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBSZXN0RXJyb3IucHJvdG90eXBlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTG9nZ2luZyBtZXRob2QgZm9yIHV0aWwuaW5zcGVjdCBpbiBOb2RlXG4gICAgICovXG4gICAgW2N1c3RvbV0oKSB7XG4gICAgICAgIC8vIEV4dHJhY3Qgbm9uLWVudW1lcmFibGUgcHJvcGVydGllcyBhbmQgYWRkIHRoZW0gYmFjay4gVGhpcyBpcyBPSyBzaW5jZSBpbiB0aGlzIG91dHB1dCB0aGUgcmVxdWVzdCBhbmRcbiAgICAgICAgLy8gcmVzcG9uc2UgZ2V0IHNhbml0aXplZC5cbiAgICAgICAgcmV0dXJuIGBSZXN0RXJyb3I6ICR7dGhpcy5tZXNzYWdlfSBcXG4gJHtlcnJvclNhbml0aXplci5zYW5pdGl6ZShPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHRoaXMpLCB7IHJlcXVlc3Q6IHRoaXMucmVxdWVzdCwgcmVzcG9uc2U6IHRoaXMucmVzcG9uc2UgfSkpfWA7XG4gICAgfVxufVxuLyoqXG4gKiBTb21ldGhpbmcgd2VudCB3cm9uZyB3aGVuIG1ha2luZyB0aGUgcmVxdWVzdC5cbiAqIFRoaXMgbWVhbnMgdGhlIGFjdHVhbCByZXF1ZXN0IGZhaWxlZCBmb3Igc29tZSByZWFzb24sXG4gKiBzdWNoIGFzIGEgRE5TIGlzc3VlIG9yIHRoZSBjb25uZWN0aW9uIGJlaW5nIGxvc3QuXG4gKi9cblJlc3RFcnJvci5SRVFVRVNUX1NFTkRfRVJST1IgPSBcIlJFUVVFU1RfU0VORF9FUlJPUlwiO1xuLyoqXG4gKiBUaGlzIG1lYW5zIHRoYXQgcGFyc2luZyB0aGUgcmVzcG9uc2UgZnJvbSB0aGUgc2VydmVyIGZhaWxlZC5cbiAqIEl0IG1heSBoYXZlIGJlZW4gbWFsZm9ybWVkLlxuICovXG5SZXN0RXJyb3IuUEFSU0VfRVJST1IgPSBcIlBBUlNFX0VSUk9SXCI7XG4vKipcbiAqIFR5cGVndWFyZCBmb3IgUmVzdEVycm9yXG4gKiBAcGFyYW0gZSAtIFNvbWV0aGluZyBjYXVnaHQgYnkgYSBjYXRjaCBjbGF1c2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1Jlc3RFcnJvcihlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiBSZXN0RXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBpc0Vycm9yKGUpICYmIGUubmFtZSA9PT0gXCJSZXN0RXJyb3JcIjtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlc3RFcnJvci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/restError.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/exponentialRetryStrategy.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/exponentialRetryStrategy.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   exponentialRetryStrategy: () => (/* binding */ exponentialRetryStrategy),\n/* harmony export */   isExponentialRetryResponse: () => (/* binding */ isExponentialRetryResponse),\n/* harmony export */   isSystemError: () => (/* binding */ isSystemError)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _throttlingRetryStrategy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./throttlingRetryStrategy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/throttlingRetryStrategy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n// intervals are in milliseconds\nconst DEFAULT_CLIENT_RETRY_INTERVAL = 1000;\nconst DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 64;\n/**\n * A retry strategy that retries with an exponentially increasing delay in these two cases:\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails (408, greater or equal than 500, except for 501 and 505).\n */\nfunction exponentialRetryStrategy(options = {}) {\n    var _a, _b;\n    const retryInterval = (_a = options.retryDelayInMs) !== null && _a !== void 0 ? _a : DEFAULT_CLIENT_RETRY_INTERVAL;\n    const maxRetryInterval = (_b = options.maxRetryDelayInMs) !== null && _b !== void 0 ? _b : DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n    return {\n        name: \"exponentialRetryStrategy\",\n        retry({ retryCount, response, responseError }) {\n            const matchedSystemError = isSystemError(responseError);\n            const ignoreSystemErrors = matchedSystemError && options.ignoreSystemErrors;\n            const isExponential = isExponentialRetryResponse(response);\n            const ignoreExponentialResponse = isExponential && options.ignoreHttpStatusCodes;\n            const unknownResponse = response && ((0,_throttlingRetryStrategy_js__WEBPACK_IMPORTED_MODULE_1__.isThrottlingRetryResponse)(response) || !isExponential);\n            if (unknownResponse || ignoreExponentialResponse || ignoreSystemErrors) {\n                return { skipStrategy: true };\n            }\n            if (responseError && !matchedSystemError && !isExponential) {\n                return { errorToThrow: responseError };\n            }\n            return (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.calculateRetryDelay)(retryCount, {\n                retryDelayInMs: retryInterval,\n                maxRetryDelayInMs: maxRetryInterval,\n            });\n        },\n    };\n}\n/**\n * A response is a retry response if it has status codes:\n * - 408, or\n * - Greater or equal than 500, except for 501 and 505.\n */\nfunction isExponentialRetryResponse(response) {\n    return Boolean(response &&\n        response.status !== undefined &&\n        (response.status >= 500 || response.status === 408) &&\n        response.status !== 501 &&\n        response.status !== 505);\n}\n/**\n * Determines whether an error from a pipeline response was triggered in the network layer.\n */\nfunction isSystemError(err) {\n    if (!err) {\n        return false;\n    }\n    return (err.code === \"ETIMEDOUT\" ||\n        err.code === \"ESOCKETTIMEDOUT\" ||\n        err.code === \"ECONNREFUSED\" ||\n        err.code === \"ECONNRESET\" ||\n        err.code === \"ENOENT\" ||\n        err.code === \"ENOTFOUND\");\n}\n//# sourceMappingURL=exponentialRetryStrategy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9yZXRyeVN0cmF0ZWdpZXMvZXhwb25lbnRpYWxSZXRyeVN0cmF0ZWd5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUN1RDtBQUNrQjtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sOENBQThDO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IscUNBQXFDO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELHNGQUF5QjtBQUMxRTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0EsbUJBQW1CLHFFQUFtQjtBQUN0QztBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZSAtIEhlbGxvIFNjcmlwdCBBSVxcbGlmZUFnZW50XFx2b2ljZS1saXZlLWFnZW50XFxzYW1wbGVzXFxyZWFjdFxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtcmVzdC1waXBlbGluZVxcZGlzdFxcZXNtXFxyZXRyeVN0cmF0ZWdpZXNcXGV4cG9uZW50aWFsUmV0cnlTdHJhdGVneS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGNhbGN1bGF0ZVJldHJ5RGVsYXkgfSBmcm9tIFwiQGF6dXJlL2NvcmUtdXRpbFwiO1xuaW1wb3J0IHsgaXNUaHJvdHRsaW5nUmV0cnlSZXNwb25zZSB9IGZyb20gXCIuL3Rocm90dGxpbmdSZXRyeVN0cmF0ZWd5LmpzXCI7XG4vLyBpbnRlcnZhbHMgYXJlIGluIG1pbGxpc2Vjb25kc1xuY29uc3QgREVGQVVMVF9DTElFTlRfUkVUUllfSU5URVJWQUwgPSAxMDAwO1xuY29uc3QgREVGQVVMVF9DTElFTlRfTUFYX1JFVFJZX0lOVEVSVkFMID0gMTAwMCAqIDY0O1xuLyoqXG4gKiBBIHJldHJ5IHN0cmF0ZWd5IHRoYXQgcmV0cmllcyB3aXRoIGFuIGV4cG9uZW50aWFsbHkgaW5jcmVhc2luZyBkZWxheSBpbiB0aGVzZSB0d28gY2FzZXM6XG4gKiAtIFdoZW4gdGhlcmUgYXJlIGVycm9ycyBpbiB0aGUgdW5kZXJseWluZyB0cmFuc3BvcnQgbGF5ZXIgKGUuZy4gRE5TIGxvb2t1cCBmYWlsdXJlcykuXG4gKiAtIE9yIG90aGVyd2lzZSBpZiB0aGUgb3V0Z29pbmcgcmVxdWVzdCBmYWlscyAoNDA4LCBncmVhdGVyIG9yIGVxdWFsIHRoYW4gNTAwLCBleGNlcHQgZm9yIDUwMSBhbmQgNTA1KS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGV4cG9uZW50aWFsUmV0cnlTdHJhdGVneShvcHRpb25zID0ge30pIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIGNvbnN0IHJldHJ5SW50ZXJ2YWwgPSAoX2EgPSBvcHRpb25zLnJldHJ5RGVsYXlJbk1zKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBERUZBVUxUX0NMSUVOVF9SRVRSWV9JTlRFUlZBTDtcbiAgICBjb25zdCBtYXhSZXRyeUludGVydmFsID0gKF9iID0gb3B0aW9ucy5tYXhSZXRyeURlbGF5SW5NcykgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogREVGQVVMVF9DTElFTlRfTUFYX1JFVFJZX0lOVEVSVkFMO1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IFwiZXhwb25lbnRpYWxSZXRyeVN0cmF0ZWd5XCIsXG4gICAgICAgIHJldHJ5KHsgcmV0cnlDb3VudCwgcmVzcG9uc2UsIHJlc3BvbnNlRXJyb3IgfSkge1xuICAgICAgICAgICAgY29uc3QgbWF0Y2hlZFN5c3RlbUVycm9yID0gaXNTeXN0ZW1FcnJvcihyZXNwb25zZUVycm9yKTtcbiAgICAgICAgICAgIGNvbnN0IGlnbm9yZVN5c3RlbUVycm9ycyA9IG1hdGNoZWRTeXN0ZW1FcnJvciAmJiBvcHRpb25zLmlnbm9yZVN5c3RlbUVycm9ycztcbiAgICAgICAgICAgIGNvbnN0IGlzRXhwb25lbnRpYWwgPSBpc0V4cG9uZW50aWFsUmV0cnlSZXNwb25zZShyZXNwb25zZSk7XG4gICAgICAgICAgICBjb25zdCBpZ25vcmVFeHBvbmVudGlhbFJlc3BvbnNlID0gaXNFeHBvbmVudGlhbCAmJiBvcHRpb25zLmlnbm9yZUh0dHBTdGF0dXNDb2RlcztcbiAgICAgICAgICAgIGNvbnN0IHVua25vd25SZXNwb25zZSA9IHJlc3BvbnNlICYmIChpc1Rocm90dGxpbmdSZXRyeVJlc3BvbnNlKHJlc3BvbnNlKSB8fCAhaXNFeHBvbmVudGlhbCk7XG4gICAgICAgICAgICBpZiAodW5rbm93blJlc3BvbnNlIHx8IGlnbm9yZUV4cG9uZW50aWFsUmVzcG9uc2UgfHwgaWdub3JlU3lzdGVtRXJyb3JzKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgc2tpcFN0cmF0ZWd5OiB0cnVlIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocmVzcG9uc2VFcnJvciAmJiAhbWF0Y2hlZFN5c3RlbUVycm9yICYmICFpc0V4cG9uZW50aWFsKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgZXJyb3JUb1Rocm93OiByZXNwb25zZUVycm9yIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gY2FsY3VsYXRlUmV0cnlEZWxheShyZXRyeUNvdW50LCB7XG4gICAgICAgICAgICAgICAgcmV0cnlEZWxheUluTXM6IHJldHJ5SW50ZXJ2YWwsXG4gICAgICAgICAgICAgICAgbWF4UmV0cnlEZWxheUluTXM6IG1heFJldHJ5SW50ZXJ2YWwsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLyoqXG4gKiBBIHJlc3BvbnNlIGlzIGEgcmV0cnkgcmVzcG9uc2UgaWYgaXQgaGFzIHN0YXR1cyBjb2RlczpcbiAqIC0gNDA4LCBvclxuICogLSBHcmVhdGVyIG9yIGVxdWFsIHRoYW4gNTAwLCBleGNlcHQgZm9yIDUwMSBhbmQgNTA1LlxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNFeHBvbmVudGlhbFJldHJ5UmVzcG9uc2UocmVzcG9uc2UpIHtcbiAgICByZXR1cm4gQm9vbGVhbihyZXNwb25zZSAmJlxuICAgICAgICByZXNwb25zZS5zdGF0dXMgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAocmVzcG9uc2Uuc3RhdHVzID49IDUwMCB8fCByZXNwb25zZS5zdGF0dXMgPT09IDQwOCkgJiZcbiAgICAgICAgcmVzcG9uc2Uuc3RhdHVzICE9PSA1MDEgJiZcbiAgICAgICAgcmVzcG9uc2Uuc3RhdHVzICE9PSA1MDUpO1xufVxuLyoqXG4gKiBEZXRlcm1pbmVzIHdoZXRoZXIgYW4gZXJyb3IgZnJvbSBhIHBpcGVsaW5lIHJlc3BvbnNlIHdhcyB0cmlnZ2VyZWQgaW4gdGhlIG5ldHdvcmsgbGF5ZXIuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1N5c3RlbUVycm9yKGVycikge1xuICAgIGlmICghZXJyKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIChlcnIuY29kZSA9PT0gXCJFVElNRURPVVRcIiB8fFxuICAgICAgICBlcnIuY29kZSA9PT0gXCJFU09DS0VUVElNRURPVVRcIiB8fFxuICAgICAgICBlcnIuY29kZSA9PT0gXCJFQ09OTlJFRlVTRURcIiB8fFxuICAgICAgICBlcnIuY29kZSA9PT0gXCJFQ09OTlJFU0VUXCIgfHxcbiAgICAgICAgZXJyLmNvZGUgPT09IFwiRU5PRU5UXCIgfHxcbiAgICAgICAgZXJyLmNvZGUgPT09IFwiRU5PVEZPVU5EXCIpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXhwb25lbnRpYWxSZXRyeVN0cmF0ZWd5LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/exponentialRetryStrategy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/throttlingRetryStrategy.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/throttlingRetryStrategy.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isThrottlingRetryResponse: () => (/* binding */ isThrottlingRetryResponse),\n/* harmony export */   throttlingRetryStrategy: () => (/* binding */ throttlingRetryStrategy)\n/* harmony export */ });\n/* harmony import */ var _util_helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/helpers.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/helpers.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * The header that comes back from Azure services representing\n * the amount of time (minimum) to wait to retry (in seconds or timestamp after which we can retry).\n */\nconst RetryAfterHeader = \"Retry-After\";\n/**\n * The headers that come back from Azure services representing\n * the amount of time (minimum) to wait to retry.\n *\n * \"retry-after-ms\", \"x-ms-retry-after-ms\" : milliseconds\n * \"Retry-After\" : seconds or timestamp\n */\nconst AllRetryAfterHeaders = [\"retry-after-ms\", \"x-ms-retry-after-ms\", RetryAfterHeader];\n/**\n * A response is a throttling retry response if it has a throttling status code (429 or 503),\n * as long as one of the [ \"Retry-After\" or \"retry-after-ms\" or \"x-ms-retry-after-ms\" ] headers has a valid value.\n *\n * Returns the `retryAfterInMs` value if the response is a throttling retry response.\n * If not throttling retry response, returns `undefined`.\n *\n * @internal\n */\nfunction getRetryAfterInMs(response) {\n    if (!(response && [429, 503].includes(response.status)))\n        return undefined;\n    try {\n        // Headers: \"retry-after-ms\", \"x-ms-retry-after-ms\", \"Retry-After\"\n        for (const header of AllRetryAfterHeaders) {\n            const retryAfterValue = (0,_util_helpers_js__WEBPACK_IMPORTED_MODULE_0__.parseHeaderValueAsNumber)(response, header);\n            if (retryAfterValue === 0 || retryAfterValue) {\n                // \"Retry-After\" header ==> seconds\n                // \"retry-after-ms\", \"x-ms-retry-after-ms\" headers ==> milli-seconds\n                const multiplyingFactor = header === RetryAfterHeader ? 1000 : 1;\n                return retryAfterValue * multiplyingFactor; // in milli-seconds\n            }\n        }\n        // RetryAfterHeader (\"Retry-After\") has a special case where it might be formatted as a date instead of a number of seconds\n        const retryAfterHeader = response.headers.get(RetryAfterHeader);\n        if (!retryAfterHeader)\n            return;\n        const date = Date.parse(retryAfterHeader);\n        const diff = date - Date.now();\n        // negative diff would mean a date in the past, so retry asap with 0 milliseconds\n        return Number.isFinite(diff) ? Math.max(0, diff) : undefined;\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n/**\n * A response is a retry response if it has a throttling status code (429 or 503),\n * as long as one of the [ \"Retry-After\" or \"retry-after-ms\" or \"x-ms-retry-after-ms\" ] headers has a valid value.\n */\nfunction isThrottlingRetryResponse(response) {\n    return Number.isFinite(getRetryAfterInMs(response));\n}\nfunction throttlingRetryStrategy() {\n    return {\n        name: \"throttlingRetryStrategy\",\n        retry({ response }) {\n            const retryAfterInMs = getRetryAfterInMs(response);\n            if (!Number.isFinite(retryAfterInMs)) {\n                return { skipStrategy: true };\n            }\n            return {\n                retryAfterInMs,\n            };\n        },\n    };\n}\n//# sourceMappingURL=throttlingRetryStrategy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9yZXRyeVN0cmF0ZWdpZXMvdGhyb3R0bGluZ1JldHJ5U3RyYXRlZ3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUM4RDtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQywwRUFBd0I7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQ7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxnQkFBZ0IsVUFBVTtBQUMxQjtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmUgLSBIZWxsbyBTY3JpcHQgQUlcXGxpZmVBZ2VudFxcdm9pY2UtbGl2ZS1hZ2VudFxcc2FtcGxlc1xccmVhY3RcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXJlc3QtcGlwZWxpbmVcXGRpc3RcXGVzbVxccmV0cnlTdHJhdGVnaWVzXFx0aHJvdHRsaW5nUmV0cnlTdHJhdGVneS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IHBhcnNlSGVhZGVyVmFsdWVBc051bWJlciB9IGZyb20gXCIuLi91dGlsL2hlbHBlcnMuanNcIjtcbi8qKlxuICogVGhlIGhlYWRlciB0aGF0IGNvbWVzIGJhY2sgZnJvbSBBenVyZSBzZXJ2aWNlcyByZXByZXNlbnRpbmdcbiAqIHRoZSBhbW91bnQgb2YgdGltZSAobWluaW11bSkgdG8gd2FpdCB0byByZXRyeSAoaW4gc2Vjb25kcyBvciB0aW1lc3RhbXAgYWZ0ZXIgd2hpY2ggd2UgY2FuIHJldHJ5KS5cbiAqL1xuY29uc3QgUmV0cnlBZnRlckhlYWRlciA9IFwiUmV0cnktQWZ0ZXJcIjtcbi8qKlxuICogVGhlIGhlYWRlcnMgdGhhdCBjb21lIGJhY2sgZnJvbSBBenVyZSBzZXJ2aWNlcyByZXByZXNlbnRpbmdcbiAqIHRoZSBhbW91bnQgb2YgdGltZSAobWluaW11bSkgdG8gd2FpdCB0byByZXRyeS5cbiAqXG4gKiBcInJldHJ5LWFmdGVyLW1zXCIsIFwieC1tcy1yZXRyeS1hZnRlci1tc1wiIDogbWlsbGlzZWNvbmRzXG4gKiBcIlJldHJ5LUFmdGVyXCIgOiBzZWNvbmRzIG9yIHRpbWVzdGFtcFxuICovXG5jb25zdCBBbGxSZXRyeUFmdGVySGVhZGVycyA9IFtcInJldHJ5LWFmdGVyLW1zXCIsIFwieC1tcy1yZXRyeS1hZnRlci1tc1wiLCBSZXRyeUFmdGVySGVhZGVyXTtcbi8qKlxuICogQSByZXNwb25zZSBpcyBhIHRocm90dGxpbmcgcmV0cnkgcmVzcG9uc2UgaWYgaXQgaGFzIGEgdGhyb3R0bGluZyBzdGF0dXMgY29kZSAoNDI5IG9yIDUwMyksXG4gKiBhcyBsb25nIGFzIG9uZSBvZiB0aGUgWyBcIlJldHJ5LUFmdGVyXCIgb3IgXCJyZXRyeS1hZnRlci1tc1wiIG9yIFwieC1tcy1yZXRyeS1hZnRlci1tc1wiIF0gaGVhZGVycyBoYXMgYSB2YWxpZCB2YWx1ZS5cbiAqXG4gKiBSZXR1cm5zIHRoZSBgcmV0cnlBZnRlckluTXNgIHZhbHVlIGlmIHRoZSByZXNwb25zZSBpcyBhIHRocm90dGxpbmcgcmV0cnkgcmVzcG9uc2UuXG4gKiBJZiBub3QgdGhyb3R0bGluZyByZXRyeSByZXNwb25zZSwgcmV0dXJucyBgdW5kZWZpbmVkYC5cbiAqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZnVuY3Rpb24gZ2V0UmV0cnlBZnRlckluTXMocmVzcG9uc2UpIHtcbiAgICBpZiAoIShyZXNwb25zZSAmJiBbNDI5LCA1MDNdLmluY2x1ZGVzKHJlc3BvbnNlLnN0YXR1cykpKVxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIHRyeSB7XG4gICAgICAgIC8vIEhlYWRlcnM6IFwicmV0cnktYWZ0ZXItbXNcIiwgXCJ4LW1zLXJldHJ5LWFmdGVyLW1zXCIsIFwiUmV0cnktQWZ0ZXJcIlxuICAgICAgICBmb3IgKGNvbnN0IGhlYWRlciBvZiBBbGxSZXRyeUFmdGVySGVhZGVycykge1xuICAgICAgICAgICAgY29uc3QgcmV0cnlBZnRlclZhbHVlID0gcGFyc2VIZWFkZXJWYWx1ZUFzTnVtYmVyKHJlc3BvbnNlLCBoZWFkZXIpO1xuICAgICAgICAgICAgaWYgKHJldHJ5QWZ0ZXJWYWx1ZSA9PT0gMCB8fCByZXRyeUFmdGVyVmFsdWUpIHtcbiAgICAgICAgICAgICAgICAvLyBcIlJldHJ5LUFmdGVyXCIgaGVhZGVyID09PiBzZWNvbmRzXG4gICAgICAgICAgICAgICAgLy8gXCJyZXRyeS1hZnRlci1tc1wiLCBcIngtbXMtcmV0cnktYWZ0ZXItbXNcIiBoZWFkZXJzID09PiBtaWxsaS1zZWNvbmRzXG4gICAgICAgICAgICAgICAgY29uc3QgbXVsdGlwbHlpbmdGYWN0b3IgPSBoZWFkZXIgPT09IFJldHJ5QWZ0ZXJIZWFkZXIgPyAxMDAwIDogMTtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmV0cnlBZnRlclZhbHVlICogbXVsdGlwbHlpbmdGYWN0b3I7IC8vIGluIG1pbGxpLXNlY29uZHNcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBSZXRyeUFmdGVySGVhZGVyIChcIlJldHJ5LUFmdGVyXCIpIGhhcyBhIHNwZWNpYWwgY2FzZSB3aGVyZSBpdCBtaWdodCBiZSBmb3JtYXR0ZWQgYXMgYSBkYXRlIGluc3RlYWQgb2YgYSBudW1iZXIgb2Ygc2Vjb25kc1xuICAgICAgICBjb25zdCByZXRyeUFmdGVySGVhZGVyID0gcmVzcG9uc2UuaGVhZGVycy5nZXQoUmV0cnlBZnRlckhlYWRlcik7XG4gICAgICAgIGlmICghcmV0cnlBZnRlckhlYWRlcilcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgZGF0ZSA9IERhdGUucGFyc2UocmV0cnlBZnRlckhlYWRlcik7XG4gICAgICAgIGNvbnN0IGRpZmYgPSBkYXRlIC0gRGF0ZS5ub3coKTtcbiAgICAgICAgLy8gbmVnYXRpdmUgZGlmZiB3b3VsZCBtZWFuIGEgZGF0ZSBpbiB0aGUgcGFzdCwgc28gcmV0cnkgYXNhcCB3aXRoIDAgbWlsbGlzZWNvbmRzXG4gICAgICAgIHJldHVybiBOdW1iZXIuaXNGaW5pdGUoZGlmZikgPyBNYXRoLm1heCgwLCBkaWZmKSA6IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgY2F0Y2ggKF9hKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxufVxuLyoqXG4gKiBBIHJlc3BvbnNlIGlzIGEgcmV0cnkgcmVzcG9uc2UgaWYgaXQgaGFzIGEgdGhyb3R0bGluZyBzdGF0dXMgY29kZSAoNDI5IG9yIDUwMyksXG4gKiBhcyBsb25nIGFzIG9uZSBvZiB0aGUgWyBcIlJldHJ5LUFmdGVyXCIgb3IgXCJyZXRyeS1hZnRlci1tc1wiIG9yIFwieC1tcy1yZXRyeS1hZnRlci1tc1wiIF0gaGVhZGVycyBoYXMgYSB2YWxpZCB2YWx1ZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzVGhyb3R0bGluZ1JldHJ5UmVzcG9uc2UocmVzcG9uc2UpIHtcbiAgICByZXR1cm4gTnVtYmVyLmlzRmluaXRlKGdldFJldHJ5QWZ0ZXJJbk1zKHJlc3BvbnNlKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gdGhyb3R0bGluZ1JldHJ5U3RyYXRlZ3koKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogXCJ0aHJvdHRsaW5nUmV0cnlTdHJhdGVneVwiLFxuICAgICAgICByZXRyeSh7IHJlc3BvbnNlIH0pIHtcbiAgICAgICAgICAgIGNvbnN0IHJldHJ5QWZ0ZXJJbk1zID0gZ2V0UmV0cnlBZnRlckluTXMocmVzcG9uc2UpO1xuICAgICAgICAgICAgaWYgKCFOdW1iZXIuaXNGaW5pdGUocmV0cnlBZnRlckluTXMpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgc2tpcFN0cmF0ZWd5OiB0cnVlIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHJldHJ5QWZ0ZXJJbk1zLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dGhyb3R0bGluZ1JldHJ5U3RyYXRlZ3kuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/throttlingRetryStrategy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/concat.js":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/concat.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   concat: () => (/* binding */ concat)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var node_stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:stream */ \"node:stream\");\n/* harmony import */ var _typeGuards_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typeGuards.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/typeGuards.js\");\n/* harmony import */ var _file_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./file.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/file.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\nfunction streamAsyncIterator() {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__asyncGenerator)(this, arguments, function* streamAsyncIterator_1() {\n        const reader = this.getReader();\n        try {\n            while (true) {\n                const { done, value } = yield (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__await)(reader.read());\n                if (done) {\n                    return yield (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__await)(void 0);\n                }\n                yield yield (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__await)(value);\n            }\n        }\n        finally {\n            reader.releaseLock();\n        }\n    });\n}\nfunction makeAsyncIterable(webStream) {\n    if (!webStream[Symbol.asyncIterator]) {\n        webStream[Symbol.asyncIterator] = streamAsyncIterator.bind(webStream);\n    }\n    if (!webStream.values) {\n        webStream.values = streamAsyncIterator.bind(webStream);\n    }\n}\nfunction ensureNodeStream(stream) {\n    if (stream instanceof ReadableStream) {\n        makeAsyncIterable(stream);\n        return node_stream__WEBPACK_IMPORTED_MODULE_0__.Readable.fromWeb(stream);\n    }\n    else {\n        return stream;\n    }\n}\nfunction toStream(source) {\n    if (source instanceof Uint8Array) {\n        return node_stream__WEBPACK_IMPORTED_MODULE_0__.Readable.from(Buffer.from(source));\n    }\n    else if ((0,_typeGuards_js__WEBPACK_IMPORTED_MODULE_1__.isBlob)(source)) {\n        return toStream((0,_file_js__WEBPACK_IMPORTED_MODULE_2__.getRawContent)(source));\n    }\n    else {\n        return ensureNodeStream(source);\n    }\n}\n/**\n * Utility function that concatenates a set of binary inputs into one combined output.\n *\n * @param sources - array of sources for the concatenation\n * @returns - in Node, a (() =\\> NodeJS.ReadableStream) which, when read, produces a concatenation of all the inputs.\n *           In browser, returns a `Blob` representing all the concatenated inputs.\n *\n * @internal\n */\nasync function concat(sources) {\n    return function () {\n        const streams = sources.map((x) => (typeof x === \"function\" ? x() : x)).map(toStream);\n        return node_stream__WEBPACK_IMPORTED_MODULE_0__.Readable.from((function () {\n            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__asyncGenerator)(this, arguments, function* () {\n                var _a, e_1, _b, _c;\n                for (const stream of streams) {\n                    try {\n                        for (var _d = true, stream_1 = (e_1 = void 0, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__asyncValues)(stream)), stream_1_1; stream_1_1 = yield (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__await)(stream_1.next()), _a = stream_1_1.done, !_a; _d = true) {\n                            _c = stream_1_1.value;\n                            _d = false;\n                            const chunk = _c;\n                            yield yield (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__await)(chunk);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (!_d && !_a && (_b = stream_1.return)) yield (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__await)(_b.call(stream_1));\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            });\n        })());\n    };\n}\n//# sourceMappingURL=concat.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS91dGlsL2NvbmNhdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDaUU7QUFDMUI7QUFDRTtBQUNDO0FBQzFDO0FBQ0EsV0FBVyx1REFBZ0I7QUFDM0I7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGNBQWMsUUFBUSw4Q0FBTztBQUNyRDtBQUNBLGlDQUFpQyw4Q0FBTztBQUN4QztBQUNBLDRCQUE0Qiw4Q0FBTztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsaURBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGlEQUFRO0FBQ3ZCO0FBQ0EsYUFBYSxzREFBTTtBQUNuQix3QkFBd0IsdURBQWE7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLGVBQWUsaURBQVE7QUFDdkIsbUJBQW1CLHVEQUFnQjtBQUNuQztBQUNBO0FBQ0E7QUFDQSxzRUFBc0Usb0RBQWEsdUJBQXVCLG1CQUFtQiw4Q0FBTyw4Q0FBOEM7QUFDbEw7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLDhDQUFPO0FBQy9DO0FBQ0E7QUFDQSxvQ0FBb0MsUUFBUTtBQUM1QztBQUNBO0FBQ0EsNEVBQTRFLDhDQUFPO0FBQ25GO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmUgLSBIZWxsbyBTY3JpcHQgQUlcXGxpZmVBZ2VudFxcdm9pY2UtbGl2ZS1hZ2VudFxcc2FtcGxlc1xccmVhY3RcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXJlc3QtcGlwZWxpbmVcXGRpc3RcXGVzbVxcdXRpbFxcY29uY2F0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgX19hc3luY0dlbmVyYXRvciwgX19hc3luY1ZhbHVlcywgX19hd2FpdCB9IGZyb20gXCJ0c2xpYlwiO1xuaW1wb3J0IHsgUmVhZGFibGUgfSBmcm9tIFwibm9kZTpzdHJlYW1cIjtcbmltcG9ydCB7IGlzQmxvYiB9IGZyb20gXCIuL3R5cGVHdWFyZHMuanNcIjtcbmltcG9ydCB7IGdldFJhd0NvbnRlbnQgfSBmcm9tIFwiLi9maWxlLmpzXCI7XG5mdW5jdGlvbiBzdHJlYW1Bc3luY0l0ZXJhdG9yKCkge1xuICAgIHJldHVybiBfX2FzeW5jR2VuZXJhdG9yKHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24qIHN0cmVhbUFzeW5jSXRlcmF0b3JfMSgpIHtcbiAgICAgICAgY29uc3QgcmVhZGVyID0gdGhpcy5nZXRSZWFkZXIoKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgeyBkb25lLCB2YWx1ZSB9ID0geWllbGQgX19hd2FpdChyZWFkZXIucmVhZCgpKTtcbiAgICAgICAgICAgICAgICBpZiAoZG9uZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4geWllbGQgX19hd2FpdCh2b2lkIDApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB5aWVsZCB5aWVsZCBfX2F3YWl0KHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBmaW5hbGx5IHtcbiAgICAgICAgICAgIHJlYWRlci5yZWxlYXNlTG9jaygpO1xuICAgICAgICB9XG4gICAgfSk7XG59XG5mdW5jdGlvbiBtYWtlQXN5bmNJdGVyYWJsZSh3ZWJTdHJlYW0pIHtcbiAgICBpZiAoIXdlYlN0cmVhbVtTeW1ib2wuYXN5bmNJdGVyYXRvcl0pIHtcbiAgICAgICAgd2ViU3RyZWFtW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSA9IHN0cmVhbUFzeW5jSXRlcmF0b3IuYmluZCh3ZWJTdHJlYW0pO1xuICAgIH1cbiAgICBpZiAoIXdlYlN0cmVhbS52YWx1ZXMpIHtcbiAgICAgICAgd2ViU3RyZWFtLnZhbHVlcyA9IHN0cmVhbUFzeW5jSXRlcmF0b3IuYmluZCh3ZWJTdHJlYW0pO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGVuc3VyZU5vZGVTdHJlYW0oc3RyZWFtKSB7XG4gICAgaWYgKHN0cmVhbSBpbnN0YW5jZW9mIFJlYWRhYmxlU3RyZWFtKSB7XG4gICAgICAgIG1ha2VBc3luY0l0ZXJhYmxlKHN0cmVhbSk7XG4gICAgICAgIHJldHVybiBSZWFkYWJsZS5mcm9tV2ViKHN0cmVhbSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gc3RyZWFtO1xuICAgIH1cbn1cbmZ1bmN0aW9uIHRvU3RyZWFtKHNvdXJjZSkge1xuICAgIGlmIChzb3VyY2UgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICAgIHJldHVybiBSZWFkYWJsZS5mcm9tKEJ1ZmZlci5mcm9tKHNvdXJjZSkpO1xuICAgIH1cbiAgICBlbHNlIGlmIChpc0Jsb2Ioc291cmNlKSkge1xuICAgICAgICByZXR1cm4gdG9TdHJlYW0oZ2V0UmF3Q29udGVudChzb3VyY2UpKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBlbnN1cmVOb2RlU3RyZWFtKHNvdXJjZSk7XG4gICAgfVxufVxuLyoqXG4gKiBVdGlsaXR5IGZ1bmN0aW9uIHRoYXQgY29uY2F0ZW5hdGVzIGEgc2V0IG9mIGJpbmFyeSBpbnB1dHMgaW50byBvbmUgY29tYmluZWQgb3V0cHV0LlxuICpcbiAqIEBwYXJhbSBzb3VyY2VzIC0gYXJyYXkgb2Ygc291cmNlcyBmb3IgdGhlIGNvbmNhdGVuYXRpb25cbiAqIEByZXR1cm5zIC0gaW4gTm9kZSwgYSAoKCkgPVxcPiBOb2RlSlMuUmVhZGFibGVTdHJlYW0pIHdoaWNoLCB3aGVuIHJlYWQsIHByb2R1Y2VzIGEgY29uY2F0ZW5hdGlvbiBvZiBhbGwgdGhlIGlucHV0cy5cbiAqICAgICAgICAgICBJbiBicm93c2VyLCByZXR1cm5zIGEgYEJsb2JgIHJlcHJlc2VudGluZyBhbGwgdGhlIGNvbmNhdGVuYXRlZCBpbnB1dHMuXG4gKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjb25jYXQoc291cmNlcykge1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbnN0IHN0cmVhbXMgPSBzb3VyY2VzLm1hcCgoeCkgPT4gKHR5cGVvZiB4ID09PSBcImZ1bmN0aW9uXCIgPyB4KCkgOiB4KSkubWFwKHRvU3RyZWFtKTtcbiAgICAgICAgcmV0dXJuIFJlYWRhYmxlLmZyb20oKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfX2FzeW5jR2VuZXJhdG9yKHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgX2EsIGVfMSwgX2IsIF9jO1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3Qgc3RyZWFtIG9mIHN0cmVhbXMpIHtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIF9kID0gdHJ1ZSwgc3RyZWFtXzEgPSAoZV8xID0gdm9pZCAwLCBfX2FzeW5jVmFsdWVzKHN0cmVhbSkpLCBzdHJlYW1fMV8xOyBzdHJlYW1fMV8xID0geWllbGQgX19hd2FpdChzdHJlYW1fMS5uZXh0KCkpLCBfYSA9IHN0cmVhbV8xXzEuZG9uZSwgIV9hOyBfZCA9IHRydWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyA9IHN0cmVhbV8xXzEudmFsdWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX2QgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjaHVuayA9IF9jO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHlpZWxkIHlpZWxkIF9fYXdhaXQoY2h1bmspO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNhdGNoIChlXzFfMSkgeyBlXzEgPSB7IGVycm9yOiBlXzFfMSB9OyB9XG4gICAgICAgICAgICAgICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIV9kICYmICFfYSAmJiAoX2IgPSBzdHJlYW1fMS5yZXR1cm4pKSB5aWVsZCBfX2F3YWl0KF9iLmNhbGwoc3RyZWFtXzEpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGZpbmFsbHkgeyBpZiAoZV8xKSB0aHJvdyBlXzEuZXJyb3I7IH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KSgpKTtcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uY2F0LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/concat.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/file.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/file.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createFile: () => (/* binding */ createFile),\n/* harmony export */   createFileFromStream: () => (/* binding */ createFileFromStream),\n/* harmony export */   getRawContent: () => (/* binding */ getRawContent)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _typeGuards_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typeGuards.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/typeGuards.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\nconst unimplementedMethods = {\n    arrayBuffer: () => {\n        throw new Error(\"Not implemented\");\n    },\n    bytes: () => {\n        throw new Error(\"Not implemented\");\n    },\n    slice: () => {\n        throw new Error(\"Not implemented\");\n    },\n    text: () => {\n        throw new Error(\"Not implemented\");\n    },\n};\n/**\n * Private symbol used as key on objects created using createFile containing the\n * original source of the file object.\n *\n * This is used in Node to access the original Node stream without using Blob#stream, which\n * returns a web stream. This is done to avoid a couple of bugs to do with Blob#stream and\n * Readable#to/fromWeb in Node versions we support:\n * - https://github.com/nodejs/node/issues/42694 (fixed in Node 18.14)\n * - https://github.com/nodejs/node/issues/48916 (fixed in Node 20.6)\n *\n * Once these versions are no longer supported, we may be able to stop doing this.\n *\n * @internal\n */\nconst rawContent = Symbol(\"rawContent\");\nfunction hasRawContent(x) {\n    return typeof x[rawContent] === \"function\";\n}\n/**\n * Extract the raw content from a given blob-like object. If the input was created using createFile\n * or createFileFromStream, the exact content passed into createFile/createFileFromStream will be used.\n * For true instances of Blob and File, returns the blob's content as a Web ReadableStream<Uint8Array>.\n *\n * @internal\n */\nfunction getRawContent(blob) {\n    if (hasRawContent(blob)) {\n        return blob[rawContent]();\n    }\n    else {\n        return blob.stream();\n    }\n}\n/**\n * Create an object that implements the File interface. This object is intended to be\n * passed into RequestBodyType.formData, and is not guaranteed to work as expected in\n * other situations.\n *\n * Use this function to:\n * - Create a File object for use in RequestBodyType.formData in environments where the\n *   global File object is unavailable.\n * - Create a File-like object from a readable stream without reading the stream into memory.\n *\n * @param stream - the content of the file as a callback returning a stream. When a File object made using createFile is\n *                  passed in a request's form data map, the stream will not be read into memory\n *                  and instead will be streamed when the request is made. In the event of a retry, the\n *                  stream needs to be read again, so this callback SHOULD return a fresh stream if possible.\n * @param name - the name of the file.\n * @param options - optional metadata about the file, e.g. file name, file size, MIME type.\n */\nfunction createFileFromStream(stream, name, options = {}) {\n    var _a, _b, _c, _d;\n    return Object.assign(Object.assign({}, unimplementedMethods), { type: (_a = options.type) !== null && _a !== void 0 ? _a : \"\", lastModified: (_b = options.lastModified) !== null && _b !== void 0 ? _b : new Date().getTime(), webkitRelativePath: (_c = options.webkitRelativePath) !== null && _c !== void 0 ? _c : \"\", size: (_d = options.size) !== null && _d !== void 0 ? _d : -1, name, stream: () => {\n            const s = stream();\n            if ((0,_typeGuards_js__WEBPACK_IMPORTED_MODULE_1__.isNodeReadableStream)(s)) {\n                throw new Error(\"Not supported: a Node stream was provided as input to createFileFromStream.\");\n            }\n            return s;\n        }, [rawContent]: stream });\n}\n/**\n * Create an object that implements the File interface. This object is intended to be\n * passed into RequestBodyType.formData, and is not guaranteed to work as expected in\n * other situations.\n *\n * Use this function create a File object for use in RequestBodyType.formData in environments where the global File object is unavailable.\n *\n * @param content - the content of the file as a Uint8Array in memory.\n * @param name - the name of the file.\n * @param options - optional metadata about the file, e.g. file name, file size, MIME type.\n */\nfunction createFile(content, name, options = {}) {\n    var _a, _b, _c;\n    if (_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.isNodeLike) {\n        return Object.assign(Object.assign({}, unimplementedMethods), { type: (_a = options.type) !== null && _a !== void 0 ? _a : \"\", lastModified: (_b = options.lastModified) !== null && _b !== void 0 ? _b : new Date().getTime(), webkitRelativePath: (_c = options.webkitRelativePath) !== null && _c !== void 0 ? _c : \"\", size: content.byteLength, name, arrayBuffer: async () => content.buffer, stream: () => new Blob([content]).stream(), [rawContent]: () => content });\n    }\n    else {\n        return new File([content], name, options);\n    }\n}\n//# sourceMappingURL=file.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS91dGlsL2ZpbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQzhDO0FBQ1M7QUFDdkQ7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHdEQUF3RDtBQUMvRDtBQUNBLHlDQUF5QywyQkFBMkI7QUFDcEU7QUFDQSxnQkFBZ0Isb0VBQW9CO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLFNBQVMsd0JBQXdCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLCtDQUErQztBQUN0RDtBQUNBLFFBQVEsd0RBQVU7QUFDbEIsNkNBQTZDLDJCQUEyQiw2WUFBNlk7QUFDcmQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZSAtIEhlbGxvIFNjcmlwdCBBSVxcbGlmZUFnZW50XFx2b2ljZS1saXZlLWFnZW50XFxzYW1wbGVzXFxyZWFjdFxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtcmVzdC1waXBlbGluZVxcZGlzdFxcZXNtXFx1dGlsXFxmaWxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgaXNOb2RlTGlrZSB9IGZyb20gXCJAYXp1cmUvY29yZS11dGlsXCI7XG5pbXBvcnQgeyBpc05vZGVSZWFkYWJsZVN0cmVhbSB9IGZyb20gXCIuL3R5cGVHdWFyZHMuanNcIjtcbmNvbnN0IHVuaW1wbGVtZW50ZWRNZXRob2RzID0ge1xuICAgIGFycmF5QnVmZmVyOiAoKSA9PiB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vdCBpbXBsZW1lbnRlZFwiKTtcbiAgICB9LFxuICAgIGJ5dGVzOiAoKSA9PiB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vdCBpbXBsZW1lbnRlZFwiKTtcbiAgICB9LFxuICAgIHNsaWNlOiAoKSA9PiB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vdCBpbXBsZW1lbnRlZFwiKTtcbiAgICB9LFxuICAgIHRleHQ6ICgpID0+IHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkXCIpO1xuICAgIH0sXG59O1xuLyoqXG4gKiBQcml2YXRlIHN5bWJvbCB1c2VkIGFzIGtleSBvbiBvYmplY3RzIGNyZWF0ZWQgdXNpbmcgY3JlYXRlRmlsZSBjb250YWluaW5nIHRoZVxuICogb3JpZ2luYWwgc291cmNlIG9mIHRoZSBmaWxlIG9iamVjdC5cbiAqXG4gKiBUaGlzIGlzIHVzZWQgaW4gTm9kZSB0byBhY2Nlc3MgdGhlIG9yaWdpbmFsIE5vZGUgc3RyZWFtIHdpdGhvdXQgdXNpbmcgQmxvYiNzdHJlYW0sIHdoaWNoXG4gKiByZXR1cm5zIGEgd2ViIHN0cmVhbS4gVGhpcyBpcyBkb25lIHRvIGF2b2lkIGEgY291cGxlIG9mIGJ1Z3MgdG8gZG8gd2l0aCBCbG9iI3N0cmVhbSBhbmRcbiAqIFJlYWRhYmxlI3RvL2Zyb21XZWIgaW4gTm9kZSB2ZXJzaW9ucyB3ZSBzdXBwb3J0OlxuICogLSBodHRwczovL2dpdGh1Yi5jb20vbm9kZWpzL25vZGUvaXNzdWVzLzQyNjk0IChmaXhlZCBpbiBOb2RlIDE4LjE0KVxuICogLSBodHRwczovL2dpdGh1Yi5jb20vbm9kZWpzL25vZGUvaXNzdWVzLzQ4OTE2IChmaXhlZCBpbiBOb2RlIDIwLjYpXG4gKlxuICogT25jZSB0aGVzZSB2ZXJzaW9ucyBhcmUgbm8gbG9uZ2VyIHN1cHBvcnRlZCwgd2UgbWF5IGJlIGFibGUgdG8gc3RvcCBkb2luZyB0aGlzLlxuICpcbiAqIEBpbnRlcm5hbFxuICovXG5jb25zdCByYXdDb250ZW50ID0gU3ltYm9sKFwicmF3Q29udGVudFwiKTtcbmZ1bmN0aW9uIGhhc1Jhd0NvbnRlbnQoeCkge1xuICAgIHJldHVybiB0eXBlb2YgeFtyYXdDb250ZW50XSA9PT0gXCJmdW5jdGlvblwiO1xufVxuLyoqXG4gKiBFeHRyYWN0IHRoZSByYXcgY29udGVudCBmcm9tIGEgZ2l2ZW4gYmxvYi1saWtlIG9iamVjdC4gSWYgdGhlIGlucHV0IHdhcyBjcmVhdGVkIHVzaW5nIGNyZWF0ZUZpbGVcbiAqIG9yIGNyZWF0ZUZpbGVGcm9tU3RyZWFtLCB0aGUgZXhhY3QgY29udGVudCBwYXNzZWQgaW50byBjcmVhdGVGaWxlL2NyZWF0ZUZpbGVGcm9tU3RyZWFtIHdpbGwgYmUgdXNlZC5cbiAqIEZvciB0cnVlIGluc3RhbmNlcyBvZiBCbG9iIGFuZCBGaWxlLCByZXR1cm5zIHRoZSBibG9iJ3MgY29udGVudCBhcyBhIFdlYiBSZWFkYWJsZVN0cmVhbTxVaW50OEFycmF5Pi5cbiAqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFJhd0NvbnRlbnQoYmxvYikge1xuICAgIGlmIChoYXNSYXdDb250ZW50KGJsb2IpKSB7XG4gICAgICAgIHJldHVybiBibG9iW3Jhd0NvbnRlbnRdKCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gYmxvYi5zdHJlYW0oKTtcbiAgICB9XG59XG4vKipcbiAqIENyZWF0ZSBhbiBvYmplY3QgdGhhdCBpbXBsZW1lbnRzIHRoZSBGaWxlIGludGVyZmFjZS4gVGhpcyBvYmplY3QgaXMgaW50ZW5kZWQgdG8gYmVcbiAqIHBhc3NlZCBpbnRvIFJlcXVlc3RCb2R5VHlwZS5mb3JtRGF0YSwgYW5kIGlzIG5vdCBndWFyYW50ZWVkIHRvIHdvcmsgYXMgZXhwZWN0ZWQgaW5cbiAqIG90aGVyIHNpdHVhdGlvbnMuXG4gKlxuICogVXNlIHRoaXMgZnVuY3Rpb24gdG86XG4gKiAtIENyZWF0ZSBhIEZpbGUgb2JqZWN0IGZvciB1c2UgaW4gUmVxdWVzdEJvZHlUeXBlLmZvcm1EYXRhIGluIGVudmlyb25tZW50cyB3aGVyZSB0aGVcbiAqICAgZ2xvYmFsIEZpbGUgb2JqZWN0IGlzIHVuYXZhaWxhYmxlLlxuICogLSBDcmVhdGUgYSBGaWxlLWxpa2Ugb2JqZWN0IGZyb20gYSByZWFkYWJsZSBzdHJlYW0gd2l0aG91dCByZWFkaW5nIHRoZSBzdHJlYW0gaW50byBtZW1vcnkuXG4gKlxuICogQHBhcmFtIHN0cmVhbSAtIHRoZSBjb250ZW50IG9mIHRoZSBmaWxlIGFzIGEgY2FsbGJhY2sgcmV0dXJuaW5nIGEgc3RyZWFtLiBXaGVuIGEgRmlsZSBvYmplY3QgbWFkZSB1c2luZyBjcmVhdGVGaWxlIGlzXG4gKiAgICAgICAgICAgICAgICAgIHBhc3NlZCBpbiBhIHJlcXVlc3QncyBmb3JtIGRhdGEgbWFwLCB0aGUgc3RyZWFtIHdpbGwgbm90IGJlIHJlYWQgaW50byBtZW1vcnlcbiAqICAgICAgICAgICAgICAgICAgYW5kIGluc3RlYWQgd2lsbCBiZSBzdHJlYW1lZCB3aGVuIHRoZSByZXF1ZXN0IGlzIG1hZGUuIEluIHRoZSBldmVudCBvZiBhIHJldHJ5LCB0aGVcbiAqICAgICAgICAgICAgICAgICAgc3RyZWFtIG5lZWRzIHRvIGJlIHJlYWQgYWdhaW4sIHNvIHRoaXMgY2FsbGJhY2sgU0hPVUxEIHJldHVybiBhIGZyZXNoIHN0cmVhbSBpZiBwb3NzaWJsZS5cbiAqIEBwYXJhbSBuYW1lIC0gdGhlIG5hbWUgb2YgdGhlIGZpbGUuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIG9wdGlvbmFsIG1ldGFkYXRhIGFib3V0IHRoZSBmaWxlLCBlLmcuIGZpbGUgbmFtZSwgZmlsZSBzaXplLCBNSU1FIHR5cGUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVGaWxlRnJvbVN0cmVhbShzdHJlYW0sIG5hbWUsIG9wdGlvbnMgPSB7fSkge1xuICAgIHZhciBfYSwgX2IsIF9jLCBfZDtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCB1bmltcGxlbWVudGVkTWV0aG9kcyksIHsgdHlwZTogKF9hID0gb3B0aW9ucy50eXBlKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBcIlwiLCBsYXN0TW9kaWZpZWQ6IChfYiA9IG9wdGlvbnMubGFzdE1vZGlmaWVkKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBuZXcgRGF0ZSgpLmdldFRpbWUoKSwgd2Via2l0UmVsYXRpdmVQYXRoOiAoX2MgPSBvcHRpb25zLndlYmtpdFJlbGF0aXZlUGF0aCkgIT09IG51bGwgJiYgX2MgIT09IHZvaWQgMCA/IF9jIDogXCJcIiwgc2l6ZTogKF9kID0gb3B0aW9ucy5zaXplKSAhPT0gbnVsbCAmJiBfZCAhPT0gdm9pZCAwID8gX2QgOiAtMSwgbmFtZSwgc3RyZWFtOiAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBzID0gc3RyZWFtKCk7XG4gICAgICAgICAgICBpZiAoaXNOb2RlUmVhZGFibGVTdHJlYW0ocykpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb3Qgc3VwcG9ydGVkOiBhIE5vZGUgc3RyZWFtIHdhcyBwcm92aWRlZCBhcyBpbnB1dCB0byBjcmVhdGVGaWxlRnJvbVN0cmVhbS5cIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcztcbiAgICAgICAgfSwgW3Jhd0NvbnRlbnRdOiBzdHJlYW0gfSk7XG59XG4vKipcbiAqIENyZWF0ZSBhbiBvYmplY3QgdGhhdCBpbXBsZW1lbnRzIHRoZSBGaWxlIGludGVyZmFjZS4gVGhpcyBvYmplY3QgaXMgaW50ZW5kZWQgdG8gYmVcbiAqIHBhc3NlZCBpbnRvIFJlcXVlc3RCb2R5VHlwZS5mb3JtRGF0YSwgYW5kIGlzIG5vdCBndWFyYW50ZWVkIHRvIHdvcmsgYXMgZXhwZWN0ZWQgaW5cbiAqIG90aGVyIHNpdHVhdGlvbnMuXG4gKlxuICogVXNlIHRoaXMgZnVuY3Rpb24gY3JlYXRlIGEgRmlsZSBvYmplY3QgZm9yIHVzZSBpbiBSZXF1ZXN0Qm9keVR5cGUuZm9ybURhdGEgaW4gZW52aXJvbm1lbnRzIHdoZXJlIHRoZSBnbG9iYWwgRmlsZSBvYmplY3QgaXMgdW5hdmFpbGFibGUuXG4gKlxuICogQHBhcmFtIGNvbnRlbnQgLSB0aGUgY29udGVudCBvZiB0aGUgZmlsZSBhcyBhIFVpbnQ4QXJyYXkgaW4gbWVtb3J5LlxuICogQHBhcmFtIG5hbWUgLSB0aGUgbmFtZSBvZiB0aGUgZmlsZS5cbiAqIEBwYXJhbSBvcHRpb25zIC0gb3B0aW9uYWwgbWV0YWRhdGEgYWJvdXQgdGhlIGZpbGUsIGUuZy4gZmlsZSBuYW1lLCBmaWxlIHNpemUsIE1JTUUgdHlwZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUZpbGUoY29udGVudCwgbmFtZSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgdmFyIF9hLCBfYiwgX2M7XG4gICAgaWYgKGlzTm9kZUxpa2UpIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgdW5pbXBsZW1lbnRlZE1ldGhvZHMpLCB7IHR5cGU6IChfYSA9IG9wdGlvbnMudHlwZSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogXCJcIiwgbGFzdE1vZGlmaWVkOiAoX2IgPSBvcHRpb25zLmxhc3RNb2RpZmllZCkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogbmV3IERhdGUoKS5nZXRUaW1lKCksIHdlYmtpdFJlbGF0aXZlUGF0aDogKF9jID0gb3B0aW9ucy53ZWJraXRSZWxhdGl2ZVBhdGgpICE9PSBudWxsICYmIF9jICE9PSB2b2lkIDAgPyBfYyA6IFwiXCIsIHNpemU6IGNvbnRlbnQuYnl0ZUxlbmd0aCwgbmFtZSwgYXJyYXlCdWZmZXI6IGFzeW5jICgpID0+IGNvbnRlbnQuYnVmZmVyLCBzdHJlYW06ICgpID0+IG5ldyBCbG9iKFtjb250ZW50XSkuc3RyZWFtKCksIFtyYXdDb250ZW50XTogKCkgPT4gY29udGVudCB9KTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBuZXcgRmlsZShbY29udGVudF0sIG5hbWUsIG9wdGlvbnMpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZpbGUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/file.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/helpers.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/helpers.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   delay: () => (/* binding */ delay),\n/* harmony export */   parseHeaderValueAsNumber: () => (/* binding */ parseHeaderValueAsNumber)\n/* harmony export */ });\n/* harmony import */ var _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/abort-controller */ \"(ssr)/./node_modules/@azure/abort-controller/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nconst StandardAbortMessage = \"The operation was aborted.\";\n/**\n * A wrapper for setTimeout that resolves a promise after delayInMs milliseconds.\n * @param delayInMs - The number of milliseconds to be delayed.\n * @param value - The value to be resolved with after a timeout of t milliseconds.\n * @param options - The options for delay - currently abort options\n *                  - abortSignal - The abortSignal associated with containing operation.\n *                  - abortErrorMsg - The abort error message associated with containing operation.\n * @returns Resolved promise\n */\nfunction delay(delayInMs, value, options) {\n    return new Promise((resolve, reject) => {\n        let timer = undefined;\n        let onAborted = undefined;\n        const rejectOnAbort = () => {\n            return reject(new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__.AbortError((options === null || options === void 0 ? void 0 : options.abortErrorMsg) ? options === null || options === void 0 ? void 0 : options.abortErrorMsg : StandardAbortMessage));\n        };\n        const removeListeners = () => {\n            if ((options === null || options === void 0 ? void 0 : options.abortSignal) && onAborted) {\n                options.abortSignal.removeEventListener(\"abort\", onAborted);\n            }\n        };\n        onAborted = () => {\n            if (timer) {\n                clearTimeout(timer);\n            }\n            removeListeners();\n            return rejectOnAbort();\n        };\n        if ((options === null || options === void 0 ? void 0 : options.abortSignal) && options.abortSignal.aborted) {\n            return rejectOnAbort();\n        }\n        timer = setTimeout(() => {\n            removeListeners();\n            resolve(value);\n        }, delayInMs);\n        if (options === null || options === void 0 ? void 0 : options.abortSignal) {\n            options.abortSignal.addEventListener(\"abort\", onAborted);\n        }\n    });\n}\n/**\n * @internal\n * @returns the parsed value or undefined if the parsed value is invalid.\n */\nfunction parseHeaderValueAsNumber(response, headerName) {\n    const value = response.headers.get(headerName);\n    if (!value)\n        return;\n    const valueAsNum = Number(value);\n    if (Number.isNaN(valueAsNum))\n        return;\n    return valueAsNum;\n}\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS91dGlsL2hlbHBlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNxRDtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsK0RBQVU7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmUgLSBIZWxsbyBTY3JpcHQgQUlcXGxpZmVBZ2VudFxcdm9pY2UtbGl2ZS1hZ2VudFxcc2FtcGxlc1xccmVhY3RcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXJlc3QtcGlwZWxpbmVcXGRpc3RcXGVzbVxcdXRpbFxcaGVscGVycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IEFib3J0RXJyb3IgfSBmcm9tIFwiQGF6dXJlL2Fib3J0LWNvbnRyb2xsZXJcIjtcbmNvbnN0IFN0YW5kYXJkQWJvcnRNZXNzYWdlID0gXCJUaGUgb3BlcmF0aW9uIHdhcyBhYm9ydGVkLlwiO1xuLyoqXG4gKiBBIHdyYXBwZXIgZm9yIHNldFRpbWVvdXQgdGhhdCByZXNvbHZlcyBhIHByb21pc2UgYWZ0ZXIgZGVsYXlJbk1zIG1pbGxpc2Vjb25kcy5cbiAqIEBwYXJhbSBkZWxheUluTXMgLSBUaGUgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyB0byBiZSBkZWxheWVkLlxuICogQHBhcmFtIHZhbHVlIC0gVGhlIHZhbHVlIHRvIGJlIHJlc29sdmVkIHdpdGggYWZ0ZXIgYSB0aW1lb3V0IG9mIHQgbWlsbGlzZWNvbmRzLlxuICogQHBhcmFtIG9wdGlvbnMgLSBUaGUgb3B0aW9ucyBmb3IgZGVsYXkgLSBjdXJyZW50bHkgYWJvcnQgb3B0aW9uc1xuICogICAgICAgICAgICAgICAgICAtIGFib3J0U2lnbmFsIC0gVGhlIGFib3J0U2lnbmFsIGFzc29jaWF0ZWQgd2l0aCBjb250YWluaW5nIG9wZXJhdGlvbi5cbiAqICAgICAgICAgICAgICAgICAgLSBhYm9ydEVycm9yTXNnIC0gVGhlIGFib3J0IGVycm9yIG1lc3NhZ2UgYXNzb2NpYXRlZCB3aXRoIGNvbnRhaW5pbmcgb3BlcmF0aW9uLlxuICogQHJldHVybnMgUmVzb2x2ZWQgcHJvbWlzZVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVsYXkoZGVsYXlJbk1zLCB2YWx1ZSwgb3B0aW9ucykge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGxldCB0aW1lciA9IHVuZGVmaW5lZDtcbiAgICAgICAgbGV0IG9uQWJvcnRlZCA9IHVuZGVmaW5lZDtcbiAgICAgICAgY29uc3QgcmVqZWN0T25BYm9ydCA9ICgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiByZWplY3QobmV3IEFib3J0RXJyb3IoKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5hYm9ydEVycm9yTXNnKSA/IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5hYm9ydEVycm9yTXNnIDogU3RhbmRhcmRBYm9ydE1lc3NhZ2UpKTtcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgcmVtb3ZlTGlzdGVuZXJzID0gKCkgPT4ge1xuICAgICAgICAgICAgaWYgKChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuYWJvcnRTaWduYWwpICYmIG9uQWJvcnRlZCkge1xuICAgICAgICAgICAgICAgIG9wdGlvbnMuYWJvcnRTaWduYWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsIG9uQWJvcnRlZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIG9uQWJvcnRlZCA9ICgpID0+IHtcbiAgICAgICAgICAgIGlmICh0aW1lcikge1xuICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZW1vdmVMaXN0ZW5lcnMoKTtcbiAgICAgICAgICAgIHJldHVybiByZWplY3RPbkFib3J0KCk7XG4gICAgICAgIH07XG4gICAgICAgIGlmICgob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmFib3J0U2lnbmFsKSAmJiBvcHRpb25zLmFib3J0U2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgICAgICAgIHJldHVybiByZWplY3RPbkFib3J0KCk7XG4gICAgICAgIH1cbiAgICAgICAgdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIHJlbW92ZUxpc3RlbmVycygpO1xuICAgICAgICAgICAgcmVzb2x2ZSh2YWx1ZSk7XG4gICAgICAgIH0sIGRlbGF5SW5Ncyk7XG4gICAgICAgIGlmIChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuYWJvcnRTaWduYWwpIHtcbiAgICAgICAgICAgIG9wdGlvbnMuYWJvcnRTaWduYWwuYWRkRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsIG9uQWJvcnRlZCk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbi8qKlxuICogQGludGVybmFsXG4gKiBAcmV0dXJucyB0aGUgcGFyc2VkIHZhbHVlIG9yIHVuZGVmaW5lZCBpZiB0aGUgcGFyc2VkIHZhbHVlIGlzIGludmFsaWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUhlYWRlclZhbHVlQXNOdW1iZXIocmVzcG9uc2UsIGhlYWRlck5hbWUpIHtcbiAgICBjb25zdCB2YWx1ZSA9IHJlc3BvbnNlLmhlYWRlcnMuZ2V0KGhlYWRlck5hbWUpO1xuICAgIGlmICghdmFsdWUpXG4gICAgICAgIHJldHVybjtcbiAgICBjb25zdCB2YWx1ZUFzTnVtID0gTnVtYmVyKHZhbHVlKTtcbiAgICBpZiAoTnVtYmVyLmlzTmFOKHZhbHVlQXNOdW0pKVxuICAgICAgICByZXR1cm47XG4gICAgcmV0dXJuIHZhbHVlQXNOdW07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oZWxwZXJzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/helpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/inspect.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/inspect.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   custom: () => (/* binding */ custom)\n/* harmony export */ });\n/* harmony import */ var node_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:util */ \"node:util\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nconst custom = node_util__WEBPACK_IMPORTED_MODULE_0__.inspect.custom;\n//# sourceMappingURL=inspect.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS91dGlsL2luc3BlY3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ29DO0FBQzdCLGVBQWUsOENBQU87QUFDN0IiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1yZXN0LXBpcGVsaW5lXFxkaXN0XFxlc21cXHV0aWxcXGluc3BlY3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBpbnNwZWN0IH0gZnJvbSBcIm5vZGU6dXRpbFwiO1xuZXhwb3J0IGNvbnN0IGN1c3RvbSA9IGluc3BlY3QuY3VzdG9tO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5zcGVjdC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/inspect.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/sanitizer.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/sanitizer.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Sanitizer: () => (/* binding */ Sanitizer)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nconst RedactedString = \"REDACTED\";\n// Make sure this list is up-to-date with the one under core/logger/Readme#Keyconcepts\nconst defaultAllowedHeaderNames = [\n    \"x-ms-client-request-id\",\n    \"x-ms-return-client-request-id\",\n    \"x-ms-useragent\",\n    \"x-ms-correlation-request-id\",\n    \"x-ms-request-id\",\n    \"client-request-id\",\n    \"ms-cv\",\n    \"return-client-request-id\",\n    \"traceparent\",\n    \"Access-Control-Allow-Credentials\",\n    \"Access-Control-Allow-Headers\",\n    \"Access-Control-Allow-Methods\",\n    \"Access-Control-Allow-Origin\",\n    \"Access-Control-Expose-Headers\",\n    \"Access-Control-Max-Age\",\n    \"Access-Control-Request-Headers\",\n    \"Access-Control-Request-Method\",\n    \"Origin\",\n    \"Accept\",\n    \"Accept-Encoding\",\n    \"Cache-Control\",\n    \"Connection\",\n    \"Content-Length\",\n    \"Content-Type\",\n    \"Date\",\n    \"ETag\",\n    \"Expires\",\n    \"If-Match\",\n    \"If-Modified-Since\",\n    \"If-None-Match\",\n    \"If-Unmodified-Since\",\n    \"Last-Modified\",\n    \"Pragma\",\n    \"Request-Id\",\n    \"Retry-After\",\n    \"Server\",\n    \"Transfer-Encoding\",\n    \"User-Agent\",\n    \"WWW-Authenticate\",\n];\nconst defaultAllowedQueryParameters = [\"api-version\"];\n/**\n * @internal\n */\nclass Sanitizer {\n    constructor({ additionalAllowedHeaderNames: allowedHeaderNames = [], additionalAllowedQueryParameters: allowedQueryParameters = [], } = {}) {\n        allowedHeaderNames = defaultAllowedHeaderNames.concat(allowedHeaderNames);\n        allowedQueryParameters = defaultAllowedQueryParameters.concat(allowedQueryParameters);\n        this.allowedHeaderNames = new Set(allowedHeaderNames.map((n) => n.toLowerCase()));\n        this.allowedQueryParameters = new Set(allowedQueryParameters.map((p) => p.toLowerCase()));\n    }\n    sanitize(obj) {\n        const seen = new Set();\n        return JSON.stringify(obj, (key, value) => {\n            // Ensure Errors include their interesting non-enumerable members\n            if (value instanceof Error) {\n                return Object.assign(Object.assign({}, value), { name: value.name, message: value.message });\n            }\n            if (key === \"headers\") {\n                return this.sanitizeHeaders(value);\n            }\n            else if (key === \"url\") {\n                return this.sanitizeUrl(value);\n            }\n            else if (key === \"query\") {\n                return this.sanitizeQuery(value);\n            }\n            else if (key === \"body\") {\n                // Don't log the request body\n                return undefined;\n            }\n            else if (key === \"response\") {\n                // Don't log response again\n                return undefined;\n            }\n            else if (key === \"operationSpec\") {\n                // When using sendOperationRequest, the request carries a massive\n                // field with the autorest spec. No need to log it.\n                return undefined;\n            }\n            else if (Array.isArray(value) || (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.isObject)(value)) {\n                if (seen.has(value)) {\n                    return \"[Circular]\";\n                }\n                seen.add(value);\n            }\n            return value;\n        }, 2);\n    }\n    sanitizeUrl(value) {\n        if (typeof value !== \"string\" || value === null || value === \"\") {\n            return value;\n        }\n        const url = new URL(value);\n        if (!url.search) {\n            return value;\n        }\n        for (const [key] of url.searchParams) {\n            if (!this.allowedQueryParameters.has(key.toLowerCase())) {\n                url.searchParams.set(key, RedactedString);\n            }\n        }\n        return url.toString();\n    }\n    sanitizeHeaders(obj) {\n        const sanitized = {};\n        for (const key of Object.keys(obj)) {\n            if (this.allowedHeaderNames.has(key.toLowerCase())) {\n                sanitized[key] = obj[key];\n            }\n            else {\n                sanitized[key] = RedactedString;\n            }\n        }\n        return sanitized;\n    }\n    sanitizeQuery(value) {\n        if (typeof value !== \"object\" || value === null) {\n            return value;\n        }\n        const sanitized = {};\n        for (const k of Object.keys(value)) {\n            if (this.allowedQueryParameters.has(k.toLowerCase())) {\n                sanitized[k] = value[k];\n            }\n            else {\n                sanitized[k] = RedactedString;\n            }\n        }\n        return sanitized;\n    }\n}\n//# sourceMappingURL=sanitizer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS91dGlsL3Nhbml0aXplci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDNEM7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1Asa0JBQWtCLHdIQUF3SCxJQUFJO0FBQzlJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELFlBQVksMENBQTBDO0FBQzNHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsMERBQVE7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmUgLSBIZWxsbyBTY3JpcHQgQUlcXGxpZmVBZ2VudFxcdm9pY2UtbGl2ZS1hZ2VudFxcc2FtcGxlc1xccmVhY3RcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXJlc3QtcGlwZWxpbmVcXGRpc3RcXGVzbVxcdXRpbFxcc2FuaXRpemVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgaXNPYmplY3QgfSBmcm9tIFwiQGF6dXJlL2NvcmUtdXRpbFwiO1xuY29uc3QgUmVkYWN0ZWRTdHJpbmcgPSBcIlJFREFDVEVEXCI7XG4vLyBNYWtlIHN1cmUgdGhpcyBsaXN0IGlzIHVwLXRvLWRhdGUgd2l0aCB0aGUgb25lIHVuZGVyIGNvcmUvbG9nZ2VyL1JlYWRtZSNLZXljb25jZXB0c1xuY29uc3QgZGVmYXVsdEFsbG93ZWRIZWFkZXJOYW1lcyA9IFtcbiAgICBcIngtbXMtY2xpZW50LXJlcXVlc3QtaWRcIixcbiAgICBcIngtbXMtcmV0dXJuLWNsaWVudC1yZXF1ZXN0LWlkXCIsXG4gICAgXCJ4LW1zLXVzZXJhZ2VudFwiLFxuICAgIFwieC1tcy1jb3JyZWxhdGlvbi1yZXF1ZXN0LWlkXCIsXG4gICAgXCJ4LW1zLXJlcXVlc3QtaWRcIixcbiAgICBcImNsaWVudC1yZXF1ZXN0LWlkXCIsXG4gICAgXCJtcy1jdlwiLFxuICAgIFwicmV0dXJuLWNsaWVudC1yZXF1ZXN0LWlkXCIsXG4gICAgXCJ0cmFjZXBhcmVudFwiLFxuICAgIFwiQWNjZXNzLUNvbnRyb2wtQWxsb3ctQ3JlZGVudGlhbHNcIixcbiAgICBcIkFjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnNcIixcbiAgICBcIkFjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHNcIixcbiAgICBcIkFjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpblwiLFxuICAgIFwiQWNjZXNzLUNvbnRyb2wtRXhwb3NlLUhlYWRlcnNcIixcbiAgICBcIkFjY2Vzcy1Db250cm9sLU1heC1BZ2VcIixcbiAgICBcIkFjY2Vzcy1Db250cm9sLVJlcXVlc3QtSGVhZGVyc1wiLFxuICAgIFwiQWNjZXNzLUNvbnRyb2wtUmVxdWVzdC1NZXRob2RcIixcbiAgICBcIk9yaWdpblwiLFxuICAgIFwiQWNjZXB0XCIsXG4gICAgXCJBY2NlcHQtRW5jb2RpbmdcIixcbiAgICBcIkNhY2hlLUNvbnRyb2xcIixcbiAgICBcIkNvbm5lY3Rpb25cIixcbiAgICBcIkNvbnRlbnQtTGVuZ3RoXCIsXG4gICAgXCJDb250ZW50LVR5cGVcIixcbiAgICBcIkRhdGVcIixcbiAgICBcIkVUYWdcIixcbiAgICBcIkV4cGlyZXNcIixcbiAgICBcIklmLU1hdGNoXCIsXG4gICAgXCJJZi1Nb2RpZmllZC1TaW5jZVwiLFxuICAgIFwiSWYtTm9uZS1NYXRjaFwiLFxuICAgIFwiSWYtVW5tb2RpZmllZC1TaW5jZVwiLFxuICAgIFwiTGFzdC1Nb2RpZmllZFwiLFxuICAgIFwiUHJhZ21hXCIsXG4gICAgXCJSZXF1ZXN0LUlkXCIsXG4gICAgXCJSZXRyeS1BZnRlclwiLFxuICAgIFwiU2VydmVyXCIsXG4gICAgXCJUcmFuc2Zlci1FbmNvZGluZ1wiLFxuICAgIFwiVXNlci1BZ2VudFwiLFxuICAgIFwiV1dXLUF1dGhlbnRpY2F0ZVwiLFxuXTtcbmNvbnN0IGRlZmF1bHRBbGxvd2VkUXVlcnlQYXJhbWV0ZXJzID0gW1wiYXBpLXZlcnNpb25cIl07XG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgY2xhc3MgU2FuaXRpemVyIHtcbiAgICBjb25zdHJ1Y3Rvcih7IGFkZGl0aW9uYWxBbGxvd2VkSGVhZGVyTmFtZXM6IGFsbG93ZWRIZWFkZXJOYW1lcyA9IFtdLCBhZGRpdGlvbmFsQWxsb3dlZFF1ZXJ5UGFyYW1ldGVyczogYWxsb3dlZFF1ZXJ5UGFyYW1ldGVycyA9IFtdLCB9ID0ge30pIHtcbiAgICAgICAgYWxsb3dlZEhlYWRlck5hbWVzID0gZGVmYXVsdEFsbG93ZWRIZWFkZXJOYW1lcy5jb25jYXQoYWxsb3dlZEhlYWRlck5hbWVzKTtcbiAgICAgICAgYWxsb3dlZFF1ZXJ5UGFyYW1ldGVycyA9IGRlZmF1bHRBbGxvd2VkUXVlcnlQYXJhbWV0ZXJzLmNvbmNhdChhbGxvd2VkUXVlcnlQYXJhbWV0ZXJzKTtcbiAgICAgICAgdGhpcy5hbGxvd2VkSGVhZGVyTmFtZXMgPSBuZXcgU2V0KGFsbG93ZWRIZWFkZXJOYW1lcy5tYXAoKG4pID0+IG4udG9Mb3dlckNhc2UoKSkpO1xuICAgICAgICB0aGlzLmFsbG93ZWRRdWVyeVBhcmFtZXRlcnMgPSBuZXcgU2V0KGFsbG93ZWRRdWVyeVBhcmFtZXRlcnMubWFwKChwKSA9PiBwLnRvTG93ZXJDYXNlKCkpKTtcbiAgICB9XG4gICAgc2FuaXRpemUob2JqKSB7XG4gICAgICAgIGNvbnN0IHNlZW4gPSBuZXcgU2V0KCk7XG4gICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShvYmosIChrZXksIHZhbHVlKSA9PiB7XG4gICAgICAgICAgICAvLyBFbnN1cmUgRXJyb3JzIGluY2x1ZGUgdGhlaXIgaW50ZXJlc3Rpbmcgbm9uLWVudW1lcmFibGUgbWVtYmVyc1xuICAgICAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCB2YWx1ZSksIHsgbmFtZTogdmFsdWUubmFtZSwgbWVzc2FnZTogdmFsdWUubWVzc2FnZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChrZXkgPT09IFwiaGVhZGVyc1wiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuc2FuaXRpemVIZWFkZXJzKHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGtleSA9PT0gXCJ1cmxcIikge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnNhbml0aXplVXJsKHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGtleSA9PT0gXCJxdWVyeVwiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuc2FuaXRpemVRdWVyeSh2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChrZXkgPT09IFwiYm9keVwiKSB7XG4gICAgICAgICAgICAgICAgLy8gRG9uJ3QgbG9nIHRoZSByZXF1ZXN0IGJvZHlcbiAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoa2V5ID09PSBcInJlc3BvbnNlXCIpIHtcbiAgICAgICAgICAgICAgICAvLyBEb24ndCBsb2cgcmVzcG9uc2UgYWdhaW5cbiAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoa2V5ID09PSBcIm9wZXJhdGlvblNwZWNcIikge1xuICAgICAgICAgICAgICAgIC8vIFdoZW4gdXNpbmcgc2VuZE9wZXJhdGlvblJlcXVlc3QsIHRoZSByZXF1ZXN0IGNhcnJpZXMgYSBtYXNzaXZlXG4gICAgICAgICAgICAgICAgLy8gZmllbGQgd2l0aCB0aGUgYXV0b3Jlc3Qgc3BlYy4gTm8gbmVlZCB0byBsb2cgaXQuXG4gICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpIHx8IGlzT2JqZWN0KHZhbHVlKSkge1xuICAgICAgICAgICAgICAgIGlmIChzZWVuLmhhcyh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFwiW0NpcmN1bGFyXVwiO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBzZWVuLmFkZCh2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH0sIDIpO1xuICAgIH1cbiAgICBzYW5pdGl6ZVVybCh2YWx1ZSkge1xuICAgICAgICBpZiAodHlwZW9mIHZhbHVlICE9PSBcInN0cmluZ1wiIHx8IHZhbHVlID09PSBudWxsIHx8IHZhbHVlID09PSBcIlwiKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgdXJsID0gbmV3IFVSTCh2YWx1ZSk7XG4gICAgICAgIGlmICghdXJsLnNlYXJjaCkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3QgW2tleV0gb2YgdXJsLnNlYXJjaFBhcmFtcykge1xuICAgICAgICAgICAgaWYgKCF0aGlzLmFsbG93ZWRRdWVyeVBhcmFtZXRlcnMuaGFzKGtleS50b0xvd2VyQ2FzZSgpKSkge1xuICAgICAgICAgICAgICAgIHVybC5zZWFyY2hQYXJhbXMuc2V0KGtleSwgUmVkYWN0ZWRTdHJpbmcpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB1cmwudG9TdHJpbmcoKTtcbiAgICB9XG4gICAgc2FuaXRpemVIZWFkZXJzKG9iaikge1xuICAgICAgICBjb25zdCBzYW5pdGl6ZWQgPSB7fTtcbiAgICAgICAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmtleXMob2JqKSkge1xuICAgICAgICAgICAgaWYgKHRoaXMuYWxsb3dlZEhlYWRlck5hbWVzLmhhcyhrZXkudG9Mb3dlckNhc2UoKSkpIHtcbiAgICAgICAgICAgICAgICBzYW5pdGl6ZWRba2V5XSA9IG9ialtrZXldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgc2FuaXRpemVkW2tleV0gPSBSZWRhY3RlZFN0cmluZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc2FuaXRpemVkO1xuICAgIH1cbiAgICBzYW5pdGl6ZVF1ZXJ5KHZhbHVlKSB7XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgIT09IFwib2JqZWN0XCIgfHwgdmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBzYW5pdGl6ZWQgPSB7fTtcbiAgICAgICAgZm9yIChjb25zdCBrIG9mIE9iamVjdC5rZXlzKHZhbHVlKSkge1xuICAgICAgICAgICAgaWYgKHRoaXMuYWxsb3dlZFF1ZXJ5UGFyYW1ldGVycy5oYXMoay50b0xvd2VyQ2FzZSgpKSkge1xuICAgICAgICAgICAgICAgIHNhbml0aXplZFtrXSA9IHZhbHVlW2tdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgc2FuaXRpemVkW2tdID0gUmVkYWN0ZWRTdHJpbmc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNhbml0aXplZDtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zYW5pdGl6ZXIuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/sanitizer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/tokenCycler.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/tokenCycler.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_CYCLER_OPTIONS: () => (/* binding */ DEFAULT_CYCLER_OPTIONS),\n/* harmony export */   createTokenCycler: () => (/* binding */ createTokenCycler)\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/helpers.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// Default options for the cycler if none are provided\nconst DEFAULT_CYCLER_OPTIONS = {\n    forcedRefreshWindowInMs: 1000, // Force waiting for a refresh 1s before the token expires\n    retryIntervalInMs: 3000, // Allow refresh attempts every 3s\n    refreshWindowInMs: 1000 * 60 * 2, // Start refreshing 2m before expiry\n};\n/**\n * Converts an an unreliable access token getter (which may resolve with null)\n * into an AccessTokenGetter by retrying the unreliable getter in a regular\n * interval.\n *\n * @param getAccessToken - A function that produces a promise of an access token that may fail by returning null.\n * @param retryIntervalInMs - The time (in milliseconds) to wait between retry attempts.\n * @param refreshTimeout - The timestamp after which the refresh attempt will fail, throwing an exception.\n * @returns - A promise that, if it resolves, will resolve with an access token.\n */\nasync function beginRefresh(getAccessToken, retryIntervalInMs, refreshTimeout) {\n    // This wrapper handles exceptions gracefully as long as we haven't exceeded\n    // the timeout.\n    async function tryGetAccessToken() {\n        if (Date.now() < refreshTimeout) {\n            try {\n                return await getAccessToken();\n            }\n            catch (_a) {\n                return null;\n            }\n        }\n        else {\n            const finalToken = await getAccessToken();\n            // Timeout is up, so throw if it's still null\n            if (finalToken === null) {\n                throw new Error(\"Failed to refresh access token.\");\n            }\n            return finalToken;\n        }\n    }\n    let token = await tryGetAccessToken();\n    while (token === null) {\n        await (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.delay)(retryIntervalInMs);\n        token = await tryGetAccessToken();\n    }\n    return token;\n}\n/**\n * Creates a token cycler from a credential, scopes, and optional settings.\n *\n * A token cycler represents a way to reliably retrieve a valid access token\n * from a TokenCredential. It will handle initializing the token, refreshing it\n * when it nears expiration, and synchronizes refresh attempts to avoid\n * concurrency hazards.\n *\n * @param credential - the underlying TokenCredential that provides the access\n * token\n * @param tokenCyclerOptions - optionally override default settings for the cycler\n *\n * @returns - a function that reliably produces a valid access token\n */\nfunction createTokenCycler(credential, tokenCyclerOptions) {\n    let refreshWorker = null;\n    let token = null;\n    let tenantId;\n    const options = Object.assign(Object.assign({}, DEFAULT_CYCLER_OPTIONS), tokenCyclerOptions);\n    /**\n     * This little holder defines several predicates that we use to construct\n     * the rules of refreshing the token.\n     */\n    const cycler = {\n        /**\n         * Produces true if a refresh job is currently in progress.\n         */\n        get isRefreshing() {\n            return refreshWorker !== null;\n        },\n        /**\n         * Produces true if the cycler SHOULD refresh (we are within the refresh\n         * window and not already refreshing)\n         */\n        get shouldRefresh() {\n            var _a;\n            if (cycler.isRefreshing) {\n                return false;\n            }\n            if ((token === null || token === void 0 ? void 0 : token.refreshAfterTimestamp) && token.refreshAfterTimestamp < Date.now()) {\n                return true;\n            }\n            return ((_a = token === null || token === void 0 ? void 0 : token.expiresOnTimestamp) !== null && _a !== void 0 ? _a : 0) - options.refreshWindowInMs < Date.now();\n        },\n        /**\n         * Produces true if the cycler MUST refresh (null or nearly-expired\n         * token).\n         */\n        get mustRefresh() {\n            return (token === null || token.expiresOnTimestamp - options.forcedRefreshWindowInMs < Date.now());\n        },\n    };\n    /**\n     * Starts a refresh job or returns the existing job if one is already\n     * running.\n     */\n    function refresh(scopes, getTokenOptions) {\n        var _a;\n        if (!cycler.isRefreshing) {\n            // We bind `scopes` here to avoid passing it around a lot\n            const tryGetAccessToken = () => credential.getToken(scopes, getTokenOptions);\n            // Take advantage of promise chaining to insert an assignment to `token`\n            // before the refresh can be considered done.\n            refreshWorker = beginRefresh(tryGetAccessToken, options.retryIntervalInMs, \n            // If we don't have a token, then we should timeout immediately\n            (_a = token === null || token === void 0 ? void 0 : token.expiresOnTimestamp) !== null && _a !== void 0 ? _a : Date.now())\n                .then((_token) => {\n                refreshWorker = null;\n                token = _token;\n                tenantId = getTokenOptions.tenantId;\n                return token;\n            })\n                .catch((reason) => {\n                // We also should reset the refresher if we enter a failed state.  All\n                // existing awaiters will throw, but subsequent requests will start a\n                // new retry chain.\n                refreshWorker = null;\n                token = null;\n                tenantId = undefined;\n                throw reason;\n            });\n        }\n        return refreshWorker;\n    }\n    return async (scopes, tokenOptions) => {\n        //\n        // Simple rules:\n        // - If we MUST refresh, then return the refresh task, blocking\n        //   the pipeline until a token is available.\n        // - If we SHOULD refresh, then run refresh but don't return it\n        //   (we can still use the cached token).\n        // - Return the token, since it's fine if we didn't return in\n        //   step 1.\n        //\n        const hasClaimChallenge = Boolean(tokenOptions.claims);\n        const tenantIdChanged = tenantId !== tokenOptions.tenantId;\n        if (hasClaimChallenge) {\n            // If we've received a claim, we know the existing token isn't valid\n            // We want to clear it so that that refresh worker won't use the old expiration time as a timeout\n            token = null;\n        }\n        // If the tenantId passed in token options is different to the one we have\n        // Or if we are in claim challenge and the token was rejected and a new access token need to be issued, we need to\n        // refresh the token with the new tenantId or token.\n        const mustRefresh = tenantIdChanged || hasClaimChallenge || cycler.mustRefresh;\n        if (mustRefresh) {\n            return refresh(scopes, tokenOptions);\n        }\n        if (cycler.shouldRefresh) {\n            refresh(scopes, tokenOptions);\n        }\n        return token;\n    };\n}\n//# sourceMappingURL=tokenCycler.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/tokenCycler.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/typeGuards.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/typeGuards.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isBlob: () => (/* binding */ isBlob),\n/* harmony export */   isNodeReadableStream: () => (/* binding */ isNodeReadableStream),\n/* harmony export */   isReadableStream: () => (/* binding */ isReadableStream),\n/* harmony export */   isWebReadableStream: () => (/* binding */ isWebReadableStream)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nfunction isNodeReadableStream(x) {\n    return Boolean(x && typeof x[\"pipe\"] === \"function\");\n}\nfunction isWebReadableStream(x) {\n    return Boolean(x &&\n        typeof x.getReader === \"function\" &&\n        typeof x.tee === \"function\");\n}\nfunction isReadableStream(x) {\n    return isNodeReadableStream(x) || isWebReadableStream(x);\n}\nfunction isBlob(x) {\n    return typeof x.stream === \"function\";\n}\n//# sourceMappingURL=typeGuards.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS91dGlsL3R5cGVHdWFyZHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1yZXN0LXBpcGVsaW5lXFxkaXN0XFxlc21cXHV0aWxcXHR5cGVHdWFyZHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5leHBvcnQgZnVuY3Rpb24gaXNOb2RlUmVhZGFibGVTdHJlYW0oeCkge1xuICAgIHJldHVybiBCb29sZWFuKHggJiYgdHlwZW9mIHhbXCJwaXBlXCJdID09PSBcImZ1bmN0aW9uXCIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzV2ViUmVhZGFibGVTdHJlYW0oeCkge1xuICAgIHJldHVybiBCb29sZWFuKHggJiZcbiAgICAgICAgdHlwZW9mIHguZ2V0UmVhZGVyID09PSBcImZ1bmN0aW9uXCIgJiZcbiAgICAgICAgdHlwZW9mIHgudGVlID09PSBcImZ1bmN0aW9uXCIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzUmVhZGFibGVTdHJlYW0oeCkge1xuICAgIHJldHVybiBpc05vZGVSZWFkYWJsZVN0cmVhbSh4KSB8fCBpc1dlYlJlYWRhYmxlU3RyZWFtKHgpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzQmxvYih4KSB7XG4gICAgcmV0dXJuIHR5cGVvZiB4LnN0cmVhbSA9PT0gXCJmdW5jdGlvblwiO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZUd1YXJkcy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/typeGuards.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgent.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgent.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getUserAgentHeaderName: () => (/* binding */ getUserAgentHeaderName),\n/* harmony export */   getUserAgentValue: () => (/* binding */ getUserAgentValue)\n/* harmony export */ });\n/* harmony import */ var _userAgentPlatform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./userAgentPlatform.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgentPlatform.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\nfunction getUserAgentString(telemetryInfo) {\n    const parts = [];\n    for (const [key, value] of telemetryInfo) {\n        const token = value ? `${key}/${value}` : key;\n        parts.push(token);\n    }\n    return parts.join(\" \");\n}\n/**\n * @internal\n */\nfunction getUserAgentHeaderName() {\n    return (0,_userAgentPlatform_js__WEBPACK_IMPORTED_MODULE_0__.getHeaderName)();\n}\n/**\n * @internal\n */\nasync function getUserAgentValue(prefix) {\n    const runtimeInfo = new Map();\n    runtimeInfo.set(\"core-rest-pipeline\", _constants_js__WEBPACK_IMPORTED_MODULE_1__.SDK_VERSION);\n    await (0,_userAgentPlatform_js__WEBPACK_IMPORTED_MODULE_0__.setPlatformSpecificData)(runtimeInfo);\n    const defaultAgent = getUserAgentString(runtimeInfo);\n    const userAgentValue = prefix ? `${prefix} ${defaultAgent}` : defaultAgent;\n    return userAgentValue;\n}\n//# sourceMappingURL=userAgent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS91dGlsL3VzZXJBZ2VudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNnRjtBQUNsQztBQUM5QztBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsSUFBSSxHQUFHLE1BQU07QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsb0VBQWE7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsMENBQTBDLHNEQUFXO0FBQ3JELFVBQVUsOEVBQXVCO0FBQ2pDO0FBQ0EsdUNBQXVDLFFBQVEsRUFBRSxhQUFhO0FBQzlEO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmUgLSBIZWxsbyBTY3JpcHQgQUlcXGxpZmVBZ2VudFxcdm9pY2UtbGl2ZS1hZ2VudFxcc2FtcGxlc1xccmVhY3RcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXJlc3QtcGlwZWxpbmVcXGRpc3RcXGVzbVxcdXRpbFxcdXNlckFnZW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgZ2V0SGVhZGVyTmFtZSwgc2V0UGxhdGZvcm1TcGVjaWZpY0RhdGEgfSBmcm9tIFwiLi91c2VyQWdlbnRQbGF0Zm9ybS5qc1wiO1xuaW1wb3J0IHsgU0RLX1ZFUlNJT04gfSBmcm9tIFwiLi4vY29uc3RhbnRzLmpzXCI7XG5mdW5jdGlvbiBnZXRVc2VyQWdlbnRTdHJpbmcodGVsZW1ldHJ5SW5mbykge1xuICAgIGNvbnN0IHBhcnRzID0gW107XG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgdGVsZW1ldHJ5SW5mbykge1xuICAgICAgICBjb25zdCB0b2tlbiA9IHZhbHVlID8gYCR7a2V5fS8ke3ZhbHVlfWAgOiBrZXk7XG4gICAgICAgIHBhcnRzLnB1c2godG9rZW4pO1xuICAgIH1cbiAgICByZXR1cm4gcGFydHMuam9pbihcIiBcIik7XG59XG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0VXNlckFnZW50SGVhZGVyTmFtZSgpIHtcbiAgICByZXR1cm4gZ2V0SGVhZGVyTmFtZSgpO1xufVxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFVzZXJBZ2VudFZhbHVlKHByZWZpeCkge1xuICAgIGNvbnN0IHJ1bnRpbWVJbmZvID0gbmV3IE1hcCgpO1xuICAgIHJ1bnRpbWVJbmZvLnNldChcImNvcmUtcmVzdC1waXBlbGluZVwiLCBTREtfVkVSU0lPTik7XG4gICAgYXdhaXQgc2V0UGxhdGZvcm1TcGVjaWZpY0RhdGEocnVudGltZUluZm8pO1xuICAgIGNvbnN0IGRlZmF1bHRBZ2VudCA9IGdldFVzZXJBZ2VudFN0cmluZyhydW50aW1lSW5mbyk7XG4gICAgY29uc3QgdXNlckFnZW50VmFsdWUgPSBwcmVmaXggPyBgJHtwcmVmaXh9ICR7ZGVmYXVsdEFnZW50fWAgOiBkZWZhdWx0QWdlbnQ7XG4gICAgcmV0dXJuIHVzZXJBZ2VudFZhbHVlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXNlckFnZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgent.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgentPlatform.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgentPlatform.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("var node_process__WEBPACK_IMPORTED_MODULE_1___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getHeaderName: () => (/* binding */ getHeaderName),\n/* harmony export */   setPlatformSpecificData: () => (/* binding */ setPlatformSpecificData)\n/* harmony export */ });\n/* harmony import */ var node_os__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:os */ \"node:os\");\n/* harmony import */ var node_process__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node:process */ \"node:process\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * @internal\n */\nfunction getHeaderName() {\n    return \"User-Agent\";\n}\n/**\n * @internal\n */\nasync function setPlatformSpecificData(map) {\n    if (/*#__PURE__*/ (node_process__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (node_process__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(node_process__WEBPACK_IMPORTED_MODULE_1__, 2))) && node_process__WEBPACK_IMPORTED_MODULE_1__.versions) {\n        const versions = node_process__WEBPACK_IMPORTED_MODULE_1__.versions;\n        if (versions.bun) {\n            map.set(\"Bun\", versions.bun);\n        }\n        else if (versions.deno) {\n            map.set(\"Deno\", versions.deno);\n        }\n        else if (versions.node) {\n            map.set(\"Node\", versions.node);\n        }\n    }\n    map.set(\"OS\", `(${node_os__WEBPACK_IMPORTED_MODULE_0__.arch()}-${node_os__WEBPACK_IMPORTED_MODULE_0__.type()}-${node_os__WEBPACK_IMPORTED_MODULE_0__.release()})`);\n}\n//# sourceMappingURL=userAgentPlatform.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS91dGlsL3VzZXJBZ2VudFBsYXRmb3JtLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUM4QjtBQUNVO0FBQ3hDO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsUUFBUSw4TUFBTyxJQUFJLGtEQUFnQjtBQUNuQyx5QkFBeUIsa0RBQWdCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHlDQUFPLEdBQUcsR0FBRyx5Q0FBTyxHQUFHLEdBQUcsNENBQVUsR0FBRztBQUM3RDtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZSAtIEhlbGxvIFNjcmlwdCBBSVxcbGlmZUFnZW50XFx2b2ljZS1saXZlLWFnZW50XFxzYW1wbGVzXFxyZWFjdFxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtcmVzdC1waXBlbGluZVxcZGlzdFxcZXNtXFx1dGlsXFx1c2VyQWdlbnRQbGF0Zm9ybS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCAqIGFzIG9zIGZyb20gXCJub2RlOm9zXCI7XG5pbXBvcnQgKiBhcyBwcm9jZXNzIGZyb20gXCJub2RlOnByb2Nlc3NcIjtcbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRIZWFkZXJOYW1lKCkge1xuICAgIHJldHVybiBcIlVzZXItQWdlbnRcIjtcbn1cbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzZXRQbGF0Zm9ybVNwZWNpZmljRGF0YShtYXApIHtcbiAgICBpZiAocHJvY2VzcyAmJiBwcm9jZXNzLnZlcnNpb25zKSB7XG4gICAgICAgIGNvbnN0IHZlcnNpb25zID0gcHJvY2Vzcy52ZXJzaW9ucztcbiAgICAgICAgaWYgKHZlcnNpb25zLmJ1bikge1xuICAgICAgICAgICAgbWFwLnNldChcIkJ1blwiLCB2ZXJzaW9ucy5idW4pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHZlcnNpb25zLmRlbm8pIHtcbiAgICAgICAgICAgIG1hcC5zZXQoXCJEZW5vXCIsIHZlcnNpb25zLmRlbm8pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHZlcnNpb25zLm5vZGUpIHtcbiAgICAgICAgICAgIG1hcC5zZXQoXCJOb2RlXCIsIHZlcnNpb25zLm5vZGUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIG1hcC5zZXQoXCJPU1wiLCBgKCR7b3MuYXJjaCgpfS0ke29zLnR5cGUoKX0tJHtvcy5yZWxlYXNlKCl9KWApO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXNlckFnZW50UGxhdGZvcm0uanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgentPlatform.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-tracing/dist/commonjs/state.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist/commonjs/state.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.state = void 0;\n/**\n * @internal\n *\n * Holds the singleton instrumenter, to be shared across CJS and ESM imports.\n */\nexports.state = {\n    instrumenterImplementation: undefined,\n};\n//# sourceMappingURL=state-cjs.cjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdHJhY2luZy9kaXN0L2NvbW1vbmpzL3N0YXRlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS10cmFjaW5nXFxkaXN0XFxjb21tb25qc1xcc3RhdGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuc3RhdGUgPSB2b2lkIDA7XG4vKipcbiAqIEBpbnRlcm5hbFxuICpcbiAqIEhvbGRzIHRoZSBzaW5nbGV0b24gaW5zdHJ1bWVudGVyLCB0byBiZSBzaGFyZWQgYWNyb3NzIENKUyBhbmQgRVNNIGltcG9ydHMuXG4gKi9cbmV4cG9ydHMuc3RhdGUgPSB7XG4gICAgaW5zdHJ1bWVudGVySW1wbGVtZW50YXRpb246IHVuZGVmaW5lZCxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdGF0ZS1janMuY2pzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-tracing/dist/commonjs/state.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-tracing/dist/esm/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist/esm/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTracingClient: () => (/* reexport safe */ _tracingClient_js__WEBPACK_IMPORTED_MODULE_1__.createTracingClient),\n/* harmony export */   useInstrumenter: () => (/* reexport safe */ _instrumenter_js__WEBPACK_IMPORTED_MODULE_0__.useInstrumenter)\n/* harmony export */ });\n/* harmony import */ var _instrumenter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instrumenter.js */ \"(ssr)/./node_modules/@azure/core-tracing/dist/esm/instrumenter.js\");\n/* harmony import */ var _tracingClient_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tracingClient.js */ \"(ssr)/./node_modules/@azure/core-tracing/dist/esm/tracingClient.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdHJhY2luZy9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNvRDtBQUNLO0FBQ3pEIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZSAtIEhlbGxvIFNjcmlwdCBBSVxcbGlmZUFnZW50XFx2b2ljZS1saXZlLWFnZW50XFxzYW1wbGVzXFxyZWFjdFxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtdHJhY2luZ1xcZGlzdFxcZXNtXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCB7IHVzZUluc3RydW1lbnRlciB9IGZyb20gXCIuL2luc3RydW1lbnRlci5qc1wiO1xuZXhwb3J0IHsgY3JlYXRlVHJhY2luZ0NsaWVudCB9IGZyb20gXCIuL3RyYWNpbmdDbGllbnQuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-tracing/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-tracing/dist/esm/instrumenter.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist/esm/instrumenter.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDefaultInstrumenter: () => (/* binding */ createDefaultInstrumenter),\n/* harmony export */   createDefaultTracingSpan: () => (/* binding */ createDefaultTracingSpan),\n/* harmony export */   getInstrumenter: () => (/* binding */ getInstrumenter),\n/* harmony export */   useInstrumenter: () => (/* binding */ useInstrumenter)\n/* harmony export */ });\n/* harmony import */ var _tracingContext_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tracingContext.js */ \"(ssr)/./node_modules/@azure/core-tracing/dist/esm/tracingContext.js\");\n/* harmony import */ var _state_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./state.js */ \"(ssr)/./node_modules/@azure/core-tracing/dist/esm/state.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\nfunction createDefaultTracingSpan() {\n    return {\n        end: () => {\n            // noop\n        },\n        isRecording: () => false,\n        recordException: () => {\n            // noop\n        },\n        setAttribute: () => {\n            // noop\n        },\n        setStatus: () => {\n            // noop\n        },\n        addEvent: () => {\n            // noop\n        },\n    };\n}\nfunction createDefaultInstrumenter() {\n    return {\n        createRequestHeaders: () => {\n            return {};\n        },\n        parseTraceparentHeader: () => {\n            return undefined;\n        },\n        startSpan: (_name, spanOptions) => {\n            return {\n                span: createDefaultTracingSpan(),\n                tracingContext: (0,_tracingContext_js__WEBPACK_IMPORTED_MODULE_0__.createTracingContext)({ parentContext: spanOptions.tracingContext }),\n            };\n        },\n        withContext(_context, callback, ...callbackArgs) {\n            return callback(...callbackArgs);\n        },\n    };\n}\n/**\n * Extends the Azure SDK with support for a given instrumenter implementation.\n *\n * @param instrumenter - The instrumenter implementation to use.\n */\nfunction useInstrumenter(instrumenter) {\n    _state_js__WEBPACK_IMPORTED_MODULE_1__.state.instrumenterImplementation = instrumenter;\n}\n/**\n * Gets the currently set instrumenter, a No-Op instrumenter by default.\n *\n * @returns The currently set instrumenter\n */\nfunction getInstrumenter() {\n    if (!_state_js__WEBPACK_IMPORTED_MODULE_1__.state.instrumenterImplementation) {\n        _state_js__WEBPACK_IMPORTED_MODULE_1__.state.instrumenterImplementation = createDefaultInstrumenter();\n    }\n    return _state_js__WEBPACK_IMPORTED_MODULE_1__.state.instrumenterImplementation;\n}\n//# sourceMappingURL=instrumenter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdHJhY2luZy9kaXN0L2VzbS9pbnN0cnVtZW50ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUMyRDtBQUN4QjtBQUM1QjtBQUNQO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLHdFQUFvQixHQUFHLDJDQUEyQztBQUNsRztBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxJQUFJLDRDQUFLO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxTQUFTLDRDQUFLO0FBQ2QsUUFBUSw0Q0FBSztBQUNiO0FBQ0EsV0FBVyw0Q0FBSztBQUNoQjtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZSAtIEhlbGxvIFNjcmlwdCBBSVxcbGlmZUFnZW50XFx2b2ljZS1saXZlLWFnZW50XFxzYW1wbGVzXFxyZWFjdFxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtdHJhY2luZ1xcZGlzdFxcZXNtXFxpbnN0cnVtZW50ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBjcmVhdGVUcmFjaW5nQ29udGV4dCB9IGZyb20gXCIuL3RyYWNpbmdDb250ZXh0LmpzXCI7XG5pbXBvcnQgeyBzdGF0ZSB9IGZyb20gXCIuL3N0YXRlLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRGVmYXVsdFRyYWNpbmdTcGFuKCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGVuZDogKCkgPT4ge1xuICAgICAgICAgICAgLy8gbm9vcFxuICAgICAgICB9LFxuICAgICAgICBpc1JlY29yZGluZzogKCkgPT4gZmFsc2UsXG4gICAgICAgIHJlY29yZEV4Y2VwdGlvbjogKCkgPT4ge1xuICAgICAgICAgICAgLy8gbm9vcFxuICAgICAgICB9LFxuICAgICAgICBzZXRBdHRyaWJ1dGU6ICgpID0+IHtcbiAgICAgICAgICAgIC8vIG5vb3BcbiAgICAgICAgfSxcbiAgICAgICAgc2V0U3RhdHVzOiAoKSA9PiB7XG4gICAgICAgICAgICAvLyBub29wXG4gICAgICAgIH0sXG4gICAgICAgIGFkZEV2ZW50OiAoKSA9PiB7XG4gICAgICAgICAgICAvLyBub29wXG4gICAgICAgIH0sXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVEZWZhdWx0SW5zdHJ1bWVudGVyKCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGNyZWF0ZVJlcXVlc3RIZWFkZXJzOiAoKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4ge307XG4gICAgICAgIH0sXG4gICAgICAgIHBhcnNlVHJhY2VwYXJlbnRIZWFkZXI6ICgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH0sXG4gICAgICAgIHN0YXJ0U3BhbjogKF9uYW1lLCBzcGFuT3B0aW9ucykgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBzcGFuOiBjcmVhdGVEZWZhdWx0VHJhY2luZ1NwYW4oKSxcbiAgICAgICAgICAgICAgICB0cmFjaW5nQ29udGV4dDogY3JlYXRlVHJhY2luZ0NvbnRleHQoeyBwYXJlbnRDb250ZXh0OiBzcGFuT3B0aW9ucy50cmFjaW5nQ29udGV4dCB9KSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0sXG4gICAgICAgIHdpdGhDb250ZXh0KF9jb250ZXh0LCBjYWxsYmFjaywgLi4uY2FsbGJhY2tBcmdzKSB7XG4gICAgICAgICAgICByZXR1cm4gY2FsbGJhY2soLi4uY2FsbGJhY2tBcmdzKTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLyoqXG4gKiBFeHRlbmRzIHRoZSBBenVyZSBTREsgd2l0aCBzdXBwb3J0IGZvciBhIGdpdmVuIGluc3RydW1lbnRlciBpbXBsZW1lbnRhdGlvbi5cbiAqXG4gKiBAcGFyYW0gaW5zdHJ1bWVudGVyIC0gVGhlIGluc3RydW1lbnRlciBpbXBsZW1lbnRhdGlvbiB0byB1c2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VJbnN0cnVtZW50ZXIoaW5zdHJ1bWVudGVyKSB7XG4gICAgc3RhdGUuaW5zdHJ1bWVudGVySW1wbGVtZW50YXRpb24gPSBpbnN0cnVtZW50ZXI7XG59XG4vKipcbiAqIEdldHMgdGhlIGN1cnJlbnRseSBzZXQgaW5zdHJ1bWVudGVyLCBhIE5vLU9wIGluc3RydW1lbnRlciBieSBkZWZhdWx0LlxuICpcbiAqIEByZXR1cm5zIFRoZSBjdXJyZW50bHkgc2V0IGluc3RydW1lbnRlclxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0SW5zdHJ1bWVudGVyKCkge1xuICAgIGlmICghc3RhdGUuaW5zdHJ1bWVudGVySW1wbGVtZW50YXRpb24pIHtcbiAgICAgICAgc3RhdGUuaW5zdHJ1bWVudGVySW1wbGVtZW50YXRpb24gPSBjcmVhdGVEZWZhdWx0SW5zdHJ1bWVudGVyKCk7XG4gICAgfVxuICAgIHJldHVybiBzdGF0ZS5pbnN0cnVtZW50ZXJJbXBsZW1lbnRhdGlvbjtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluc3RydW1lbnRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-tracing/dist/esm/instrumenter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-tracing/dist/esm/state.js":
/*!************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist/esm/state.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   state: () => (/* binding */ state)\n/* harmony export */ });\n/* harmony import */ var _commonjs_state_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../commonjs/state.js */ \"(ssr)/./node_modules/@azure/core-tracing/dist/commonjs/state.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n// @ts-expect-error The recommended approach to sharing module state between ESM and CJS.\n// See https://github.com/isaacs/tshy/blob/main/README.md#module-local-state for additional information.\n\n/**\n * Defines the shared state between CJS and ESM by re-exporting the CJS state.\n */\nconst state = _commonjs_state_js__WEBPACK_IMPORTED_MODULE_0__.state;\n//# sourceMappingURL=state.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdHJhY2luZy9kaXN0L2VzbS9zdGF0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ3lEO0FBQ3pEO0FBQ0E7QUFDQTtBQUNPLGNBQWMscURBQVE7QUFDN0IiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS10cmFjaW5nXFxkaXN0XFxlc21cXHN0YXRlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLy8gQHRzLWV4cGVjdC1lcnJvciBUaGUgcmVjb21tZW5kZWQgYXBwcm9hY2ggdG8gc2hhcmluZyBtb2R1bGUgc3RhdGUgYmV0d2VlbiBFU00gYW5kIENKUy5cbi8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vaXNhYWNzL3RzaHkvYmxvYi9tYWluL1JFQURNRS5tZCNtb2R1bGUtbG9jYWwtc3RhdGUgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24uXG5pbXBvcnQgeyBzdGF0ZSBhcyBjanNTdGF0ZSB9IGZyb20gXCIuLi9jb21tb25qcy9zdGF0ZS5qc1wiO1xuLyoqXG4gKiBEZWZpbmVzIHRoZSBzaGFyZWQgc3RhdGUgYmV0d2VlbiBDSlMgYW5kIEVTTSBieSByZS1leHBvcnRpbmcgdGhlIENKUyBzdGF0ZS5cbiAqL1xuZXhwb3J0IGNvbnN0IHN0YXRlID0gY2pzU3RhdGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdGF0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-tracing/dist/esm/state.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-tracing/dist/esm/tracingClient.js":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist/esm/tracingClient.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTracingClient: () => (/* binding */ createTracingClient)\n/* harmony export */ });\n/* harmony import */ var _instrumenter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instrumenter.js */ \"(ssr)/./node_modules/@azure/core-tracing/dist/esm/instrumenter.js\");\n/* harmony import */ var _tracingContext_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tracingContext.js */ \"(ssr)/./node_modules/@azure/core-tracing/dist/esm/tracingContext.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * Creates a new tracing client.\n *\n * @param options - Options used to configure the tracing client.\n * @returns - An instance of {@link TracingClient}.\n */\nfunction createTracingClient(options) {\n    const { namespace, packageName, packageVersion } = options;\n    function startSpan(name, operationOptions, spanOptions) {\n        var _a;\n        const startSpanResult = (0,_instrumenter_js__WEBPACK_IMPORTED_MODULE_0__.getInstrumenter)().startSpan(name, Object.assign(Object.assign({}, spanOptions), { packageName: packageName, packageVersion: packageVersion, tracingContext: (_a = operationOptions === null || operationOptions === void 0 ? void 0 : operationOptions.tracingOptions) === null || _a === void 0 ? void 0 : _a.tracingContext }));\n        let tracingContext = startSpanResult.tracingContext;\n        const span = startSpanResult.span;\n        if (!tracingContext.getValue(_tracingContext_js__WEBPACK_IMPORTED_MODULE_1__.knownContextKeys.namespace)) {\n            tracingContext = tracingContext.setValue(_tracingContext_js__WEBPACK_IMPORTED_MODULE_1__.knownContextKeys.namespace, namespace);\n        }\n        span.setAttribute(\"az.namespace\", tracingContext.getValue(_tracingContext_js__WEBPACK_IMPORTED_MODULE_1__.knownContextKeys.namespace));\n        const updatedOptions = Object.assign({}, operationOptions, {\n            tracingOptions: Object.assign(Object.assign({}, operationOptions === null || operationOptions === void 0 ? void 0 : operationOptions.tracingOptions), { tracingContext }),\n        });\n        return {\n            span,\n            updatedOptions,\n        };\n    }\n    async function withSpan(name, operationOptions, callback, spanOptions) {\n        const { span, updatedOptions } = startSpan(name, operationOptions, spanOptions);\n        try {\n            const result = await withContext(updatedOptions.tracingOptions.tracingContext, () => Promise.resolve(callback(updatedOptions, span)));\n            span.setStatus({ status: \"success\" });\n            return result;\n        }\n        catch (err) {\n            span.setStatus({ status: \"error\", error: err });\n            throw err;\n        }\n        finally {\n            span.end();\n        }\n    }\n    function withContext(context, callback, ...callbackArgs) {\n        return (0,_instrumenter_js__WEBPACK_IMPORTED_MODULE_0__.getInstrumenter)().withContext(context, callback, ...callbackArgs);\n    }\n    /**\n     * Parses a traceparent header value into a span identifier.\n     *\n     * @param traceparentHeader - The traceparent header to parse.\n     * @returns An implementation-specific identifier for the span.\n     */\n    function parseTraceparentHeader(traceparentHeader) {\n        return (0,_instrumenter_js__WEBPACK_IMPORTED_MODULE_0__.getInstrumenter)().parseTraceparentHeader(traceparentHeader);\n    }\n    /**\n     * Creates a set of request headers to propagate tracing information to a backend.\n     *\n     * @param tracingContext - The context containing the span to serialize.\n     * @returns The set of headers to add to a request.\n     */\n    function createRequestHeaders(tracingContext) {\n        return (0,_instrumenter_js__WEBPACK_IMPORTED_MODULE_0__.getInstrumenter)().createRequestHeaders(tracingContext);\n    }\n    return {\n        startSpan,\n        withSpan,\n        withContext,\n        parseTraceparentHeader,\n        createRequestHeaders,\n    };\n}\n//# sourceMappingURL=tracingClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdHJhY2luZy9kaXN0L2VzbS90cmFjaW5nQ2xpZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDb0Q7QUFDRztBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixvQkFBb0I7QUFDbEQ7QUFDTztBQUNQLFlBQVkseUNBQXlDO0FBQ3JEO0FBQ0E7QUFDQSxnQ0FBZ0MsaUVBQWUsaURBQWlELGtCQUFrQiw2T0FBNk87QUFDL1Y7QUFDQTtBQUNBLHFDQUFxQyxnRUFBZ0I7QUFDckQscURBQXFELGdFQUFnQjtBQUNyRTtBQUNBLGtFQUFrRSxnRUFBZ0I7QUFDbEYsK0NBQStDO0FBQy9DLDBEQUEwRCwwR0FBMEcsZ0JBQWdCO0FBQ3BMLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsdUJBQXVCO0FBQ3ZDO0FBQ0E7QUFDQSw2QkFBNkIsbUJBQW1CO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qiw2QkFBNkI7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGlFQUFlO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGlFQUFlO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGlFQUFlO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZSAtIEhlbGxvIFNjcmlwdCBBSVxcbGlmZUFnZW50XFx2b2ljZS1saXZlLWFnZW50XFxzYW1wbGVzXFxyZWFjdFxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtdHJhY2luZ1xcZGlzdFxcZXNtXFx0cmFjaW5nQ2xpZW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgZ2V0SW5zdHJ1bWVudGVyIH0gZnJvbSBcIi4vaW5zdHJ1bWVudGVyLmpzXCI7XG5pbXBvcnQgeyBrbm93bkNvbnRleHRLZXlzIH0gZnJvbSBcIi4vdHJhY2luZ0NvbnRleHQuanNcIjtcbi8qKlxuICogQ3JlYXRlcyBhIG5ldyB0cmFjaW5nIGNsaWVudC5cbiAqXG4gKiBAcGFyYW0gb3B0aW9ucyAtIE9wdGlvbnMgdXNlZCB0byBjb25maWd1cmUgdGhlIHRyYWNpbmcgY2xpZW50LlxuICogQHJldHVybnMgLSBBbiBpbnN0YW5jZSBvZiB7QGxpbmsgVHJhY2luZ0NsaWVudH0uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVUcmFjaW5nQ2xpZW50KG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IG5hbWVzcGFjZSwgcGFja2FnZU5hbWUsIHBhY2thZ2VWZXJzaW9uIH0gPSBvcHRpb25zO1xuICAgIGZ1bmN0aW9uIHN0YXJ0U3BhbihuYW1lLCBvcGVyYXRpb25PcHRpb25zLCBzcGFuT3B0aW9ucykge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGNvbnN0IHN0YXJ0U3BhblJlc3VsdCA9IGdldEluc3RydW1lbnRlcigpLnN0YXJ0U3BhbihuYW1lLCBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHNwYW5PcHRpb25zKSwgeyBwYWNrYWdlTmFtZTogcGFja2FnZU5hbWUsIHBhY2thZ2VWZXJzaW9uOiBwYWNrYWdlVmVyc2lvbiwgdHJhY2luZ0NvbnRleHQ6IChfYSA9IG9wZXJhdGlvbk9wdGlvbnMgPT09IG51bGwgfHwgb3BlcmF0aW9uT3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3BlcmF0aW9uT3B0aW9ucy50cmFjaW5nT3B0aW9ucykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnRyYWNpbmdDb250ZXh0IH0pKTtcbiAgICAgICAgbGV0IHRyYWNpbmdDb250ZXh0ID0gc3RhcnRTcGFuUmVzdWx0LnRyYWNpbmdDb250ZXh0O1xuICAgICAgICBjb25zdCBzcGFuID0gc3RhcnRTcGFuUmVzdWx0LnNwYW47XG4gICAgICAgIGlmICghdHJhY2luZ0NvbnRleHQuZ2V0VmFsdWUoa25vd25Db250ZXh0S2V5cy5uYW1lc3BhY2UpKSB7XG4gICAgICAgICAgICB0cmFjaW5nQ29udGV4dCA9IHRyYWNpbmdDb250ZXh0LnNldFZhbHVlKGtub3duQ29udGV4dEtleXMubmFtZXNwYWNlLCBuYW1lc3BhY2UpO1xuICAgICAgICB9XG4gICAgICAgIHNwYW4uc2V0QXR0cmlidXRlKFwiYXoubmFtZXNwYWNlXCIsIHRyYWNpbmdDb250ZXh0LmdldFZhbHVlKGtub3duQ29udGV4dEtleXMubmFtZXNwYWNlKSk7XG4gICAgICAgIGNvbnN0IHVwZGF0ZWRPcHRpb25zID0gT2JqZWN0LmFzc2lnbih7fSwgb3BlcmF0aW9uT3B0aW9ucywge1xuICAgICAgICAgICAgdHJhY2luZ09wdGlvbnM6IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgb3BlcmF0aW9uT3B0aW9ucyA9PT0gbnVsbCB8fCBvcGVyYXRpb25PcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcGVyYXRpb25PcHRpb25zLnRyYWNpbmdPcHRpb25zKSwgeyB0cmFjaW5nQ29udGV4dCB9KSxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzcGFuLFxuICAgICAgICAgICAgdXBkYXRlZE9wdGlvbnMsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGFzeW5jIGZ1bmN0aW9uIHdpdGhTcGFuKG5hbWUsIG9wZXJhdGlvbk9wdGlvbnMsIGNhbGxiYWNrLCBzcGFuT3B0aW9ucykge1xuICAgICAgICBjb25zdCB7IHNwYW4sIHVwZGF0ZWRPcHRpb25zIH0gPSBzdGFydFNwYW4obmFtZSwgb3BlcmF0aW9uT3B0aW9ucywgc3Bhbk9wdGlvbnMpO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgd2l0aENvbnRleHQodXBkYXRlZE9wdGlvbnMudHJhY2luZ09wdGlvbnMudHJhY2luZ0NvbnRleHQsICgpID0+IFByb21pc2UucmVzb2x2ZShjYWxsYmFjayh1cGRhdGVkT3B0aW9ucywgc3BhbikpKTtcbiAgICAgICAgICAgIHNwYW4uc2V0U3RhdHVzKHsgc3RhdHVzOiBcInN1Y2Nlc3NcIiB9KTtcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgc3Bhbi5zZXRTdGF0dXMoeyBzdGF0dXM6IFwiZXJyb3JcIiwgZXJyb3I6IGVyciB9KTtcbiAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgfVxuICAgICAgICBmaW5hbGx5IHtcbiAgICAgICAgICAgIHNwYW4uZW5kKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gd2l0aENvbnRleHQoY29udGV4dCwgY2FsbGJhY2ssIC4uLmNhbGxiYWNrQXJncykge1xuICAgICAgICByZXR1cm4gZ2V0SW5zdHJ1bWVudGVyKCkud2l0aENvbnRleHQoY29udGV4dCwgY2FsbGJhY2ssIC4uLmNhbGxiYWNrQXJncyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFBhcnNlcyBhIHRyYWNlcGFyZW50IGhlYWRlciB2YWx1ZSBpbnRvIGEgc3BhbiBpZGVudGlmaWVyLlxuICAgICAqXG4gICAgICogQHBhcmFtIHRyYWNlcGFyZW50SGVhZGVyIC0gVGhlIHRyYWNlcGFyZW50IGhlYWRlciB0byBwYXJzZS5cbiAgICAgKiBAcmV0dXJucyBBbiBpbXBsZW1lbnRhdGlvbi1zcGVjaWZpYyBpZGVudGlmaWVyIGZvciB0aGUgc3Bhbi5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBwYXJzZVRyYWNlcGFyZW50SGVhZGVyKHRyYWNlcGFyZW50SGVhZGVyKSB7XG4gICAgICAgIHJldHVybiBnZXRJbnN0cnVtZW50ZXIoKS5wYXJzZVRyYWNlcGFyZW50SGVhZGVyKHRyYWNlcGFyZW50SGVhZGVyKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIHNldCBvZiByZXF1ZXN0IGhlYWRlcnMgdG8gcHJvcGFnYXRlIHRyYWNpbmcgaW5mb3JtYXRpb24gdG8gYSBiYWNrZW5kLlxuICAgICAqXG4gICAgICogQHBhcmFtIHRyYWNpbmdDb250ZXh0IC0gVGhlIGNvbnRleHQgY29udGFpbmluZyB0aGUgc3BhbiB0byBzZXJpYWxpemUuXG4gICAgICogQHJldHVybnMgVGhlIHNldCBvZiBoZWFkZXJzIHRvIGFkZCB0byBhIHJlcXVlc3QuXG4gICAgICovXG4gICAgZnVuY3Rpb24gY3JlYXRlUmVxdWVzdEhlYWRlcnModHJhY2luZ0NvbnRleHQpIHtcbiAgICAgICAgcmV0dXJuIGdldEluc3RydW1lbnRlcigpLmNyZWF0ZVJlcXVlc3RIZWFkZXJzKHRyYWNpbmdDb250ZXh0KTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc3RhcnRTcGFuLFxuICAgICAgICB3aXRoU3BhbixcbiAgICAgICAgd2l0aENvbnRleHQsXG4gICAgICAgIHBhcnNlVHJhY2VwYXJlbnRIZWFkZXIsXG4gICAgICAgIGNyZWF0ZVJlcXVlc3RIZWFkZXJzLFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFjaW5nQ2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-tracing/dist/esm/tracingClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-tracing/dist/esm/tracingContext.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist/esm/tracingContext.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TracingContextImpl: () => (/* binding */ TracingContextImpl),\n/* harmony export */   createTracingContext: () => (/* binding */ createTracingContext),\n/* harmony export */   knownContextKeys: () => (/* binding */ knownContextKeys)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/** @internal */\nconst knownContextKeys = {\n    span: Symbol.for(\"@azure/core-tracing span\"),\n    namespace: Symbol.for(\"@azure/core-tracing namespace\"),\n};\n/**\n * Creates a new {@link TracingContext} with the given options.\n * @param options - A set of known keys that may be set on the context.\n * @returns A new {@link TracingContext} with the given options.\n *\n * @internal\n */\nfunction createTracingContext(options = {}) {\n    let context = new TracingContextImpl(options.parentContext);\n    if (options.span) {\n        context = context.setValue(knownContextKeys.span, options.span);\n    }\n    if (options.namespace) {\n        context = context.setValue(knownContextKeys.namespace, options.namespace);\n    }\n    return context;\n}\n/** @internal */\nclass TracingContextImpl {\n    constructor(initialContext) {\n        this._contextMap =\n            initialContext instanceof TracingContextImpl\n                ? new Map(initialContext._contextMap)\n                : new Map();\n    }\n    setValue(key, value) {\n        const newContext = new TracingContextImpl(this);\n        newContext._contextMap.set(key, value);\n        return newContext;\n    }\n    getValue(key) {\n        return this._contextMap.get(key);\n    }\n    deleteValue(key) {\n        const newContext = new TracingContextImpl(this);\n        newContext._contextMap.delete(key);\n        return newContext;\n    }\n}\n//# sourceMappingURL=tracingContext.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdHJhY2luZy9kaXN0L2VzbS90cmFjaW5nQ29udGV4dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHNCQUFzQjtBQUN4QztBQUNBLG1CQUFtQixzQkFBc0I7QUFDekM7QUFDQTtBQUNBO0FBQ08sMENBQTBDO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS10cmFjaW5nXFxkaXN0XFxlc21cXHRyYWNpbmdDb250ZXh0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqIEBpbnRlcm5hbCAqL1xuZXhwb3J0IGNvbnN0IGtub3duQ29udGV4dEtleXMgPSB7XG4gICAgc3BhbjogU3ltYm9sLmZvcihcIkBhenVyZS9jb3JlLXRyYWNpbmcgc3BhblwiKSxcbiAgICBuYW1lc3BhY2U6IFN5bWJvbC5mb3IoXCJAYXp1cmUvY29yZS10cmFjaW5nIG5hbWVzcGFjZVwiKSxcbn07XG4vKipcbiAqIENyZWF0ZXMgYSBuZXcge0BsaW5rIFRyYWNpbmdDb250ZXh0fSB3aXRoIHRoZSBnaXZlbiBvcHRpb25zLlxuICogQHBhcmFtIG9wdGlvbnMgLSBBIHNldCBvZiBrbm93biBrZXlzIHRoYXQgbWF5IGJlIHNldCBvbiB0aGUgY29udGV4dC5cbiAqIEByZXR1cm5zIEEgbmV3IHtAbGluayBUcmFjaW5nQ29udGV4dH0gd2l0aCB0aGUgZ2l2ZW4gb3B0aW9ucy5cbiAqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVRyYWNpbmdDb250ZXh0KG9wdGlvbnMgPSB7fSkge1xuICAgIGxldCBjb250ZXh0ID0gbmV3IFRyYWNpbmdDb250ZXh0SW1wbChvcHRpb25zLnBhcmVudENvbnRleHQpO1xuICAgIGlmIChvcHRpb25zLnNwYW4pIHtcbiAgICAgICAgY29udGV4dCA9IGNvbnRleHQuc2V0VmFsdWUoa25vd25Db250ZXh0S2V5cy5zcGFuLCBvcHRpb25zLnNwYW4pO1xuICAgIH1cbiAgICBpZiAob3B0aW9ucy5uYW1lc3BhY2UpIHtcbiAgICAgICAgY29udGV4dCA9IGNvbnRleHQuc2V0VmFsdWUoa25vd25Db250ZXh0S2V5cy5uYW1lc3BhY2UsIG9wdGlvbnMubmFtZXNwYWNlKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbnRleHQ7XG59XG4vKiogQGludGVybmFsICovXG5leHBvcnQgY2xhc3MgVHJhY2luZ0NvbnRleHRJbXBsIHtcbiAgICBjb25zdHJ1Y3Rvcihpbml0aWFsQ29udGV4dCkge1xuICAgICAgICB0aGlzLl9jb250ZXh0TWFwID1cbiAgICAgICAgICAgIGluaXRpYWxDb250ZXh0IGluc3RhbmNlb2YgVHJhY2luZ0NvbnRleHRJbXBsXG4gICAgICAgICAgICAgICAgPyBuZXcgTWFwKGluaXRpYWxDb250ZXh0Ll9jb250ZXh0TWFwKVxuICAgICAgICAgICAgICAgIDogbmV3IE1hcCgpO1xuICAgIH1cbiAgICBzZXRWYWx1ZShrZXksIHZhbHVlKSB7XG4gICAgICAgIGNvbnN0IG5ld0NvbnRleHQgPSBuZXcgVHJhY2luZ0NvbnRleHRJbXBsKHRoaXMpO1xuICAgICAgICBuZXdDb250ZXh0Ll9jb250ZXh0TWFwLnNldChrZXksIHZhbHVlKTtcbiAgICAgICAgcmV0dXJuIG5ld0NvbnRleHQ7XG4gICAgfVxuICAgIGdldFZhbHVlKGtleSkge1xuICAgICAgICByZXR1cm4gdGhpcy5fY29udGV4dE1hcC5nZXQoa2V5KTtcbiAgICB9XG4gICAgZGVsZXRlVmFsdWUoa2V5KSB7XG4gICAgICAgIGNvbnN0IG5ld0NvbnRleHQgPSBuZXcgVHJhY2luZ0NvbnRleHRJbXBsKHRoaXMpO1xuICAgICAgICBuZXdDb250ZXh0Ll9jb250ZXh0TWFwLmRlbGV0ZShrZXkpO1xuICAgICAgICByZXR1cm4gbmV3Q29udGV4dDtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFjaW5nQ29udGV4dC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-tracing/dist/esm/tracingContext.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-util/dist/esm/aborterUtils.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/aborterUtils.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cancelablePromiseRace: () => (/* binding */ cancelablePromiseRace)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * promise.race() wrapper that aborts rest of promises as soon as the first promise settles.\n */\nasync function cancelablePromiseRace(abortablePromiseBuilders, options) {\n    var _a, _b;\n    const aborter = new AbortController();\n    function abortHandler() {\n        aborter.abort();\n    }\n    (_a = options === null || options === void 0 ? void 0 : options.abortSignal) === null || _a === void 0 ? void 0 : _a.addEventListener(\"abort\", abortHandler);\n    try {\n        return await Promise.race(abortablePromiseBuilders.map((p) => p({ abortSignal: aborter.signal })));\n    }\n    finally {\n        aborter.abort();\n        (_b = options === null || options === void 0 ? void 0 : options.abortSignal) === null || _b === void 0 ? void 0 : _b.removeEventListener(\"abort\", abortHandler);\n    }\n}\n//# sourceMappingURL=aborterUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9hYm9ydGVyVXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEVBQTBFLDZCQUE2QjtBQUN2RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmUgLSBIZWxsbyBTY3JpcHQgQUlcXGxpZmVBZ2VudFxcdm9pY2UtbGl2ZS1hZ2VudFxcc2FtcGxlc1xccmVhY3RcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXV0aWxcXGRpc3RcXGVzbVxcYWJvcnRlclV0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqXG4gKiBwcm9taXNlLnJhY2UoKSB3cmFwcGVyIHRoYXQgYWJvcnRzIHJlc3Qgb2YgcHJvbWlzZXMgYXMgc29vbiBhcyB0aGUgZmlyc3QgcHJvbWlzZSBzZXR0bGVzLlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY2FuY2VsYWJsZVByb21pc2VSYWNlKGFib3J0YWJsZVByb21pc2VCdWlsZGVycywgb3B0aW9ucykge1xuICAgIHZhciBfYSwgX2I7XG4gICAgY29uc3QgYWJvcnRlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKTtcbiAgICBmdW5jdGlvbiBhYm9ydEhhbmRsZXIoKSB7XG4gICAgICAgIGFib3J0ZXIuYWJvcnQoKTtcbiAgICB9XG4gICAgKF9hID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmFib3J0U2lnbmFsKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuYWRkRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsIGFib3J0SGFuZGxlcik7XG4gICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IFByb21pc2UucmFjZShhYm9ydGFibGVQcm9taXNlQnVpbGRlcnMubWFwKChwKSA9PiBwKHsgYWJvcnRTaWduYWw6IGFib3J0ZXIuc2lnbmFsIH0pKSk7XG4gICAgfVxuICAgIGZpbmFsbHkge1xuICAgICAgICBhYm9ydGVyLmFib3J0KCk7XG4gICAgICAgIChfYiA9IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5hYm9ydFNpZ25hbCkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLCBhYm9ydEhhbmRsZXIpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFib3J0ZXJVdGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-util/dist/esm/aborterUtils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-util/dist/esm/bytesEncoding.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/bytesEncoding.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stringToUint8Array: () => (/* binding */ stringToUint8Array),\n/* harmony export */   uint8ArrayToString: () => (/* binding */ uint8ArrayToString)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * The helper that transforms bytes with specific character encoding into string\n * @param bytes - the uint8array bytes\n * @param format - the format we use to encode the byte\n * @returns a string of the encoded string\n */\nfunction uint8ArrayToString(bytes, format) {\n    return Buffer.from(bytes).toString(format);\n}\n/**\n * The helper that transforms string to specific character encoded bytes array.\n * @param value - the string to be converted\n * @param format - the format we use to decode the value\n * @returns a uint8array\n */\nfunction stringToUint8Array(value, format) {\n    return Buffer.from(value, format);\n}\n//# sourceMappingURL=bytesEncoding.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9ieXRlc0VuY29kaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZSAtIEhlbGxvIFNjcmlwdCBBSVxcbGlmZUFnZW50XFx2b2ljZS1saXZlLWFnZW50XFxzYW1wbGVzXFxyZWFjdFxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtdXRpbFxcZGlzdFxcZXNtXFxieXRlc0VuY29kaW5nLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqXG4gKiBUaGUgaGVscGVyIHRoYXQgdHJhbnNmb3JtcyBieXRlcyB3aXRoIHNwZWNpZmljIGNoYXJhY3RlciBlbmNvZGluZyBpbnRvIHN0cmluZ1xuICogQHBhcmFtIGJ5dGVzIC0gdGhlIHVpbnQ4YXJyYXkgYnl0ZXNcbiAqIEBwYXJhbSBmb3JtYXQgLSB0aGUgZm9ybWF0IHdlIHVzZSB0byBlbmNvZGUgdGhlIGJ5dGVcbiAqIEByZXR1cm5zIGEgc3RyaW5nIG9mIHRoZSBlbmNvZGVkIHN0cmluZ1xuICovXG5leHBvcnQgZnVuY3Rpb24gdWludDhBcnJheVRvU3RyaW5nKGJ5dGVzLCBmb3JtYXQpIHtcbiAgICByZXR1cm4gQnVmZmVyLmZyb20oYnl0ZXMpLnRvU3RyaW5nKGZvcm1hdCk7XG59XG4vKipcbiAqIFRoZSBoZWxwZXIgdGhhdCB0cmFuc2Zvcm1zIHN0cmluZyB0byBzcGVjaWZpYyBjaGFyYWN0ZXIgZW5jb2RlZCBieXRlcyBhcnJheS5cbiAqIEBwYXJhbSB2YWx1ZSAtIHRoZSBzdHJpbmcgdG8gYmUgY29udmVydGVkXG4gKiBAcGFyYW0gZm9ybWF0IC0gdGhlIGZvcm1hdCB3ZSB1c2UgdG8gZGVjb2RlIHRoZSB2YWx1ZVxuICogQHJldHVybnMgYSB1aW50OGFycmF5XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdHJpbmdUb1VpbnQ4QXJyYXkodmFsdWUsIGZvcm1hdCkge1xuICAgIHJldHVybiBCdWZmZXIuZnJvbSh2YWx1ZSwgZm9ybWF0KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJ5dGVzRW5jb2RpbmcuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-util/dist/esm/bytesEncoding.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-util/dist/esm/checkEnvironment.js":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/checkEnvironment.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isBrowser: () => (/* binding */ isBrowser),\n/* harmony export */   isBun: () => (/* binding */ isBun),\n/* harmony export */   isDeno: () => (/* binding */ isDeno),\n/* harmony export */   isNode: () => (/* binding */ isNode),\n/* harmony export */   isNodeLike: () => (/* binding */ isNodeLike),\n/* harmony export */   isNodeRuntime: () => (/* binding */ isNodeRuntime),\n/* harmony export */   isReactNative: () => (/* binding */ isReactNative),\n/* harmony export */   isWebWorker: () => (/* binding */ isWebWorker)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nvar _a, _b, _c, _d;\n/**\n * A constant that indicates whether the environment the code is running is a Web Browser.\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-no-window\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n/**\n * A constant that indicates whether the environment the code is running is a Web Worker.\n */\nconst isWebWorker = typeof self === \"object\" &&\n    typeof (self === null || self === void 0 ? void 0 : self.importScripts) === \"function\" &&\n    (((_a = self.constructor) === null || _a === void 0 ? void 0 : _a.name) === \"DedicatedWorkerGlobalScope\" ||\n        ((_b = self.constructor) === null || _b === void 0 ? void 0 : _b.name) === \"ServiceWorkerGlobalScope\" ||\n        ((_c = self.constructor) === null || _c === void 0 ? void 0 : _c.name) === \"SharedWorkerGlobalScope\");\n/**\n * A constant that indicates whether the environment the code is running is Deno.\n */\nconst isDeno = typeof Deno !== \"undefined\" &&\n    typeof Deno.version !== \"undefined\" &&\n    typeof Deno.version.deno !== \"undefined\";\n/**\n * A constant that indicates whether the environment the code is running is Bun.sh.\n */\nconst isBun = typeof Bun !== \"undefined\" && typeof Bun.version !== \"undefined\";\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n */\nconst isNodeLike = typeof globalThis.process !== \"undefined\" &&\n    Boolean(globalThis.process.version) &&\n    Boolean((_d = globalThis.process.versions) === null || _d === void 0 ? void 0 : _d.node);\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n * @deprecated Use `isNodeLike` instead.\n */\nconst isNode = isNodeLike;\n/**\n * A constant that indicates whether the environment the code is running is Node.JS.\n */\nconst isNodeRuntime = isNodeLike && !isBun && !isDeno;\n/**\n * A constant that indicates whether the environment the code is running is in React-Native.\n */\n// https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/Core/setUpNavigator.js\nconst isReactNative = typeof navigator !== \"undefined\" && (navigator === null || navigator === void 0 ? void 0 : navigator.product) === \"ReactNative\";\n//# sourceMappingURL=checkEnvironment.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9jaGVja0Vudmlyb25tZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmUgLSBIZWxsbyBTY3JpcHQgQUlcXGxpZmVBZ2VudFxcdm9pY2UtbGl2ZS1hZ2VudFxcc2FtcGxlc1xccmVhY3RcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXV0aWxcXGRpc3RcXGVzbVxcY2hlY2tFbnZpcm9ubWVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbnZhciBfYSwgX2IsIF9jLCBfZDtcbi8qKlxuICogQSBjb25zdGFudCB0aGF0IGluZGljYXRlcyB3aGV0aGVyIHRoZSBlbnZpcm9ubWVudCB0aGUgY29kZSBpcyBydW5uaW5nIGlzIGEgV2ViIEJyb3dzZXIuXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAYXp1cmUvYXp1cmUtc2RrL3RzLW5vLXdpbmRvd1xuZXhwb3J0IGNvbnN0IGlzQnJvd3NlciA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgdHlwZW9mIHdpbmRvdy5kb2N1bWVudCAhPT0gXCJ1bmRlZmluZWRcIjtcbi8qKlxuICogQSBjb25zdGFudCB0aGF0IGluZGljYXRlcyB3aGV0aGVyIHRoZSBlbnZpcm9ubWVudCB0aGUgY29kZSBpcyBydW5uaW5nIGlzIGEgV2ViIFdvcmtlci5cbiAqL1xuZXhwb3J0IGNvbnN0IGlzV2ViV29ya2VyID0gdHlwZW9mIHNlbGYgPT09IFwib2JqZWN0XCIgJiZcbiAgICB0eXBlb2YgKHNlbGYgPT09IG51bGwgfHwgc2VsZiA9PT0gdm9pZCAwID8gdm9pZCAwIDogc2VsZi5pbXBvcnRTY3JpcHRzKSA9PT0gXCJmdW5jdGlvblwiICYmXG4gICAgKCgoX2EgPSBzZWxmLmNvbnN0cnVjdG9yKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubmFtZSkgPT09IFwiRGVkaWNhdGVkV29ya2VyR2xvYmFsU2NvcGVcIiB8fFxuICAgICAgICAoKF9iID0gc2VsZi5jb25zdHJ1Y3RvcikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLm5hbWUpID09PSBcIlNlcnZpY2VXb3JrZXJHbG9iYWxTY29wZVwiIHx8XG4gICAgICAgICgoX2MgPSBzZWxmLmNvbnN0cnVjdG9yKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MubmFtZSkgPT09IFwiU2hhcmVkV29ya2VyR2xvYmFsU2NvcGVcIik7XG4vKipcbiAqIEEgY29uc3RhbnQgdGhhdCBpbmRpY2F0ZXMgd2hldGhlciB0aGUgZW52aXJvbm1lbnQgdGhlIGNvZGUgaXMgcnVubmluZyBpcyBEZW5vLlxuICovXG5leHBvcnQgY29uc3QgaXNEZW5vID0gdHlwZW9mIERlbm8gIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICB0eXBlb2YgRGVuby52ZXJzaW9uICE9PSBcInVuZGVmaW5lZFwiICYmXG4gICAgdHlwZW9mIERlbm8udmVyc2lvbi5kZW5vICE9PSBcInVuZGVmaW5lZFwiO1xuLyoqXG4gKiBBIGNvbnN0YW50IHRoYXQgaW5kaWNhdGVzIHdoZXRoZXIgdGhlIGVudmlyb25tZW50IHRoZSBjb2RlIGlzIHJ1bm5pbmcgaXMgQnVuLnNoLlxuICovXG5leHBvcnQgY29uc3QgaXNCdW4gPSB0eXBlb2YgQnVuICE9PSBcInVuZGVmaW5lZFwiICYmIHR5cGVvZiBCdW4udmVyc2lvbiAhPT0gXCJ1bmRlZmluZWRcIjtcbi8qKlxuICogQSBjb25zdGFudCB0aGF0IGluZGljYXRlcyB3aGV0aGVyIHRoZSBlbnZpcm9ubWVudCB0aGUgY29kZSBpcyBydW5uaW5nIGlzIGEgTm9kZS5qcyBjb21wYXRpYmxlIGVudmlyb25tZW50LlxuICovXG5leHBvcnQgY29uc3QgaXNOb2RlTGlrZSA9IHR5cGVvZiBnbG9iYWxUaGlzLnByb2Nlc3MgIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICBCb29sZWFuKGdsb2JhbFRoaXMucHJvY2Vzcy52ZXJzaW9uKSAmJlxuICAgIEJvb2xlYW4oKF9kID0gZ2xvYmFsVGhpcy5wcm9jZXNzLnZlcnNpb25zKSA9PT0gbnVsbCB8fCBfZCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Qubm9kZSk7XG4vKipcbiAqIEEgY29uc3RhbnQgdGhhdCBpbmRpY2F0ZXMgd2hldGhlciB0aGUgZW52aXJvbm1lbnQgdGhlIGNvZGUgaXMgcnVubmluZyBpcyBhIE5vZGUuanMgY29tcGF0aWJsZSBlbnZpcm9ubWVudC5cbiAqIEBkZXByZWNhdGVkIFVzZSBgaXNOb2RlTGlrZWAgaW5zdGVhZC5cbiAqL1xuZXhwb3J0IGNvbnN0IGlzTm9kZSA9IGlzTm9kZUxpa2U7XG4vKipcbiAqIEEgY29uc3RhbnQgdGhhdCBpbmRpY2F0ZXMgd2hldGhlciB0aGUgZW52aXJvbm1lbnQgdGhlIGNvZGUgaXMgcnVubmluZyBpcyBOb2RlLkpTLlxuICovXG5leHBvcnQgY29uc3QgaXNOb2RlUnVudGltZSA9IGlzTm9kZUxpa2UgJiYgIWlzQnVuICYmICFpc0Rlbm87XG4vKipcbiAqIEEgY29uc3RhbnQgdGhhdCBpbmRpY2F0ZXMgd2hldGhlciB0aGUgZW52aXJvbm1lbnQgdGhlIGNvZGUgaXMgcnVubmluZyBpcyBpbiBSZWFjdC1OYXRpdmUuXG4gKi9cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWFjdC1uYXRpdmUvYmxvYi9tYWluL3BhY2thZ2VzL3JlYWN0LW5hdGl2ZS9MaWJyYXJpZXMvQ29yZS9zZXRVcE5hdmlnYXRvci5qc1xuZXhwb3J0IGNvbnN0IGlzUmVhY3ROYXRpdmUgPSB0eXBlb2YgbmF2aWdhdG9yICE9PSBcInVuZGVmaW5lZFwiICYmIChuYXZpZ2F0b3IgPT09IG51bGwgfHwgbmF2aWdhdG9yID09PSB2b2lkIDAgPyB2b2lkIDAgOiBuYXZpZ2F0b3IucHJvZHVjdCkgPT09IFwiUmVhY3ROYXRpdmVcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNoZWNrRW52aXJvbm1lbnQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-util/dist/esm/checkEnvironment.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-util/dist/esm/createAbortablePromise.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/createAbortablePromise.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAbortablePromise: () => (/* binding */ createAbortablePromise)\n/* harmony export */ });\n/* harmony import */ var _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/abort-controller */ \"(ssr)/./node_modules/@azure/abort-controller/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Creates an abortable promise.\n * @param buildPromise - A function that takes the resolve and reject functions as parameters.\n * @param options - The options for the abortable promise.\n * @returns A promise that can be aborted.\n */\nfunction createAbortablePromise(buildPromise, options) {\n    const { cleanupBeforeAbort, abortSignal, abortErrorMsg } = options !== null && options !== void 0 ? options : {};\n    return new Promise((resolve, reject) => {\n        function rejectOnAbort() {\n            reject(new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__.AbortError(abortErrorMsg !== null && abortErrorMsg !== void 0 ? abortErrorMsg : \"The operation was aborted.\"));\n        }\n        function removeListeners() {\n            abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.removeEventListener(\"abort\", onAbort);\n        }\n        function onAbort() {\n            cleanupBeforeAbort === null || cleanupBeforeAbort === void 0 ? void 0 : cleanupBeforeAbort();\n            removeListeners();\n            rejectOnAbort();\n        }\n        if (abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.aborted) {\n            return rejectOnAbort();\n        }\n        try {\n            buildPromise((x) => {\n                removeListeners();\n                resolve(x);\n            }, (x) => {\n                removeListeners();\n                reject(x);\n            });\n        }\n        catch (err) {\n            reject(err);\n        }\n        abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.addEventListener(\"abort\", onAbort);\n    });\n}\n//# sourceMappingURL=createAbortablePromise.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9jcmVhdGVBYm9ydGFibGVQcm9taXNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNxRDtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFlBQVksaURBQWlEO0FBQzdEO0FBQ0E7QUFDQSx1QkFBdUIsK0RBQVU7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS11dGlsXFxkaXN0XFxlc21cXGNyZWF0ZUFib3J0YWJsZVByb21pc2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBBYm9ydEVycm9yIH0gZnJvbSBcIkBhenVyZS9hYm9ydC1jb250cm9sbGVyXCI7XG4vKipcbiAqIENyZWF0ZXMgYW4gYWJvcnRhYmxlIHByb21pc2UuXG4gKiBAcGFyYW0gYnVpbGRQcm9taXNlIC0gQSBmdW5jdGlvbiB0aGF0IHRha2VzIHRoZSByZXNvbHZlIGFuZCByZWplY3QgZnVuY3Rpb25zIGFzIHBhcmFtZXRlcnMuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIFRoZSBvcHRpb25zIGZvciB0aGUgYWJvcnRhYmxlIHByb21pc2UuXG4gKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCBjYW4gYmUgYWJvcnRlZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUFib3J0YWJsZVByb21pc2UoYnVpbGRQcm9taXNlLCBvcHRpb25zKSB7XG4gICAgY29uc3QgeyBjbGVhbnVwQmVmb3JlQWJvcnQsIGFib3J0U2lnbmFsLCBhYm9ydEVycm9yTXNnIH0gPSBvcHRpb25zICE9PSBudWxsICYmIG9wdGlvbnMgIT09IHZvaWQgMCA/IG9wdGlvbnMgOiB7fTtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBmdW5jdGlvbiByZWplY3RPbkFib3J0KCkge1xuICAgICAgICAgICAgcmVqZWN0KG5ldyBBYm9ydEVycm9yKGFib3J0RXJyb3JNc2cgIT09IG51bGwgJiYgYWJvcnRFcnJvck1zZyAhPT0gdm9pZCAwID8gYWJvcnRFcnJvck1zZyA6IFwiVGhlIG9wZXJhdGlvbiB3YXMgYWJvcnRlZC5cIikpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHJlbW92ZUxpc3RlbmVycygpIHtcbiAgICAgICAgICAgIGFib3J0U2lnbmFsID09PSBudWxsIHx8IGFib3J0U2lnbmFsID09PSB2b2lkIDAgPyB2b2lkIDAgOiBhYm9ydFNpZ25hbC5yZW1vdmVFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgb25BYm9ydCk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gb25BYm9ydCgpIHtcbiAgICAgICAgICAgIGNsZWFudXBCZWZvcmVBYm9ydCA9PT0gbnVsbCB8fCBjbGVhbnVwQmVmb3JlQWJvcnQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNsZWFudXBCZWZvcmVBYm9ydCgpO1xuICAgICAgICAgICAgcmVtb3ZlTGlzdGVuZXJzKCk7XG4gICAgICAgICAgICByZWplY3RPbkFib3J0KCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFib3J0U2lnbmFsID09PSBudWxsIHx8IGFib3J0U2lnbmFsID09PSB2b2lkIDAgPyB2b2lkIDAgOiBhYm9ydFNpZ25hbC5hYm9ydGVkKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVqZWN0T25BYm9ydCgpO1xuICAgICAgICB9XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBidWlsZFByb21pc2UoKHgpID0+IHtcbiAgICAgICAgICAgICAgICByZW1vdmVMaXN0ZW5lcnMoKTtcbiAgICAgICAgICAgICAgICByZXNvbHZlKHgpO1xuICAgICAgICAgICAgfSwgKHgpID0+IHtcbiAgICAgICAgICAgICAgICByZW1vdmVMaXN0ZW5lcnMoKTtcbiAgICAgICAgICAgICAgICByZWplY3QoeCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICByZWplY3QoZXJyKTtcbiAgICAgICAgfVxuICAgICAgICBhYm9ydFNpZ25hbCA9PT0gbnVsbCB8fCBhYm9ydFNpZ25hbCA9PT0gdm9pZCAwID8gdm9pZCAwIDogYWJvcnRTaWduYWwuYWRkRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsIG9uQWJvcnQpO1xuICAgIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3JlYXRlQWJvcnRhYmxlUHJvbWlzZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-util/dist/esm/createAbortablePromise.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-util/dist/esm/delay.js":
/*!*********************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/delay.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateRetryDelay: () => (/* binding */ calculateRetryDelay),\n/* harmony export */   delay: () => (/* binding */ delay)\n/* harmony export */ });\n/* harmony import */ var _createAbortablePromise_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createAbortablePromise.js */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/createAbortablePromise.js\");\n/* harmony import */ var _random_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./random.js */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/random.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\nconst StandardAbortMessage = \"The delay was aborted.\";\n/**\n * A wrapper for setTimeout that resolves a promise after timeInMs milliseconds.\n * @param timeInMs - The number of milliseconds to be delayed.\n * @param options - The options for delay - currently abort options\n * @returns Promise that is resolved after timeInMs\n */\nfunction delay(timeInMs, options) {\n    let token;\n    const { abortSignal, abortErrorMsg } = options !== null && options !== void 0 ? options : {};\n    return (0,_createAbortablePromise_js__WEBPACK_IMPORTED_MODULE_0__.createAbortablePromise)((resolve) => {\n        token = setTimeout(resolve, timeInMs);\n    }, {\n        cleanupBeforeAbort: () => clearTimeout(token),\n        abortSignal,\n        abortErrorMsg: abortErrorMsg !== null && abortErrorMsg !== void 0 ? abortErrorMsg : StandardAbortMessage,\n    });\n}\n/**\n * Calculates the delay interval for retry attempts using exponential delay with jitter.\n * @param retryAttempt - The current retry attempt number.\n * @param config - The exponential retry configuration.\n * @returns An object containing the calculated retry delay.\n */\nfunction calculateRetryDelay(retryAttempt, config) {\n    // Exponentially increase the delay each time\n    const exponentialDelay = config.retryDelayInMs * Math.pow(2, retryAttempt);\n    // Don't let the delay exceed the maximum\n    const clampedDelay = Math.min(config.maxRetryDelayInMs, exponentialDelay);\n    // Allow the final value to have some \"jitter\" (within 50% of the delay size) so\n    // that retries across multiple clients don't occur simultaneously.\n    const retryAfterInMs = clampedDelay / 2 + (0,_random_js__WEBPACK_IMPORTED_MODULE_1__.getRandomIntegerInclusive)(0, clampedDelay / 2);\n    return { retryAfterInMs };\n}\n//# sourceMappingURL=delay.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9kZWxheS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNxRTtBQUNiO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLFlBQVksNkJBQTZCO0FBQ3pDLFdBQVcsa0ZBQXNCO0FBQ2pDO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLHFFQUF5QjtBQUN2RSxhQUFhO0FBQ2I7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmUgLSBIZWxsbyBTY3JpcHQgQUlcXGxpZmVBZ2VudFxcdm9pY2UtbGl2ZS1hZ2VudFxcc2FtcGxlc1xccmVhY3RcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXV0aWxcXGRpc3RcXGVzbVxcZGVsYXkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBjcmVhdGVBYm9ydGFibGVQcm9taXNlIH0gZnJvbSBcIi4vY3JlYXRlQWJvcnRhYmxlUHJvbWlzZS5qc1wiO1xuaW1wb3J0IHsgZ2V0UmFuZG9tSW50ZWdlckluY2x1c2l2ZSB9IGZyb20gXCIuL3JhbmRvbS5qc1wiO1xuY29uc3QgU3RhbmRhcmRBYm9ydE1lc3NhZ2UgPSBcIlRoZSBkZWxheSB3YXMgYWJvcnRlZC5cIjtcbi8qKlxuICogQSB3cmFwcGVyIGZvciBzZXRUaW1lb3V0IHRoYXQgcmVzb2x2ZXMgYSBwcm9taXNlIGFmdGVyIHRpbWVJbk1zIG1pbGxpc2Vjb25kcy5cbiAqIEBwYXJhbSB0aW1lSW5NcyAtIFRoZSBudW1iZXIgb2YgbWlsbGlzZWNvbmRzIHRvIGJlIGRlbGF5ZWQuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIFRoZSBvcHRpb25zIGZvciBkZWxheSAtIGN1cnJlbnRseSBhYm9ydCBvcHRpb25zXG4gKiBAcmV0dXJucyBQcm9taXNlIHRoYXQgaXMgcmVzb2x2ZWQgYWZ0ZXIgdGltZUluTXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlbGF5KHRpbWVJbk1zLCBvcHRpb25zKSB7XG4gICAgbGV0IHRva2VuO1xuICAgIGNvbnN0IHsgYWJvcnRTaWduYWwsIGFib3J0RXJyb3JNc2cgfSA9IG9wdGlvbnMgIT09IG51bGwgJiYgb3B0aW9ucyAhPT0gdm9pZCAwID8gb3B0aW9ucyA6IHt9O1xuICAgIHJldHVybiBjcmVhdGVBYm9ydGFibGVQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICAgIHRva2VuID0gc2V0VGltZW91dChyZXNvbHZlLCB0aW1lSW5Ncyk7XG4gICAgfSwge1xuICAgICAgICBjbGVhbnVwQmVmb3JlQWJvcnQ6ICgpID0+IGNsZWFyVGltZW91dCh0b2tlbiksXG4gICAgICAgIGFib3J0U2lnbmFsLFxuICAgICAgICBhYm9ydEVycm9yTXNnOiBhYm9ydEVycm9yTXNnICE9PSBudWxsICYmIGFib3J0RXJyb3JNc2cgIT09IHZvaWQgMCA/IGFib3J0RXJyb3JNc2cgOiBTdGFuZGFyZEFib3J0TWVzc2FnZSxcbiAgICB9KTtcbn1cbi8qKlxuICogQ2FsY3VsYXRlcyB0aGUgZGVsYXkgaW50ZXJ2YWwgZm9yIHJldHJ5IGF0dGVtcHRzIHVzaW5nIGV4cG9uZW50aWFsIGRlbGF5IHdpdGggaml0dGVyLlxuICogQHBhcmFtIHJldHJ5QXR0ZW1wdCAtIFRoZSBjdXJyZW50IHJldHJ5IGF0dGVtcHQgbnVtYmVyLlxuICogQHBhcmFtIGNvbmZpZyAtIFRoZSBleHBvbmVudGlhbCByZXRyeSBjb25maWd1cmF0aW9uLlxuICogQHJldHVybnMgQW4gb2JqZWN0IGNvbnRhaW5pbmcgdGhlIGNhbGN1bGF0ZWQgcmV0cnkgZGVsYXkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjYWxjdWxhdGVSZXRyeURlbGF5KHJldHJ5QXR0ZW1wdCwgY29uZmlnKSB7XG4gICAgLy8gRXhwb25lbnRpYWxseSBpbmNyZWFzZSB0aGUgZGVsYXkgZWFjaCB0aW1lXG4gICAgY29uc3QgZXhwb25lbnRpYWxEZWxheSA9IGNvbmZpZy5yZXRyeURlbGF5SW5NcyAqIE1hdGgucG93KDIsIHJldHJ5QXR0ZW1wdCk7XG4gICAgLy8gRG9uJ3QgbGV0IHRoZSBkZWxheSBleGNlZWQgdGhlIG1heGltdW1cbiAgICBjb25zdCBjbGFtcGVkRGVsYXkgPSBNYXRoLm1pbihjb25maWcubWF4UmV0cnlEZWxheUluTXMsIGV4cG9uZW50aWFsRGVsYXkpO1xuICAgIC8vIEFsbG93IHRoZSBmaW5hbCB2YWx1ZSB0byBoYXZlIHNvbWUgXCJqaXR0ZXJcIiAod2l0aGluIDUwJSBvZiB0aGUgZGVsYXkgc2l6ZSkgc29cbiAgICAvLyB0aGF0IHJldHJpZXMgYWNyb3NzIG11bHRpcGxlIGNsaWVudHMgZG9uJ3Qgb2NjdXIgc2ltdWx0YW5lb3VzbHkuXG4gICAgY29uc3QgcmV0cnlBZnRlckluTXMgPSBjbGFtcGVkRGVsYXkgLyAyICsgZ2V0UmFuZG9tSW50ZWdlckluY2x1c2l2ZSgwLCBjbGFtcGVkRGVsYXkgLyAyKTtcbiAgICByZXR1cm4geyByZXRyeUFmdGVySW5NcyB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVsYXkuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-util/dist/esm/delay.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-util/dist/esm/error.js":
/*!*********************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/error.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getErrorMessage: () => (/* binding */ getErrorMessage),\n/* harmony export */   isError: () => (/* binding */ isError)\n/* harmony export */ });\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./object.js */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/object.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Typeguard for an error object shape (has name and message)\n * @param e - Something caught by a catch clause.\n */\nfunction isError(e) {\n    if ((0,_object_js__WEBPACK_IMPORTED_MODULE_0__.isObject)(e)) {\n        const hasName = typeof e.name === \"string\";\n        const hasMessage = typeof e.message === \"string\";\n        return hasName && hasMessage;\n    }\n    return false;\n}\n/**\n * Given what is thought to be an error object, return the message if possible.\n * If the message is missing, returns a stringified version of the input.\n * @param e - Something thrown from a try block\n * @returns The error message or a string of the input\n */\nfunction getErrorMessage(e) {\n    if (isError(e)) {\n        return e.message;\n    }\n    else {\n        let stringified;\n        try {\n            if (typeof e === \"object\" && e) {\n                stringified = JSON.stringify(e);\n            }\n            else {\n                stringified = String(e);\n            }\n        }\n        catch (err) {\n            stringified = \"[unable to stringify input]\";\n        }\n        return `Unknown error ${stringified}`;\n    }\n}\n//# sourceMappingURL=error.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9lcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ3VDO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxRQUFRLG9EQUFRO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsWUFBWTtBQUM1QztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS11dGlsXFxkaXN0XFxlc21cXGVycm9yLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgaXNPYmplY3QgfSBmcm9tIFwiLi9vYmplY3QuanNcIjtcbi8qKlxuICogVHlwZWd1YXJkIGZvciBhbiBlcnJvciBvYmplY3Qgc2hhcGUgKGhhcyBuYW1lIGFuZCBtZXNzYWdlKVxuICogQHBhcmFtIGUgLSBTb21ldGhpbmcgY2F1Z2h0IGJ5IGEgY2F0Y2ggY2xhdXNlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNFcnJvcihlKSB7XG4gICAgaWYgKGlzT2JqZWN0KGUpKSB7XG4gICAgICAgIGNvbnN0IGhhc05hbWUgPSB0eXBlb2YgZS5uYW1lID09PSBcInN0cmluZ1wiO1xuICAgICAgICBjb25zdCBoYXNNZXNzYWdlID0gdHlwZW9mIGUubWVzc2FnZSA9PT0gXCJzdHJpbmdcIjtcbiAgICAgICAgcmV0dXJuIGhhc05hbWUgJiYgaGFzTWVzc2FnZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuLyoqXG4gKiBHaXZlbiB3aGF0IGlzIHRob3VnaHQgdG8gYmUgYW4gZXJyb3Igb2JqZWN0LCByZXR1cm4gdGhlIG1lc3NhZ2UgaWYgcG9zc2libGUuXG4gKiBJZiB0aGUgbWVzc2FnZSBpcyBtaXNzaW5nLCByZXR1cm5zIGEgc3RyaW5naWZpZWQgdmVyc2lvbiBvZiB0aGUgaW5wdXQuXG4gKiBAcGFyYW0gZSAtIFNvbWV0aGluZyB0aHJvd24gZnJvbSBhIHRyeSBibG9ja1xuICogQHJldHVybnMgVGhlIGVycm9yIG1lc3NhZ2Ugb3IgYSBzdHJpbmcgb2YgdGhlIGlucHV0XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRFcnJvck1lc3NhZ2UoZSkge1xuICAgIGlmIChpc0Vycm9yKGUpKSB7XG4gICAgICAgIHJldHVybiBlLm1lc3NhZ2U7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBsZXQgc3RyaW5naWZpZWQ7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGUgPT09IFwib2JqZWN0XCIgJiYgZSkge1xuICAgICAgICAgICAgICAgIHN0cmluZ2lmaWVkID0gSlNPTi5zdHJpbmdpZnkoZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBzdHJpbmdpZmllZCA9IFN0cmluZyhlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICBzdHJpbmdpZmllZCA9IFwiW3VuYWJsZSB0byBzdHJpbmdpZnkgaW5wdXRdXCI7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGBVbmtub3duIGVycm9yICR7c3RyaW5naWZpZWR9YDtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-util/dist/esm/error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-util/dist/esm/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateRetryDelay: () => (/* reexport safe */ _delay_js__WEBPACK_IMPORTED_MODULE_0__.calculateRetryDelay),\n/* harmony export */   cancelablePromiseRace: () => (/* reexport safe */ _aborterUtils_js__WEBPACK_IMPORTED_MODULE_1__.cancelablePromiseRace),\n/* harmony export */   computeSha256Hash: () => (/* reexport safe */ _sha256_js__WEBPACK_IMPORTED_MODULE_6__.computeSha256Hash),\n/* harmony export */   computeSha256Hmac: () => (/* reexport safe */ _sha256_js__WEBPACK_IMPORTED_MODULE_6__.computeSha256Hmac),\n/* harmony export */   createAbortablePromise: () => (/* reexport safe */ _createAbortablePromise_js__WEBPACK_IMPORTED_MODULE_2__.createAbortablePromise),\n/* harmony export */   delay: () => (/* reexport safe */ _delay_js__WEBPACK_IMPORTED_MODULE_0__.delay),\n/* harmony export */   getErrorMessage: () => (/* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_5__.getErrorMessage),\n/* harmony export */   getRandomIntegerInclusive: () => (/* reexport safe */ _random_js__WEBPACK_IMPORTED_MODULE_3__.getRandomIntegerInclusive),\n/* harmony export */   isBrowser: () => (/* reexport safe */ _checkEnvironment_js__WEBPACK_IMPORTED_MODULE_9__.isBrowser),\n/* harmony export */   isBun: () => (/* reexport safe */ _checkEnvironment_js__WEBPACK_IMPORTED_MODULE_9__.isBun),\n/* harmony export */   isDefined: () => (/* reexport safe */ _typeGuards_js__WEBPACK_IMPORTED_MODULE_7__.isDefined),\n/* harmony export */   isDeno: () => (/* reexport safe */ _checkEnvironment_js__WEBPACK_IMPORTED_MODULE_9__.isDeno),\n/* harmony export */   isError: () => (/* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_5__.isError),\n/* harmony export */   isNode: () => (/* reexport safe */ _checkEnvironment_js__WEBPACK_IMPORTED_MODULE_9__.isNode),\n/* harmony export */   isNodeLike: () => (/* reexport safe */ _checkEnvironment_js__WEBPACK_IMPORTED_MODULE_9__.isNodeLike),\n/* harmony export */   isNodeRuntime: () => (/* reexport safe */ _checkEnvironment_js__WEBPACK_IMPORTED_MODULE_9__.isNodeRuntime),\n/* harmony export */   isObject: () => (/* reexport safe */ _object_js__WEBPACK_IMPORTED_MODULE_4__.isObject),\n/* harmony export */   isObjectWithProperties: () => (/* reexport safe */ _typeGuards_js__WEBPACK_IMPORTED_MODULE_7__.isObjectWithProperties),\n/* harmony export */   isReactNative: () => (/* reexport safe */ _checkEnvironment_js__WEBPACK_IMPORTED_MODULE_9__.isReactNative),\n/* harmony export */   isWebWorker: () => (/* reexport safe */ _checkEnvironment_js__WEBPACK_IMPORTED_MODULE_9__.isWebWorker),\n/* harmony export */   objectHasProperty: () => (/* reexport safe */ _typeGuards_js__WEBPACK_IMPORTED_MODULE_7__.objectHasProperty),\n/* harmony export */   randomUUID: () => (/* reexport safe */ _uuidUtils_js__WEBPACK_IMPORTED_MODULE_8__.randomUUID),\n/* harmony export */   stringToUint8Array: () => (/* reexport safe */ _bytesEncoding_js__WEBPACK_IMPORTED_MODULE_10__.stringToUint8Array),\n/* harmony export */   uint8ArrayToString: () => (/* reexport safe */ _bytesEncoding_js__WEBPACK_IMPORTED_MODULE_10__.uint8ArrayToString)\n/* harmony export */ });\n/* harmony import */ var _delay_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./delay.js */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/delay.js\");\n/* harmony import */ var _aborterUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./aborterUtils.js */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/aborterUtils.js\");\n/* harmony import */ var _createAbortablePromise_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./createAbortablePromise.js */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/createAbortablePromise.js\");\n/* harmony import */ var _random_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./random.js */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/random.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./object.js */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/object.js\");\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./error.js */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/error.js\");\n/* harmony import */ var _sha256_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./sha256.js */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/sha256.js\");\n/* harmony import */ var _typeGuards_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./typeGuards.js */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/typeGuards.js\");\n/* harmony import */ var _uuidUtils_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./uuidUtils.js */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/uuidUtils.js\");\n/* harmony import */ var _checkEnvironment_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./checkEnvironment.js */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/checkEnvironment.js\");\n/* harmony import */ var _bytesEncoding_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./bytesEncoding.js */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/bytesEncoding.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDd0Q7QUFDRztBQUNXO0FBQ2Q7QUFDakI7QUFDZTtBQUNhO0FBQ29CO0FBQzNDO0FBQ3FGO0FBQ3JEO0FBQzVFIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZSAtIEhlbGxvIFNjcmlwdCBBSVxcbGlmZUFnZW50XFx2b2ljZS1saXZlLWFnZW50XFxzYW1wbGVzXFxyZWFjdFxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtdXRpbFxcZGlzdFxcZXNtXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCB7IGRlbGF5LCBjYWxjdWxhdGVSZXRyeURlbGF5IH0gZnJvbSBcIi4vZGVsYXkuanNcIjtcbmV4cG9ydCB7IGNhbmNlbGFibGVQcm9taXNlUmFjZSwgfSBmcm9tIFwiLi9hYm9ydGVyVXRpbHMuanNcIjtcbmV4cG9ydCB7IGNyZWF0ZUFib3J0YWJsZVByb21pc2UsIH0gZnJvbSBcIi4vY3JlYXRlQWJvcnRhYmxlUHJvbWlzZS5qc1wiO1xuZXhwb3J0IHsgZ2V0UmFuZG9tSW50ZWdlckluY2x1c2l2ZSB9IGZyb20gXCIuL3JhbmRvbS5qc1wiO1xuZXhwb3J0IHsgaXNPYmplY3QgfSBmcm9tIFwiLi9vYmplY3QuanNcIjtcbmV4cG9ydCB7IGlzRXJyb3IsIGdldEVycm9yTWVzc2FnZSB9IGZyb20gXCIuL2Vycm9yLmpzXCI7XG5leHBvcnQgeyBjb21wdXRlU2hhMjU2SGFzaCwgY29tcHV0ZVNoYTI1NkhtYWMgfSBmcm9tIFwiLi9zaGEyNTYuanNcIjtcbmV4cG9ydCB7IGlzRGVmaW5lZCwgaXNPYmplY3RXaXRoUHJvcGVydGllcywgb2JqZWN0SGFzUHJvcGVydHkgfSBmcm9tIFwiLi90eXBlR3VhcmRzLmpzXCI7XG5leHBvcnQgeyByYW5kb21VVUlEIH0gZnJvbSBcIi4vdXVpZFV0aWxzLmpzXCI7XG5leHBvcnQgeyBpc0Jyb3dzZXIsIGlzQnVuLCBpc05vZGUsIGlzTm9kZUxpa2UsIGlzTm9kZVJ1bnRpbWUsIGlzRGVubywgaXNSZWFjdE5hdGl2ZSwgaXNXZWJXb3JrZXIsIH0gZnJvbSBcIi4vY2hlY2tFbnZpcm9ubWVudC5qc1wiO1xuZXhwb3J0IHsgdWludDhBcnJheVRvU3RyaW5nLCBzdHJpbmdUb1VpbnQ4QXJyYXkgfSBmcm9tIFwiLi9ieXRlc0VuY29kaW5nLmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-util/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-util/dist/esm/object.js":
/*!**********************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/object.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isObject: () => (/* binding */ isObject)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Helper to determine when an input is a generic JS object.\n * @returns true when input is an object type that is not null, Array, RegExp, or Date.\n */\nfunction isObject(input) {\n    return (typeof input === \"object\" &&\n        input !== null &&\n        !Array.isArray(input) &&\n        !(input instanceof RegExp) &&\n        !(input instanceof Date));\n}\n//# sourceMappingURL=object.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9vYmplY3QuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS11dGlsXFxkaXN0XFxlc21cXG9iamVjdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbi8qKlxuICogSGVscGVyIHRvIGRldGVybWluZSB3aGVuIGFuIGlucHV0IGlzIGEgZ2VuZXJpYyBKUyBvYmplY3QuXG4gKiBAcmV0dXJucyB0cnVlIHdoZW4gaW5wdXQgaXMgYW4gb2JqZWN0IHR5cGUgdGhhdCBpcyBub3QgbnVsbCwgQXJyYXksIFJlZ0V4cCwgb3IgRGF0ZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzT2JqZWN0KGlucHV0KSB7XG4gICAgcmV0dXJuICh0eXBlb2YgaW5wdXQgPT09IFwib2JqZWN0XCIgJiZcbiAgICAgICAgaW5wdXQgIT09IG51bGwgJiZcbiAgICAgICAgIUFycmF5LmlzQXJyYXkoaW5wdXQpICYmXG4gICAgICAgICEoaW5wdXQgaW5zdGFuY2VvZiBSZWdFeHApICYmXG4gICAgICAgICEoaW5wdXQgaW5zdGFuY2VvZiBEYXRlKSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vYmplY3QuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-util/dist/esm/object.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-util/dist/esm/random.js":
/*!**********************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/random.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRandomIntegerInclusive: () => (/* binding */ getRandomIntegerInclusive)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Returns a random integer value between a lower and upper bound,\n * inclusive of both bounds.\n * Note that this uses Math.random and isn't secure. If you need to use\n * this for any kind of security purpose, find a better source of random.\n * @param min - The smallest integer value allowed.\n * @param max - The largest integer value allowed.\n */\nfunction getRandomIntegerInclusive(min, max) {\n    // Make sure inputs are integers.\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    // Pick a random offset from zero to the size of the range.\n    // Since Math.random() can never return 1, we have to make the range one larger\n    // in order to be inclusive of the maximum value after we take the floor.\n    const offset = Math.floor(Math.random() * (max - min + 1));\n    return offset + min;\n}\n//# sourceMappingURL=random.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9yYW5kb20uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmUgLSBIZWxsbyBTY3JpcHQgQUlcXGxpZmVBZ2VudFxcdm9pY2UtbGl2ZS1hZ2VudFxcc2FtcGxlc1xccmVhY3RcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXV0aWxcXGRpc3RcXGVzbVxccmFuZG9tLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqXG4gKiBSZXR1cm5zIGEgcmFuZG9tIGludGVnZXIgdmFsdWUgYmV0d2VlbiBhIGxvd2VyIGFuZCB1cHBlciBib3VuZCxcbiAqIGluY2x1c2l2ZSBvZiBib3RoIGJvdW5kcy5cbiAqIE5vdGUgdGhhdCB0aGlzIHVzZXMgTWF0aC5yYW5kb20gYW5kIGlzbid0IHNlY3VyZS4gSWYgeW91IG5lZWQgdG8gdXNlXG4gKiB0aGlzIGZvciBhbnkga2luZCBvZiBzZWN1cml0eSBwdXJwb3NlLCBmaW5kIGEgYmV0dGVyIHNvdXJjZSBvZiByYW5kb20uXG4gKiBAcGFyYW0gbWluIC0gVGhlIHNtYWxsZXN0IGludGVnZXIgdmFsdWUgYWxsb3dlZC5cbiAqIEBwYXJhbSBtYXggLSBUaGUgbGFyZ2VzdCBpbnRlZ2VyIHZhbHVlIGFsbG93ZWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRSYW5kb21JbnRlZ2VySW5jbHVzaXZlKG1pbiwgbWF4KSB7XG4gICAgLy8gTWFrZSBzdXJlIGlucHV0cyBhcmUgaW50ZWdlcnMuXG4gICAgbWluID0gTWF0aC5jZWlsKG1pbik7XG4gICAgbWF4ID0gTWF0aC5mbG9vcihtYXgpO1xuICAgIC8vIFBpY2sgYSByYW5kb20gb2Zmc2V0IGZyb20gemVybyB0byB0aGUgc2l6ZSBvZiB0aGUgcmFuZ2UuXG4gICAgLy8gU2luY2UgTWF0aC5yYW5kb20oKSBjYW4gbmV2ZXIgcmV0dXJuIDEsIHdlIGhhdmUgdG8gbWFrZSB0aGUgcmFuZ2Ugb25lIGxhcmdlclxuICAgIC8vIGluIG9yZGVyIHRvIGJlIGluY2x1c2l2ZSBvZiB0aGUgbWF4aW11bSB2YWx1ZSBhZnRlciB3ZSB0YWtlIHRoZSBmbG9vci5cbiAgICBjb25zdCBvZmZzZXQgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluICsgMSkpO1xuICAgIHJldHVybiBvZmZzZXQgKyBtaW47XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yYW5kb20uanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-util/dist/esm/random.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-util/dist/esm/sha256.js":
/*!**********************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/sha256.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   computeSha256Hash: () => (/* binding */ computeSha256Hash),\n/* harmony export */   computeSha256Hmac: () => (/* binding */ computeSha256Hmac)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Generates a SHA-256 HMAC signature.\n * @param key - The HMAC key represented as a base64 string, used to generate the cryptographic HMAC hash.\n * @param stringToSign - The data to be signed.\n * @param encoding - The textual encoding to use for the returned HMAC digest.\n */\nasync function computeSha256Hmac(key, stringToSign, encoding) {\n    const decodedKey = Buffer.from(key, \"base64\");\n    return (0,crypto__WEBPACK_IMPORTED_MODULE_0__.createHmac)(\"sha256\", decodedKey).update(stringToSign).digest(encoding);\n}\n/**\n * Generates a SHA-256 hash.\n * @param content - The data to be included in the hash.\n * @param encoding - The textual encoding to use for the returned hash.\n */\nasync function computeSha256Hash(content, encoding) {\n    return (0,crypto__WEBPACK_IMPORTED_MODULE_0__.createHash)(\"sha256\").update(content).digest(encoding);\n}\n//# sourceMappingURL=sha256.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9zaGEyNTYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNnRDtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsV0FBVyxrREFBVTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsa0RBQVU7QUFDckI7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmUgLSBIZWxsbyBTY3JpcHQgQUlcXGxpZmVBZ2VudFxcdm9pY2UtbGl2ZS1hZ2VudFxcc2FtcGxlc1xccmVhY3RcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXV0aWxcXGRpc3RcXGVzbVxcc2hhMjU2LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgY3JlYXRlSGFzaCwgY3JlYXRlSG1hYyB9IGZyb20gXCJjcnlwdG9cIjtcbi8qKlxuICogR2VuZXJhdGVzIGEgU0hBLTI1NiBITUFDIHNpZ25hdHVyZS5cbiAqIEBwYXJhbSBrZXkgLSBUaGUgSE1BQyBrZXkgcmVwcmVzZW50ZWQgYXMgYSBiYXNlNjQgc3RyaW5nLCB1c2VkIHRvIGdlbmVyYXRlIHRoZSBjcnlwdG9ncmFwaGljIEhNQUMgaGFzaC5cbiAqIEBwYXJhbSBzdHJpbmdUb1NpZ24gLSBUaGUgZGF0YSB0byBiZSBzaWduZWQuXG4gKiBAcGFyYW0gZW5jb2RpbmcgLSBUaGUgdGV4dHVhbCBlbmNvZGluZyB0byB1c2UgZm9yIHRoZSByZXR1cm5lZCBITUFDIGRpZ2VzdC5cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNvbXB1dGVTaGEyNTZIbWFjKGtleSwgc3RyaW5nVG9TaWduLCBlbmNvZGluZykge1xuICAgIGNvbnN0IGRlY29kZWRLZXkgPSBCdWZmZXIuZnJvbShrZXksIFwiYmFzZTY0XCIpO1xuICAgIHJldHVybiBjcmVhdGVIbWFjKFwic2hhMjU2XCIsIGRlY29kZWRLZXkpLnVwZGF0ZShzdHJpbmdUb1NpZ24pLmRpZ2VzdChlbmNvZGluZyk7XG59XG4vKipcbiAqIEdlbmVyYXRlcyBhIFNIQS0yNTYgaGFzaC5cbiAqIEBwYXJhbSBjb250ZW50IC0gVGhlIGRhdGEgdG8gYmUgaW5jbHVkZWQgaW4gdGhlIGhhc2guXG4gKiBAcGFyYW0gZW5jb2RpbmcgLSBUaGUgdGV4dHVhbCBlbmNvZGluZyB0byB1c2UgZm9yIHRoZSByZXR1cm5lZCBoYXNoLlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY29tcHV0ZVNoYTI1Nkhhc2goY29udGVudCwgZW5jb2RpbmcpIHtcbiAgICByZXR1cm4gY3JlYXRlSGFzaChcInNoYTI1NlwiKS51cGRhdGUoY29udGVudCkuZGlnZXN0KGVuY29kaW5nKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNoYTI1Ni5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-util/dist/esm/sha256.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-util/dist/esm/typeGuards.js":
/*!**************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/typeGuards.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isDefined: () => (/* binding */ isDefined),\n/* harmony export */   isObjectWithProperties: () => (/* binding */ isObjectWithProperties),\n/* harmony export */   objectHasProperty: () => (/* binding */ objectHasProperty)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Helper TypeGuard that checks if something is defined or not.\n * @param thing - Anything\n */\nfunction isDefined(thing) {\n    return typeof thing !== \"undefined\" && thing !== null;\n}\n/**\n * Helper TypeGuard that checks if the input is an object with the specified properties.\n * @param thing - Anything.\n * @param properties - The name of the properties that should appear in the object.\n */\nfunction isObjectWithProperties(thing, properties) {\n    if (!isDefined(thing) || typeof thing !== \"object\") {\n        return false;\n    }\n    for (const property of properties) {\n        if (!objectHasProperty(thing, property)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Helper TypeGuard that checks if the input is an object with the specified property.\n * @param thing - Any object.\n * @param property - The name of the property that should appear in the object.\n */\nfunction objectHasProperty(thing, property) {\n    return (isDefined(thing) && typeof thing === \"object\" && property in thing);\n}\n//# sourceMappingURL=typeGuards.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS90eXBlR3VhcmRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZSAtIEhlbGxvIFNjcmlwdCBBSVxcbGlmZUFnZW50XFx2b2ljZS1saXZlLWFnZW50XFxzYW1wbGVzXFxyZWFjdFxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtdXRpbFxcZGlzdFxcZXNtXFx0eXBlR3VhcmRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqXG4gKiBIZWxwZXIgVHlwZUd1YXJkIHRoYXQgY2hlY2tzIGlmIHNvbWV0aGluZyBpcyBkZWZpbmVkIG9yIG5vdC5cbiAqIEBwYXJhbSB0aGluZyAtIEFueXRoaW5nXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0RlZmluZWQodGhpbmcpIHtcbiAgICByZXR1cm4gdHlwZW9mIHRoaW5nICE9PSBcInVuZGVmaW5lZFwiICYmIHRoaW5nICE9PSBudWxsO1xufVxuLyoqXG4gKiBIZWxwZXIgVHlwZUd1YXJkIHRoYXQgY2hlY2tzIGlmIHRoZSBpbnB1dCBpcyBhbiBvYmplY3Qgd2l0aCB0aGUgc3BlY2lmaWVkIHByb3BlcnRpZXMuXG4gKiBAcGFyYW0gdGhpbmcgLSBBbnl0aGluZy5cbiAqIEBwYXJhbSBwcm9wZXJ0aWVzIC0gVGhlIG5hbWUgb2YgdGhlIHByb3BlcnRpZXMgdGhhdCBzaG91bGQgYXBwZWFyIGluIHRoZSBvYmplY3QuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc09iamVjdFdpdGhQcm9wZXJ0aWVzKHRoaW5nLCBwcm9wZXJ0aWVzKSB7XG4gICAgaWYgKCFpc0RlZmluZWQodGhpbmcpIHx8IHR5cGVvZiB0aGluZyAhPT0gXCJvYmplY3RcIikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGZvciAoY29uc3QgcHJvcGVydHkgb2YgcHJvcGVydGllcykge1xuICAgICAgICBpZiAoIW9iamVjdEhhc1Byb3BlcnR5KHRoaW5nLCBwcm9wZXJ0eSkpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbi8qKlxuICogSGVscGVyIFR5cGVHdWFyZCB0aGF0IGNoZWNrcyBpZiB0aGUgaW5wdXQgaXMgYW4gb2JqZWN0IHdpdGggdGhlIHNwZWNpZmllZCBwcm9wZXJ0eS5cbiAqIEBwYXJhbSB0aGluZyAtIEFueSBvYmplY3QuXG4gKiBAcGFyYW0gcHJvcGVydHkgLSBUaGUgbmFtZSBvZiB0aGUgcHJvcGVydHkgdGhhdCBzaG91bGQgYXBwZWFyIGluIHRoZSBvYmplY3QuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBvYmplY3RIYXNQcm9wZXJ0eSh0aGluZywgcHJvcGVydHkpIHtcbiAgICByZXR1cm4gKGlzRGVmaW5lZCh0aGluZykgJiYgdHlwZW9mIHRoaW5nID09PSBcIm9iamVjdFwiICYmIHByb3BlcnR5IGluIHRoaW5nKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVHdWFyZHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-util/dist/esm/typeGuards.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-util/dist/esm/uuidUtils.js":
/*!*************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/uuidUtils.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   randomUUID: () => (/* binding */ randomUUID)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nvar _a;\n\n// NOTE: This is a workaround until we can use `globalThis.crypto.randomUUID` in Node.js 19+.\nconst uuidFunction = typeof ((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.crypto) === null || _a === void 0 ? void 0 : _a.randomUUID) === \"function\"\n    ? globalThis.crypto.randomUUID.bind(globalThis.crypto)\n    : crypto__WEBPACK_IMPORTED_MODULE_0__.randomUUID;\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nfunction randomUUID() {\n    return uuidFunction();\n}\n//# sourceMappingURL=uuidUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS91dWlkVXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDb0Q7QUFDcEQ7QUFDQTtBQUNBO0FBQ0EsTUFBTSw4Q0FBWTtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS11dGlsXFxkaXN0XFxlc21cXHV1aWRVdGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbnZhciBfYTtcbmltcG9ydCB7IHJhbmRvbVVVSUQgYXMgdjRSYW5kb21VVUlEIH0gZnJvbSBcImNyeXB0b1wiO1xuLy8gTk9URTogVGhpcyBpcyBhIHdvcmthcm91bmQgdW50aWwgd2UgY2FuIHVzZSBgZ2xvYmFsVGhpcy5jcnlwdG8ucmFuZG9tVVVJRGAgaW4gTm9kZS5qcyAxOSsuXG5jb25zdCB1dWlkRnVuY3Rpb24gPSB0eXBlb2YgKChfYSA9IGdsb2JhbFRoaXMgPT09IG51bGwgfHwgZ2xvYmFsVGhpcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogZ2xvYmFsVGhpcy5jcnlwdG8pID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5yYW5kb21VVUlEKSA9PT0gXCJmdW5jdGlvblwiXG4gICAgPyBnbG9iYWxUaGlzLmNyeXB0by5yYW5kb21VVUlELmJpbmQoZ2xvYmFsVGhpcy5jcnlwdG8pXG4gICAgOiB2NFJhbmRvbVVVSUQ7XG4vKipcbiAqIEdlbmVyYXRlZCBVbml2ZXJzYWxseSBVbmlxdWUgSWRlbnRpZmllclxuICpcbiAqIEByZXR1cm5zIFJGQzQxMjIgdjQgVVVJRC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJhbmRvbVVVSUQoKSB7XG4gICAgcmV0dXJuIHV1aWRGdW5jdGlvbigpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXVpZFV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-util/dist/esm/uuidUtils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/logger/dist/esm/debug.js":
/*!******************************************************!*\
  !*** ./node_modules/@azure/logger/dist/esm/debug.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./log.js */ \"(ssr)/./node_modules/@azure/logger/dist/esm/log.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst debugEnvVariable = (typeof process !== \"undefined\" && process.env && process.env.DEBUG) || undefined;\nlet enabledString;\nlet enabledNamespaces = [];\nlet skippedNamespaces = [];\nconst debuggers = [];\nif (debugEnvVariable) {\n    enable(debugEnvVariable);\n}\nconst debugObj = Object.assign((namespace) => {\n    return createDebugger(namespace);\n}, {\n    enable,\n    enabled,\n    disable,\n    log: _log_js__WEBPACK_IMPORTED_MODULE_0__.log,\n});\nfunction enable(namespaces) {\n    enabledString = namespaces;\n    enabledNamespaces = [];\n    skippedNamespaces = [];\n    const wildcard = /\\*/g;\n    const namespaceList = namespaces.split(\",\").map((ns) => ns.trim().replace(wildcard, \".*?\"));\n    for (const ns of namespaceList) {\n        if (ns.startsWith(\"-\")) {\n            skippedNamespaces.push(new RegExp(`^${ns.substr(1)}$`));\n        }\n        else {\n            enabledNamespaces.push(new RegExp(`^${ns}$`));\n        }\n    }\n    for (const instance of debuggers) {\n        instance.enabled = enabled(instance.namespace);\n    }\n}\nfunction enabled(namespace) {\n    if (namespace.endsWith(\"*\")) {\n        return true;\n    }\n    for (const skipped of skippedNamespaces) {\n        if (skipped.test(namespace)) {\n            return false;\n        }\n    }\n    for (const enabledNamespace of enabledNamespaces) {\n        if (enabledNamespace.test(namespace)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction disable() {\n    const result = enabledString || \"\";\n    enable(\"\");\n    return result;\n}\nfunction createDebugger(namespace) {\n    const newDebugger = Object.assign(debug, {\n        enabled: enabled(namespace),\n        destroy,\n        log: debugObj.log,\n        namespace,\n        extend,\n    });\n    function debug(...args) {\n        if (!newDebugger.enabled) {\n            return;\n        }\n        if (args.length > 0) {\n            args[0] = `${namespace} ${args[0]}`;\n        }\n        newDebugger.log(...args);\n    }\n    debuggers.push(newDebugger);\n    return newDebugger;\n}\nfunction destroy() {\n    const index = debuggers.indexOf(this);\n    if (index >= 0) {\n        debuggers.splice(index, 1);\n        return true;\n    }\n    return false;\n}\nfunction extend(namespace) {\n    const newDebugger = createDebugger(`${this.namespace}:${namespace}`);\n    newDebugger.log = this.log;\n    return newDebugger;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (debugObj);\n//# sourceMappingURL=debug.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2xvZ2dlci9kaXN0L2VzbS9kZWJ1Zy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELGFBQWE7QUFDL0Q7QUFDQTtBQUNBLGtEQUFrRCxHQUFHO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsV0FBVyxFQUFFLFFBQVE7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLGVBQWUsR0FBRyxVQUFVO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBLGlFQUFlLFFBQVEsRUFBQztBQUN4QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmUgLSBIZWxsbyBTY3JpcHQgQUlcXGxpZmVBZ2VudFxcdm9pY2UtbGl2ZS1hZ2VudFxcc2FtcGxlc1xccmVhY3RcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxsb2dnZXJcXGRpc3RcXGVzbVxcZGVidWcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgeyBsb2cgfSBmcm9tIFwiLi9sb2cuanNcIjtcbmNvbnN0IGRlYnVnRW52VmFyaWFibGUgPSAodHlwZW9mIHByb2Nlc3MgIT09IFwidW5kZWZpbmVkXCIgJiYgcHJvY2Vzcy5lbnYgJiYgcHJvY2Vzcy5lbnYuREVCVUcpIHx8IHVuZGVmaW5lZDtcbmxldCBlbmFibGVkU3RyaW5nO1xubGV0IGVuYWJsZWROYW1lc3BhY2VzID0gW107XG5sZXQgc2tpcHBlZE5hbWVzcGFjZXMgPSBbXTtcbmNvbnN0IGRlYnVnZ2VycyA9IFtdO1xuaWYgKGRlYnVnRW52VmFyaWFibGUpIHtcbiAgICBlbmFibGUoZGVidWdFbnZWYXJpYWJsZSk7XG59XG5jb25zdCBkZWJ1Z09iaiA9IE9iamVjdC5hc3NpZ24oKG5hbWVzcGFjZSkgPT4ge1xuICAgIHJldHVybiBjcmVhdGVEZWJ1Z2dlcihuYW1lc3BhY2UpO1xufSwge1xuICAgIGVuYWJsZSxcbiAgICBlbmFibGVkLFxuICAgIGRpc2FibGUsXG4gICAgbG9nLFxufSk7XG5mdW5jdGlvbiBlbmFibGUobmFtZXNwYWNlcykge1xuICAgIGVuYWJsZWRTdHJpbmcgPSBuYW1lc3BhY2VzO1xuICAgIGVuYWJsZWROYW1lc3BhY2VzID0gW107XG4gICAgc2tpcHBlZE5hbWVzcGFjZXMgPSBbXTtcbiAgICBjb25zdCB3aWxkY2FyZCA9IC9cXCovZztcbiAgICBjb25zdCBuYW1lc3BhY2VMaXN0ID0gbmFtZXNwYWNlcy5zcGxpdChcIixcIikubWFwKChucykgPT4gbnMudHJpbSgpLnJlcGxhY2Uod2lsZGNhcmQsIFwiLio/XCIpKTtcbiAgICBmb3IgKGNvbnN0IG5zIG9mIG5hbWVzcGFjZUxpc3QpIHtcbiAgICAgICAgaWYgKG5zLnN0YXJ0c1dpdGgoXCItXCIpKSB7XG4gICAgICAgICAgICBza2lwcGVkTmFtZXNwYWNlcy5wdXNoKG5ldyBSZWdFeHAoYF4ke25zLnN1YnN0cigxKX0kYCkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZW5hYmxlZE5hbWVzcGFjZXMucHVzaChuZXcgUmVnRXhwKGBeJHtuc30kYCkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZvciAoY29uc3QgaW5zdGFuY2Ugb2YgZGVidWdnZXJzKSB7XG4gICAgICAgIGluc3RhbmNlLmVuYWJsZWQgPSBlbmFibGVkKGluc3RhbmNlLm5hbWVzcGFjZSk7XG4gICAgfVxufVxuZnVuY3Rpb24gZW5hYmxlZChuYW1lc3BhY2UpIHtcbiAgICBpZiAobmFtZXNwYWNlLmVuZHNXaXRoKFwiKlwiKSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBza2lwcGVkIG9mIHNraXBwZWROYW1lc3BhY2VzKSB7XG4gICAgICAgIGlmIChza2lwcGVkLnRlc3QobmFtZXNwYWNlKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZvciAoY29uc3QgZW5hYmxlZE5hbWVzcGFjZSBvZiBlbmFibGVkTmFtZXNwYWNlcykge1xuICAgICAgICBpZiAoZW5hYmxlZE5hbWVzcGFjZS50ZXN0KG5hbWVzcGFjZSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbmZ1bmN0aW9uIGRpc2FibGUoKSB7XG4gICAgY29uc3QgcmVzdWx0ID0gZW5hYmxlZFN0cmluZyB8fCBcIlwiO1xuICAgIGVuYWJsZShcIlwiKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gY3JlYXRlRGVidWdnZXIobmFtZXNwYWNlKSB7XG4gICAgY29uc3QgbmV3RGVidWdnZXIgPSBPYmplY3QuYXNzaWduKGRlYnVnLCB7XG4gICAgICAgIGVuYWJsZWQ6IGVuYWJsZWQobmFtZXNwYWNlKSxcbiAgICAgICAgZGVzdHJveSxcbiAgICAgICAgbG9nOiBkZWJ1Z09iai5sb2csXG4gICAgICAgIG5hbWVzcGFjZSxcbiAgICAgICAgZXh0ZW5kLFxuICAgIH0pO1xuICAgIGZ1bmN0aW9uIGRlYnVnKC4uLmFyZ3MpIHtcbiAgICAgICAgaWYgKCFuZXdEZWJ1Z2dlci5lbmFibGVkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFyZ3MubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgYXJnc1swXSA9IGAke25hbWVzcGFjZX0gJHthcmdzWzBdfWA7XG4gICAgICAgIH1cbiAgICAgICAgbmV3RGVidWdnZXIubG9nKC4uLmFyZ3MpO1xuICAgIH1cbiAgICBkZWJ1Z2dlcnMucHVzaChuZXdEZWJ1Z2dlcik7XG4gICAgcmV0dXJuIG5ld0RlYnVnZ2VyO1xufVxuZnVuY3Rpb24gZGVzdHJveSgpIHtcbiAgICBjb25zdCBpbmRleCA9IGRlYnVnZ2Vycy5pbmRleE9mKHRoaXMpO1xuICAgIGlmIChpbmRleCA+PSAwKSB7XG4gICAgICAgIGRlYnVnZ2Vycy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuZnVuY3Rpb24gZXh0ZW5kKG5hbWVzcGFjZSkge1xuICAgIGNvbnN0IG5ld0RlYnVnZ2VyID0gY3JlYXRlRGVidWdnZXIoYCR7dGhpcy5uYW1lc3BhY2V9OiR7bmFtZXNwYWNlfWApO1xuICAgIG5ld0RlYnVnZ2VyLmxvZyA9IHRoaXMubG9nO1xuICAgIHJldHVybiBuZXdEZWJ1Z2dlcjtcbn1cbmV4cG9ydCBkZWZhdWx0IGRlYnVnT2JqO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVidWcuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/logger/dist/esm/debug.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/logger/dist/esm/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@azure/logger/dist/esm/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzureLogger: () => (/* binding */ AzureLogger),\n/* harmony export */   createClientLogger: () => (/* binding */ createClientLogger),\n/* harmony export */   getLogLevel: () => (/* binding */ getLogLevel),\n/* harmony export */   setLogLevel: () => (/* binding */ setLogLevel)\n/* harmony export */ });\n/* harmony import */ var _debug_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./debug.js */ \"(ssr)/./node_modules/@azure/logger/dist/esm/debug.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst registeredLoggers = new Set();\nconst logLevelFromEnv = (typeof process !== \"undefined\" && process.env && process.env.AZURE_LOG_LEVEL) || undefined;\nlet azureLogLevel;\n/**\n * The AzureLogger provides a mechanism for overriding where logs are output to.\n * By default, logs are sent to stderr.\n * Override the `log` method to redirect logs to another location.\n */\nconst AzureLogger = (0,_debug_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"azure\");\nAzureLogger.log = (...args) => {\n    _debug_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].log(...args);\n};\nconst AZURE_LOG_LEVELS = [\"verbose\", \"info\", \"warning\", \"error\"];\nif (logLevelFromEnv) {\n    // avoid calling setLogLevel because we don't want a mis-set environment variable to crash\n    if (isAzureLogLevel(logLevelFromEnv)) {\n        setLogLevel(logLevelFromEnv);\n    }\n    else {\n        console.error(`AZURE_LOG_LEVEL set to unknown log level '${logLevelFromEnv}'; logging is not enabled. Acceptable values: ${AZURE_LOG_LEVELS.join(\", \")}.`);\n    }\n}\n/**\n * Immediately enables logging at the specified log level. If no level is specified, logging is disabled.\n * @param level - The log level to enable for logging.\n * Options from most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nfunction setLogLevel(level) {\n    if (level && !isAzureLogLevel(level)) {\n        throw new Error(`Unknown log level '${level}'. Acceptable values: ${AZURE_LOG_LEVELS.join(\",\")}`);\n    }\n    azureLogLevel = level;\n    const enabledNamespaces = [];\n    for (const logger of registeredLoggers) {\n        if (shouldEnable(logger)) {\n            enabledNamespaces.push(logger.namespace);\n        }\n    }\n    _debug_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].enable(enabledNamespaces.join(\",\"));\n}\n/**\n * Retrieves the currently specified log level.\n */\nfunction getLogLevel() {\n    return azureLogLevel;\n}\nconst levelMap = {\n    verbose: 400,\n    info: 300,\n    warning: 200,\n    error: 100,\n};\n/**\n * Creates a logger for use by the Azure SDKs that inherits from `AzureLogger`.\n * @param namespace - The name of the SDK package.\n * @hidden\n */\nfunction createClientLogger(namespace) {\n    const clientRootLogger = AzureLogger.extend(namespace);\n    patchLogMethod(AzureLogger, clientRootLogger);\n    return {\n        error: createLogger(clientRootLogger, \"error\"),\n        warning: createLogger(clientRootLogger, \"warning\"),\n        info: createLogger(clientRootLogger, \"info\"),\n        verbose: createLogger(clientRootLogger, \"verbose\"),\n    };\n}\nfunction patchLogMethod(parent, child) {\n    child.log = (...args) => {\n        parent.log(...args);\n    };\n}\nfunction createLogger(parent, level) {\n    const logger = Object.assign(parent.extend(level), {\n        level,\n    });\n    patchLogMethod(parent, logger);\n    if (shouldEnable(logger)) {\n        const enabledNamespaces = _debug_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].disable();\n        _debug_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].enable(enabledNamespaces + \",\" + logger.namespace);\n    }\n    registeredLoggers.add(logger);\n    return logger;\n}\nfunction shouldEnable(logger) {\n    return Boolean(azureLogLevel && levelMap[logger.level] <= levelMap[azureLogLevel]);\n}\nfunction isAzureLogLevel(logLevel) {\n    return AZURE_LOG_LEVELS.includes(logLevel);\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2xvZ2dlci9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLG9CQUFvQixxREFBSztBQUNoQztBQUNBLElBQUksaURBQUs7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FLGdCQUFnQixHQUFHLDZDQUE2Qyw0QkFBNEI7QUFDL0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSw4Q0FBOEMsTUFBTSx3QkFBd0IsMkJBQTJCO0FBQ3ZHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLGlEQUFLO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxrQ0FBa0MsaURBQUs7QUFDdkMsUUFBUSxpREFBSztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcbG9nZ2VyXFxkaXN0XFxlc21cXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuaW1wb3J0IGRlYnVnIGZyb20gXCIuL2RlYnVnLmpzXCI7XG5jb25zdCByZWdpc3RlcmVkTG9nZ2VycyA9IG5ldyBTZXQoKTtcbmNvbnN0IGxvZ0xldmVsRnJvbUVudiA9ICh0eXBlb2YgcHJvY2VzcyAhPT0gXCJ1bmRlZmluZWRcIiAmJiBwcm9jZXNzLmVudiAmJiBwcm9jZXNzLmVudi5BWlVSRV9MT0dfTEVWRUwpIHx8IHVuZGVmaW5lZDtcbmxldCBhenVyZUxvZ0xldmVsO1xuLyoqXG4gKiBUaGUgQXp1cmVMb2dnZXIgcHJvdmlkZXMgYSBtZWNoYW5pc20gZm9yIG92ZXJyaWRpbmcgd2hlcmUgbG9ncyBhcmUgb3V0cHV0IHRvLlxuICogQnkgZGVmYXVsdCwgbG9ncyBhcmUgc2VudCB0byBzdGRlcnIuXG4gKiBPdmVycmlkZSB0aGUgYGxvZ2AgbWV0aG9kIHRvIHJlZGlyZWN0IGxvZ3MgdG8gYW5vdGhlciBsb2NhdGlvbi5cbiAqL1xuZXhwb3J0IGNvbnN0IEF6dXJlTG9nZ2VyID0gZGVidWcoXCJhenVyZVwiKTtcbkF6dXJlTG9nZ2VyLmxvZyA9ICguLi5hcmdzKSA9PiB7XG4gICAgZGVidWcubG9nKC4uLmFyZ3MpO1xufTtcbmNvbnN0IEFaVVJFX0xPR19MRVZFTFMgPSBbXCJ2ZXJib3NlXCIsIFwiaW5mb1wiLCBcIndhcm5pbmdcIiwgXCJlcnJvclwiXTtcbmlmIChsb2dMZXZlbEZyb21FbnYpIHtcbiAgICAvLyBhdm9pZCBjYWxsaW5nIHNldExvZ0xldmVsIGJlY2F1c2Ugd2UgZG9uJ3Qgd2FudCBhIG1pcy1zZXQgZW52aXJvbm1lbnQgdmFyaWFibGUgdG8gY3Jhc2hcbiAgICBpZiAoaXNBenVyZUxvZ0xldmVsKGxvZ0xldmVsRnJvbUVudikpIHtcbiAgICAgICAgc2V0TG9nTGV2ZWwobG9nTGV2ZWxGcm9tRW52KTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoYEFaVVJFX0xPR19MRVZFTCBzZXQgdG8gdW5rbm93biBsb2cgbGV2ZWwgJyR7bG9nTGV2ZWxGcm9tRW52fSc7IGxvZ2dpbmcgaXMgbm90IGVuYWJsZWQuIEFjY2VwdGFibGUgdmFsdWVzOiAke0FaVVJFX0xPR19MRVZFTFMuam9pbihcIiwgXCIpfS5gKTtcbiAgICB9XG59XG4vKipcbiAqIEltbWVkaWF0ZWx5IGVuYWJsZXMgbG9nZ2luZyBhdCB0aGUgc3BlY2lmaWVkIGxvZyBsZXZlbC4gSWYgbm8gbGV2ZWwgaXMgc3BlY2lmaWVkLCBsb2dnaW5nIGlzIGRpc2FibGVkLlxuICogQHBhcmFtIGxldmVsIC0gVGhlIGxvZyBsZXZlbCB0byBlbmFibGUgZm9yIGxvZ2dpbmcuXG4gKiBPcHRpb25zIGZyb20gbW9zdCB2ZXJib3NlIHRvIGxlYXN0IHZlcmJvc2UgYXJlOlxuICogLSB2ZXJib3NlXG4gKiAtIGluZm9cbiAqIC0gd2FybmluZ1xuICogLSBlcnJvclxuICovXG5leHBvcnQgZnVuY3Rpb24gc2V0TG9nTGV2ZWwobGV2ZWwpIHtcbiAgICBpZiAobGV2ZWwgJiYgIWlzQXp1cmVMb2dMZXZlbChsZXZlbCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIGxvZyBsZXZlbCAnJHtsZXZlbH0nLiBBY2NlcHRhYmxlIHZhbHVlczogJHtBWlVSRV9MT0dfTEVWRUxTLmpvaW4oXCIsXCIpfWApO1xuICAgIH1cbiAgICBhenVyZUxvZ0xldmVsID0gbGV2ZWw7XG4gICAgY29uc3QgZW5hYmxlZE5hbWVzcGFjZXMgPSBbXTtcbiAgICBmb3IgKGNvbnN0IGxvZ2dlciBvZiByZWdpc3RlcmVkTG9nZ2Vycykge1xuICAgICAgICBpZiAoc2hvdWxkRW5hYmxlKGxvZ2dlcikpIHtcbiAgICAgICAgICAgIGVuYWJsZWROYW1lc3BhY2VzLnB1c2gobG9nZ2VyLm5hbWVzcGFjZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZGVidWcuZW5hYmxlKGVuYWJsZWROYW1lc3BhY2VzLmpvaW4oXCIsXCIpKTtcbn1cbi8qKlxuICogUmV0cmlldmVzIHRoZSBjdXJyZW50bHkgc3BlY2lmaWVkIGxvZyBsZXZlbC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldExvZ0xldmVsKCkge1xuICAgIHJldHVybiBhenVyZUxvZ0xldmVsO1xufVxuY29uc3QgbGV2ZWxNYXAgPSB7XG4gICAgdmVyYm9zZTogNDAwLFxuICAgIGluZm86IDMwMCxcbiAgICB3YXJuaW5nOiAyMDAsXG4gICAgZXJyb3I6IDEwMCxcbn07XG4vKipcbiAqIENyZWF0ZXMgYSBsb2dnZXIgZm9yIHVzZSBieSB0aGUgQXp1cmUgU0RLcyB0aGF0IGluaGVyaXRzIGZyb20gYEF6dXJlTG9nZ2VyYC5cbiAqIEBwYXJhbSBuYW1lc3BhY2UgLSBUaGUgbmFtZSBvZiB0aGUgU0RLIHBhY2thZ2UuXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDbGllbnRMb2dnZXIobmFtZXNwYWNlKSB7XG4gICAgY29uc3QgY2xpZW50Um9vdExvZ2dlciA9IEF6dXJlTG9nZ2VyLmV4dGVuZChuYW1lc3BhY2UpO1xuICAgIHBhdGNoTG9nTWV0aG9kKEF6dXJlTG9nZ2VyLCBjbGllbnRSb290TG9nZ2VyKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBlcnJvcjogY3JlYXRlTG9nZ2VyKGNsaWVudFJvb3RMb2dnZXIsIFwiZXJyb3JcIiksXG4gICAgICAgIHdhcm5pbmc6IGNyZWF0ZUxvZ2dlcihjbGllbnRSb290TG9nZ2VyLCBcIndhcm5pbmdcIiksXG4gICAgICAgIGluZm86IGNyZWF0ZUxvZ2dlcihjbGllbnRSb290TG9nZ2VyLCBcImluZm9cIiksXG4gICAgICAgIHZlcmJvc2U6IGNyZWF0ZUxvZ2dlcihjbGllbnRSb290TG9nZ2VyLCBcInZlcmJvc2VcIiksXG4gICAgfTtcbn1cbmZ1bmN0aW9uIHBhdGNoTG9nTWV0aG9kKHBhcmVudCwgY2hpbGQpIHtcbiAgICBjaGlsZC5sb2cgPSAoLi4uYXJncykgPT4ge1xuICAgICAgICBwYXJlbnQubG9nKC4uLmFyZ3MpO1xuICAgIH07XG59XG5mdW5jdGlvbiBjcmVhdGVMb2dnZXIocGFyZW50LCBsZXZlbCkge1xuICAgIGNvbnN0IGxvZ2dlciA9IE9iamVjdC5hc3NpZ24ocGFyZW50LmV4dGVuZChsZXZlbCksIHtcbiAgICAgICAgbGV2ZWwsXG4gICAgfSk7XG4gICAgcGF0Y2hMb2dNZXRob2QocGFyZW50LCBsb2dnZXIpO1xuICAgIGlmIChzaG91bGRFbmFibGUobG9nZ2VyKSkge1xuICAgICAgICBjb25zdCBlbmFibGVkTmFtZXNwYWNlcyA9IGRlYnVnLmRpc2FibGUoKTtcbiAgICAgICAgZGVidWcuZW5hYmxlKGVuYWJsZWROYW1lc3BhY2VzICsgXCIsXCIgKyBsb2dnZXIubmFtZXNwYWNlKTtcbiAgICB9XG4gICAgcmVnaXN0ZXJlZExvZ2dlcnMuYWRkKGxvZ2dlcik7XG4gICAgcmV0dXJuIGxvZ2dlcjtcbn1cbmZ1bmN0aW9uIHNob3VsZEVuYWJsZShsb2dnZXIpIHtcbiAgICByZXR1cm4gQm9vbGVhbihhenVyZUxvZ0xldmVsICYmIGxldmVsTWFwW2xvZ2dlci5sZXZlbF0gPD0gbGV2ZWxNYXBbYXp1cmVMb2dMZXZlbF0pO1xufVxuZnVuY3Rpb24gaXNBenVyZUxvZ0xldmVsKGxvZ0xldmVsKSB7XG4gICAgcmV0dXJuIEFaVVJFX0xPR19MRVZFTFMuaW5jbHVkZXMobG9nTGV2ZWwpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/logger/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/logger/dist/esm/log.js":
/*!****************************************************!*\
  !*** ./node_modules/@azure/logger/dist/esm/log.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   log: () => (/* binding */ log)\n/* harmony export */ });\n/* harmony import */ var node_os__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:os */ \"node:os\");\n/* harmony import */ var node_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node:util */ \"node:util\");\n/* harmony import */ var node_process__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! node:process */ \"node:process\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\nfunction log(message, ...args) {\n    node_process__WEBPACK_IMPORTED_MODULE_2__.stderr.write(`${node_util__WEBPACK_IMPORTED_MODULE_1__.format(message, ...args)}${node_os__WEBPACK_IMPORTED_MODULE_0__.EOL}`);\n}\n//# sourceMappingURL=log.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2xvZ2dlci9kaXN0L2VzbS9sb2cuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDOEI7QUFDRDtBQUNXO0FBQ2pDO0FBQ1AsSUFBSSxnREFBYyxVQUFVLDZDQUFXLG1CQUFtQixFQUFFLHdDQUFHLENBQUM7QUFDaEU7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmUgLSBIZWxsbyBTY3JpcHQgQUlcXGxpZmVBZ2VudFxcdm9pY2UtbGl2ZS1hZ2VudFxcc2FtcGxlc1xccmVhY3RcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxsb2dnZXJcXGRpc3RcXGVzbVxcbG9nLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuaW1wb3J0IHsgRU9MIH0gZnJvbSBcIm5vZGU6b3NcIjtcbmltcG9ydCB1dGlsIGZyb20gXCJub2RlOnV0aWxcIjtcbmltcG9ydCAqIGFzIHByb2Nlc3MgZnJvbSBcIm5vZGU6cHJvY2Vzc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIGxvZyhtZXNzYWdlLCAuLi5hcmdzKSB7XG4gICAgcHJvY2Vzcy5zdGRlcnIud3JpdGUoYCR7dXRpbC5mb3JtYXQobWVzc2FnZSwgLi4uYXJncyl9JHtFT0x9YCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2cuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/logger/dist/esm/log.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/base64.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/base64.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Encodes a string in base64 format.\n * @param value - The string to encode.\n */\nfunction encode(value) {\n    return Buffer.from(value).toString(\"base64\");\n}\n/**\n * Decodes a base64 string into a regular string.\n * @param value - The base64 string to decode.\n */\nfunction decode(value) {\n    return Buffer.from(value, \"base64\").toString();\n}\n//# sourceMappingURL=base64.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL3NlYXJjaC1kb2N1bWVudHMvZGlzdC1lc20vc3JjL2Jhc2U2NC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcc2VhcmNoLWRvY3VtZW50c1xcZGlzdC1lc21cXHNyY1xcYmFzZTY0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuLyoqXG4gKiBFbmNvZGVzIGEgc3RyaW5nIGluIGJhc2U2NCBmb3JtYXQuXG4gKiBAcGFyYW0gdmFsdWUgLSBUaGUgc3RyaW5nIHRvIGVuY29kZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZSh2YWx1ZSkge1xuICAgIHJldHVybiBCdWZmZXIuZnJvbSh2YWx1ZSkudG9TdHJpbmcoXCJiYXNlNjRcIik7XG59XG4vKipcbiAqIERlY29kZXMgYSBiYXNlNjQgc3RyaW5nIGludG8gYSByZWd1bGFyIHN0cmluZy5cbiAqIEBwYXJhbSB2YWx1ZSAtIFRoZSBiYXNlNjQgc3RyaW5nIHRvIGRlY29kZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZSh2YWx1ZSkge1xuICAgIHJldHVybiBCdWZmZXIuZnJvbSh2YWx1ZSwgXCJiYXNlNjRcIikudG9TdHJpbmcoKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2U2NC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/base64.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/generated/data/models/mappers.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/generated/data/models/mappers.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AutocompleteItem: () => (/* binding */ AutocompleteItem),\n/* harmony export */   AutocompleteRequest: () => (/* binding */ AutocompleteRequest),\n/* harmony export */   AutocompleteResult: () => (/* binding */ AutocompleteResult),\n/* harmony export */   ErrorAdditionalInfo: () => (/* binding */ ErrorAdditionalInfo),\n/* harmony export */   ErrorDetail: () => (/* binding */ ErrorDetail),\n/* harmony export */   ErrorResponse: () => (/* binding */ ErrorResponse),\n/* harmony export */   FacetResult: () => (/* binding */ FacetResult),\n/* harmony export */   IndexAction: () => (/* binding */ IndexAction),\n/* harmony export */   IndexBatch: () => (/* binding */ IndexBatch),\n/* harmony export */   IndexDocumentsResult: () => (/* binding */ IndexDocumentsResult),\n/* harmony export */   IndexingResult: () => (/* binding */ IndexingResult),\n/* harmony export */   QueryAnswerResult: () => (/* binding */ QueryAnswerResult),\n/* harmony export */   QueryCaptionResult: () => (/* binding */ QueryCaptionResult),\n/* harmony export */   SearchDocumentsResult: () => (/* binding */ SearchDocumentsResult),\n/* harmony export */   SearchRequest: () => (/* binding */ SearchRequest),\n/* harmony export */   SearchResult: () => (/* binding */ SearchResult),\n/* harmony export */   SuggestDocumentsResult: () => (/* binding */ SuggestDocumentsResult),\n/* harmony export */   SuggestRequest: () => (/* binding */ SuggestRequest),\n/* harmony export */   SuggestResult: () => (/* binding */ SuggestResult),\n/* harmony export */   VectorQuery: () => (/* binding */ VectorQuery),\n/* harmony export */   VectorizableTextQuery: () => (/* binding */ VectorizableTextQuery),\n/* harmony export */   VectorizedQuery: () => (/* binding */ VectorizedQuery),\n/* harmony export */   discriminators: () => (/* binding */ discriminators)\n/* harmony export */ });\n/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nconst ErrorResponse = {\n    type: {\n        name: \"Composite\",\n        className: \"ErrorResponse\",\n        modelProperties: {\n            error: {\n                serializedName: \"error\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ErrorDetail\",\n                },\n            },\n        },\n    },\n};\nconst ErrorDetail = {\n    type: {\n        name: \"Composite\",\n        className: \"ErrorDetail\",\n        modelProperties: {\n            code: {\n                serializedName: \"code\",\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            message: {\n                serializedName: \"message\",\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            target: {\n                serializedName: \"target\",\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            details: {\n                serializedName: \"details\",\n                readOnly: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ErrorDetail\",\n                        },\n                    },\n                },\n            },\n            additionalInfo: {\n                serializedName: \"additionalInfo\",\n                readOnly: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ErrorAdditionalInfo\",\n                        },\n                    },\n                },\n            },\n        },\n    },\n};\nconst ErrorAdditionalInfo = {\n    type: {\n        name: \"Composite\",\n        className: \"ErrorAdditionalInfo\",\n        modelProperties: {\n            type: {\n                serializedName: \"type\",\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            info: {\n                serializedName: \"info\",\n                readOnly: true,\n                type: {\n                    name: \"Dictionary\",\n                    value: { type: { name: \"any\" } },\n                },\n            },\n        },\n    },\n};\nconst SearchDocumentsResult = {\n    type: {\n        name: \"Composite\",\n        className: \"SearchDocumentsResult\",\n        modelProperties: {\n            count: {\n                serializedName: \"@odata\\\\.count\",\n                readOnly: true,\n                type: {\n                    name: \"Number\",\n                },\n            },\n            coverage: {\n                serializedName: \"@search\\\\.coverage\",\n                readOnly: true,\n                type: {\n                    name: \"Number\",\n                },\n            },\n            facets: {\n                serializedName: \"@search\\\\.facets\",\n                readOnly: true,\n                type: {\n                    name: \"Dictionary\",\n                    value: {\n                        type: {\n                            name: \"Sequence\",\n                            element: {\n                                type: { name: \"Composite\", className: \"FacetResult\" },\n                            },\n                        },\n                    },\n                },\n            },\n            answers: {\n                serializedName: \"@search\\\\.answers\",\n                readOnly: true,\n                nullable: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"QueryAnswerResult\",\n                        },\n                    },\n                },\n            },\n            nextPageParameters: {\n                serializedName: \"@search\\\\.nextPageParameters\",\n                type: {\n                    name: \"Composite\",\n                    className: \"SearchRequest\",\n                },\n            },\n            results: {\n                serializedName: \"value\",\n                required: true,\n                readOnly: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"SearchResult\",\n                        },\n                    },\n                },\n            },\n            nextLink: {\n                serializedName: \"@odata\\\\.nextLink\",\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            semanticPartialResponseReason: {\n                serializedName: \"@search\\\\.semanticPartialResponseReason\",\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            semanticPartialResponseType: {\n                serializedName: \"@search\\\\.semanticPartialResponseType\",\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n};\nconst FacetResult = {\n    type: {\n        name: \"Composite\",\n        className: \"FacetResult\",\n        additionalProperties: { type: { name: \"Object\" } },\n        modelProperties: {\n            count: {\n                serializedName: \"count\",\n                readOnly: true,\n                type: {\n                    name: \"Number\",\n                },\n            },\n        },\n    },\n};\nconst QueryAnswerResult = {\n    type: {\n        name: \"Composite\",\n        className: \"QueryAnswerResult\",\n        additionalProperties: { type: { name: \"Object\" } },\n        modelProperties: {\n            score: {\n                serializedName: \"score\",\n                required: true,\n                readOnly: true,\n                type: {\n                    name: \"Number\",\n                },\n            },\n            key: {\n                serializedName: \"key\",\n                required: true,\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            text: {\n                serializedName: \"text\",\n                required: true,\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            highlights: {\n                serializedName: \"highlights\",\n                readOnly: true,\n                nullable: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n};\nconst SearchRequest = {\n    type: {\n        name: \"Composite\",\n        className: \"SearchRequest\",\n        modelProperties: {\n            includeTotalResultCount: {\n                serializedName: \"count\",\n                type: {\n                    name: \"Boolean\",\n                },\n            },\n            facets: {\n                serializedName: \"facets\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"String\",\n                        },\n                    },\n                },\n            },\n            filter: {\n                serializedName: \"filter\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            highlightFields: {\n                serializedName: \"highlight\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            highlightPostTag: {\n                serializedName: \"highlightPostTag\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            highlightPreTag: {\n                serializedName: \"highlightPreTag\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            minimumCoverage: {\n                serializedName: \"minimumCoverage\",\n                type: {\n                    name: \"Number\",\n                },\n            },\n            orderBy: {\n                serializedName: \"orderby\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            queryType: {\n                serializedName: \"queryType\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"simple\", \"full\", \"semantic\"],\n                },\n            },\n            scoringStatistics: {\n                serializedName: \"scoringStatistics\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"local\", \"global\"],\n                },\n            },\n            sessionId: {\n                serializedName: \"sessionId\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            scoringParameters: {\n                serializedName: \"scoringParameters\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"String\",\n                        },\n                    },\n                },\n            },\n            scoringProfile: {\n                serializedName: \"scoringProfile\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            searchText: {\n                serializedName: \"search\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            searchFields: {\n                serializedName: \"searchFields\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            searchMode: {\n                serializedName: \"searchMode\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"any\", \"all\"],\n                },\n            },\n            select: {\n                serializedName: \"select\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            skip: {\n                serializedName: \"skip\",\n                type: {\n                    name: \"Number\",\n                },\n            },\n            top: {\n                serializedName: \"top\",\n                type: {\n                    name: \"Number\",\n                },\n            },\n            semanticConfigurationName: {\n                serializedName: \"semanticConfiguration\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            semanticErrorHandling: {\n                serializedName: \"semanticErrorHandling\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            semanticMaxWaitInMilliseconds: {\n                constraints: {\n                    InclusiveMinimum: 700,\n                },\n                serializedName: \"semanticMaxWaitInMilliseconds\",\n                nullable: true,\n                type: {\n                    name: \"Number\",\n                },\n            },\n            semanticQuery: {\n                serializedName: \"semanticQuery\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            answers: {\n                serializedName: \"answers\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            captions: {\n                serializedName: \"captions\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            vectorQueries: {\n                serializedName: \"vectorQueries\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"VectorQuery\",\n                        },\n                    },\n                },\n            },\n            vectorFilterMode: {\n                serializedName: \"vectorFilterMode\",\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n};\nconst VectorQuery = {\n    type: {\n        name: \"Composite\",\n        className: \"VectorQuery\",\n        uberParent: \"VectorQuery\",\n        polymorphicDiscriminator: {\n            serializedName: \"kind\",\n            clientName: \"kind\",\n        },\n        modelProperties: {\n            kind: {\n                serializedName: \"kind\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            kNearestNeighborsCount: {\n                serializedName: \"k\",\n                type: {\n                    name: \"Number\",\n                },\n            },\n            fields: {\n                serializedName: \"fields\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            exhaustive: {\n                serializedName: \"exhaustive\",\n                type: {\n                    name: \"Boolean\",\n                },\n            },\n            oversampling: {\n                serializedName: \"oversampling\",\n                type: {\n                    name: \"Number\",\n                },\n            },\n            weight: {\n                serializedName: \"weight\",\n                type: {\n                    name: \"Number\",\n                },\n            },\n        },\n    },\n};\nconst SearchResult = {\n    type: {\n        name: \"Composite\",\n        className: \"SearchResult\",\n        additionalProperties: { type: { name: \"Object\" } },\n        modelProperties: {\n            _score: {\n                serializedName: \"@search\\\\.score\",\n                required: true,\n                readOnly: true,\n                type: {\n                    name: \"Number\",\n                },\n            },\n            _rerankerScore: {\n                serializedName: \"@search\\\\.rerankerScore\",\n                readOnly: true,\n                nullable: true,\n                type: {\n                    name: \"Number\",\n                },\n            },\n            _highlights: {\n                serializedName: \"@search\\\\.highlights\",\n                readOnly: true,\n                type: {\n                    name: \"Dictionary\",\n                    value: {\n                        type: { name: \"Sequence\", element: { type: { name: \"String\" } } },\n                    },\n                },\n            },\n            _captions: {\n                serializedName: \"@search\\\\.captions\",\n                readOnly: true,\n                nullable: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"QueryCaptionResult\",\n                        },\n                    },\n                },\n            },\n        },\n    },\n};\nconst QueryCaptionResult = {\n    type: {\n        name: \"Composite\",\n        className: \"QueryCaptionResult\",\n        additionalProperties: { type: { name: \"Object\" } },\n        modelProperties: {\n            text: {\n                serializedName: \"text\",\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            highlights: {\n                serializedName: \"highlights\",\n                readOnly: true,\n                nullable: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n};\nconst SuggestDocumentsResult = {\n    type: {\n        name: \"Composite\",\n        className: \"SuggestDocumentsResult\",\n        modelProperties: {\n            results: {\n                serializedName: \"value\",\n                required: true,\n                readOnly: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"SuggestResult\",\n                        },\n                    },\n                },\n            },\n            coverage: {\n                serializedName: \"@search\\\\.coverage\",\n                readOnly: true,\n                type: {\n                    name: \"Number\",\n                },\n            },\n        },\n    },\n};\nconst SuggestResult = {\n    type: {\n        name: \"Composite\",\n        className: \"SuggestResult\",\n        additionalProperties: { type: { name: \"Object\" } },\n        modelProperties: {\n            _text: {\n                serializedName: \"@search\\\\.text\",\n                required: true,\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n};\nconst SuggestRequest = {\n    type: {\n        name: \"Composite\",\n        className: \"SuggestRequest\",\n        modelProperties: {\n            filter: {\n                serializedName: \"filter\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            useFuzzyMatching: {\n                serializedName: \"fuzzy\",\n                type: {\n                    name: \"Boolean\",\n                },\n            },\n            highlightPostTag: {\n                serializedName: \"highlightPostTag\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            highlightPreTag: {\n                serializedName: \"highlightPreTag\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            minimumCoverage: {\n                serializedName: \"minimumCoverage\",\n                type: {\n                    name: \"Number\",\n                },\n            },\n            orderBy: {\n                serializedName: \"orderby\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            searchText: {\n                serializedName: \"search\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            searchFields: {\n                serializedName: \"searchFields\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            select: {\n                serializedName: \"select\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            suggesterName: {\n                serializedName: \"suggesterName\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            top: {\n                serializedName: \"top\",\n                type: {\n                    name: \"Number\",\n                },\n            },\n        },\n    },\n};\nconst IndexBatch = {\n    type: {\n        name: \"Composite\",\n        className: \"IndexBatch\",\n        modelProperties: {\n            actions: {\n                serializedName: \"value\",\n                required: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"IndexAction\",\n                        },\n                    },\n                },\n            },\n        },\n    },\n};\nconst IndexAction = {\n    type: {\n        name: \"Composite\",\n        className: \"IndexAction\",\n        additionalProperties: { type: { name: \"Object\" } },\n        modelProperties: {\n            __actionType: {\n                serializedName: \"@search\\\\.action\",\n                required: true,\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"upload\", \"merge\", \"mergeOrUpload\", \"delete\"],\n                },\n            },\n        },\n    },\n};\nconst IndexDocumentsResult = {\n    type: {\n        name: \"Composite\",\n        className: \"IndexDocumentsResult\",\n        modelProperties: {\n            results: {\n                serializedName: \"value\",\n                required: true,\n                readOnly: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"IndexingResult\",\n                        },\n                    },\n                },\n            },\n        },\n    },\n};\nconst IndexingResult = {\n    type: {\n        name: \"Composite\",\n        className: \"IndexingResult\",\n        modelProperties: {\n            key: {\n                serializedName: \"key\",\n                required: true,\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            errorMessage: {\n                serializedName: \"errorMessage\",\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            succeeded: {\n                serializedName: \"status\",\n                required: true,\n                readOnly: true,\n                type: {\n                    name: \"Boolean\",\n                },\n            },\n            statusCode: {\n                serializedName: \"statusCode\",\n                required: true,\n                readOnly: true,\n                type: {\n                    name: \"Number\",\n                },\n            },\n        },\n    },\n};\nconst AutocompleteResult = {\n    type: {\n        name: \"Composite\",\n        className: \"AutocompleteResult\",\n        modelProperties: {\n            coverage: {\n                serializedName: \"@search\\\\.coverage\",\n                readOnly: true,\n                type: {\n                    name: \"Number\",\n                },\n            },\n            results: {\n                serializedName: \"value\",\n                required: true,\n                readOnly: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"AutocompleteItem\",\n                        },\n                    },\n                },\n            },\n        },\n    },\n};\nconst AutocompleteItem = {\n    type: {\n        name: \"Composite\",\n        className: \"AutocompleteItem\",\n        modelProperties: {\n            text: {\n                serializedName: \"text\",\n                required: true,\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            queryPlusText: {\n                serializedName: \"queryPlusText\",\n                required: true,\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n};\nconst AutocompleteRequest = {\n    type: {\n        name: \"Composite\",\n        className: \"AutocompleteRequest\",\n        modelProperties: {\n            searchText: {\n                serializedName: \"search\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            autocompleteMode: {\n                serializedName: \"autocompleteMode\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"oneTerm\", \"twoTerms\", \"oneTermWithContext\"],\n                },\n            },\n            filter: {\n                serializedName: \"filter\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            useFuzzyMatching: {\n                serializedName: \"fuzzy\",\n                type: {\n                    name: \"Boolean\",\n                },\n            },\n            highlightPostTag: {\n                serializedName: \"highlightPostTag\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            highlightPreTag: {\n                serializedName: \"highlightPreTag\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            minimumCoverage: {\n                serializedName: \"minimumCoverage\",\n                type: {\n                    name: \"Number\",\n                },\n            },\n            searchFields: {\n                serializedName: \"searchFields\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            suggesterName: {\n                serializedName: \"suggesterName\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            top: {\n                serializedName: \"top\",\n                type: {\n                    name: \"Number\",\n                },\n            },\n        },\n    },\n};\nconst VectorizedQuery = {\n    serializedName: \"vector\",\n    type: {\n        name: \"Composite\",\n        className: \"VectorizedQuery\",\n        uberParent: \"VectorQuery\",\n        polymorphicDiscriminator: VectorQuery.type.polymorphicDiscriminator,\n        modelProperties: Object.assign(Object.assign({}, VectorQuery.type.modelProperties), { vector: {\n                serializedName: \"vector\",\n                required: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Number\",\n                        },\n                    },\n                },\n            } }),\n    },\n};\nconst VectorizableTextQuery = {\n    serializedName: \"text\",\n    type: {\n        name: \"Composite\",\n        className: \"VectorizableTextQuery\",\n        uberParent: \"VectorQuery\",\n        polymorphicDiscriminator: VectorQuery.type.polymorphicDiscriminator,\n        modelProperties: Object.assign(Object.assign({}, VectorQuery.type.modelProperties), { text: {\n                serializedName: \"text\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            } }),\n    },\n};\nlet discriminators = {\n    VectorQuery: VectorQuery,\n    \"VectorQuery.vector\": VectorizedQuery,\n    \"VectorQuery.text\": VectorizableTextQuery,\n};\n//# sourceMappingURL=mappers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/generated/data/models/mappers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/generated/data/models/parameters.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/generated/data/models/parameters.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   accept: () => (/* binding */ accept),\n/* harmony export */   answers: () => (/* binding */ answers),\n/* harmony export */   apiVersion: () => (/* binding */ apiVersion),\n/* harmony export */   autocompleteMode: () => (/* binding */ autocompleteMode),\n/* harmony export */   autocompleteRequest: () => (/* binding */ autocompleteRequest),\n/* harmony export */   batch: () => (/* binding */ batch),\n/* harmony export */   captions: () => (/* binding */ captions),\n/* harmony export */   contentType: () => (/* binding */ contentType),\n/* harmony export */   endpoint: () => (/* binding */ endpoint),\n/* harmony export */   facets: () => (/* binding */ facets),\n/* harmony export */   filter: () => (/* binding */ filter),\n/* harmony export */   filter1: () => (/* binding */ filter1),\n/* harmony export */   filter2: () => (/* binding */ filter2),\n/* harmony export */   highlightFields: () => (/* binding */ highlightFields),\n/* harmony export */   highlightPostTag: () => (/* binding */ highlightPostTag),\n/* harmony export */   highlightPostTag1: () => (/* binding */ highlightPostTag1),\n/* harmony export */   highlightPostTag2: () => (/* binding */ highlightPostTag2),\n/* harmony export */   highlightPreTag: () => (/* binding */ highlightPreTag),\n/* harmony export */   highlightPreTag1: () => (/* binding */ highlightPreTag1),\n/* harmony export */   highlightPreTag2: () => (/* binding */ highlightPreTag2),\n/* harmony export */   includeTotalResultCount: () => (/* binding */ includeTotalResultCount),\n/* harmony export */   indexName: () => (/* binding */ indexName),\n/* harmony export */   key: () => (/* binding */ key),\n/* harmony export */   minimumCoverage: () => (/* binding */ minimumCoverage),\n/* harmony export */   minimumCoverage1: () => (/* binding */ minimumCoverage1),\n/* harmony export */   minimumCoverage2: () => (/* binding */ minimumCoverage2),\n/* harmony export */   orderBy: () => (/* binding */ orderBy),\n/* harmony export */   orderBy1: () => (/* binding */ orderBy1),\n/* harmony export */   queryType: () => (/* binding */ queryType),\n/* harmony export */   scoringParameters: () => (/* binding */ scoringParameters),\n/* harmony export */   scoringProfile: () => (/* binding */ scoringProfile),\n/* harmony export */   scoringStatistics: () => (/* binding */ scoringStatistics),\n/* harmony export */   searchFields: () => (/* binding */ searchFields),\n/* harmony export */   searchFields1: () => (/* binding */ searchFields1),\n/* harmony export */   searchFields2: () => (/* binding */ searchFields2),\n/* harmony export */   searchMode: () => (/* binding */ searchMode),\n/* harmony export */   searchRequest: () => (/* binding */ searchRequest),\n/* harmony export */   searchText: () => (/* binding */ searchText),\n/* harmony export */   searchText1: () => (/* binding */ searchText1),\n/* harmony export */   select: () => (/* binding */ select),\n/* harmony export */   select1: () => (/* binding */ select1),\n/* harmony export */   selectedFields: () => (/* binding */ selectedFields),\n/* harmony export */   semanticConfiguration: () => (/* binding */ semanticConfiguration),\n/* harmony export */   semanticErrorHandling: () => (/* binding */ semanticErrorHandling),\n/* harmony export */   semanticMaxWaitInMilliseconds: () => (/* binding */ semanticMaxWaitInMilliseconds),\n/* harmony export */   semanticQuery: () => (/* binding */ semanticQuery),\n/* harmony export */   sessionId: () => (/* binding */ sessionId),\n/* harmony export */   skip: () => (/* binding */ skip),\n/* harmony export */   suggestRequest: () => (/* binding */ suggestRequest),\n/* harmony export */   suggesterName: () => (/* binding */ suggesterName),\n/* harmony export */   top: () => (/* binding */ top),\n/* harmony export */   top1: () => (/* binding */ top1),\n/* harmony export */   top2: () => (/* binding */ top2),\n/* harmony export */   useFuzzyMatching: () => (/* binding */ useFuzzyMatching),\n/* harmony export */   useFuzzyMatching1: () => (/* binding */ useFuzzyMatching1)\n/* harmony export */ });\n/* harmony import */ var _models_mappers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../models/mappers */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/generated/data/models/mappers.js\");\n/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nconst accept = {\n    parameterPath: \"accept\",\n    mapper: {\n        defaultValue: \"application/json\",\n        isConstant: true,\n        serializedName: \"Accept\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst endpoint = {\n    parameterPath: \"endpoint\",\n    mapper: {\n        serializedName: \"endpoint\",\n        required: true,\n        type: {\n            name: \"String\",\n        },\n    },\n    skipEncoding: true,\n};\nconst indexName = {\n    parameterPath: \"indexName\",\n    mapper: {\n        serializedName: \"indexName\",\n        required: true,\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst apiVersion = {\n    parameterPath: \"apiVersion\",\n    mapper: {\n        serializedName: \"api-version\",\n        required: true,\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst searchText = {\n    parameterPath: [\"options\", \"searchText\"],\n    mapper: {\n        serializedName: \"search\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst includeTotalResultCount = {\n    parameterPath: [\"options\", \"searchOptions\", \"includeTotalResultCount\"],\n    mapper: {\n        serializedName: \"$count\",\n        type: {\n            name: \"Boolean\",\n        },\n    },\n};\nconst facets = {\n    parameterPath: [\"options\", \"searchOptions\", \"facets\"],\n    mapper: {\n        serializedName: \"facet\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n    collectionFormat: \"Multi\",\n};\nconst filter = {\n    parameterPath: [\"options\", \"searchOptions\", \"filter\"],\n    mapper: {\n        serializedName: \"$filter\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst highlightFields = {\n    parameterPath: [\"options\", \"searchOptions\", \"highlightFields\"],\n    mapper: {\n        serializedName: \"highlight\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n    collectionFormat: \"CSV\",\n};\nconst highlightPostTag = {\n    parameterPath: [\"options\", \"searchOptions\", \"highlightPostTag\"],\n    mapper: {\n        serializedName: \"highlightPostTag\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst highlightPreTag = {\n    parameterPath: [\"options\", \"searchOptions\", \"highlightPreTag\"],\n    mapper: {\n        serializedName: \"highlightPreTag\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst minimumCoverage = {\n    parameterPath: [\"options\", \"searchOptions\", \"minimumCoverage\"],\n    mapper: {\n        serializedName: \"minimumCoverage\",\n        type: {\n            name: \"Number\",\n        },\n    },\n};\nconst orderBy = {\n    parameterPath: [\"options\", \"searchOptions\", \"orderBy\"],\n    mapper: {\n        serializedName: \"$orderby\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n    collectionFormat: \"CSV\",\n};\nconst queryType = {\n    parameterPath: [\"options\", \"searchOptions\", \"queryType\"],\n    mapper: {\n        serializedName: \"queryType\",\n        type: {\n            name: \"Enum\",\n            allowedValues: [\"simple\", \"full\", \"semantic\"],\n        },\n    },\n};\nconst scoringParameters = {\n    parameterPath: [\"options\", \"searchOptions\", \"scoringParameters\"],\n    mapper: {\n        serializedName: \"scoringParameter\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n    collectionFormat: \"Multi\",\n};\nconst scoringProfile = {\n    parameterPath: [\"options\", \"searchOptions\", \"scoringProfile\"],\n    mapper: {\n        serializedName: \"scoringProfile\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst searchFields = {\n    parameterPath: [\"options\", \"searchOptions\", \"searchFields\"],\n    mapper: {\n        serializedName: \"searchFields\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n    collectionFormat: \"CSV\",\n};\nconst searchMode = {\n    parameterPath: [\"options\", \"searchOptions\", \"searchMode\"],\n    mapper: {\n        serializedName: \"searchMode\",\n        type: {\n            name: \"Enum\",\n            allowedValues: [\"any\", \"all\"],\n        },\n    },\n};\nconst scoringStatistics = {\n    parameterPath: [\"options\", \"searchOptions\", \"scoringStatistics\"],\n    mapper: {\n        serializedName: \"scoringStatistics\",\n        type: {\n            name: \"Enum\",\n            allowedValues: [\"local\", \"global\"],\n        },\n    },\n};\nconst sessionId = {\n    parameterPath: [\"options\", \"searchOptions\", \"sessionId\"],\n    mapper: {\n        serializedName: \"sessionId\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst select = {\n    parameterPath: [\"options\", \"searchOptions\", \"select\"],\n    mapper: {\n        serializedName: \"$select\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n    collectionFormat: \"CSV\",\n};\nconst skip = {\n    parameterPath: [\"options\", \"searchOptions\", \"skip\"],\n    mapper: {\n        serializedName: \"$skip\",\n        type: {\n            name: \"Number\",\n        },\n    },\n};\nconst top = {\n    parameterPath: [\"options\", \"searchOptions\", \"top\"],\n    mapper: {\n        serializedName: \"$top\",\n        type: {\n            name: \"Number\",\n        },\n    },\n};\nconst semanticConfiguration = {\n    parameterPath: [\"options\", \"searchOptions\", \"semanticConfiguration\"],\n    mapper: {\n        serializedName: \"semanticConfiguration\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst semanticErrorHandling = {\n    parameterPath: [\"options\", \"searchOptions\", \"semanticErrorHandling\"],\n    mapper: {\n        serializedName: \"semanticErrorHandling\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst semanticMaxWaitInMilliseconds = {\n    parameterPath: [\"options\", \"searchOptions\", \"semanticMaxWaitInMilliseconds\"],\n    mapper: {\n        constraints: {\n            InclusiveMinimum: 700,\n        },\n        serializedName: \"semanticMaxWaitInMilliseconds\",\n        type: {\n            name: \"Number\",\n        },\n    },\n};\nconst answers = {\n    parameterPath: [\"options\", \"searchOptions\", \"answers\"],\n    mapper: {\n        serializedName: \"answers\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst captions = {\n    parameterPath: [\"options\", \"searchOptions\", \"captions\"],\n    mapper: {\n        serializedName: \"captions\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst semanticQuery = {\n    parameterPath: [\"options\", \"searchOptions\", \"semanticQuery\"],\n    mapper: {\n        serializedName: \"semanticQuery\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst contentType = {\n    parameterPath: [\"options\", \"contentType\"],\n    mapper: {\n        defaultValue: \"application/json\",\n        isConstant: true,\n        serializedName: \"Content-Type\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst searchRequest = {\n    parameterPath: \"searchRequest\",\n    mapper: _models_mappers__WEBPACK_IMPORTED_MODULE_0__.SearchRequest,\n};\nconst key = {\n    parameterPath: \"key\",\n    mapper: {\n        serializedName: \"key\",\n        required: true,\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst selectedFields = {\n    parameterPath: [\"options\", \"selectedFields\"],\n    mapper: {\n        serializedName: \"$select\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n    collectionFormat: \"CSV\",\n};\nconst searchText1 = {\n    parameterPath: \"searchText\",\n    mapper: {\n        serializedName: \"search\",\n        required: true,\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst suggesterName = {\n    parameterPath: \"suggesterName\",\n    mapper: {\n        serializedName: \"suggesterName\",\n        required: true,\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst filter1 = {\n    parameterPath: [\"options\", \"suggestOptions\", \"filter\"],\n    mapper: {\n        serializedName: \"$filter\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst useFuzzyMatching = {\n    parameterPath: [\"options\", \"suggestOptions\", \"useFuzzyMatching\"],\n    mapper: {\n        serializedName: \"fuzzy\",\n        type: {\n            name: \"Boolean\",\n        },\n    },\n};\nconst highlightPostTag1 = {\n    parameterPath: [\"options\", \"suggestOptions\", \"highlightPostTag\"],\n    mapper: {\n        serializedName: \"highlightPostTag\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst highlightPreTag1 = {\n    parameterPath: [\"options\", \"suggestOptions\", \"highlightPreTag\"],\n    mapper: {\n        serializedName: \"highlightPreTag\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst minimumCoverage1 = {\n    parameterPath: [\"options\", \"suggestOptions\", \"minimumCoverage\"],\n    mapper: {\n        serializedName: \"minimumCoverage\",\n        type: {\n            name: \"Number\",\n        },\n    },\n};\nconst orderBy1 = {\n    parameterPath: [\"options\", \"suggestOptions\", \"orderBy\"],\n    mapper: {\n        serializedName: \"$orderby\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n    collectionFormat: \"CSV\",\n};\nconst searchFields1 = {\n    parameterPath: [\"options\", \"suggestOptions\", \"searchFields\"],\n    mapper: {\n        serializedName: \"searchFields\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n    collectionFormat: \"CSV\",\n};\nconst select1 = {\n    parameterPath: [\"options\", \"suggestOptions\", \"select\"],\n    mapper: {\n        serializedName: \"$select\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n    collectionFormat: \"CSV\",\n};\nconst top1 = {\n    parameterPath: [\"options\", \"suggestOptions\", \"top\"],\n    mapper: {\n        serializedName: \"$top\",\n        type: {\n            name: \"Number\",\n        },\n    },\n};\nconst suggestRequest = {\n    parameterPath: \"suggestRequest\",\n    mapper: _models_mappers__WEBPACK_IMPORTED_MODULE_0__.SuggestRequest,\n};\nconst batch = {\n    parameterPath: \"batch\",\n    mapper: _models_mappers__WEBPACK_IMPORTED_MODULE_0__.IndexBatch,\n};\nconst autocompleteMode = {\n    parameterPath: [\"options\", \"autocompleteOptions\", \"autocompleteMode\"],\n    mapper: {\n        serializedName: \"autocompleteMode\",\n        type: {\n            name: \"Enum\",\n            allowedValues: [\"oneTerm\", \"twoTerms\", \"oneTermWithContext\"],\n        },\n    },\n};\nconst filter2 = {\n    parameterPath: [\"options\", \"autocompleteOptions\", \"filter\"],\n    mapper: {\n        serializedName: \"$filter\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst useFuzzyMatching1 = {\n    parameterPath: [\"options\", \"autocompleteOptions\", \"useFuzzyMatching\"],\n    mapper: {\n        serializedName: \"fuzzy\",\n        type: {\n            name: \"Boolean\",\n        },\n    },\n};\nconst highlightPostTag2 = {\n    parameterPath: [\"options\", \"autocompleteOptions\", \"highlightPostTag\"],\n    mapper: {\n        serializedName: \"highlightPostTag\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst highlightPreTag2 = {\n    parameterPath: [\"options\", \"autocompleteOptions\", \"highlightPreTag\"],\n    mapper: {\n        serializedName: \"highlightPreTag\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst minimumCoverage2 = {\n    parameterPath: [\"options\", \"autocompleteOptions\", \"minimumCoverage\"],\n    mapper: {\n        serializedName: \"minimumCoverage\",\n        type: {\n            name: \"Number\",\n        },\n    },\n};\nconst searchFields2 = {\n    parameterPath: [\"options\", \"autocompleteOptions\", \"searchFields\"],\n    mapper: {\n        serializedName: \"searchFields\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n    collectionFormat: \"CSV\",\n};\nconst top2 = {\n    parameterPath: [\"options\", \"autocompleteOptions\", \"top\"],\n    mapper: {\n        serializedName: \"$top\",\n        type: {\n            name: \"Number\",\n        },\n    },\n};\nconst autocompleteRequest = {\n    parameterPath: \"autocompleteRequest\",\n    mapper: _models_mappers__WEBPACK_IMPORTED_MODULE_0__.AutocompleteRequest,\n};\n//# sourceMappingURL=parameters.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/generated/data/models/parameters.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/generated/data/operations/documents.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/generated/data/operations/documents.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DocumentsImpl: () => (/* binding */ DocumentsImpl)\n/* harmony export */ });\n/* harmony import */ var _azure_core_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-client */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/index.js\");\n/* harmony import */ var _models_mappers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/mappers */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/generated/data/models/mappers.js\");\n/* harmony import */ var _models_parameters__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../models/parameters */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/generated/data/models/parameters.js\");\n/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\n\n\n/** Class containing Documents operations. */\nclass DocumentsImpl {\n    /**\n     * Initialize a new instance of the class Documents class.\n     * @param client Reference to the service client\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * Queries the number of documents in the index.\n     * @param options The options parameters.\n     */\n    count(options) {\n        return this.client.sendOperationRequest({ options }, countOperationSpec);\n    }\n    /**\n     * Searches for documents in the index.\n     * @param options The options parameters.\n     */\n    searchGet(options) {\n        return this.client.sendOperationRequest({ options }, searchGetOperationSpec);\n    }\n    /**\n     * Searches for documents in the index.\n     * @param searchRequest The definition of the Search request.\n     * @param options The options parameters.\n     */\n    searchPost(searchRequest, options) {\n        return this.client.sendOperationRequest({ searchRequest, options }, searchPostOperationSpec);\n    }\n    /**\n     * Retrieves a document from the index.\n     * @param key The key of the document to retrieve.\n     * @param options The options parameters.\n     */\n    get(key, options) {\n        return this.client.sendOperationRequest({ key, options }, getOperationSpec);\n    }\n    /**\n     * Suggests documents in the index that match the given partial query text.\n     * @param searchText The search text to use to suggest documents. Must be at least 1 character, and no\n     *                   more than 100 characters.\n     * @param suggesterName The name of the suggester as specified in the suggesters collection that's part\n     *                      of the index definition.\n     * @param options The options parameters.\n     */\n    suggestGet(searchText, suggesterName, options) {\n        return this.client.sendOperationRequest({ searchText, suggesterName, options }, suggestGetOperationSpec);\n    }\n    /**\n     * Suggests documents in the index that match the given partial query text.\n     * @param suggestRequest The Suggest request.\n     * @param options The options parameters.\n     */\n    suggestPost(suggestRequest, options) {\n        return this.client.sendOperationRequest({ suggestRequest, options }, suggestPostOperationSpec);\n    }\n    /**\n     * Sends a batch of document write actions to the index.\n     * @param batch The batch of index actions.\n     * @param options The options parameters.\n     */\n    index(batch, options) {\n        return this.client.sendOperationRequest({ batch, options }, indexOperationSpec);\n    }\n    /**\n     * Autocompletes incomplete query terms based on input text and matching terms in the index.\n     * @param searchText The incomplete term which should be auto-completed.\n     * @param suggesterName The name of the suggester as specified in the suggesters collection that's part\n     *                      of the index definition.\n     * @param options The options parameters.\n     */\n    autocompleteGet(searchText, suggesterName, options) {\n        return this.client.sendOperationRequest({ searchText, suggesterName, options }, autocompleteGetOperationSpec);\n    }\n    /**\n     * Autocompletes incomplete query terms based on input text and matching terms in the index.\n     * @param autocompleteRequest The definition of the Autocomplete request.\n     * @param options The options parameters.\n     */\n    autocompletePost(autocompleteRequest, options) {\n        return this.client.sendOperationRequest({ autocompleteRequest, options }, autocompletePostOperationSpec);\n    }\n}\n// Operation Specifications\nconst serializer = _azure_core_client__WEBPACK_IMPORTED_MODULE_0__.createSerializer(_models_mappers__WEBPACK_IMPORTED_MODULE_1__, /* isXml */ false);\nconst countOperationSpec = {\n    path: \"/docs/$count\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: { type: { name: \"Number\" } },\n        },\n        default: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse,\n        },\n    },\n    queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.indexName],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept],\n    serializer,\n};\nconst searchGetOperationSpec = {\n    path: \"/docs\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.SearchDocumentsResult,\n        },\n        default: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse,\n        },\n    },\n    queryParameters: [\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.searchText,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.includeTotalResultCount,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.facets,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.filter,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.highlightFields,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.highlightPostTag,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.highlightPreTag,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.minimumCoverage,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.orderBy,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.queryType,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.scoringParameters,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.scoringProfile,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.searchFields,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.searchMode,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.scoringStatistics,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.sessionId,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.select,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.skip,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.top,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.semanticConfiguration,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.semanticErrorHandling,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.semanticMaxWaitInMilliseconds,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.answers,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.captions,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.semanticQuery,\n    ],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.indexName],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept],\n    serializer,\n};\nconst searchPostOperationSpec = {\n    path: \"/docs/search.post.search\",\n    httpMethod: \"POST\",\n    responses: {\n        200: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.SearchDocumentsResult,\n        },\n        default: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse,\n        },\n    },\n    requestBody: _models_parameters__WEBPACK_IMPORTED_MODULE_2__.searchRequest,\n    queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.indexName],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.contentType],\n    mediaType: \"json\",\n    serializer,\n};\nconst getOperationSpec = {\n    path: \"/docs('{key}')\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: {\n                type: { name: \"Dictionary\", value: { type: { name: \"any\" } } },\n            },\n        },\n        default: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse,\n        },\n    },\n    queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.selectedFields],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.indexName, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.key],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept],\n    serializer,\n};\nconst suggestGetOperationSpec = {\n    path: \"/docs/search.suggest\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.SuggestDocumentsResult,\n        },\n        default: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse,\n        },\n    },\n    queryParameters: [\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.searchText1,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.suggesterName,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.filter1,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.useFuzzyMatching,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.highlightPostTag1,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.highlightPreTag1,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.minimumCoverage1,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.orderBy1,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.searchFields1,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.select1,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.top1,\n    ],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.indexName],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept],\n    serializer,\n};\nconst suggestPostOperationSpec = {\n    path: \"/docs/search.post.suggest\",\n    httpMethod: \"POST\",\n    responses: {\n        200: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.SuggestDocumentsResult,\n        },\n        default: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse,\n        },\n    },\n    requestBody: _models_parameters__WEBPACK_IMPORTED_MODULE_2__.suggestRequest,\n    queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.indexName],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.contentType],\n    mediaType: \"json\",\n    serializer,\n};\nconst indexOperationSpec = {\n    path: \"/docs/search.index\",\n    httpMethod: \"POST\",\n    responses: {\n        200: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.IndexDocumentsResult,\n        },\n        207: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.IndexDocumentsResult,\n        },\n        default: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse,\n        },\n    },\n    requestBody: _models_parameters__WEBPACK_IMPORTED_MODULE_2__.batch,\n    queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.indexName],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.contentType],\n    mediaType: \"json\",\n    serializer,\n};\nconst autocompleteGetOperationSpec = {\n    path: \"/docs/search.autocomplete\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.AutocompleteResult,\n        },\n        default: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse,\n        },\n    },\n    queryParameters: [\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.searchText1,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.suggesterName,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.autocompleteMode,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.filter2,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.useFuzzyMatching1,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.highlightPostTag2,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.highlightPreTag2,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.minimumCoverage2,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.searchFields2,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.top2,\n    ],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.indexName],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept],\n    serializer,\n};\nconst autocompletePostOperationSpec = {\n    path: \"/docs/search.post.autocomplete\",\n    httpMethod: \"POST\",\n    responses: {\n        200: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.AutocompleteResult,\n        },\n        default: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse,\n        },\n    },\n    requestBody: _models_parameters__WEBPACK_IMPORTED_MODULE_2__.autocompleteRequest,\n    queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.indexName],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.contentType],\n    mediaType: \"json\",\n    serializer,\n};\n//# sourceMappingURL=documents.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/generated/data/operations/documents.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/generated/data/searchClient.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/generated/data/searchClient.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SearchClient: () => (/* binding */ SearchClient)\n/* harmony export */ });\n/* harmony import */ var _azure_core_http_compat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-http-compat */ \"(ssr)/./node_modules/@azure/core-http-compat/dist/esm/index.js\");\n/* harmony import */ var _operations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./operations */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/generated/data/operations/documents.js\");\n/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\n\n/** @internal */\nclass SearchClient extends _azure_core_http_compat__WEBPACK_IMPORTED_MODULE_0__.ExtendedServiceClient {\n    /**\n     * Initializes a new instance of the SearchClient class.\n     * @param endpoint The endpoint URL of the search service.\n     * @param indexName The name of the index.\n     * @param apiVersion Api Version\n     * @param options The parameter options\n     */\n    constructor(endpoint, indexName, apiVersion, options) {\n        var _a, _b;\n        if (endpoint === undefined) {\n            throw new Error(\"'endpoint' cannot be null\");\n        }\n        if (indexName === undefined) {\n            throw new Error(\"'indexName' cannot be null\");\n        }\n        if (apiVersion === undefined) {\n            throw new Error(\"'apiVersion' cannot be null\");\n        }\n        // Initializing default values for options\n        if (!options) {\n            options = {};\n        }\n        const defaults = {\n            requestContentType: \"application/json; charset=utf-8\",\n        };\n        const packageDetails = `azsdk-js-search-documents/12.1.0`;\n        const userAgentPrefix = options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n            ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n            : `${packageDetails}`;\n        const optionsWithDefaults = Object.assign(Object.assign(Object.assign({}, defaults), options), { userAgentOptions: {\n                userAgentPrefix,\n            }, endpoint: (_b = (_a = options.endpoint) !== null && _a !== void 0 ? _a : options.baseUri) !== null && _b !== void 0 ? _b : \"{endpoint}/indexes('{indexName}')\" });\n        super(optionsWithDefaults);\n        // Parameter assignments\n        this.endpoint = endpoint;\n        this.indexName = indexName;\n        this.apiVersion = apiVersion;\n        this.documents = new _operations__WEBPACK_IMPORTED_MODULE_1__.DocumentsImpl(this);\n        this.addCustomApiVersionPolicy(apiVersion);\n    }\n    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n    addCustomApiVersionPolicy(apiVersion) {\n        if (!apiVersion) {\n            return;\n        }\n        const apiVersionPolicy = {\n            name: \"CustomApiVersionPolicy\",\n            async sendRequest(request, next) {\n                const param = request.url.split(\"?\");\n                if (param.length > 1) {\n                    const newParams = param[1].split(\"&\").map((item) => {\n                        if (item.indexOf(\"api-version\") > -1) {\n                            return \"api-version=\" + apiVersion;\n                        }\n                        else {\n                            return item;\n                        }\n                    });\n                    request.url = param[0] + \"?\" + newParams.join(\"&\");\n                }\n                return next(request);\n            },\n        };\n        this.pipeline.addPolicy(apiVersionPolicy);\n    }\n}\n//# sourceMappingURL=searchClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL3NlYXJjaC1kb2N1bWVudHMvZGlzdC1lc20vc3JjL2dlbmVyYXRlZC9kYXRhL3NlYXJjaENsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUMwRDtBQUNiO0FBQzdDO0FBQ08sMkJBQTJCLDBFQUFvQztBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1EO0FBQ25EO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiwwQ0FBMEMsRUFBRSxlQUFlO0FBQzVFLGlCQUFpQixlQUFlO0FBQ2hDLGdGQUFnRix5QkFBeUI7QUFDekc7QUFDQSxhQUFhLCtIQUErSCxTQUFTLFdBQVcsVUFBVSxLQUFLO0FBQy9LO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsc0RBQWE7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcc2VhcmNoLWRvY3VtZW50c1xcZGlzdC1lc21cXHNyY1xcZ2VuZXJhdGVkXFxkYXRhXFxzZWFyY2hDbGllbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICpcbiAqIENvZGUgZ2VuZXJhdGVkIGJ5IE1pY3Jvc29mdCAoUikgQXV0b1Jlc3QgQ29kZSBHZW5lcmF0b3IuXG4gKiBDaGFuZ2VzIG1heSBjYXVzZSBpbmNvcnJlY3QgYmVoYXZpb3IgYW5kIHdpbGwgYmUgbG9zdCBpZiB0aGUgY29kZSBpcyByZWdlbmVyYXRlZC5cbiAqL1xuaW1wb3J0ICogYXMgY29yZUh0dHBDb21wYXQgZnJvbSBcIkBhenVyZS9jb3JlLWh0dHAtY29tcGF0XCI7XG5pbXBvcnQgeyBEb2N1bWVudHNJbXBsIH0gZnJvbSBcIi4vb3BlcmF0aW9uc1wiO1xuLyoqIEBpbnRlcm5hbCAqL1xuZXhwb3J0IGNsYXNzIFNlYXJjaENsaWVudCBleHRlbmRzIGNvcmVIdHRwQ29tcGF0LkV4dGVuZGVkU2VydmljZUNsaWVudCB7XG4gICAgLyoqXG4gICAgICogSW5pdGlhbGl6ZXMgYSBuZXcgaW5zdGFuY2Ugb2YgdGhlIFNlYXJjaENsaWVudCBjbGFzcy5cbiAgICAgKiBAcGFyYW0gZW5kcG9pbnQgVGhlIGVuZHBvaW50IFVSTCBvZiB0aGUgc2VhcmNoIHNlcnZpY2UuXG4gICAgICogQHBhcmFtIGluZGV4TmFtZSBUaGUgbmFtZSBvZiB0aGUgaW5kZXguXG4gICAgICogQHBhcmFtIGFwaVZlcnNpb24gQXBpIFZlcnNpb25cbiAgICAgKiBAcGFyYW0gb3B0aW9ucyBUaGUgcGFyYW1ldGVyIG9wdGlvbnNcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihlbmRwb2ludCwgaW5kZXhOYW1lLCBhcGlWZXJzaW9uLCBvcHRpb25zKSB7XG4gICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgIGlmIChlbmRwb2ludCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCInZW5kcG9pbnQnIGNhbm5vdCBiZSBudWxsXCIpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpbmRleE5hbWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiJ2luZGV4TmFtZScgY2Fubm90IGJlIG51bGxcIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFwaVZlcnNpb24gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiJ2FwaVZlcnNpb24nIGNhbm5vdCBiZSBudWxsXCIpO1xuICAgICAgICB9XG4gICAgICAgIC8vIEluaXRpYWxpemluZyBkZWZhdWx0IHZhbHVlcyBmb3Igb3B0aW9uc1xuICAgICAgICBpZiAoIW9wdGlvbnMpIHtcbiAgICAgICAgICAgIG9wdGlvbnMgPSB7fTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBkZWZhdWx0cyA9IHtcbiAgICAgICAgICAgIHJlcXVlc3RDb250ZW50VHlwZTogXCJhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04XCIsXG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHBhY2thZ2VEZXRhaWxzID0gYGF6c2RrLWpzLXNlYXJjaC1kb2N1bWVudHMvMTIuMS4wYDtcbiAgICAgICAgY29uc3QgdXNlckFnZW50UHJlZml4ID0gb3B0aW9ucy51c2VyQWdlbnRPcHRpb25zICYmIG9wdGlvbnMudXNlckFnZW50T3B0aW9ucy51c2VyQWdlbnRQcmVmaXhcbiAgICAgICAgICAgID8gYCR7b3B0aW9ucy51c2VyQWdlbnRPcHRpb25zLnVzZXJBZ2VudFByZWZpeH0gJHtwYWNrYWdlRGV0YWlsc31gXG4gICAgICAgICAgICA6IGAke3BhY2thZ2VEZXRhaWxzfWA7XG4gICAgICAgIGNvbnN0IG9wdGlvbnNXaXRoRGVmYXVsdHMgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgZGVmYXVsdHMpLCBvcHRpb25zKSwgeyB1c2VyQWdlbnRPcHRpb25zOiB7XG4gICAgICAgICAgICAgICAgdXNlckFnZW50UHJlZml4LFxuICAgICAgICAgICAgfSwgZW5kcG9pbnQ6IChfYiA9IChfYSA9IG9wdGlvbnMuZW5kcG9pbnQpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IG9wdGlvbnMuYmFzZVVyaSkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogXCJ7ZW5kcG9pbnR9L2luZGV4ZXMoJ3tpbmRleE5hbWV9JylcIiB9KTtcbiAgICAgICAgc3VwZXIob3B0aW9uc1dpdGhEZWZhdWx0cyk7XG4gICAgICAgIC8vIFBhcmFtZXRlciBhc3NpZ25tZW50c1xuICAgICAgICB0aGlzLmVuZHBvaW50ID0gZW5kcG9pbnQ7XG4gICAgICAgIHRoaXMuaW5kZXhOYW1lID0gaW5kZXhOYW1lO1xuICAgICAgICB0aGlzLmFwaVZlcnNpb24gPSBhcGlWZXJzaW9uO1xuICAgICAgICB0aGlzLmRvY3VtZW50cyA9IG5ldyBEb2N1bWVudHNJbXBsKHRoaXMpO1xuICAgICAgICB0aGlzLmFkZEN1c3RvbUFwaVZlcnNpb25Qb2xpY3koYXBpVmVyc2lvbik7XG4gICAgfVxuICAgIC8qKiBBIGZ1bmN0aW9uIHRoYXQgYWRkcyBhIHBvbGljeSB0aGF0IHNldHMgdGhlIGFwaS12ZXJzaW9uIChvciBlcXVpdmFsZW50KSB0byByZWZsZWN0IHRoZSBsaWJyYXJ5IHZlcnNpb24uICovXG4gICAgYWRkQ3VzdG9tQXBpVmVyc2lvblBvbGljeShhcGlWZXJzaW9uKSB7XG4gICAgICAgIGlmICghYXBpVmVyc2lvbikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGFwaVZlcnNpb25Qb2xpY3kgPSB7XG4gICAgICAgICAgICBuYW1lOiBcIkN1c3RvbUFwaVZlcnNpb25Qb2xpY3lcIixcbiAgICAgICAgICAgIGFzeW5jIHNlbmRSZXF1ZXN0KHJlcXVlc3QsIG5leHQpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBwYXJhbSA9IHJlcXVlc3QudXJsLnNwbGl0KFwiP1wiKTtcbiAgICAgICAgICAgICAgICBpZiAocGFyYW0ubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdQYXJhbXMgPSBwYXJhbVsxXS5zcGxpdChcIiZcIikubWFwKChpdGVtKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXRlbS5pbmRleE9mKFwiYXBpLXZlcnNpb25cIikgPiAtMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBcImFwaS12ZXJzaW9uPVwiICsgYXBpVmVyc2lvbjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpdGVtO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgcmVxdWVzdC51cmwgPSBwYXJhbVswXSArIFwiP1wiICsgbmV3UGFyYW1zLmpvaW4oXCImXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gbmV4dChyZXF1ZXN0KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMucGlwZWxpbmUuYWRkUG9saWN5KGFwaVZlcnNpb25Qb2xpY3kpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlYXJjaENsaWVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/generated/data/searchClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/geographyPoint.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/geographyPoint.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GeographyPoint)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nconst WorldGeodeticSystem1984 = \"EPSG:4326\"; // See https://epsg.io/4326\n/**\n * Represents a geographic point in global coordinates.\n */\nclass GeographyPoint {\n    /**\n     * Constructs a new instance of GeographyPoint given\n     * the specified coordinates.\n     * @param geographyPoint - object with longitude and latitude values in decimal\n     */\n    constructor(geographyPoint) {\n        this.longitude = geographyPoint.longitude;\n        this.latitude = geographyPoint.latitude;\n    }\n    /**\n     * Used to serialize to a GeoJSON Point.\n     */\n    toJSON() {\n        return {\n            type: \"Point\",\n            coordinates: [this.longitude, this.latitude],\n            crs: { type: \"name\", properties: { name: WorldGeodeticSystem1984 } },\n        };\n    }\n}\n//# sourceMappingURL=geographyPoint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL3NlYXJjaC1kb2N1bWVudHMvZGlzdC1lc20vc3JjL2dlb2dyYXBoeVBvaW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsNEJBQTRCLGlDQUFpQztBQUNoRjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmUgLSBIZWxsbyBTY3JpcHQgQUlcXGxpZmVBZ2VudFxcdm9pY2UtbGl2ZS1hZ2VudFxcc2FtcGxlc1xccmVhY3RcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxzZWFyY2gtZG9jdW1lbnRzXFxkaXN0LWVzbVxcc3JjXFxnZW9ncmFwaHlQb2ludC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmNvbnN0IFdvcmxkR2VvZGV0aWNTeXN0ZW0xOTg0ID0gXCJFUFNHOjQzMjZcIjsgLy8gU2VlIGh0dHBzOi8vZXBzZy5pby80MzI2XG4vKipcbiAqIFJlcHJlc2VudHMgYSBnZW9ncmFwaGljIHBvaW50IGluIGdsb2JhbCBjb29yZGluYXRlcy5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2VvZ3JhcGh5UG9pbnQge1xuICAgIC8qKlxuICAgICAqIENvbnN0cnVjdHMgYSBuZXcgaW5zdGFuY2Ugb2YgR2VvZ3JhcGh5UG9pbnQgZ2l2ZW5cbiAgICAgKiB0aGUgc3BlY2lmaWVkIGNvb3JkaW5hdGVzLlxuICAgICAqIEBwYXJhbSBnZW9ncmFwaHlQb2ludCAtIG9iamVjdCB3aXRoIGxvbmdpdHVkZSBhbmQgbGF0aXR1ZGUgdmFsdWVzIGluIGRlY2ltYWxcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihnZW9ncmFwaHlQb2ludCkge1xuICAgICAgICB0aGlzLmxvbmdpdHVkZSA9IGdlb2dyYXBoeVBvaW50LmxvbmdpdHVkZTtcbiAgICAgICAgdGhpcy5sYXRpdHVkZSA9IGdlb2dyYXBoeVBvaW50LmxhdGl0dWRlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBVc2VkIHRvIHNlcmlhbGl6ZSB0byBhIEdlb0pTT04gUG9pbnQuXG4gICAgICovXG4gICAgdG9KU09OKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdHlwZTogXCJQb2ludFwiLFxuICAgICAgICAgICAgY29vcmRpbmF0ZXM6IFt0aGlzLmxvbmdpdHVkZSwgdGhpcy5sYXRpdHVkZV0sXG4gICAgICAgICAgICBjcnM6IHsgdHlwZTogXCJuYW1lXCIsIHByb3BlcnRpZXM6IHsgbmFtZTogV29ybGRHZW9kZXRpY1N5c3RlbTE5ODQgfSB9LFxuICAgICAgICB9O1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdlb2dyYXBoeVBvaW50LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/geographyPoint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/indexDocumentsBatch.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/indexDocumentsBatch.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IndexDocumentsBatch: () => (/* binding */ IndexDocumentsBatch)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Class used to perform batch operations\n * with multiple documents to the index.\n */\nclass IndexDocumentsBatch {\n    constructor(actions = []) {\n        this.actions = actions;\n    }\n    /**\n     * Upload an array of documents to the index.\n     * @param documents - The documents to upload.\n     */\n    upload(documents) {\n        const batch = documents.map((doc) => {\n            return Object.assign(Object.assign({}, doc), { __actionType: \"upload\" });\n        });\n        this.actions.push(...batch);\n    }\n    /**\n     * Update a set of documents in the index.\n     * For more details about how merging works, see https://docs.microsoft.com/en-us/rest/api/searchservice/AddUpdate-or-Delete-Documents\n     * @param documents - The updated documents.\n     */\n    merge(documents) {\n        const batch = documents.map((doc) => {\n            return Object.assign(Object.assign({}, doc), { __actionType: \"merge\" });\n        });\n        this.actions.push(...batch);\n    }\n    /**\n     * Update a set of documents in the index or uploads them if they don't exist.\n     * For more details about how merging works, see https://docs.microsoft.com/en-us/rest/api/searchservice/AddUpdate-or-Delete-Documents\n     * @param documents - The new/updated documents.\n     */\n    mergeOrUpload(documents) {\n        const batch = documents.map((doc) => {\n            return Object.assign(Object.assign({}, doc), { __actionType: \"mergeOrUpload\" });\n        });\n        this.actions.push(...batch);\n    }\n    delete(keyNameOrDocuments, keyValues) {\n        if (keyValues) {\n            const keyName = keyNameOrDocuments;\n            const batch = keyValues.map((keyValue) => {\n                return {\n                    __actionType: \"delete\",\n                    [keyName]: keyValue,\n                };\n            });\n            this.actions.push(...batch);\n        }\n        else {\n            const documents = keyNameOrDocuments;\n            const batch = documents.map((document) => {\n                return Object.assign({ __actionType: \"delete\" }, document);\n            });\n            this.actions.push(...batch);\n        }\n    }\n}\n//# sourceMappingURL=indexDocumentsBatch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL3NlYXJjaC1kb2N1bWVudHMvZGlzdC1lc20vc3JjL2luZGV4RG9jdW1lbnRzQmF0Y2guanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELFVBQVUsd0JBQXdCO0FBQ25GLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsVUFBVSx1QkFBdUI7QUFDbEYsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCxVQUFVLCtCQUErQjtBQUMxRixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1Qyx3QkFBd0I7QUFDL0QsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcc2VhcmNoLWRvY3VtZW50c1xcZGlzdC1lc21cXHNyY1xcaW5kZXhEb2N1bWVudHNCYXRjaC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbi8qKlxuICogQ2xhc3MgdXNlZCB0byBwZXJmb3JtIGJhdGNoIG9wZXJhdGlvbnNcbiAqIHdpdGggbXVsdGlwbGUgZG9jdW1lbnRzIHRvIHRoZSBpbmRleC5cbiAqL1xuZXhwb3J0IGNsYXNzIEluZGV4RG9jdW1lbnRzQmF0Y2gge1xuICAgIGNvbnN0cnVjdG9yKGFjdGlvbnMgPSBbXSkge1xuICAgICAgICB0aGlzLmFjdGlvbnMgPSBhY3Rpb25zO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBVcGxvYWQgYW4gYXJyYXkgb2YgZG9jdW1lbnRzIHRvIHRoZSBpbmRleC5cbiAgICAgKiBAcGFyYW0gZG9jdW1lbnRzIC0gVGhlIGRvY3VtZW50cyB0byB1cGxvYWQuXG4gICAgICovXG4gICAgdXBsb2FkKGRvY3VtZW50cykge1xuICAgICAgICBjb25zdCBiYXRjaCA9IGRvY3VtZW50cy5tYXAoKGRvYykgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgZG9jKSwgeyBfX2FjdGlvblR5cGU6IFwidXBsb2FkXCIgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmFjdGlvbnMucHVzaCguLi5iYXRjaCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFVwZGF0ZSBhIHNldCBvZiBkb2N1bWVudHMgaW4gdGhlIGluZGV4LlxuICAgICAqIEZvciBtb3JlIGRldGFpbHMgYWJvdXQgaG93IG1lcmdpbmcgd29ya3MsIHNlZSBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi11cy9yZXN0L2FwaS9zZWFyY2hzZXJ2aWNlL0FkZFVwZGF0ZS1vci1EZWxldGUtRG9jdW1lbnRzXG4gICAgICogQHBhcmFtIGRvY3VtZW50cyAtIFRoZSB1cGRhdGVkIGRvY3VtZW50cy5cbiAgICAgKi9cbiAgICBtZXJnZShkb2N1bWVudHMpIHtcbiAgICAgICAgY29uc3QgYmF0Y2ggPSBkb2N1bWVudHMubWFwKChkb2MpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGRvYyksIHsgX19hY3Rpb25UeXBlOiBcIm1lcmdlXCIgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmFjdGlvbnMucHVzaCguLi5iYXRjaCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFVwZGF0ZSBhIHNldCBvZiBkb2N1bWVudHMgaW4gdGhlIGluZGV4IG9yIHVwbG9hZHMgdGhlbSBpZiB0aGV5IGRvbid0IGV4aXN0LlxuICAgICAqIEZvciBtb3JlIGRldGFpbHMgYWJvdXQgaG93IG1lcmdpbmcgd29ya3MsIHNlZSBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi11cy9yZXN0L2FwaS9zZWFyY2hzZXJ2aWNlL0FkZFVwZGF0ZS1vci1EZWxldGUtRG9jdW1lbnRzXG4gICAgICogQHBhcmFtIGRvY3VtZW50cyAtIFRoZSBuZXcvdXBkYXRlZCBkb2N1bWVudHMuXG4gICAgICovXG4gICAgbWVyZ2VPclVwbG9hZChkb2N1bWVudHMpIHtcbiAgICAgICAgY29uc3QgYmF0Y2ggPSBkb2N1bWVudHMubWFwKChkb2MpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGRvYyksIHsgX19hY3Rpb25UeXBlOiBcIm1lcmdlT3JVcGxvYWRcIiB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuYWN0aW9ucy5wdXNoKC4uLmJhdGNoKTtcbiAgICB9XG4gICAgZGVsZXRlKGtleU5hbWVPckRvY3VtZW50cywga2V5VmFsdWVzKSB7XG4gICAgICAgIGlmIChrZXlWYWx1ZXMpIHtcbiAgICAgICAgICAgIGNvbnN0IGtleU5hbWUgPSBrZXlOYW1lT3JEb2N1bWVudHM7XG4gICAgICAgICAgICBjb25zdCBiYXRjaCA9IGtleVZhbHVlcy5tYXAoKGtleVZhbHVlKSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgX19hY3Rpb25UeXBlOiBcImRlbGV0ZVwiLFxuICAgICAgICAgICAgICAgICAgICBba2V5TmFtZV06IGtleVZhbHVlLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMuYWN0aW9ucy5wdXNoKC4uLmJhdGNoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IGRvY3VtZW50cyA9IGtleU5hbWVPckRvY3VtZW50cztcbiAgICAgICAgICAgIGNvbnN0IGJhdGNoID0gZG9jdW1lbnRzLm1hcCgoZG9jdW1lbnQpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7IF9fYWN0aW9uVHlwZTogXCJkZWxldGVcIiB9LCBkb2N1bWVudCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMuYWN0aW9ucy5wdXNoKC4uLmJhdGNoKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4RG9jdW1lbnRzQmF0Y2guanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/indexDocumentsBatch.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/logger.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/logger.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/logger */ \"(ssr)/./node_modules/@azure/logger/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * The `@azure/logger` configuration for this package.\n */\nconst logger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_0__.createClientLogger)(\"search\");\n//# sourceMappingURL=logger.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL3NlYXJjaC1kb2N1bWVudHMvZGlzdC1lc20vc3JjL2xvZ2dlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDbUQ7QUFDbkQ7QUFDQTtBQUNBO0FBQ08sZUFBZSxpRUFBa0I7QUFDeEMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcc2VhcmNoLWRvY3VtZW50c1xcZGlzdC1lc21cXHNyY1xcbG9nZ2VyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuaW1wb3J0IHsgY3JlYXRlQ2xpZW50TG9nZ2VyIH0gZnJvbSBcIkBhenVyZS9sb2dnZXJcIjtcbi8qKlxuICogVGhlIGBAYXp1cmUvbG9nZ2VyYCBjb25maWd1cmF0aW9uIGZvciB0aGlzIHBhY2thZ2UuXG4gKi9cbmV4cG9ydCBjb25zdCBsb2dnZXIgPSBjcmVhdGVDbGllbnRMb2dnZXIoXCJzZWFyY2hcIik7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2dnZXIuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/logger.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/odataMetadataPolicy.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/odataMetadataPolicy.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createOdataMetadataPolicy: () => (/* binding */ createOdataMetadataPolicy)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nconst AcceptHeaderName = \"Accept\";\nconst odataMetadataPolicy = \"OdataMetadataPolicy\";\n/**\n * A policy factory for setting the Accept header to ignore odata metadata\n * @internal\n */\nfunction createOdataMetadataPolicy(metadataLevel) {\n    return {\n        name: odataMetadataPolicy,\n        async sendRequest(request, next) {\n            request.headers.set(AcceptHeaderName, `application/json;odata.metadata=${metadataLevel}`);\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=odataMetadataPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL3NlYXJjaC1kb2N1bWVudHMvZGlzdC1lc20vc3JjL29kYXRhTWV0YWRhdGFQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLG9FQUFvRSxpQkFBaUIsY0FBYztBQUNuRztBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcc2VhcmNoLWRvY3VtZW50c1xcZGlzdC1lc21cXHNyY1xcb2RhdGFNZXRhZGF0YVBvbGljeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmNvbnN0IEFjY2VwdEhlYWRlck5hbWUgPSBcIkFjY2VwdFwiO1xuY29uc3Qgb2RhdGFNZXRhZGF0YVBvbGljeSA9IFwiT2RhdGFNZXRhZGF0YVBvbGljeVwiO1xuLyoqXG4gKiBBIHBvbGljeSBmYWN0b3J5IGZvciBzZXR0aW5nIHRoZSBBY2NlcHQgaGVhZGVyIHRvIGlnbm9yZSBvZGF0YSBtZXRhZGF0YVxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVPZGF0YU1ldGFkYXRhUG9saWN5KG1ldGFkYXRhTGV2ZWwpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBvZGF0YU1ldGFkYXRhUG9saWN5LFxuICAgICAgICBhc3luYyBzZW5kUmVxdWVzdChyZXF1ZXN0LCBuZXh0KSB7XG4gICAgICAgICAgICByZXF1ZXN0LmhlYWRlcnMuc2V0KEFjY2VwdEhlYWRlck5hbWUsIGBhcHBsaWNhdGlvbi9qc29uO29kYXRhLm1ldGFkYXRhPSR7bWV0YWRhdGFMZXZlbH1gKTtcbiAgICAgICAgICAgIHJldHVybiBuZXh0KHJlcXVlc3QpO1xuICAgICAgICB9LFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vZGF0YU1ldGFkYXRhUG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/odataMetadataPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/searchApiKeyCredentialPolicy.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/searchApiKeyCredentialPolicy.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSearchApiKeyCredentialPolicy: () => (/* binding */ createSearchApiKeyCredentialPolicy)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nconst API_KEY_HEADER_NAME = \"api-key\";\nconst searchApiKeyCredentialPolicy = \"SearchApiKeyCredentialPolicy\";\n/**\n * Create an HTTP pipeline policy to authenticate a request\n * using an `AzureKeyCredential` for Azure Cognitive Search\n */\nfunction createSearchApiKeyCredentialPolicy(credential) {\n    return {\n        name: searchApiKeyCredentialPolicy,\n        async sendRequest(request, next) {\n            if (!request.headers.has(API_KEY_HEADER_NAME)) {\n                request.headers.set(API_KEY_HEADER_NAME, credential.key);\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=searchApiKeyCredentialPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL3NlYXJjaC1kb2N1bWVudHMvZGlzdC1lc20vc3JjL3NlYXJjaEFwaUtleUNyZWRlbnRpYWxQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmUgLSBIZWxsbyBTY3JpcHQgQUlcXGxpZmVBZ2VudFxcdm9pY2UtbGl2ZS1hZ2VudFxcc2FtcGxlc1xccmVhY3RcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxzZWFyY2gtZG9jdW1lbnRzXFxkaXN0LWVzbVxcc3JjXFxzZWFyY2hBcGlLZXlDcmVkZW50aWFsUG9saWN5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuY29uc3QgQVBJX0tFWV9IRUFERVJfTkFNRSA9IFwiYXBpLWtleVwiO1xuY29uc3Qgc2VhcmNoQXBpS2V5Q3JlZGVudGlhbFBvbGljeSA9IFwiU2VhcmNoQXBpS2V5Q3JlZGVudGlhbFBvbGljeVwiO1xuLyoqXG4gKiBDcmVhdGUgYW4gSFRUUCBwaXBlbGluZSBwb2xpY3kgdG8gYXV0aGVudGljYXRlIGEgcmVxdWVzdFxuICogdXNpbmcgYW4gYEF6dXJlS2V5Q3JlZGVudGlhbGAgZm9yIEF6dXJlIENvZ25pdGl2ZSBTZWFyY2hcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNlYXJjaEFwaUtleUNyZWRlbnRpYWxQb2xpY3koY3JlZGVudGlhbCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IHNlYXJjaEFwaUtleUNyZWRlbnRpYWxQb2xpY3ksXG4gICAgICAgIGFzeW5jIHNlbmRSZXF1ZXN0KHJlcXVlc3QsIG5leHQpIHtcbiAgICAgICAgICAgIGlmICghcmVxdWVzdC5oZWFkZXJzLmhhcyhBUElfS0VZX0hFQURFUl9OQU1FKSkge1xuICAgICAgICAgICAgICAgIHJlcXVlc3QuaGVhZGVycy5zZXQoQVBJX0tFWV9IRUFERVJfTkFNRSwgY3JlZGVudGlhbC5rZXkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG5leHQocmVxdWVzdCk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlYXJjaEFwaUtleUNyZWRlbnRpYWxQb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/searchApiKeyCredentialPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/searchAudience.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/searchAudience.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KnownSearchAudience: () => (/* binding */ KnownSearchAudience)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Known values for Search Audience\n */\nvar KnownSearchAudience;\n(function (KnownSearchAudience) {\n    /**\n     * Audience for Azure China\n     */\n    KnownSearchAudience[\"AzureChina\"] = \"https://search.azure.cn\";\n    /**\n     * Audience for Azure Government\n     */\n    KnownSearchAudience[\"AzureGovernment\"] = \"https://search.azure.us\";\n    /**\n     * Audience for Azure Public\n     */\n    KnownSearchAudience[\"AzurePublicCloud\"] = \"https://search.azure.com\";\n})(KnownSearchAudience || (KnownSearchAudience = {}));\n//# sourceMappingURL=searchAudience.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL3NlYXJjaC1kb2N1bWVudHMvZGlzdC1lc20vc3JjL3NlYXJjaEF1ZGllbmNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsa0RBQWtEO0FBQ25EIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZSAtIEhlbGxvIFNjcmlwdCBBSVxcbGlmZUFnZW50XFx2b2ljZS1saXZlLWFnZW50XFxzYW1wbGVzXFxyZWFjdFxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXHNlYXJjaC1kb2N1bWVudHNcXGRpc3QtZXNtXFxzcmNcXHNlYXJjaEF1ZGllbmNlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuLyoqXG4gKiBLbm93biB2YWx1ZXMgZm9yIFNlYXJjaCBBdWRpZW5jZVxuICovXG5leHBvcnQgdmFyIEtub3duU2VhcmNoQXVkaWVuY2U7XG4oZnVuY3Rpb24gKEtub3duU2VhcmNoQXVkaWVuY2UpIHtcbiAgICAvKipcbiAgICAgKiBBdWRpZW5jZSBmb3IgQXp1cmUgQ2hpbmFcbiAgICAgKi9cbiAgICBLbm93blNlYXJjaEF1ZGllbmNlW1wiQXp1cmVDaGluYVwiXSA9IFwiaHR0cHM6Ly9zZWFyY2guYXp1cmUuY25cIjtcbiAgICAvKipcbiAgICAgKiBBdWRpZW5jZSBmb3IgQXp1cmUgR292ZXJubWVudFxuICAgICAqL1xuICAgIEtub3duU2VhcmNoQXVkaWVuY2VbXCJBenVyZUdvdmVybm1lbnRcIl0gPSBcImh0dHBzOi8vc2VhcmNoLmF6dXJlLnVzXCI7XG4gICAgLyoqXG4gICAgICogQXVkaWVuY2UgZm9yIEF6dXJlIFB1YmxpY1xuICAgICAqL1xuICAgIEtub3duU2VhcmNoQXVkaWVuY2VbXCJBenVyZVB1YmxpY0Nsb3VkXCJdID0gXCJodHRwczovL3NlYXJjaC5henVyZS5jb21cIjtcbn0pKEtub3duU2VhcmNoQXVkaWVuY2UgfHwgKEtub3duU2VhcmNoQXVkaWVuY2UgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VhcmNoQXVkaWVuY2UuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/searchAudience.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/searchClient.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/searchClient.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SearchClient: () => (/* binding */ SearchClient)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _azure_core_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-auth */ \"(ssr)/./node_modules/@azure/core-auth/dist/esm/index.js\");\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n/* harmony import */ var _base64__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./base64 */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/base64.js\");\n/* harmony import */ var _generated_data_searchClient__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./generated/data/searchClient */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/generated/data/searchClient.js\");\n/* harmony import */ var _indexDocumentsBatch__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./indexDocumentsBatch */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/indexDocumentsBatch.js\");\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./logger */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/logger.js\");\n/* harmony import */ var _odataMetadataPolicy__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./odataMetadataPolicy */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/odataMetadataPolicy.js\");\n/* harmony import */ var _searchApiKeyCredentialPolicy__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./searchApiKeyCredentialPolicy */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/searchApiKeyCredentialPolicy.js\");\n/* harmony import */ var _searchAudience__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./searchAudience */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/searchAudience.js\");\n/* harmony import */ var _serialization__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./serialization */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/serialization.js\");\n/* harmony import */ var _serviceUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./serviceUtils */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/serviceUtils.js\");\n/* harmony import */ var _tracing__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./tracing */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/tracing.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/// <reference lib=\"esnext.asynciterable\" />\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Class used to perform operations against a search index,\n * including querying documents in the index as well as\n * adding, updating, and removing them.\n */\nclass SearchClient {\n    /**\n     * Creates an instance of SearchClient.\n     *\n     * Example usage:\n     * ```ts\n     * const { SearchClient, AzureKeyCredential } = require(\"@azure/search-documents\");\n     *\n     * const client = new SearchClient(\n     *   \"<endpoint>\",\n     *   \"<indexName>\",\n     *   new AzureKeyCredential(\"<Admin Key>\")\n     * );\n     * ```\n     *\n     * Optionally, the type of the model can be used to enable strong typing and type hints:\n     * ```ts\n     * type TModel = {\n     *   keyName: string;\n     *   field1?: string | null;\n     *   field2?: { anotherField?: string | null } | null;\n     * };\n     *\n     * const client = new SearchClient<TModel>(\n     *   ...\n     * );\n     * ```\n     *\n     * @param endpoint - The endpoint of the search service\n     * @param indexName - The name of the index\n     * @param credential - Used to authenticate requests to the service.\n     * @param options - Used to configure the Search client.\n     *\n     * @typeParam TModel - An optional type that represents the documents stored in\n     * the search index. For the best typing experience, all non-key fields should\n     * be marked optional and nullable, and the key property should have the\n     * non-nullable type `string`.\n     */\n    constructor(endpoint, indexName, credential, options = {}) {\n        var _a, _b;\n        /// Maintenance note: when updating supported API versions,\n        /// the ContinuationToken logic will need to be updated below.\n        /**\n         *  The service version to use when communicating with the service.\n         */\n        this.serviceVersion = _serviceUtils__WEBPACK_IMPORTED_MODULE_2__.defaultServiceVersion;\n        /**\n         * The API version to use when communicating with the service.\n         * @deprecated use {@Link serviceVersion} instead\n         */\n        this.apiVersion = _serviceUtils__WEBPACK_IMPORTED_MODULE_2__.defaultServiceVersion;\n        this.endpoint = endpoint;\n        this.indexName = indexName;\n        const internalClientPipelineOptions = Object.assign(Object.assign({}, options), {\n            loggingOptions: {\n                logger: _logger__WEBPACK_IMPORTED_MODULE_3__.logger.info,\n                additionalAllowedHeaderNames: [\n                    \"elapsed-time\",\n                    \"Location\",\n                    \"OData-MaxVersion\",\n                    \"OData-Version\",\n                    \"Prefer\",\n                    \"throttle-reason\",\n                ],\n            },\n        });\n        this.serviceVersion =\n            (_b = (_a = options.serviceVersion) !== null && _a !== void 0 ? _a : options.apiVersion) !== null && _b !== void 0 ? _b : _serviceUtils__WEBPACK_IMPORTED_MODULE_2__.defaultServiceVersion;\n        this.apiVersion = this.serviceVersion;\n        this.client = new _generated_data_searchClient__WEBPACK_IMPORTED_MODULE_4__.SearchClient(this.endpoint, this.indexName, this.serviceVersion, internalClientPipelineOptions);\n        if ((0,_azure_core_auth__WEBPACK_IMPORTED_MODULE_0__.isTokenCredential)(credential)) {\n            const scope = options.audience\n                ? `${options.audience}/.default`\n                : `${_searchAudience__WEBPACK_IMPORTED_MODULE_5__.KnownSearchAudience.AzurePublicCloud}/.default`;\n            this.client.pipeline.addPolicy((0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__.bearerTokenAuthenticationPolicy)({ credential, scopes: scope }));\n        }\n        else {\n            this.client.pipeline.addPolicy((0,_searchApiKeyCredentialPolicy__WEBPACK_IMPORTED_MODULE_6__.createSearchApiKeyCredentialPolicy)(credential));\n        }\n        this.client.pipeline.addPolicy((0,_odataMetadataPolicy__WEBPACK_IMPORTED_MODULE_7__.createOdataMetadataPolicy)(\"none\"));\n    }\n    /**\n     * Retrieves the number of documents in the index.\n     * @param options - Options to the count operation.\n     */\n    async getDocumentsCount(options = {}) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_8__.createSpan)(\"SearchClient-getDocumentsCount\", options);\n        try {\n            let documentsCount = 0;\n            await this.client.documents.count(Object.assign(Object.assign({}, updatedOptions), { onResponse: (rawResponse, flatResponse) => {\n                    documentsCount = Number(rawResponse.bodyAsText);\n                    if (updatedOptions.onResponse) {\n                        updatedOptions.onResponse(rawResponse, flatResponse);\n                    }\n                } }));\n            return documentsCount;\n        }\n        catch (e) {\n            span.setStatus({\n                status: \"error\",\n                error: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Based on a partial searchText from the user, return a list\n     * of potential completion strings based on a specified suggester.\n     * @param searchText - The search text on which to base autocomplete results.\n     * @param suggesterName - The name of the suggester as specified in the suggesters collection that's part of the index definition.\n     * @param options - Options to the autocomplete operation.\n     * @example\n     * ```ts\n     * import {\n     *   AzureKeyCredential,\n     *   SearchClient,\n     *   SearchFieldArray,\n     * } from \"@azure/search-documents\";\n     *\n     * type TModel = {\n     *   key: string;\n     *   azure?: { sdk: string | null } | null;\n     * };\n     *\n     * const client = new SearchClient<TModel>(\n     *   \"endpoint.azure\",\n     *   \"indexName\",\n     *   new AzureKeyCredential(\"key\")\n     * );\n     *\n     * const searchFields: SearchFieldArray<TModel> = [\"azure/sdk\"];\n     *\n     * const autocompleteResult = await client.autocomplete(\n     *   \"searchText\",\n     *   \"suggesterName\",\n     *   { searchFields }\n     * );\n     * ```\n     */\n    async autocomplete(searchText, suggesterName, options = {}) {\n        const { searchFields } = options, nonFieldOptions = (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__rest)(options, [\"searchFields\"]);\n        const fullOptions = Object.assign({ searchText: searchText, suggesterName: suggesterName, searchFields: this.convertSearchFields(searchFields) }, nonFieldOptions);\n        if (!fullOptions.searchText) {\n            throw new RangeError(\"searchText must be provided.\");\n        }\n        if (!fullOptions.suggesterName) {\n            throw new RangeError(\"suggesterName must be provided.\");\n        }\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_8__.createSpan)(\"SearchClient-autocomplete\", options);\n        try {\n            const result = await this.client.documents.autocompletePost(fullOptions, updatedOptions);\n            return result;\n        }\n        catch (e) {\n            span.setStatus({\n                status: \"error\",\n                error: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    async searchDocuments(searchText, options = {}, nextPageParameters = {}) {\n        const _a = options, { includeTotalCount, orderBy, searchFields, select, vectorSearchOptions, semanticSearchOptions } = _a, restOptions = (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__rest)(_a, [\"includeTotalCount\", \"orderBy\", \"searchFields\", \"select\", \"vectorSearchOptions\", \"semanticSearchOptions\"]);\n        const _b = semanticSearchOptions !== null && semanticSearchOptions !== void 0 ? semanticSearchOptions : {}, { configurationName, errorMode, answers, captions } = _b, restSemanticOptions = (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__rest)(_b, [\"configurationName\", \"errorMode\", \"answers\", \"captions\"]);\n        const _c = vectorSearchOptions !== null && vectorSearchOptions !== void 0 ? vectorSearchOptions : {}, { queries, filterMode } = _c, restVectorOptions = (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__rest)(_c, [\"queries\", \"filterMode\"]);\n        const fullOptions = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, restSemanticOptions), restVectorOptions), restOptions), nextPageParameters), { searchFields: this.convertSearchFields(searchFields), select: this.convertSelect(select) || \"*\", orderBy: this.convertOrderBy(orderBy), includeTotalResultCount: includeTotalCount, vectorQueries: queries === null || queries === void 0 ? void 0 : queries.map(this.convertVectorQuery.bind(this)), answers: this.convertQueryAnswers(answers), captions: this.convertQueryCaptions(captions), semanticErrorHandling: errorMode, semanticConfigurationName: configurationName, vectorFilterMode: filterMode });\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_8__.createSpan)(\"SearchClient-searchDocuments\", options);\n        try {\n            const result = await this.client.documents.searchPost(Object.assign(Object.assign({}, fullOptions), { searchText: searchText }), updatedOptions);\n            const _d = result, { results, nextLink, nextPageParameters: resultNextPageParameters, semanticPartialResponseReason: semanticErrorReason, semanticPartialResponseType: semanticSearchResultsType } = _d, restResult = (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__rest)(_d, [\"results\", \"nextLink\", \"nextPageParameters\", \"semanticPartialResponseReason\", \"semanticPartialResponseType\"]);\n            const modifiedResults = _serviceUtils__WEBPACK_IMPORTED_MODULE_2__.generatedSearchResultToPublicSearchResult(results);\n            const converted = Object.assign(Object.assign({}, restResult), { results: modifiedResults, semanticErrorReason,\n                semanticSearchResultsType, continuationToken: this.encodeContinuationToken(nextLink, resultNextPageParameters) });\n            return (0,_serialization__WEBPACK_IMPORTED_MODULE_10__.deserialize)(converted);\n        }\n        catch (e) {\n            span.setStatus({\n                status: \"error\",\n                error: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    listSearchResultsPage(searchText, options = {}, settings = {}) {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__asyncGenerator)(this, arguments, function* listSearchResultsPage_1() {\n            let decodedContinuation = this.decodeContinuationToken(settings.continuationToken);\n            let result = yield (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__await)(this.searchDocuments(searchText, options, decodedContinuation === null || decodedContinuation === void 0 ? void 0 : decodedContinuation.nextPageParameters));\n            yield yield (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__await)(result);\n            // Technically, we should also leverage nextLink, but the generated code\n            // doesn't support this yet.\n            while (result.continuationToken) {\n                decodedContinuation = this.decodeContinuationToken(result.continuationToken);\n                result = yield (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__await)(this.searchDocuments(searchText, options, decodedContinuation === null || decodedContinuation === void 0 ? void 0 : decodedContinuation.nextPageParameters));\n                yield yield (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__await)(result);\n            }\n        });\n    }\n    listSearchResultsAll(firstPage, searchText, options = {}) {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__asyncGenerator)(this, arguments, function* listSearchResultsAll_1() {\n            var _a, e_1, _b, _c;\n            yield (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__await)(yield* (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__asyncDelegator)((0,tslib__WEBPACK_IMPORTED_MODULE_9__.__asyncValues)(firstPage.results)));\n            if (firstPage.continuationToken) {\n                try {\n                    for (var _d = true, _e = (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__asyncValues)(this.listSearchResultsPage(searchText, options, {\n                        continuationToken: firstPage.continuationToken,\n                    })), _f; _f = yield (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__await)(_e.next()), _a = _f.done, !_a; _d = true) {\n                        _c = _f.value;\n                        _d = false;\n                        const page = _c;\n                        yield (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__await)(yield* (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__asyncDelegator)((0,tslib__WEBPACK_IMPORTED_MODULE_9__.__asyncValues)(page.results)));\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (!_d && !_a && (_b = _e.return)) yield (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__await)(_b.call(_e));\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n        });\n    }\n    listSearchResults(firstPage, searchText, options = {}) {\n        const iter = this.listSearchResultsAll(firstPage, searchText, options);\n        return {\n            next() {\n                return iter.next();\n            },\n            [Symbol.asyncIterator]() {\n                return this;\n            },\n            byPage: (settings = {}) => {\n                return this.listSearchResultsPage(searchText, options, settings);\n            },\n        };\n    }\n    /**\n     * Performs a search on the current index given\n     * the specified arguments.\n     * @param searchText - Text to search\n     * @param options - Options for the search operation.\n     * @example\n     * ```ts\n     * import {\n     *   AzureKeyCredential,\n     *   SearchClient,\n     *   SearchFieldArray,\n     * } from \"@azure/search-documents\";\n     *\n     * type TModel = {\n     *   key: string;\n     *   azure?: { sdk: string | null } | null;\n     * };\n     *\n     * const client = new SearchClient<TModel>(\n     *   \"endpoint.azure\",\n     *   \"indexName\",\n     *   new AzureKeyCredential(\"key\")\n     * );\n     *\n     * const select = [\"azure/sdk\"] as const;\n     * const searchFields: SearchFieldArray<TModel> = [\"azure/sdk\"];\n     *\n     * const searchResult = await client.search(\"searchText\", {\n     *   select,\n     *   searchFields,\n     * });\n     * ```\n     */\n    async search(searchText, options) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_8__.createSpan)(\"SearchClient-search\", options);\n        try {\n            const pageResult = await this.searchDocuments(searchText, updatedOptions);\n            return Object.assign(Object.assign({}, pageResult), { results: this.listSearchResults(pageResult, searchText, updatedOptions) });\n        }\n        catch (e) {\n            span.setStatus({\n                status: \"error\",\n                error: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Returns a short list of suggestions based on the searchText\n     * and specified suggester.\n     * @param searchText - The search text to use to suggest documents. Must be at least 1 character, and no more than 100 characters.\n     * @param suggesterName - The name of the suggester as specified in the suggesters collection that's part of the index definition.\n     * @param options - Options for the suggest operation\n     * @example\n     * ```ts\n     * import {\n     *   AzureKeyCredential,\n     *   SearchClient,\n     *   SearchFieldArray,\n     * } from \"@azure/search-documents\";\n     *\n     * type TModel = {\n     *   key: string;\n     *   azure?: { sdk: string | null } | null;\n     * };\n     *\n     * const client = new SearchClient<TModel>(\n     *   \"endpoint.azure\",\n     *   \"indexName\",\n     *   new AzureKeyCredential(\"key\")\n     * );\n     *\n     * const select = [\"azure/sdk\"] as const;\n     * const searchFields: SearchFieldArray<TModel> = [\"azure/sdk\"];\n     *\n     * const suggestResult = await client.suggest(\"searchText\", \"suggesterName\", {\n     *   select,\n     *   searchFields,\n     * });\n     * ```\n     */\n    async suggest(searchText, suggesterName, options = {}) {\n        const { select, searchFields, orderBy } = options, nonFieldOptions = (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__rest)(options, [\"select\", \"searchFields\", \"orderBy\"]);\n        const fullOptions = Object.assign({ searchText: searchText, suggesterName: suggesterName, searchFields: this.convertSearchFields(searchFields), select: this.convertSelect(select), orderBy: this.convertOrderBy(orderBy) }, nonFieldOptions);\n        if (!fullOptions.searchText) {\n            throw new RangeError(\"searchText must be provided.\");\n        }\n        if (!fullOptions.suggesterName) {\n            throw new RangeError(\"suggesterName must be provided.\");\n        }\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_8__.createSpan)(\"SearchClient-suggest\", options);\n        try {\n            const result = await this.client.documents.suggestPost(fullOptions, updatedOptions);\n            const modifiedResult = _serviceUtils__WEBPACK_IMPORTED_MODULE_2__.generatedSuggestDocumentsResultToPublicSuggestDocumentsResult(result);\n            return (0,_serialization__WEBPACK_IMPORTED_MODULE_10__.deserialize)(modifiedResult);\n        }\n        catch (e) {\n            span.setStatus({\n                status: \"error\",\n                error: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Retrieve a particular document from the index by key.\n     * @param key - The primary key value of the document\n     * @param options - Additional options\n     */\n    async getDocument(key, options = {}) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_8__.createSpan)(\"SearchClient-getDocument\", options);\n        try {\n            const result = await this.client.documents.get(key, Object.assign(Object.assign({}, updatedOptions), { selectedFields: updatedOptions.selectedFields }));\n            return (0,_serialization__WEBPACK_IMPORTED_MODULE_10__.deserialize)(result);\n        }\n        catch (e) {\n            span.setStatus({\n                status: \"error\",\n                error: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Perform a set of index modifications (upload, merge, mergeOrUpload, delete)\n     * for the given set of documents.\n     * This operation may partially succeed and not all document operations will\n     * be reflected in the index. If you would like to treat this as an exception,\n     * set the `throwOnAnyFailure` option to true.\n     * For more details about how merging works, see: https://docs.microsoft.com/en-us/rest/api/searchservice/AddUpdate-or-Delete-Documents\n     * @param batch - An array of actions to perform on the index.\n     * @param options - Additional options.\n     */\n    async indexDocuments(\n    // eslint-disable-next-line @azure/azure-sdk/ts-use-interface-parameters\n    batch, options = {}) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_8__.createSpan)(\"SearchClient-indexDocuments\", options);\n        try {\n            let status = 0;\n            const result = await this.client.documents.index({ actions: (0,_serialization__WEBPACK_IMPORTED_MODULE_10__.serialize)(batch.actions) }, Object.assign(Object.assign({}, updatedOptions), { onResponse: (rawResponse, flatResponse) => {\n                    status = rawResponse.status;\n                    if (updatedOptions.onResponse) {\n                        updatedOptions.onResponse(rawResponse, flatResponse);\n                    }\n                } }));\n            if (options.throwOnAnyFailure && status === 207) {\n                throw result;\n            }\n            return result;\n        }\n        catch (e) {\n            span.setStatus({\n                status: \"error\",\n                error: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Upload an array of documents to the index.\n     * @param documents - The documents to upload.\n     * @param options - Additional options.\n     */\n    async uploadDocuments(documents, options = {}) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_8__.createSpan)(\"SearchClient-uploadDocuments\", options);\n        const batch = new _indexDocumentsBatch__WEBPACK_IMPORTED_MODULE_11__.IndexDocumentsBatch();\n        batch.upload(documents);\n        try {\n            return await this.indexDocuments(batch, updatedOptions);\n        }\n        catch (e) {\n            span.setStatus({\n                status: \"error\",\n                error: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Update a set of documents in the index.\n     * For more details about how merging works, see https://docs.microsoft.com/en-us/rest/api/searchservice/AddUpdate-or-Delete-Documents\n     * @param documents - The updated documents.\n     * @param options - Additional options.\n     */\n    async mergeDocuments(documents, options = {}) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_8__.createSpan)(\"SearchClient-mergeDocuments\", options);\n        const batch = new _indexDocumentsBatch__WEBPACK_IMPORTED_MODULE_11__.IndexDocumentsBatch();\n        batch.merge(documents);\n        try {\n            return await this.indexDocuments(batch, updatedOptions);\n        }\n        catch (e) {\n            span.setStatus({\n                status: \"error\",\n                error: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Update a set of documents in the index or upload them if they don't exist.\n     * For more details about how merging works, see https://docs.microsoft.com/en-us/rest/api/searchservice/AddUpdate-or-Delete-Documents\n     * @param documents - The updated documents.\n     * @param options - Additional options.\n     */\n    async mergeOrUploadDocuments(documents, options = {}) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_8__.createSpan)(\"SearchClient-mergeDocuments\", options);\n        const batch = new _indexDocumentsBatch__WEBPACK_IMPORTED_MODULE_11__.IndexDocumentsBatch();\n        batch.mergeOrUpload(documents);\n        try {\n            return await this.indexDocuments(batch, updatedOptions);\n        }\n        catch (e) {\n            span.setStatus({\n                status: \"error\",\n                error: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    async deleteDocuments(keyNameOrDocuments, keyValuesOrOptions, options = {}) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_8__.createSpan)(\"SearchClient-deleteDocuments\", options);\n        const batch = new _indexDocumentsBatch__WEBPACK_IMPORTED_MODULE_11__.IndexDocumentsBatch();\n        if (typeof keyNameOrDocuments === \"string\") {\n            batch.delete(keyNameOrDocuments, keyValuesOrOptions);\n        }\n        else {\n            batch.delete(keyNameOrDocuments);\n        }\n        try {\n            return await this.indexDocuments(batch, updatedOptions);\n        }\n        catch (e) {\n            span.setStatus({\n                status: \"error\",\n                error: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    encodeContinuationToken(nextLink, nextPageParameters) {\n        if (!nextLink || !nextPageParameters) {\n            return undefined;\n        }\n        const payload = JSON.stringify({\n            apiVersion: this.apiVersion,\n            nextLink,\n            nextPageParameters,\n        });\n        return (0,_base64__WEBPACK_IMPORTED_MODULE_12__.encode)(payload);\n    }\n    decodeContinuationToken(token) {\n        if (!token) {\n            return undefined;\n        }\n        const decodedToken = (0,_base64__WEBPACK_IMPORTED_MODULE_12__.decode)(token);\n        try {\n            const result = JSON.parse(decodedToken);\n            if (result.apiVersion !== this.apiVersion) {\n                throw new RangeError(`Continuation token uses unsupported apiVersion \"${this.apiVersion}\"`);\n            }\n            return {\n                nextLink: result.nextLink,\n                nextPageParameters: result.nextPageParameters,\n            };\n        }\n        catch (e) {\n            throw new Error(`Corrupted or invalid continuation token: ${decodedToken}`);\n        }\n    }\n    convertSelect(select) {\n        if (select) {\n            return select.join(\",\");\n        }\n        return select;\n    }\n    convertVectorQueryFields(fields) {\n        if (fields) {\n            return fields.join(\",\");\n        }\n        return fields;\n    }\n    convertSearchFields(searchFields) {\n        if (searchFields) {\n            return searchFields.join(\",\");\n        }\n        return searchFields;\n    }\n    convertOrderBy(orderBy) {\n        if (orderBy) {\n            return orderBy.join(\",\");\n        }\n        return orderBy;\n    }\n    convertQueryAnswers(answers) {\n        if (!answers) {\n            return answers;\n        }\n        const config = [];\n        const { answerType: output, count, threshold } = answers;\n        if (count) {\n            config.push(`count-${count}`);\n        }\n        if (threshold) {\n            config.push(`threshold-${threshold}`);\n        }\n        if (config.length) {\n            return output + `|${config.join(\",\")}`;\n        }\n        return output;\n    }\n    convertQueryCaptions(captions) {\n        if (!captions) {\n            return captions;\n        }\n        const config = [];\n        const { captionType: output, highlight } = captions;\n        if (highlight !== undefined) {\n            config.push(`highlight-${highlight}`);\n        }\n        if (config.length) {\n            return output + `|${config.join(\",\")}`;\n        }\n        return output;\n    }\n    convertVectorQuery(vectorQuery) {\n        return Object.assign(Object.assign({}, vectorQuery), { fields: this.convertVectorQueryFields(vectorQuery === null || vectorQuery === void 0 ? void 0 : vectorQuery.fields) });\n    }\n}\n//# sourceMappingURL=searchClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/searchClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/serialization.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/serialization.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deserialize: () => (/* binding */ deserialize),\n/* harmony export */   serialize: () => (/* binding */ serialize)\n/* harmony export */ });\n/* harmony import */ var _geographyPoint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./geographyPoint */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/geographyPoint.js\");\n/* harmony import */ var _walk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./walk */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/walk.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\nconst ISO8601DateRegex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?Z$/i;\nconst GeoJSONPointTypeName = \"Point\";\nconst WorldGeodeticSystem1984 = \"EPSG:4326\"; // See https://epsg.io/4326\nconst [serializeValue, deserializeValue] = [\n    [serializeSpecialNumbers, serializeDates, serializeGeoPoint],\n    [deserializeSpecialNumbers, deserializeDates, deserializeGeoPoint],\n].map((fns) => (value) => fns.reduceRight((acc, fn) => fn(acc), value));\nfunction serialize(obj) {\n    return (0,_walk__WEBPACK_IMPORTED_MODULE_0__.walk)(obj, serializeValue);\n}\nfunction deserialize(obj) {\n    return (0,_walk__WEBPACK_IMPORTED_MODULE_0__.walk)(obj, deserializeValue);\n}\nfunction serializeSpecialNumbers(input) {\n    if (typeof input === \"number\" && isNaN(input)) {\n        return \"NaN\";\n    }\n    else if (input === Infinity) {\n        return \"INF\";\n    }\n    else if (input === -Infinity) {\n        return \"-INF\";\n    }\n    else {\n        return input;\n    }\n}\nfunction serializeDates(input) {\n    return input instanceof Date ? input.toISOString() : input;\n}\nfunction serializeGeoPoint(input) {\n    return input instanceof _geographyPoint__WEBPACK_IMPORTED_MODULE_1__[\"default\"] ? input.toJSON() : input;\n}\nfunction deserializeSpecialNumbers(input) {\n    switch (input) {\n        case \"NaN\":\n            return NaN;\n        case \"-INF\":\n            return -Infinity;\n        case \"INF\":\n            return Infinity;\n        default:\n            return input;\n    }\n}\nfunction deserializeDates(input) {\n    return typeof input === \"string\" && ISO8601DateRegex.test(input) ? new Date(input) : input;\n}\nfunction deserializeGeoPoint(input) {\n    if (isGeoJSONPoint(input)) {\n        const [longitude, latitude] = input.coordinates;\n        return new _geographyPoint__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ longitude, latitude });\n    }\n    return input;\n}\nfunction isGeoJSONPoint(obj) {\n    const requiredKeys = [\"type\", \"coordinates\"];\n    return isValidObject(obj, {\n        requiredKeys,\n        propertyValidator: (key) => {\n            switch (key) {\n                case \"type\":\n                    return obj.type === GeoJSONPointTypeName;\n                    break;\n                case \"coordinates\":\n                    return isCoordinateArray(obj.coordinates);\n                    break;\n                case \"crs\":\n                    return isCrs(obj.crs);\n                    break;\n                default:\n                    return false;\n            }\n        },\n    });\n}\nfunction isCoordinateArray(maybeCoordinates) {\n    if (!Array.isArray(maybeCoordinates)) {\n        return false;\n    }\n    if (maybeCoordinates.length !== 2) {\n        return false;\n    }\n    if (typeof maybeCoordinates[0] !== \"number\" || typeof maybeCoordinates[1] !== \"number\") {\n        return false;\n    }\n    return true;\n}\nfunction isCrs(maybeCrs) {\n    return isValidObject(maybeCrs, {\n        requiredKeys: [\"type\", \"properties\"],\n        propertyValidator: (key) => {\n            switch (key) {\n                case \"type\":\n                    return maybeCrs.type === \"name\";\n                    break;\n                case \"properties\":\n                    return isCrsProperties(maybeCrs.properties);\n                    break;\n                default:\n                    return false;\n            }\n        },\n    });\n}\nfunction isCrsProperties(maybeProperties) {\n    return isValidObject(maybeProperties, {\n        requiredKeys: [\"name\"],\n        propertyValidator: (key) => {\n            if (key === \"name\") {\n                return maybeProperties.name === WorldGeodeticSystem1984;\n            }\n            else {\n                return false;\n            }\n        },\n    });\n}\nfunction isValidObject(obj, options = {}) {\n    if (typeof obj !== \"object\" || obj === null) {\n        return false;\n    }\n    const keys = Object.keys(obj);\n    if (options.requiredKeys) {\n        for (const requiredKey of options.requiredKeys) {\n            if (!keys.includes(requiredKey)) {\n                return false;\n            }\n        }\n    }\n    if (options.propertyValidator) {\n        for (const key of keys) {\n            if (!options.propertyValidator(key)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=serialization.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL3NlYXJjaC1kb2N1bWVudHMvZGlzdC1lc20vc3JjL3NlcmlhbGl6YXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDOEM7QUFDaEI7QUFDOUIsOEJBQThCLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxNQUFNLElBQUk7QUFDeEU7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsMkNBQUk7QUFDZjtBQUNPO0FBQ1AsV0FBVywyQ0FBSTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHVEQUFjO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHVEQUFjLEdBQUcscUJBQXFCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBLHdDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcc2VhcmNoLWRvY3VtZW50c1xcZGlzdC1lc21cXHNyY1xcc2VyaWFsaXphdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmltcG9ydCBHZW9ncmFwaHlQb2ludCBmcm9tIFwiLi9nZW9ncmFwaHlQb2ludFwiO1xuaW1wb3J0IHsgd2FsayB9IGZyb20gXCIuL3dhbGtcIjtcbmNvbnN0IElTTzg2MDFEYXRlUmVnZXggPSAvXlxcZHs0fS1cXGR7Mn0tXFxkezJ9VFxcZHsyfTpcXGR7Mn06XFxkezJ9KFxcLlxcZHsxLDN9KT9aJC9pO1xuY29uc3QgR2VvSlNPTlBvaW50VHlwZU5hbWUgPSBcIlBvaW50XCI7XG5jb25zdCBXb3JsZEdlb2RldGljU3lzdGVtMTk4NCA9IFwiRVBTRzo0MzI2XCI7IC8vIFNlZSBodHRwczovL2Vwc2cuaW8vNDMyNlxuY29uc3QgW3NlcmlhbGl6ZVZhbHVlLCBkZXNlcmlhbGl6ZVZhbHVlXSA9IFtcbiAgICBbc2VyaWFsaXplU3BlY2lhbE51bWJlcnMsIHNlcmlhbGl6ZURhdGVzLCBzZXJpYWxpemVHZW9Qb2ludF0sXG4gICAgW2Rlc2VyaWFsaXplU3BlY2lhbE51bWJlcnMsIGRlc2VyaWFsaXplRGF0ZXMsIGRlc2VyaWFsaXplR2VvUG9pbnRdLFxuXS5tYXAoKGZucykgPT4gKHZhbHVlKSA9PiBmbnMucmVkdWNlUmlnaHQoKGFjYywgZm4pID0+IGZuKGFjYyksIHZhbHVlKSk7XG5leHBvcnQgZnVuY3Rpb24gc2VyaWFsaXplKG9iaikge1xuICAgIHJldHVybiB3YWxrKG9iaiwgc2VyaWFsaXplVmFsdWUpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRlc2VyaWFsaXplKG9iaikge1xuICAgIHJldHVybiB3YWxrKG9iaiwgZGVzZXJpYWxpemVWYWx1ZSk7XG59XG5mdW5jdGlvbiBzZXJpYWxpemVTcGVjaWFsTnVtYmVycyhpbnB1dCkge1xuICAgIGlmICh0eXBlb2YgaW5wdXQgPT09IFwibnVtYmVyXCIgJiYgaXNOYU4oaW5wdXQpKSB7XG4gICAgICAgIHJldHVybiBcIk5hTlwiO1xuICAgIH1cbiAgICBlbHNlIGlmIChpbnB1dCA9PT0gSW5maW5pdHkpIHtcbiAgICAgICAgcmV0dXJuIFwiSU5GXCI7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlucHV0ID09PSAtSW5maW5pdHkpIHtcbiAgICAgICAgcmV0dXJuIFwiLUlORlwiO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGlucHV0O1xuICAgIH1cbn1cbmZ1bmN0aW9uIHNlcmlhbGl6ZURhdGVzKGlucHV0KSB7XG4gICAgcmV0dXJuIGlucHV0IGluc3RhbmNlb2YgRGF0ZSA/IGlucHV0LnRvSVNPU3RyaW5nKCkgOiBpbnB1dDtcbn1cbmZ1bmN0aW9uIHNlcmlhbGl6ZUdlb1BvaW50KGlucHV0KSB7XG4gICAgcmV0dXJuIGlucHV0IGluc3RhbmNlb2YgR2VvZ3JhcGh5UG9pbnQgPyBpbnB1dC50b0pTT04oKSA6IGlucHV0O1xufVxuZnVuY3Rpb24gZGVzZXJpYWxpemVTcGVjaWFsTnVtYmVycyhpbnB1dCkge1xuICAgIHN3aXRjaCAoaW5wdXQpIHtcbiAgICAgICAgY2FzZSBcIk5hTlwiOlxuICAgICAgICAgICAgcmV0dXJuIE5hTjtcbiAgICAgICAgY2FzZSBcIi1JTkZcIjpcbiAgICAgICAgICAgIHJldHVybiAtSW5maW5pdHk7XG4gICAgICAgIGNhc2UgXCJJTkZcIjpcbiAgICAgICAgICAgIHJldHVybiBJbmZpbml0eTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBpbnB1dDtcbiAgICB9XG59XG5mdW5jdGlvbiBkZXNlcmlhbGl6ZURhdGVzKGlucHV0KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBpbnB1dCA9PT0gXCJzdHJpbmdcIiAmJiBJU084NjAxRGF0ZVJlZ2V4LnRlc3QoaW5wdXQpID8gbmV3IERhdGUoaW5wdXQpIDogaW5wdXQ7XG59XG5mdW5jdGlvbiBkZXNlcmlhbGl6ZUdlb1BvaW50KGlucHV0KSB7XG4gICAgaWYgKGlzR2VvSlNPTlBvaW50KGlucHV0KSkge1xuICAgICAgICBjb25zdCBbbG9uZ2l0dWRlLCBsYXRpdHVkZV0gPSBpbnB1dC5jb29yZGluYXRlcztcbiAgICAgICAgcmV0dXJuIG5ldyBHZW9ncmFwaHlQb2ludCh7IGxvbmdpdHVkZSwgbGF0aXR1ZGUgfSk7XG4gICAgfVxuICAgIHJldHVybiBpbnB1dDtcbn1cbmZ1bmN0aW9uIGlzR2VvSlNPTlBvaW50KG9iaikge1xuICAgIGNvbnN0IHJlcXVpcmVkS2V5cyA9IFtcInR5cGVcIiwgXCJjb29yZGluYXRlc1wiXTtcbiAgICByZXR1cm4gaXNWYWxpZE9iamVjdChvYmosIHtcbiAgICAgICAgcmVxdWlyZWRLZXlzLFxuICAgICAgICBwcm9wZXJ0eVZhbGlkYXRvcjogKGtleSkgPT4ge1xuICAgICAgICAgICAgc3dpdGNoIChrZXkpIHtcbiAgICAgICAgICAgICAgICBjYXNlIFwidHlwZVwiOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gb2JqLnR5cGUgPT09IEdlb0pTT05Qb2ludFR5cGVOYW1lO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIFwiY29vcmRpbmF0ZXNcIjpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlzQ29vcmRpbmF0ZUFycmF5KG9iai5jb29yZGluYXRlcyk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJjcnNcIjpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlzQ3JzKG9iai5jcnMpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgfSk7XG59XG5mdW5jdGlvbiBpc0Nvb3JkaW5hdGVBcnJheShtYXliZUNvb3JkaW5hdGVzKSB7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KG1heWJlQ29vcmRpbmF0ZXMpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKG1heWJlQ29vcmRpbmF0ZXMubGVuZ3RoICE9PSAyKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBtYXliZUNvb3JkaW5hdGVzWzBdICE9PSBcIm51bWJlclwiIHx8IHR5cGVvZiBtYXliZUNvb3JkaW5hdGVzWzFdICE9PSBcIm51bWJlclwiKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG5mdW5jdGlvbiBpc0NycyhtYXliZUNycykge1xuICAgIHJldHVybiBpc1ZhbGlkT2JqZWN0KG1heWJlQ3JzLCB7XG4gICAgICAgIHJlcXVpcmVkS2V5czogW1widHlwZVwiLCBcInByb3BlcnRpZXNcIl0sXG4gICAgICAgIHByb3BlcnR5VmFsaWRhdG9yOiAoa2V5KSA9PiB7XG4gICAgICAgICAgICBzd2l0Y2ggKGtleSkge1xuICAgICAgICAgICAgICAgIGNhc2UgXCJ0eXBlXCI6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBtYXliZUNycy50eXBlID09PSBcIm5hbWVcIjtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBcInByb3BlcnRpZXNcIjpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlzQ3JzUHJvcGVydGllcyhtYXliZUNycy5wcm9wZXJ0aWVzKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgIH0pO1xufVxuZnVuY3Rpb24gaXNDcnNQcm9wZXJ0aWVzKG1heWJlUHJvcGVydGllcykge1xuICAgIHJldHVybiBpc1ZhbGlkT2JqZWN0KG1heWJlUHJvcGVydGllcywge1xuICAgICAgICByZXF1aXJlZEtleXM6IFtcIm5hbWVcIl0sXG4gICAgICAgIHByb3BlcnR5VmFsaWRhdG9yOiAoa2V5KSA9PiB7XG4gICAgICAgICAgICBpZiAoa2V5ID09PSBcIm5hbWVcIikge1xuICAgICAgICAgICAgICAgIHJldHVybiBtYXliZVByb3BlcnRpZXMubmFtZSA9PT0gV29ybGRHZW9kZXRpY1N5c3RlbTE5ODQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgfSk7XG59XG5mdW5jdGlvbiBpc1ZhbGlkT2JqZWN0KG9iaiwgb3B0aW9ucyA9IHt9KSB7XG4gICAgaWYgKHR5cGVvZiBvYmogIT09IFwib2JqZWN0XCIgfHwgb2JqID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKG9iaik7XG4gICAgaWYgKG9wdGlvbnMucmVxdWlyZWRLZXlzKSB7XG4gICAgICAgIGZvciAoY29uc3QgcmVxdWlyZWRLZXkgb2Ygb3B0aW9ucy5yZXF1aXJlZEtleXMpIHtcbiAgICAgICAgICAgIGlmICgha2V5cy5pbmNsdWRlcyhyZXF1aXJlZEtleSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKG9wdGlvbnMucHJvcGVydHlWYWxpZGF0b3IpIHtcbiAgICAgICAgZm9yIChjb25zdCBrZXkgb2Yga2V5cykge1xuICAgICAgICAgICAgaWYgKCFvcHRpb25zLnByb3BlcnR5VmFsaWRhdG9yKGtleSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZXJpYWxpemF0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/serialization.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/serviceModels.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/serviceModels.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KnownAnalyzerNames: () => (/* binding */ KnownAnalyzerNames),\n/* harmony export */   KnownCharFilterNames: () => (/* binding */ KnownCharFilterNames),\n/* harmony export */   KnownTokenFilterNames: () => (/* binding */ KnownTokenFilterNames),\n/* harmony export */   KnownTokenizerNames: () => (/* binding */ KnownTokenizerNames),\n/* harmony export */   isComplexField: () => (/* binding */ isComplexField)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nfunction isComplexField(field) {\n    return field.type === \"Edm.ComplexType\" || field.type === \"Collection(Edm.ComplexType)\";\n}\n/**\n * Defines values for TokenizerName.\n * @readonly\n */\nvar KnownTokenizerNames;\n(function (KnownTokenizerNames) {\n    /**\n     * Grammar-based tokenizer that is suitable for processing most European-language documents. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/ClassicTokenizer.html\n     */\n    KnownTokenizerNames[\"Classic\"] = \"classic\";\n    /**\n     * Tokenizes the input from an edge into n-grams of the given size(s). See\n     * https://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer.html\n     */\n    KnownTokenizerNames[\"EdgeNGram\"] = \"edgeNGram\";\n    /**\n     * Emits the entire input as a single token. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/KeywordTokenizer.html\n     */\n    KnownTokenizerNames[\"Keyword\"] = \"keyword_v2\";\n    /**\n     * Divides text at non-letters. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/LetterTokenizer.html\n     */\n    KnownTokenizerNames[\"Letter\"] = \"letter\";\n    /**\n     * Divides text at non-letters and converts them to lower case. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/LowerCaseTokenizer.html\n     */\n    KnownTokenizerNames[\"Lowercase\"] = \"lowercase\";\n    /**\n     * Divides text using language-specific rules.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    KnownTokenizerNames[\"MicrosoftLanguageTokenizer\"] = \"microsoft_language_tokenizer\";\n    /**\n     * Divides text using language-specific rules and reduces words to their base forms.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    KnownTokenizerNames[\"MicrosoftLanguageStemmingTokenizer\"] = \"microsoft_language_stemming_tokenizer\";\n    /**\n     * Tokenizes the input into n-grams of the given size(s). See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/NGramTokenizer.html\n     */\n    KnownTokenizerNames[\"NGram\"] = \"nGram\";\n    /**\n     * Tokenizer for path-like hierarchies. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/path/PathHierarchyTokenizer.html\n     */\n    KnownTokenizerNames[\"PathHierarchy\"] = \"path_hierarchy_v2\";\n    /**\n     * Tokenizer that uses regex pattern matching to construct distinct tokens. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/pattern/PatternTokenizer.html\n     */\n    KnownTokenizerNames[\"Pattern\"] = \"pattern\";\n    /**\n     * Standard Lucene analyzer; Composed of the standard tokenizer, lowercase filter and stop\n     * filter. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/StandardTokenizer.html\n     */\n    KnownTokenizerNames[\"Standard\"] = \"standard_v2\";\n    /**\n     * Tokenizes urls and emails as one token. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/UAX29URLEmailTokenizer.html\n     */\n    KnownTokenizerNames[\"UaxUrlEmail\"] = \"uax_url_email\";\n    /**\n     * Divides text at whitespace. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/WhitespaceTokenizer.html\n     */\n    KnownTokenizerNames[\"Whitespace\"] = \"whitespace\";\n})(KnownTokenizerNames || (KnownTokenizerNames = {}));\n/**\n * Defines values for TokenFilterName.\n * @readonly\n */\nvar KnownTokenFilterNames;\n(function (KnownTokenFilterNames) {\n    /**\n     * A token filter that applies the Arabic normalizer to normalize the orthography. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ar/ArabicNormalizationFilter.html\n     */\n    KnownTokenFilterNames[\"ArabicNormalization\"] = \"arabic_normalization\";\n    /**\n     * Strips all characters after an apostrophe (including the apostrophe itself). See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/tr/ApostropheFilter.html\n     */\n    KnownTokenFilterNames[\"Apostrophe\"] = \"apostrophe\";\n    /**\n     * Converts alphabetic, numeric, and symbolic Unicode characters which are not in the first 127\n     * ASCII characters (the \"Basic Latin\" Unicode block) into their ASCII equivalents, if such\n     * equivalents exist. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter.html\n     */\n    KnownTokenFilterNames[\"AsciiFolding\"] = \"asciifolding\";\n    /**\n     * Forms bigrams of CJK terms that are generated from StandardTokenizer. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/cjk/CJKBigramFilter.html\n     */\n    KnownTokenFilterNames[\"CjkBigram\"] = \"cjk_bigram\";\n    /**\n     * Normalizes CJK width differences. Folds fullwidth ASCII variants into the equivalent basic\n     * Latin, and half-width Katakana variants into the equivalent Kana. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/cjk/CJKWidthFilter.html\n     */\n    KnownTokenFilterNames[\"CjkWidth\"] = \"cjk_width\";\n    /**\n     * Removes English possessives, and dots from acronyms. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/ClassicFilter.html\n     */\n    KnownTokenFilterNames[\"Classic\"] = \"classic\";\n    /**\n     * Construct bigrams for frequently occurring terms while indexing. Single terms are still\n     * indexed too, with bigrams overlaid. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/commongrams/CommonGramsFilter.html\n     */\n    KnownTokenFilterNames[\"CommonGram\"] = \"common_grams\";\n    /**\n     * Generates n-grams of the given size(s) starting from the front or the back of an input token.\n     * See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilter.html\n     */\n    KnownTokenFilterNames[\"EdgeNGram\"] = \"edgeNGram_v2\";\n    /**\n     * Removes elisions. For example, \"l'avion\" (the plane) will be converted to \"avion\" (plane). See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/util/ElisionFilter.html\n     */\n    KnownTokenFilterNames[\"Elision\"] = \"elision\";\n    /**\n     * Normalizes German characters according to the heuristics of the German2 snowball algorithm.\n     * See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/de/GermanNormalizationFilter.html\n     */\n    KnownTokenFilterNames[\"GermanNormalization\"] = \"german_normalization\";\n    /**\n     * Normalizes text in Hindi to remove some differences in spelling variations. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/hi/HindiNormalizationFilter.html\n     */\n    KnownTokenFilterNames[\"HindiNormalization\"] = \"hindi_normalization\";\n    /**\n     * Normalizes the Unicode representation of text in Indian languages. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/in/IndicNormalizationFilter.html\n     */\n    KnownTokenFilterNames[\"IndicNormalization\"] = \"indic_normalization\";\n    /**\n     * Emits each incoming token twice, once as keyword and once as non-keyword. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/KeywordRepeatFilter.html\n     */\n    KnownTokenFilterNames[\"KeywordRepeat\"] = \"keyword_repeat\";\n    /**\n     * A high-performance kstem filter for English. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/en/KStemFilter.html\n     */\n    KnownTokenFilterNames[\"KStem\"] = \"kstem\";\n    /**\n     * Removes words that are too long or too short. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/LengthFilter.html\n     */\n    KnownTokenFilterNames[\"Length\"] = \"length\";\n    /**\n     * Limits the number of tokens while indexing. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilter.html\n     */\n    KnownTokenFilterNames[\"Limit\"] = \"limit\";\n    /**\n     * Normalizes token text to lower case. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/LowerCaseFilter.htm\n     */\n    KnownTokenFilterNames[\"Lowercase\"] = \"lowercase\";\n    /**\n     * Generates n-grams of the given size(s). See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/NGramTokenFilter.html\n     */\n    KnownTokenFilterNames[\"NGram\"] = \"nGram_v2\";\n    /**\n     * Applies normalization for Persian. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/fa/PersianNormalizationFilter.html\n     */\n    KnownTokenFilterNames[\"PersianNormalization\"] = \"persian_normalization\";\n    /**\n     * Create tokens for phonetic matches. See\n     * https://lucene.apache.org/core/4_10_3/analyzers-phonetic/org/apache/lucene/analysis/phonetic/package-tree.html\n     */\n    KnownTokenFilterNames[\"Phonetic\"] = \"phonetic\";\n    /**\n     * Uses the Porter stemming algorithm to transform the token stream. See\n     * http://tartarus.org/~martin/PorterStemmer\n     */\n    KnownTokenFilterNames[\"PorterStem\"] = \"porter_stem\";\n    /**\n     * Reverses the token string. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/reverse/ReverseStringFilter.html\n     */\n    KnownTokenFilterNames[\"Reverse\"] = \"reverse\";\n    /**\n     * Normalizes use of the interchangeable Scandinavian characters. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ScandinavianNormalizationFilter.html\n     */\n    KnownTokenFilterNames[\"ScandinavianNormalization\"] = \"scandinavian_normalization\";\n    /**\n     * Folds Scandinavian characters åÅäæÄÆ-&gt;a and öÖøØ-&gt;o. It also discriminates against use\n     * of double vowels aa, ae, ao, oe and oo, leaving just the first one. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ScandinavianFoldingFilter.html\n     */\n    KnownTokenFilterNames[\"ScandinavianFoldingNormalization\"] = \"scandinavian_folding\";\n    /**\n     * Creates combinations of tokens as a single token. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/shingle/ShingleFilter.html\n     */\n    KnownTokenFilterNames[\"Shingle\"] = \"shingle\";\n    /**\n     * A filter that stems words using a Snowball-generated stemmer. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/snowball/SnowballFilter.html\n     */\n    KnownTokenFilterNames[\"Snowball\"] = \"snowball\";\n    /**\n     * Normalizes the Unicode representation of Sorani text. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ckb/SoraniNormalizationFilter.html\n     */\n    KnownTokenFilterNames[\"SoraniNormalization\"] = \"sorani_normalization\";\n    /**\n     * Language specific stemming filter. See\n     * https://docs.microsoft.com/rest/api/searchservice/Custom-analyzers-in-Azure-Search#TokenFilters\n     */\n    KnownTokenFilterNames[\"Stemmer\"] = \"stemmer\";\n    /**\n     * Removes stop words from a token stream. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/StopFilter.html\n     */\n    KnownTokenFilterNames[\"Stopwords\"] = \"stopwords\";\n    /**\n     * Trims leading and trailing whitespace from tokens. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/TrimFilter.html\n     */\n    KnownTokenFilterNames[\"Trim\"] = \"trim\";\n    /**\n     * Truncates the terms to a specific length. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/TruncateTokenFilter.html\n     */\n    KnownTokenFilterNames[\"Truncate\"] = \"truncate\";\n    /**\n     * Filters out tokens with same text as the previous token. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/RemoveDuplicatesTokenFilter.html\n     */\n    KnownTokenFilterNames[\"Unique\"] = \"unique\";\n    /**\n     * Normalizes token text to upper case. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/UpperCaseFilter.html\n     */\n    KnownTokenFilterNames[\"Uppercase\"] = \"uppercase\";\n    /**\n     * Splits words into subwords and performs optional transformations on subword groups.\n     */\n    KnownTokenFilterNames[\"WordDelimiter\"] = \"word_delimiter\";\n})(KnownTokenFilterNames || (KnownTokenFilterNames = {}));\n/**\n * Defines values for CharFilterName.\n * @readonly\n */\nvar KnownCharFilterNames;\n(function (KnownCharFilterNames) {\n    /**\n     * A character filter that attempts to strip out HTML constructs. See\n     * https://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.html\n     */\n    KnownCharFilterNames[\"HtmlStrip\"] = \"html_strip\";\n})(KnownCharFilterNames || (KnownCharFilterNames = {}));\n/**\n * Defines values for AnalyzerName.\n * See https://docs.microsoft.com/rest/api/searchservice/Language-support\n * @readonly\n */\nvar KnownAnalyzerNames;\n(function (KnownAnalyzerNames) {\n    /**\n     * Arabic\n     */\n    KnownAnalyzerNames[\"ArMicrosoft\"] = \"ar.microsoft\";\n    /**\n     * Arabic\n     */\n    KnownAnalyzerNames[\"ArLucene\"] = \"ar.lucene\";\n    /**\n     * Armenian\n     */\n    KnownAnalyzerNames[\"HyLucene\"] = \"hy.lucene\";\n    /**\n     * Bangla\n     */\n    KnownAnalyzerNames[\"BnMicrosoft\"] = \"bn.microsoft\";\n    /**\n     * Basque\n     */\n    KnownAnalyzerNames[\"EuLucene\"] = \"eu.lucene\";\n    /**\n     * Bulgarian\n     */\n    KnownAnalyzerNames[\"BgMicrosoft\"] = \"bg.microsoft\";\n    /**\n     * Bulgarian\n     */\n    KnownAnalyzerNames[\"BgLucene\"] = \"bg.lucene\";\n    /**\n     * Catalan\n     */\n    KnownAnalyzerNames[\"CaMicrosoft\"] = \"ca.microsoft\";\n    /**\n     * Catalan\n     */\n    KnownAnalyzerNames[\"CaLucene\"] = \"ca.lucene\";\n    /**\n     * Chinese Simplified\n     */\n    KnownAnalyzerNames[\"ZhHansMicrosoft\"] = \"zh-Hans.microsoft\";\n    /**\n     * Chinese Simplified\n     */\n    KnownAnalyzerNames[\"ZhHansLucene\"] = \"zh-Hans.lucene\";\n    /**\n     * Chinese Traditional\n     */\n    KnownAnalyzerNames[\"ZhHantMicrosoft\"] = \"zh-Hant.microsoft\";\n    /**\n     * Chinese Traditional\n     */\n    KnownAnalyzerNames[\"ZhHantLucene\"] = \"zh-Hant.lucene\";\n    /**\n     * Croatian\n     */\n    KnownAnalyzerNames[\"HrMicrosoft\"] = \"hr.microsoft\";\n    /**\n     * Czech\n     */\n    KnownAnalyzerNames[\"CsMicrosoft\"] = \"cs.microsoft\";\n    /**\n     * Czech\n     */\n    KnownAnalyzerNames[\"CsLucene\"] = \"cs.lucene\";\n    /**\n     * Danish\n     */\n    KnownAnalyzerNames[\"DaMicrosoft\"] = \"da.microsoft\";\n    /**\n     * Danish\n     */\n    KnownAnalyzerNames[\"DaLucene\"] = \"da.lucene\";\n    /**\n     * Dutch\n     */\n    KnownAnalyzerNames[\"NlMicrosoft\"] = \"nl.microsoft\";\n    /**\n     * Dutch\n     */\n    KnownAnalyzerNames[\"NlLucene\"] = \"nl.lucene\";\n    /**\n     * English\n     */\n    KnownAnalyzerNames[\"EnMicrosoft\"] = \"en.microsoft\";\n    /**\n     * English\n     */\n    KnownAnalyzerNames[\"EnLucene\"] = \"en.lucene\";\n    /**\n     * Estonian\n     */\n    KnownAnalyzerNames[\"EtMicrosoft\"] = \"et.microsoft\";\n    /**\n     * Finnish\n     */\n    KnownAnalyzerNames[\"FiMicrosoft\"] = \"fi.microsoft\";\n    /**\n     * Finnish\n     */\n    KnownAnalyzerNames[\"FiLucene\"] = \"fi.lucene\";\n    /**\n     * French\n     */\n    KnownAnalyzerNames[\"FrMicrosoft\"] = \"fr.microsoft\";\n    /**\n     * French\n     */\n    KnownAnalyzerNames[\"FrLucene\"] = \"fr.lucene\";\n    /**\n     * Galician\n     */\n    KnownAnalyzerNames[\"GlLucene\"] = \"gl.lucene\";\n    /**\n     * German\n     */\n    KnownAnalyzerNames[\"DeMicrosoft\"] = \"de.microsoft\";\n    /**\n     * German\n     */\n    KnownAnalyzerNames[\"DeLucene\"] = \"de.lucene\";\n    /**\n     * Greek\n     */\n    KnownAnalyzerNames[\"ElMicrosoft\"] = \"el.microsoft\";\n    /**\n     * Greek\n     */\n    KnownAnalyzerNames[\"ElLucene\"] = \"el.lucene\";\n    /**\n     * Gujarati\n     */\n    KnownAnalyzerNames[\"GuMicrosoft\"] = \"gu.microsoft\";\n    /**\n     * Hebrew\n     */\n    KnownAnalyzerNames[\"HeMicrosoft\"] = \"he.microsoft\";\n    /**\n     * Hindi\n     */\n    KnownAnalyzerNames[\"HiMicrosoft\"] = \"hi.microsoft\";\n    /**\n     * Hindi\n     */\n    KnownAnalyzerNames[\"HiLucene\"] = \"hi.lucene\";\n    /**\n     * Hungarian\n     */\n    KnownAnalyzerNames[\"HuMicrosoft\"] = \"hu.microsoft\";\n    /**\n     * Hungarian\n     */\n    KnownAnalyzerNames[\"HuLucene\"] = \"hu.lucene\";\n    /**\n     * Icelandic\n     */\n    KnownAnalyzerNames[\"IsMicrosoft\"] = \"is.microsoft\";\n    /**\n     * Indonesian (Bahasa)\n     */\n    KnownAnalyzerNames[\"IdMicrosoft\"] = \"id.microsoft\";\n    /**\n     * Indonesian (Bahasa)\n     */\n    KnownAnalyzerNames[\"IdLucene\"] = \"id.lucene\";\n    /**\n     * Irish\n     */\n    KnownAnalyzerNames[\"GaLucene\"] = \"ga.lucene\";\n    /**\n     * Italian\n     */\n    KnownAnalyzerNames[\"ItMicrosoft\"] = \"it.microsoft\";\n    /**\n     * Italian\n     */\n    KnownAnalyzerNames[\"ItLucene\"] = \"it.lucene\";\n    /**\n     * Japanese\n     */\n    KnownAnalyzerNames[\"JaMicrosoft\"] = \"ja.microsoft\";\n    /**\n     * Japanese\n     */\n    KnownAnalyzerNames[\"JaLucene\"] = \"ja.lucene\";\n    /**\n     * Kannada\n     */\n    KnownAnalyzerNames[\"KnMicrosoft\"] = \"kn.microsoft\";\n    /**\n     * Korean\n     */\n    KnownAnalyzerNames[\"KoMicrosoft\"] = \"ko.microsoft\";\n    /**\n     * Korean\n     */\n    KnownAnalyzerNames[\"KoLucene\"] = \"ko.lucene\";\n    /**\n     * Latvian\n     */\n    KnownAnalyzerNames[\"LvMicrosoft\"] = \"lv.microsoft\";\n    /**\n     * Latvian\n     */\n    KnownAnalyzerNames[\"LvLucene\"] = \"lv.lucene\";\n    /**\n     * Lithuanian\n     */\n    KnownAnalyzerNames[\"LtMicrosoft\"] = \"lt.microsoft\";\n    /**\n     * Malayalam\n     */\n    KnownAnalyzerNames[\"MlMicrosoft\"] = \"ml.microsoft\";\n    /**\n     * Malay (Latin)\n     */\n    KnownAnalyzerNames[\"MsMicrosoft\"] = \"ms.microsoft\";\n    /**\n     * Marathi\n     */\n    KnownAnalyzerNames[\"MrMicrosoft\"] = \"mr.microsoft\";\n    /**\n     * Norwegian\n     */\n    KnownAnalyzerNames[\"NbMicrosoft\"] = \"nb.microsoft\";\n    /**\n     * Norwegian\n     */\n    KnownAnalyzerNames[\"NoLucene\"] = \"no.lucene\";\n    /**\n     * Persian\n     */\n    KnownAnalyzerNames[\"FaLucene\"] = \"fa.lucene\";\n    /**\n     * Polish\n     */\n    KnownAnalyzerNames[\"PlMicrosoft\"] = \"pl.microsoft\";\n    /**\n     * Polish\n     */\n    KnownAnalyzerNames[\"PlLucene\"] = \"pl.lucene\";\n    /**\n     * Portuguese (Brazil)\n     */\n    KnownAnalyzerNames[\"PtBRMicrosoft\"] = \"pt-BR.microsoft\";\n    /**\n     * Portuguese (Brazil)\n     */\n    KnownAnalyzerNames[\"PtBRLucene\"] = \"pt-BR.lucene\";\n    /**\n     * Portuguese (Portugal)\n     */\n    KnownAnalyzerNames[\"PtPTMicrosoft\"] = \"pt-PT.microsoft\";\n    /**\n     * Portuguese (Portugal)\n     */\n    KnownAnalyzerNames[\"PtPTLucene\"] = \"pt-PT.lucene\";\n    /**\n     * Punjabi\n     */ KnownAnalyzerNames[\"PaMicrosoft\"] = \"pa.microsoft\";\n    /**\n     * Romanian\n     */\n    KnownAnalyzerNames[\"RoMicrosoft\"] = \"ro.microsoft\";\n    /**\n     * Romanian\n     */\n    KnownAnalyzerNames[\"RoLucene\"] = \"ro.lucene\";\n    /**\n     * Russian\n     */\n    KnownAnalyzerNames[\"RuMicrosoft\"] = \"ru.microsoft\";\n    /**\n     * Russian\n     */\n    KnownAnalyzerNames[\"RuLucene\"] = \"ru.lucene\";\n    /**\n     * Serbian (Cyrillic)\n     */\n    KnownAnalyzerNames[\"SrCyrillicMicrosoft\"] = \"sr-cyrillic.microsoft\";\n    /**\n     * Serbian (Latin)\n     */\n    KnownAnalyzerNames[\"SrLatinMicrosoft\"] = \"sr-latin.microsoft\";\n    /**\n     * Slovak\n     */\n    KnownAnalyzerNames[\"SkMicrosoft\"] = \"sk.microsoft\";\n    /**\n     * Slovenian\n     */\n    KnownAnalyzerNames[\"SlMicrosoft\"] = \"sl.microsoft\";\n    /**\n     * Spanish\n     */\n    KnownAnalyzerNames[\"EsMicrosoft\"] = \"es.microsoft\";\n    /**\n     * Spanish\n     */\n    KnownAnalyzerNames[\"EsLucene\"] = \"es.lucene\";\n    /**\n     * Swedish\n     */\n    KnownAnalyzerNames[\"SvMicrosoft\"] = \"sv.microsoft\";\n    /**\n     * Swedish\n     */\n    KnownAnalyzerNames[\"SvLucene\"] = \"sv.lucene\";\n    /**\n     * Tamil\n     */\n    KnownAnalyzerNames[\"TaMicrosoft\"] = \"ta.microsoft\";\n    /**\n     * Telugu\n     */\n    KnownAnalyzerNames[\"TeMicrosoft\"] = \"te.microsoft\";\n    /**\n     * Thai\n     */\n    KnownAnalyzerNames[\"ThMicrosoft\"] = \"th.microsoft\";\n    /**\n     * Thai\n     */\n    KnownAnalyzerNames[\"ThLucene\"] = \"th.lucene\";\n    /**\n     * Turkish\n     */\n    KnownAnalyzerNames[\"TrMicrosoft\"] = \"tr.microsoft\";\n    /**\n     * Turkish\n     */\n    KnownAnalyzerNames[\"TrLucene\"] = \"tr.lucene\";\n    /**\n     * Ukrainian\n     */\n    KnownAnalyzerNames[\"UkMicrosoft\"] = \"uk.microsoft\";\n    /**\n     * Urdu\n     */\n    KnownAnalyzerNames[\"UrMicrosoft\"] = \"ur.microsoft\";\n    /**\n     * Vietnamese\n     */\n    KnownAnalyzerNames[\"ViMicrosoft\"] = \"vi.microsoft\";\n    /**\n     * See: https://lucene.apache.org/core/6_6_1/core/org/apache/lucene/analysis/standard/StandardAnalyzer.html\n     */\n    KnownAnalyzerNames[\"StandardLucene\"] = \"standard.lucene\";\n    /**\n     * See https://lucene.apache.org/core/6_6_1/analyzers-common/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter.html\n     */\n    KnownAnalyzerNames[\"StandardAsciiFoldingLucene\"] = \"standardasciifolding.lucene\";\n    /**\n     * Treats the entire content of a field as a single token. This is useful for data like zip codes, ids, and some product names.\n     */\n    KnownAnalyzerNames[\"Keyword\"] = \"keyword\";\n    /**\n     * Flexibly separates text into terms via a regular expression pattern.\n     */\n    KnownAnalyzerNames[\"Pattern\"] = \"pattern\";\n    /**\n     * Divides text at non-letters and converts them to lower case.\n     */\n    KnownAnalyzerNames[\"Simple\"] = \"simple\";\n    /**\n     * Divides text at non-letters; Applies the lowercase and stopword token filters.\n     */\n    KnownAnalyzerNames[\"Stop\"] = \"stop\";\n    /**\n     * An analyzer that uses the whitespace tokenizer.\n     */\n    KnownAnalyzerNames[\"Whitespace\"] = \"whitespace\";\n})(KnownAnalyzerNames || (KnownAnalyzerNames = {}));\n// END manually modified generated interfaces\n//# sourceMappingURL=serviceModels.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/serviceModels.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/serviceUtils.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/serviceUtils.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertCognitiveServicesAccountToGenerated: () => (/* binding */ convertCognitiveServicesAccountToGenerated),\n/* harmony export */   convertCognitiveServicesAccountToPublic: () => (/* binding */ convertCognitiveServicesAccountToPublic),\n/* harmony export */   convertDataChangeDetectionPolicyToPublic: () => (/* binding */ convertDataChangeDetectionPolicyToPublic),\n/* harmony export */   convertDataDeletionDetectionPolicyToPublic: () => (/* binding */ convertDataDeletionDetectionPolicyToPublic),\n/* harmony export */   convertFieldsToGenerated: () => (/* binding */ convertFieldsToGenerated),\n/* harmony export */   convertFieldsToPublic: () => (/* binding */ convertFieldsToPublic),\n/* harmony export */   convertSearchIndexerDataIdentityToPublic: () => (/* binding */ convertSearchIndexerDataIdentityToPublic),\n/* harmony export */   convertSimilarityToGenerated: () => (/* binding */ convertSimilarityToGenerated),\n/* harmony export */   convertSimilarityToPublic: () => (/* binding */ convertSimilarityToPublic),\n/* harmony export */   convertSkillsToPublic: () => (/* binding */ convertSkillsToPublic),\n/* harmony export */   convertTokenFiltersToGenerated: () => (/* binding */ convertTokenFiltersToGenerated),\n/* harmony export */   defaultServiceVersion: () => (/* binding */ defaultServiceVersion),\n/* harmony export */   generatedDataSourceToPublicDataSource: () => (/* binding */ generatedDataSourceToPublicDataSource),\n/* harmony export */   generatedIndexToPublicIndex: () => (/* binding */ generatedIndexToPublicIndex),\n/* harmony export */   generatedSearchIndexerToPublicSearchIndexer: () => (/* binding */ generatedSearchIndexerToPublicSearchIndexer),\n/* harmony export */   generatedSearchResultToPublicSearchResult: () => (/* binding */ generatedSearchResultToPublicSearchResult),\n/* harmony export */   generatedSkillsetToPublicSkillset: () => (/* binding */ generatedSkillsetToPublicSkillset),\n/* harmony export */   generatedSuggestDocumentsResultToPublicSuggestDocumentsResult: () => (/* binding */ generatedSuggestDocumentsResultToPublicSuggestDocumentsResult),\n/* harmony export */   generatedSynonymMapToPublicSynonymMap: () => (/* binding */ generatedSynonymMapToPublicSynonymMap),\n/* harmony export */   generatedVectorSearchAlgorithmConfigurationToPublicVectorSearchAlgorithmConfiguration: () => (/* binding */ generatedVectorSearchAlgorithmConfigurationToPublicVectorSearchAlgorithmConfiguration),\n/* harmony export */   generatedVectorSearchToPublicVectorSearch: () => (/* binding */ generatedVectorSearchToPublicVectorSearch),\n/* harmony export */   generatedVectorSearchVectorizerToPublicVectorizer: () => (/* binding */ generatedVectorSearchVectorizerToPublicVectorizer),\n/* harmony export */   getRandomIntegerInclusive: () => (/* binding */ getRandomIntegerInclusive),\n/* harmony export */   publicDataSourceToGeneratedDataSource: () => (/* binding */ publicDataSourceToGeneratedDataSource),\n/* harmony export */   publicIndexToGeneratedIndex: () => (/* binding */ publicIndexToGeneratedIndex),\n/* harmony export */   publicSearchIndexerToGeneratedSearchIndexer: () => (/* binding */ publicSearchIndexerToGeneratedSearchIndexer),\n/* harmony export */   publicSkillsetToGeneratedSkillset: () => (/* binding */ publicSkillsetToGeneratedSkillset),\n/* harmony export */   publicSynonymMapToGeneratedSynonymMap: () => (/* binding */ publicSynonymMapToGeneratedSynonymMap)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logger */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/logger.js\");\n/* harmony import */ var _serviceModels__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./serviceModels */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/serviceModels.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\nconst defaultServiceVersion = \"2024-07-01\";\nconst knownSkills = {\n    \"#Microsoft.Skills.Custom.WebApiSkill\": true,\n    \"#Microsoft.Skills.Text.AzureOpenAIEmbeddingSkill\": true,\n    \"#Microsoft.Skills.Text.CustomEntityLookupSkill\": true,\n    \"#Microsoft.Skills.Text.EntityRecognitionSkill\": true,\n    \"#Microsoft.Skills.Text.KeyPhraseExtractionSkill\": true,\n    \"#Microsoft.Skills.Text.LanguageDetectionSkill\": true,\n    \"#Microsoft.Skills.Text.MergeSkill\": true,\n    \"#Microsoft.Skills.Text.PIIDetectionSkill\": true,\n    \"#Microsoft.Skills.Text.SentimentSkill\": true,\n    \"#Microsoft.Skills.Text.SplitSkill\": true,\n    \"#Microsoft.Skills.Text.TranslationSkill\": true,\n    \"#Microsoft.Skills.Text.V3.EntityLinkingSkill\": true,\n    \"#Microsoft.Skills.Text.V3.EntityRecognitionSkill\": true,\n    \"#Microsoft.Skills.Text.V3.SentimentSkill\": true,\n    \"#Microsoft.Skills.Util.ConditionalSkill\": true,\n    \"#Microsoft.Skills.Util.DocumentExtractionSkill\": true,\n    \"#Microsoft.Skills.Util.ShaperSkill\": true,\n    \"#Microsoft.Skills.Vision.ImageAnalysisSkill\": true,\n    \"#Microsoft.Skills.Vision.OcrSkill\": true,\n};\nfunction convertSkillsToPublic(skills) {\n    if (!skills) {\n        return skills;\n    }\n    // This validation has already GAed\n    return skills.filter((skill) => knownSkills[skill.odatatype]);\n}\nfunction convertCognitiveServicesAccountToGenerated(cognitiveServicesAccount) {\n    if (!cognitiveServicesAccount) {\n        return cognitiveServicesAccount;\n    }\n    return cognitiveServicesAccount;\n}\nfunction convertCognitiveServicesAccountToPublic(cognitiveServicesAccount) {\n    if (!cognitiveServicesAccount) {\n        return cognitiveServicesAccount;\n    }\n    if (cognitiveServicesAccount.odatatype === \"#Microsoft.Azure.Search.DefaultCognitiveServices\") {\n        return cognitiveServicesAccount;\n    }\n    else {\n        return cognitiveServicesAccount;\n    }\n}\nfunction convertTokenFiltersToGenerated(tokenFilters) {\n    if (!tokenFilters) {\n        return tokenFilters;\n    }\n    const result = [];\n    for (const filter of tokenFilters) {\n        result.push(filter);\n    }\n    return result;\n}\nfunction convertAnalyzersToGenerated(analyzers) {\n    if (!analyzers) {\n        return analyzers;\n    }\n    const result = [];\n    for (const analyzer of analyzers) {\n        switch (analyzer.odatatype) {\n            case \"#Microsoft.Azure.Search.StandardAnalyzer\":\n            case \"#Microsoft.Azure.Search.StopAnalyzer\":\n                result.push(analyzer);\n                break;\n            case \"#Microsoft.Azure.Search.PatternAnalyzer\":\n                result.push(Object.assign(Object.assign({}, analyzer), { flags: analyzer.flags ? analyzer.flags.join(\"|\") : undefined }));\n                break;\n            case \"#Microsoft.Azure.Search.CustomAnalyzer\":\n                result.push(Object.assign(Object.assign({}, analyzer), { tokenizerName: analyzer.tokenizerName }));\n                break;\n        }\n    }\n    return result;\n}\nfunction convertAnalyzersToPublic(analyzers) {\n    if (!analyzers) {\n        return analyzers;\n    }\n    const result = [];\n    for (const analyzer of analyzers) {\n        switch (analyzer.odatatype) {\n            case \"#Microsoft.Azure.Search.StandardAnalyzer\":\n                result.push(analyzer);\n                break;\n            case \"#Microsoft.Azure.Search.StopAnalyzer\":\n                result.push(analyzer);\n                break;\n            case \"#Microsoft.Azure.Search.PatternAnalyzer\":\n                result.push(Object.assign(Object.assign({}, analyzer), { flags: analyzer.flags\n                        ? analyzer.flags.split(\"|\")\n                        : undefined }));\n                break;\n            case \"#Microsoft.Azure.Search.CustomAnalyzer\":\n                result.push(analyzer);\n                break;\n        }\n    }\n    return result;\n}\nfunction convertFieldsToPublic(fields) {\n    if (!fields) {\n        return fields;\n    }\n    return fields.map((field) => {\n        if (field.type === \"Collection(Edm.ComplexType)\" || field.type === \"Edm.ComplexType\") {\n            const result = {\n                name: field.name,\n                type: field.type,\n                fields: convertFieldsToPublic(field.fields),\n            };\n            return result;\n        }\n        else {\n            const type = field.type;\n            const synonymMapNames = field.synonymMaps;\n            const { retrievable, analyzer, searchAnalyzer, indexAnalyzer } = field, restField = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(field, [\"retrievable\", \"analyzer\", \"searchAnalyzer\", \"indexAnalyzer\"]);\n            const hidden = typeof retrievable === \"boolean\" ? !retrievable : retrievable;\n            const result = Object.assign(Object.assign({}, restField), { type,\n                hidden, analyzerName: analyzer, searchAnalyzerName: searchAnalyzer, indexAnalyzerName: indexAnalyzer, synonymMapNames });\n            return result;\n        }\n    });\n}\nfunction convertFieldsToGenerated(fields) {\n    return fields.map((field) => {\n        var _a, _b, _c, _d;\n        if ((0,_serviceModels__WEBPACK_IMPORTED_MODULE_1__.isComplexField)(field)) {\n            return {\n                name: field.name,\n                type: field.type,\n                fields: field.fields ? convertFieldsToGenerated(field.fields) : field.fields,\n            };\n        }\n        else {\n            const { hidden } = field, restField = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(field, [\"hidden\"]);\n            const retrievable = typeof hidden === \"boolean\" ? !hidden : hidden;\n            return Object.assign(Object.assign({}, restField), { retrievable, \n                // modify API defaults to use less storage for simple types\n                searchable: (_a = field.searchable) !== null && _a !== void 0 ? _a : false, filterable: (_b = field.filterable) !== null && _b !== void 0 ? _b : false, facetable: (_c = field.facetable) !== null && _c !== void 0 ? _c : false, sortable: (_d = field.sortable) !== null && _d !== void 0 ? _d : false, analyzer: field.analyzerName, searchAnalyzer: field.searchAnalyzerName, indexAnalyzer: field.indexAnalyzerName, synonymMaps: field.synonymMapNames });\n        }\n    });\n}\nfunction convertTokenizersToGenerated(tokenizers) {\n    if (!tokenizers) {\n        return tokenizers;\n    }\n    const result = [];\n    for (const tokenizer of tokenizers) {\n        if (tokenizer.odatatype === \"#Microsoft.Azure.Search.PatternTokenizer\") {\n            result.push(Object.assign(Object.assign({}, tokenizer), { flags: tokenizer.flags ? tokenizer.flags.join(\"|\") : undefined }));\n        }\n        else {\n            result.push(tokenizer);\n        }\n    }\n    return result;\n}\nfunction convertTokenizersToPublic(tokenizers) {\n    var _a;\n    if (!tokenizers) {\n        return tokenizers;\n    }\n    const result = [];\n    for (const tokenizer of tokenizers) {\n        if (tokenizer.odatatype === \"#Microsoft.Azure.Search.PatternTokenizer\") {\n            const patternTokenizer = tokenizer;\n            const flags = (_a = patternTokenizer.flags) === null || _a === void 0 ? void 0 : _a.split(\"|\");\n            result.push(Object.assign(Object.assign({}, tokenizer), { flags }));\n        }\n        else {\n            result.push(tokenizer);\n        }\n    }\n    return result;\n}\nfunction convertSimilarityToGenerated(similarity) {\n    if (!similarity) {\n        return similarity;\n    }\n    return similarity;\n}\nfunction convertSimilarityToPublic(similarity) {\n    if (!similarity) {\n        return similarity;\n    }\n    if (similarity.odatatype === \"#Microsoft.Azure.Search.ClassicSimilarity\") {\n        return similarity;\n    }\n    else {\n        return similarity;\n    }\n}\nfunction convertEncryptionKeyToPublic(encryptionKey) {\n    if (!encryptionKey) {\n        return encryptionKey;\n    }\n    const result = {\n        keyName: encryptionKey.keyName,\n        keyVersion: encryptionKey.keyVersion,\n        vaultUrl: encryptionKey.vaultUri,\n    };\n    if (encryptionKey.accessCredentials) {\n        result.applicationId = encryptionKey.accessCredentials.applicationId;\n        result.applicationSecret = encryptionKey.accessCredentials.applicationSecret;\n    }\n    return result;\n}\nfunction convertEncryptionKeyToGenerated(encryptionKey) {\n    if (!encryptionKey) {\n        return encryptionKey;\n    }\n    const result = {\n        keyName: encryptionKey.keyName,\n        keyVersion: encryptionKey.keyVersion,\n        vaultUri: encryptionKey.vaultUrl,\n    };\n    if (encryptionKey.applicationId) {\n        result.accessCredentials = {\n            applicationId: encryptionKey.applicationId,\n            applicationSecret: encryptionKey.applicationSecret,\n        };\n    }\n    return result;\n}\nfunction generatedIndexToPublicIndex(generatedIndex) {\n    return {\n        name: generatedIndex.name,\n        defaultScoringProfile: generatedIndex.defaultScoringProfile,\n        corsOptions: generatedIndex.corsOptions,\n        suggesters: generatedIndex.suggesters,\n        encryptionKey: convertEncryptionKeyToPublic(generatedIndex.encryptionKey),\n        etag: generatedIndex.etag,\n        analyzers: convertAnalyzersToPublic(generatedIndex.analyzers),\n        tokenizers: convertTokenizersToPublic(generatedIndex.tokenizers),\n        tokenFilters: generatedIndex.tokenFilters,\n        charFilters: generatedIndex.charFilters,\n        scoringProfiles: generatedIndex.scoringProfiles,\n        fields: convertFieldsToPublic(generatedIndex.fields),\n        similarity: convertSimilarityToPublic(generatedIndex.similarity),\n        semanticSearch: generatedIndex.semanticSearch,\n        vectorSearch: generatedVectorSearchToPublicVectorSearch(generatedIndex.vectorSearch),\n    };\n}\nfunction generatedVectorSearchVectorizerToPublicVectorizer(generatedVectorizer) {\n    if (!generatedVectorizer) {\n        return generatedVectorizer;\n    }\n    switch (generatedVectorizer.kind) {\n        case \"azureOpenAI\": {\n            const { parameters } = generatedVectorizer;\n            const authIdentity = convertSearchIndexerDataIdentityToPublic(parameters === null || parameters === void 0 ? void 0 : parameters.authIdentity);\n            const vectorizer = Object.assign(Object.assign({}, generatedVectorizer), { parameters: Object.assign(Object.assign({}, parameters), { authIdentity }) });\n            return vectorizer;\n        }\n        case \"customWebApi\": {\n            const { parameters } = generatedVectorizer;\n            const authIdentity = convertSearchIndexerDataIdentityToPublic(parameters === null || parameters === void 0 ? void 0 : parameters.authIdentity);\n            const vectorizer = Object.assign(Object.assign({}, generatedVectorizer), { parameters: Object.assign(Object.assign({}, parameters), { authIdentity }) });\n            return vectorizer;\n        }\n    }\n    _logger__WEBPACK_IMPORTED_MODULE_2__.logger.warning(`Unsupported vectorizer kind: ${generatedVectorizer.kind}`);\n    return generatedVectorizer;\n}\nfunction generatedVectorSearchAlgorithmConfigurationToPublicVectorSearchAlgorithmConfiguration(generatedAlgorithmConfiguration) {\n    var _a;\n    if (!generatedAlgorithmConfiguration) {\n        return generatedAlgorithmConfiguration;\n    }\n    if ([\"hnsw\", \"exhaustiveKnn\"].includes(generatedAlgorithmConfiguration.kind)) {\n        const algorithmConfiguration = generatedAlgorithmConfiguration;\n        const metric = (_a = algorithmConfiguration.parameters) === null || _a === void 0 ? void 0 : _a.metric;\n        return Object.assign(Object.assign({}, algorithmConfiguration), { parameters: Object.assign(Object.assign({}, algorithmConfiguration.parameters), { metric }) });\n    }\n    throw Error(\"Unsupported algorithm configuration\");\n}\nfunction generatedVectorSearchToPublicVectorSearch(vectorSearch) {\n    var _a, _b;\n    if (!vectorSearch) {\n        return vectorSearch;\n    }\n    return Object.assign(Object.assign({}, vectorSearch), { algorithms: (_a = vectorSearch.algorithms) === null || _a === void 0 ? void 0 : _a.map(generatedVectorSearchAlgorithmConfigurationToPublicVectorSearchAlgorithmConfiguration), vectorizers: (_b = vectorSearch.vectorizers) === null || _b === void 0 ? void 0 : _b.map(generatedVectorSearchVectorizerToPublicVectorizer) });\n}\nfunction generatedSearchResultToPublicSearchResult(results) {\n    const returnValues = results.map((result) => {\n        const { _score: score, _highlights: highlights, _rerankerScore: rerankerScore, _captions: captions } = result, restProps = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(result, [\"_score\", \"_highlights\", \"_rerankerScore\", \"_captions\"]);\n        const obj = {\n            score,\n            highlights,\n            rerankerScore,\n            captions,\n            document: restProps,\n        };\n        return obj;\n    });\n    return returnValues;\n}\nfunction generatedSuggestDocumentsResultToPublicSuggestDocumentsResult(searchDocumentsResult) {\n    const results = searchDocumentsResult.results.map((element) => {\n        const { _text } = element, restProps = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(element, [\"_text\"]);\n        const obj = {\n            text: _text,\n            document: restProps,\n        };\n        return obj;\n    });\n    const result = {\n        results: results,\n        coverage: searchDocumentsResult.coverage,\n    };\n    return result;\n}\nfunction publicIndexToGeneratedIndex(index) {\n    const { encryptionKey, tokenFilters, analyzers, tokenizers, fields, similarity } = index;\n    return Object.assign(Object.assign({}, index), { encryptionKey: convertEncryptionKeyToGenerated(encryptionKey), tokenFilters: convertTokenFiltersToGenerated(tokenFilters), analyzers: convertAnalyzersToGenerated(analyzers), tokenizers: convertTokenizersToGenerated(tokenizers), fields: convertFieldsToGenerated(fields), similarity: convertSimilarityToGenerated(similarity) });\n}\nfunction generatedSkillsetToPublicSkillset(generatedSkillset) {\n    const { skills, cognitiveServicesAccount, encryptionKey, indexProjection } = generatedSkillset, props = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(generatedSkillset, [\"skills\", \"cognitiveServicesAccount\", \"encryptionKey\", \"indexProjection\"]);\n    return Object.assign(Object.assign({}, props), { skills: convertSkillsToPublic(skills), cognitiveServicesAccount: convertCognitiveServicesAccountToPublic(cognitiveServicesAccount), encryptionKey: convertEncryptionKeyToPublic(encryptionKey), indexProjection: indexProjection });\n}\nfunction publicSkillsetToGeneratedSkillset(skillset) {\n    return Object.assign(Object.assign({}, skillset), { name: skillset.name, description: skillset.description, etag: skillset.etag, skills: skillset.skills, cognitiveServicesAccount: convertCognitiveServicesAccountToGenerated(skillset.cognitiveServicesAccount), knowledgeStore: skillset.knowledgeStore, encryptionKey: convertEncryptionKeyToGenerated(skillset.encryptionKey) });\n}\nfunction generatedSynonymMapToPublicSynonymMap(synonymMap) {\n    const result = {\n        name: synonymMap.name,\n        encryptionKey: convertEncryptionKeyToPublic(synonymMap.encryptionKey),\n        etag: synonymMap.etag,\n        synonyms: [],\n    };\n    if (synonymMap.synonyms) {\n        result.synonyms = synonymMap.synonyms.split(\"\\n\");\n    }\n    return result;\n}\nfunction publicSynonymMapToGeneratedSynonymMap(synonymMap) {\n    const result = {\n        name: synonymMap.name,\n        format: \"solr\",\n        encryptionKey: convertEncryptionKeyToGenerated(synonymMap.encryptionKey),\n        etag: synonymMap.etag,\n        synonyms: synonymMap.synonyms.join(\"\\n\"),\n    };\n    result.encryptionKey = convertEncryptionKeyToGenerated(synonymMap.encryptionKey);\n    return result;\n}\nfunction publicSearchIndexerToGeneratedSearchIndexer(indexer) {\n    return Object.assign(Object.assign({}, indexer), { encryptionKey: convertEncryptionKeyToGenerated(indexer.encryptionKey) });\n}\nfunction generatedSearchIndexerToPublicSearchIndexer(indexer) {\n    var _a, _b, _c, _d;\n    const { parsingMode, dataToExtract, imageAction, pdfTextRotationAlgorithm, executionEnvironment, } = (_b = (_a = indexer.parameters) === null || _a === void 0 ? void 0 : _a.configuration) !== null && _b !== void 0 ? _b : {};\n    const configuration = ((_c = indexer.parameters) === null || _c === void 0 ? void 0 : _c.configuration) && Object.assign(Object.assign({}, (_d = indexer.parameters) === null || _d === void 0 ? void 0 : _d.configuration), { parsingMode: parsingMode, dataToExtract: dataToExtract, imageAction: imageAction, pdfTextRotationAlgorithm: pdfTextRotationAlgorithm, executionEnvironment: executionEnvironment });\n    const parameters = Object.assign(Object.assign({}, indexer.parameters), { configuration });\n    return Object.assign(Object.assign({}, indexer), { parameters, encryptionKey: convertEncryptionKeyToPublic(indexer.encryptionKey) });\n}\nfunction publicDataSourceToGeneratedDataSource(dataSource) {\n    return {\n        name: dataSource.name,\n        description: dataSource.description,\n        type: dataSource.type,\n        credentials: {\n            connectionString: dataSource.connectionString,\n        },\n        container: dataSource.container,\n        etag: dataSource.etag,\n        dataChangeDetectionPolicy: dataSource.dataChangeDetectionPolicy,\n        dataDeletionDetectionPolicy: dataSource.dataDeletionDetectionPolicy,\n        encryptionKey: convertEncryptionKeyToGenerated(dataSource.encryptionKey),\n    };\n}\nfunction generatedDataSourceToPublicDataSource(dataSource) {\n    return {\n        name: dataSource.name,\n        description: dataSource.name,\n        type: dataSource.type,\n        connectionString: dataSource.credentials.connectionString,\n        container: dataSource.container,\n        etag: dataSource.etag,\n        dataChangeDetectionPolicy: convertDataChangeDetectionPolicyToPublic(dataSource.dataChangeDetectionPolicy),\n        dataDeletionDetectionPolicy: convertDataDeletionDetectionPolicyToPublic(dataSource.dataDeletionDetectionPolicy),\n        encryptionKey: convertEncryptionKeyToPublic(dataSource.encryptionKey),\n    };\n}\nfunction convertSearchIndexerDataIdentityToPublic(searchIndexerDataIdentity) {\n    if (!searchIndexerDataIdentity) {\n        return searchIndexerDataIdentity;\n    }\n    if (searchIndexerDataIdentity.odatatype === \"#Microsoft.Azure.Search.DataNoneIdentity\") {\n        return searchIndexerDataIdentity;\n    }\n    else {\n        return searchIndexerDataIdentity;\n    }\n}\nfunction convertDataChangeDetectionPolicyToPublic(dataChangeDetectionPolicy) {\n    if (!dataChangeDetectionPolicy) {\n        return dataChangeDetectionPolicy;\n    }\n    if (dataChangeDetectionPolicy.odatatype ===\n        \"#Microsoft.Azure.Search.HighWaterMarkChangeDetectionPolicy\") {\n        return dataChangeDetectionPolicy;\n    }\n    else {\n        return dataChangeDetectionPolicy;\n    }\n}\nfunction convertDataDeletionDetectionPolicyToPublic(dataDeletionDetectionPolicy) {\n    if (!dataDeletionDetectionPolicy) {\n        return dataDeletionDetectionPolicy;\n    }\n    return dataDeletionDetectionPolicy;\n}\nfunction getRandomIntegerInclusive(min, max) {\n    // Make sure inputs are integers.\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    // Pick a random offset from zero to the size of the range.\n    // Since Math.random() can never return 1, we have to make the range one larger\n    // in order to be inclusive of the maximum value after we take the floor.\n    const offset = Math.floor(Math.random() * (max - min + 1));\n    return offset + min;\n}\n//# sourceMappingURL=serviceUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/serviceUtils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/tracing.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/tracing.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSpan: () => (/* binding */ createSpan)\n/* harmony export */ });\n/* harmony import */ var _azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-tracing */ \"(ssr)/./node_modules/@azure/core-tracing/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Creates a tracing client using the global tracer.\n * @internal\n */\nconst tracingClient = (0,_azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__.createTracingClient)({\n    namespace: \"Microsoft.Search\",\n    packageName: \"Azure.Search\",\n});\nconst createSpan = tracingClient.startSpan;\n//# sourceMappingURL=tracing.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL3NlYXJjaC1kb2N1bWVudHMvZGlzdC1lc20vc3JjL3RyYWNpbmcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQzBEO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHdFQUFtQjtBQUN6QztBQUNBO0FBQ0EsQ0FBQztBQUNNO0FBQ1AiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlIC0gSGVsbG8gU2NyaXB0IEFJXFxsaWZlQWdlbnRcXHZvaWNlLWxpdmUtYWdlbnRcXHNhbXBsZXNcXHJlYWN0XFxub2RlX21vZHVsZXNcXEBhenVyZVxcc2VhcmNoLWRvY3VtZW50c1xcZGlzdC1lc21cXHNyY1xcdHJhY2luZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmltcG9ydCB7IGNyZWF0ZVRyYWNpbmdDbGllbnQgfSBmcm9tIFwiQGF6dXJlL2NvcmUtdHJhY2luZ1wiO1xuLyoqXG4gKiBDcmVhdGVzIGEgdHJhY2luZyBjbGllbnQgdXNpbmcgdGhlIGdsb2JhbCB0cmFjZXIuXG4gKiBAaW50ZXJuYWxcbiAqL1xuY29uc3QgdHJhY2luZ0NsaWVudCA9IGNyZWF0ZVRyYWNpbmdDbGllbnQoe1xuICAgIG5hbWVzcGFjZTogXCJNaWNyb3NvZnQuU2VhcmNoXCIsXG4gICAgcGFja2FnZU5hbWU6IFwiQXp1cmUuU2VhcmNoXCIsXG59KTtcbmV4cG9ydCBjb25zdCBjcmVhdGVTcGFuID0gdHJhY2luZ0NsaWVudC5zdGFydFNwYW47XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFjaW5nLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/tracing.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/walk.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/walk.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   walk: () => (/* binding */ walk)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nfunction walk(v, fn) {\n    var _a;\n    const seen = new Set();\n    const mutated = new Map();\n    deepLazyApply(v);\n    for (const value of mutated.values()) {\n        replaceChildren(value);\n    }\n    return (_a = mutated.get(v)) !== null && _a !== void 0 ? _a : v;\n    function deepLazyApply(value) {\n        var _a, _b;\n        if (seen.has(value)) {\n            return;\n        }\n        seen.add(value);\n        const children = getChildren((_a = cachedApply(value)) !== null && _a !== void 0 ? _a : value);\n        children === null || children === void 0 ? void 0 : children.forEach(deepLazyApply);\n        if (children === null || children === void 0 ? void 0 : children.some((node) => mutated.has(node))) {\n            mutated.set(value, (_b = mutated.get(value)) !== null && _b !== void 0 ? _b : shallowCopy(value));\n        }\n    }\n    function cachedApply(value) {\n        const cached = mutated.get(value);\n        if ((0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.isDefined)(cached)) {\n            return cached;\n        }\n        const applied = fn(value);\n        if (value !== applied) {\n            mutated.set(value, applied);\n        }\n        return mutated.get(value);\n    }\n    function replaceChildren(applied) {\n        if (!isComplex(applied)) {\n            return;\n        }\n        else if (Array.isArray(applied)) {\n            applied.forEach((e, i) => {\n                var _a;\n                applied[i] = (_a = mutated.get(e)) !== null && _a !== void 0 ? _a : e;\n            });\n        }\n        else if (typeof applied === \"object\" && applied !== null) {\n            Object.keys(applied).forEach((key) => {\n                var _a;\n                applied[key] = (_a = mutated.get(applied[key])) !== null && _a !== void 0 ? _a : applied[key];\n            });\n        }\n    }\n}\n/**\n * Array inputs SHOULD not have both complex and non-complex elements. This function determines\n * whether an array is complex based solely on the first element.\n */\nfunction isComplex(v) {\n    return Array.isArray(v) ? isComplex(v[0]) : typeof v === \"object\" && v !== null;\n}\nfunction getChildren(v) {\n    if (!isComplex(v)) {\n        return;\n    }\n    if (Array.isArray(v)) {\n        return v;\n    }\n    return Object.values(v);\n}\nfunction shallowCopy(value) {\n    const maybeCopy = Array.isArray(value)\n        ? value.map((v) => v)\n        : typeof value === \"object\" && value !== null\n            ? Object.assign({}, value) : value;\n    return value === maybeCopy\n        ? value\n        : Object.setPrototypeOf(maybeCopy, Object.getPrototypeOf(value));\n}\n//# sourceMappingURL=walk.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL3NlYXJjaC1kb2N1bWVudHMvZGlzdC1lc20vc3JjL3dhbGsuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQzZDO0FBQ3RDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDJEQUFTO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZSAtIEhlbGxvIFNjcmlwdCBBSVxcbGlmZUFnZW50XFx2b2ljZS1saXZlLWFnZW50XFxzYW1wbGVzXFxyZWFjdFxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXHNlYXJjaC1kb2N1bWVudHNcXGRpc3QtZXNtXFxzcmNcXHdhbGsuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgeyBpc0RlZmluZWQgfSBmcm9tIFwiQGF6dXJlL2NvcmUtdXRpbFwiO1xuZXhwb3J0IGZ1bmN0aW9uIHdhbGsodiwgZm4pIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3Qgc2VlbiA9IG5ldyBTZXQoKTtcbiAgICBjb25zdCBtdXRhdGVkID0gbmV3IE1hcCgpO1xuICAgIGRlZXBMYXp5QXBwbHkodik7XG4gICAgZm9yIChjb25zdCB2YWx1ZSBvZiBtdXRhdGVkLnZhbHVlcygpKSB7XG4gICAgICAgIHJlcGxhY2VDaGlsZHJlbih2YWx1ZSk7XG4gICAgfVxuICAgIHJldHVybiAoX2EgPSBtdXRhdGVkLmdldCh2KSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogdjtcbiAgICBmdW5jdGlvbiBkZWVwTGF6eUFwcGx5KHZhbHVlKSB7XG4gICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgIGlmIChzZWVuLmhhcyh2YWx1ZSkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBzZWVuLmFkZCh2YWx1ZSk7XG4gICAgICAgIGNvbnN0IGNoaWxkcmVuID0gZ2V0Q2hpbGRyZW4oKF9hID0gY2FjaGVkQXBwbHkodmFsdWUpKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiB2YWx1ZSk7XG4gICAgICAgIGNoaWxkcmVuID09PSBudWxsIHx8IGNoaWxkcmVuID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjaGlsZHJlbi5mb3JFYWNoKGRlZXBMYXp5QXBwbHkpO1xuICAgICAgICBpZiAoY2hpbGRyZW4gPT09IG51bGwgfHwgY2hpbGRyZW4gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNoaWxkcmVuLnNvbWUoKG5vZGUpID0+IG11dGF0ZWQuaGFzKG5vZGUpKSkge1xuICAgICAgICAgICAgbXV0YXRlZC5zZXQodmFsdWUsIChfYiA9IG11dGF0ZWQuZ2V0KHZhbHVlKSkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogc2hhbGxvd0NvcHkodmFsdWUpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBjYWNoZWRBcHBseSh2YWx1ZSkge1xuICAgICAgICBjb25zdCBjYWNoZWQgPSBtdXRhdGVkLmdldCh2YWx1ZSk7XG4gICAgICAgIGlmIChpc0RlZmluZWQoY2FjaGVkKSkge1xuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZDtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBhcHBsaWVkID0gZm4odmFsdWUpO1xuICAgICAgICBpZiAodmFsdWUgIT09IGFwcGxpZWQpIHtcbiAgICAgICAgICAgIG11dGF0ZWQuc2V0KHZhbHVlLCBhcHBsaWVkKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbXV0YXRlZC5nZXQodmFsdWUpO1xuICAgIH1cbiAgICBmdW5jdGlvbiByZXBsYWNlQ2hpbGRyZW4oYXBwbGllZCkge1xuICAgICAgICBpZiAoIWlzQ29tcGxleChhcHBsaWVkKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoYXBwbGllZCkpIHtcbiAgICAgICAgICAgIGFwcGxpZWQuZm9yRWFjaCgoZSwgaSkgPT4ge1xuICAgICAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgICAgICBhcHBsaWVkW2ldID0gKF9hID0gbXV0YXRlZC5nZXQoZSkpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGU7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlb2YgYXBwbGllZCA9PT0gXCJvYmplY3RcIiAmJiBhcHBsaWVkICE9PSBudWxsKSB7XG4gICAgICAgICAgICBPYmplY3Qua2V5cyhhcHBsaWVkKS5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICAgICAgYXBwbGllZFtrZXldID0gKF9hID0gbXV0YXRlZC5nZXQoYXBwbGllZFtrZXldKSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogYXBwbGllZFtrZXldO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG59XG4vKipcbiAqIEFycmF5IGlucHV0cyBTSE9VTEQgbm90IGhhdmUgYm90aCBjb21wbGV4IGFuZCBub24tY29tcGxleCBlbGVtZW50cy4gVGhpcyBmdW5jdGlvbiBkZXRlcm1pbmVzXG4gKiB3aGV0aGVyIGFuIGFycmF5IGlzIGNvbXBsZXggYmFzZWQgc29sZWx5IG9uIHRoZSBmaXJzdCBlbGVtZW50LlxuICovXG5mdW5jdGlvbiBpc0NvbXBsZXgodikge1xuICAgIHJldHVybiBBcnJheS5pc0FycmF5KHYpID8gaXNDb21wbGV4KHZbMF0pIDogdHlwZW9mIHYgPT09IFwib2JqZWN0XCIgJiYgdiAhPT0gbnVsbDtcbn1cbmZ1bmN0aW9uIGdldENoaWxkcmVuKHYpIHtcbiAgICBpZiAoIWlzQ29tcGxleCh2KSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChBcnJheS5pc0FycmF5KHYpKSB7XG4gICAgICAgIHJldHVybiB2O1xuICAgIH1cbiAgICByZXR1cm4gT2JqZWN0LnZhbHVlcyh2KTtcbn1cbmZ1bmN0aW9uIHNoYWxsb3dDb3B5KHZhbHVlKSB7XG4gICAgY29uc3QgbWF5YmVDb3B5ID0gQXJyYXkuaXNBcnJheSh2YWx1ZSlcbiAgICAgICAgPyB2YWx1ZS5tYXAoKHYpID0+IHYpXG4gICAgICAgIDogdHlwZW9mIHZhbHVlID09PSBcIm9iamVjdFwiICYmIHZhbHVlICE9PSBudWxsXG4gICAgICAgICAgICA/IE9iamVjdC5hc3NpZ24oe30sIHZhbHVlKSA6IHZhbHVlO1xuICAgIHJldHVybiB2YWx1ZSA9PT0gbWF5YmVDb3B5XG4gICAgICAgID8gdmFsdWVcbiAgICAgICAgOiBPYmplY3Quc2V0UHJvdG90eXBlT2YobWF5YmVDb3B5LCBPYmplY3QuZ2V0UHJvdG90eXBlT2YodmFsdWUpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdhbGsuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/walk.js\n");

/***/ })

};
;