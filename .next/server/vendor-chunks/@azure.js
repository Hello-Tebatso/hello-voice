"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@azure";
exports.ids = ["vendor-chunks/@azure"];
exports.modules = {

/***/ "(ssr)/./node_modules/@azure/abort-controller/dist/esm/AbortError.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/abort-controller/dist/esm/AbortError.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbortError: () => (/* binding */ AbortError)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * ```ts\n * const controller = new AbortController();\n * controller.abort();\n * try {\n *   doAsyncWork(controller.signal)\n * } catch (e) {\n *   if (e.name === 'AbortError') {\n *     // handle abort error here.\n *   }\n * }\n * ```\n */\nclass AbortError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"AbortError\";\n    }\n}\n//# sourceMappingURL=AbortError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Fib3J0LWNvbnRyb2xsZXIvZGlzdC9lc20vQWJvcnRFcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxhYm9ydC1jb250cm9sbGVyXFxkaXN0XFxlc21cXEFib3J0RXJyb3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG4vKipcbiAqIFRoaXMgZXJyb3IgaXMgdGhyb3duIHdoZW4gYW4gYXN5bmNocm9ub3VzIG9wZXJhdGlvbiBoYXMgYmVlbiBhYm9ydGVkLlxuICogQ2hlY2sgZm9yIHRoaXMgZXJyb3IgYnkgdGVzdGluZyB0aGUgYG5hbWVgIHRoYXQgdGhlIG5hbWUgcHJvcGVydHkgb2YgdGhlXG4gKiBlcnJvciBtYXRjaGVzIGBcIkFib3J0RXJyb3JcImAuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBjb25zdCBjb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICogY29udHJvbGxlci5hYm9ydCgpO1xuICogdHJ5IHtcbiAqICAgZG9Bc3luY1dvcmsoY29udHJvbGxlci5zaWduYWwpXG4gKiB9IGNhdGNoIChlKSB7XG4gKiAgIGlmIChlLm5hbWUgPT09ICdBYm9ydEVycm9yJykge1xuICogICAgIC8vIGhhbmRsZSBhYm9ydCBlcnJvciBoZXJlLlxuICogICB9XG4gKiB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNsYXNzIEFib3J0RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5uYW1lID0gXCJBYm9ydEVycm9yXCI7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QWJvcnRFcnJvci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/abort-controller/dist/esm/AbortError.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/abort-controller/dist/esm/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/abort-controller/dist/esm/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbortError: () => (/* reexport safe */ _AbortError_js__WEBPACK_IMPORTED_MODULE_0__.AbortError)\n/* harmony export */ });\n/* harmony import */ var _AbortError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbortError.js */ \"(ssr)/./node_modules/@azure/abort-controller/dist/esm/AbortError.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Fib3J0LWNvbnRyb2xsZXIvZGlzdC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQzZDO0FBQzdDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGhlbGxvLXZvaWNlXFxub2RlX21vZHVsZXNcXEBhenVyZVxcYWJvcnQtY29udHJvbGxlclxcZGlzdFxcZXNtXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmV4cG9ydCB7IEFib3J0RXJyb3IgfSBmcm9tIFwiLi9BYm9ydEVycm9yLmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/abort-controller/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-auth/dist/esm/azureKeyCredential.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist/esm/azureKeyCredential.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzureKeyCredential: () => (/* binding */ AzureKeyCredential)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * A static-key-based credential that supports updating\n * the underlying key value.\n */\nclass AzureKeyCredential {\n    /**\n     * The value of the key to be used in authentication\n     */\n    get key() {\n        return this._key;\n    }\n    /**\n     * Create an instance of an AzureKeyCredential for use\n     * with a service client.\n     *\n     * @param key - The initial value of the key to use in authentication\n     */\n    constructor(key) {\n        if (!key) {\n            throw new Error(\"key must be a non-empty string\");\n        }\n        this._key = key;\n    }\n    /**\n     * Change the value of the key.\n     *\n     * Updates will take effect upon the next request after\n     * updating the key value.\n     *\n     * @param newKey - The new key value to be used\n     */\n    update(newKey) {\n        this._key = newKey;\n    }\n}\n//# sourceMappingURL=azureKeyCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtYXV0aC9kaXN0L2VzbS9henVyZUtleUNyZWRlbnRpYWwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLWF1dGhcXGRpc3RcXGVzbVxcYXp1cmVLZXlDcmVkZW50aWFsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqXG4gKiBBIHN0YXRpYy1rZXktYmFzZWQgY3JlZGVudGlhbCB0aGF0IHN1cHBvcnRzIHVwZGF0aW5nXG4gKiB0aGUgdW5kZXJseWluZyBrZXkgdmFsdWUuXG4gKi9cbmV4cG9ydCBjbGFzcyBBenVyZUtleUNyZWRlbnRpYWwge1xuICAgIC8qKlxuICAgICAqIFRoZSB2YWx1ZSBvZiB0aGUga2V5IHRvIGJlIHVzZWQgaW4gYXV0aGVudGljYXRpb25cbiAgICAgKi9cbiAgICBnZXQga2V5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fa2V5O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYW4gaW5zdGFuY2Ugb2YgYW4gQXp1cmVLZXlDcmVkZW50aWFsIGZvciB1c2VcbiAgICAgKiB3aXRoIGEgc2VydmljZSBjbGllbnQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ga2V5IC0gVGhlIGluaXRpYWwgdmFsdWUgb2YgdGhlIGtleSB0byB1c2UgaW4gYXV0aGVudGljYXRpb25cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihrZXkpIHtcbiAgICAgICAgaWYgKCFrZXkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcImtleSBtdXN0IGJlIGEgbm9uLWVtcHR5IHN0cmluZ1wiKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9rZXkgPSBrZXk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENoYW5nZSB0aGUgdmFsdWUgb2YgdGhlIGtleS5cbiAgICAgKlxuICAgICAqIFVwZGF0ZXMgd2lsbCB0YWtlIGVmZmVjdCB1cG9uIHRoZSBuZXh0IHJlcXVlc3QgYWZ0ZXJcbiAgICAgKiB1cGRhdGluZyB0aGUga2V5IHZhbHVlLlxuICAgICAqXG4gICAgICogQHBhcmFtIG5ld0tleSAtIFRoZSBuZXcga2V5IHZhbHVlIHRvIGJlIHVzZWRcbiAgICAgKi9cbiAgICB1cGRhdGUobmV3S2V5KSB7XG4gICAgICAgIHRoaXMuX2tleSA9IG5ld0tleTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1henVyZUtleUNyZWRlbnRpYWwuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-auth/dist/esm/azureKeyCredential.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-auth/dist/esm/azureNamedKeyCredential.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist/esm/azureNamedKeyCredential.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzureNamedKeyCredential: () => (/* binding */ AzureNamedKeyCredential),\n/* harmony export */   isNamedKeyCredential: () => (/* binding */ isNamedKeyCredential)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * A static name/key-based credential that supports updating\n * the underlying name and key values.\n */\nclass AzureNamedKeyCredential {\n    /**\n     * The value of the key to be used in authentication.\n     */\n    get key() {\n        return this._key;\n    }\n    /**\n     * The value of the name to be used in authentication.\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * Create an instance of an AzureNamedKeyCredential for use\n     * with a service client.\n     *\n     * @param name - The initial value of the name to use in authentication.\n     * @param key - The initial value of the key to use in authentication.\n     */\n    constructor(name, key) {\n        if (!name || !key) {\n            throw new TypeError(\"name and key must be non-empty strings\");\n        }\n        this._name = name;\n        this._key = key;\n    }\n    /**\n     * Change the value of the key.\n     *\n     * Updates will take effect upon the next request after\n     * updating the key value.\n     *\n     * @param newName - The new name value to be used.\n     * @param newKey - The new key value to be used.\n     */\n    update(newName, newKey) {\n        if (!newName || !newKey) {\n            throw new TypeError(\"newName and newKey must be non-empty strings\");\n        }\n        this._name = newName;\n        this._key = newKey;\n    }\n}\n/**\n * Tests an object to determine whether it implements NamedKeyCredential.\n *\n * @param credential - The assumed NamedKeyCredential to be tested.\n */\nfunction isNamedKeyCredential(credential) {\n    return ((0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.isObjectWithProperties)(credential, [\"name\", \"key\"]) &&\n        typeof credential.key === \"string\" &&\n        typeof credential.name === \"string\");\n}\n//# sourceMappingURL=azureNamedKeyCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtYXV0aC9kaXN0L2VzbS9henVyZU5hbWVkS2V5Q3JlZGVudGlhbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQzBEO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFlBQVksd0VBQXNCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGhlbGxvLXZvaWNlXFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1hdXRoXFxkaXN0XFxlc21cXGF6dXJlTmFtZWRLZXlDcmVkZW50aWFsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgaXNPYmplY3RXaXRoUHJvcGVydGllcyB9IGZyb20gXCJAYXp1cmUvY29yZS11dGlsXCI7XG4vKipcbiAqIEEgc3RhdGljIG5hbWUva2V5LWJhc2VkIGNyZWRlbnRpYWwgdGhhdCBzdXBwb3J0cyB1cGRhdGluZ1xuICogdGhlIHVuZGVybHlpbmcgbmFtZSBhbmQga2V5IHZhbHVlcy5cbiAqL1xuZXhwb3J0IGNsYXNzIEF6dXJlTmFtZWRLZXlDcmVkZW50aWFsIHtcbiAgICAvKipcbiAgICAgKiBUaGUgdmFsdWUgb2YgdGhlIGtleSB0byBiZSB1c2VkIGluIGF1dGhlbnRpY2F0aW9uLlxuICAgICAqL1xuICAgIGdldCBrZXkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9rZXk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZSB2YWx1ZSBvZiB0aGUgbmFtZSB0byBiZSB1c2VkIGluIGF1dGhlbnRpY2F0aW9uLlxuICAgICAqL1xuICAgIGdldCBuYW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fbmFtZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGFuIGluc3RhbmNlIG9mIGFuIEF6dXJlTmFtZWRLZXlDcmVkZW50aWFsIGZvciB1c2VcbiAgICAgKiB3aXRoIGEgc2VydmljZSBjbGllbnQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gbmFtZSAtIFRoZSBpbml0aWFsIHZhbHVlIG9mIHRoZSBuYW1lIHRvIHVzZSBpbiBhdXRoZW50aWNhdGlvbi5cbiAgICAgKiBAcGFyYW0ga2V5IC0gVGhlIGluaXRpYWwgdmFsdWUgb2YgdGhlIGtleSB0byB1c2UgaW4gYXV0aGVudGljYXRpb24uXG4gICAgICovXG4gICAgY29uc3RydWN0b3IobmFtZSwga2V5KSB7XG4gICAgICAgIGlmICghbmFtZSB8fCAha2V5KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwibmFtZSBhbmQga2V5IG11c3QgYmUgbm9uLWVtcHR5IHN0cmluZ3NcIik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fbmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMuX2tleSA9IGtleTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2hhbmdlIHRoZSB2YWx1ZSBvZiB0aGUga2V5LlxuICAgICAqXG4gICAgICogVXBkYXRlcyB3aWxsIHRha2UgZWZmZWN0IHVwb24gdGhlIG5leHQgcmVxdWVzdCBhZnRlclxuICAgICAqIHVwZGF0aW5nIHRoZSBrZXkgdmFsdWUuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gbmV3TmFtZSAtIFRoZSBuZXcgbmFtZSB2YWx1ZSB0byBiZSB1c2VkLlxuICAgICAqIEBwYXJhbSBuZXdLZXkgLSBUaGUgbmV3IGtleSB2YWx1ZSB0byBiZSB1c2VkLlxuICAgICAqL1xuICAgIHVwZGF0ZShuZXdOYW1lLCBuZXdLZXkpIHtcbiAgICAgICAgaWYgKCFuZXdOYW1lIHx8ICFuZXdLZXkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJuZXdOYW1lIGFuZCBuZXdLZXkgbXVzdCBiZSBub24tZW1wdHkgc3RyaW5nc1wiKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9uYW1lID0gbmV3TmFtZTtcbiAgICAgICAgdGhpcy5fa2V5ID0gbmV3S2V5O1xuICAgIH1cbn1cbi8qKlxuICogVGVzdHMgYW4gb2JqZWN0IHRvIGRldGVybWluZSB3aGV0aGVyIGl0IGltcGxlbWVudHMgTmFtZWRLZXlDcmVkZW50aWFsLlxuICpcbiAqIEBwYXJhbSBjcmVkZW50aWFsIC0gVGhlIGFzc3VtZWQgTmFtZWRLZXlDcmVkZW50aWFsIHRvIGJlIHRlc3RlZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzTmFtZWRLZXlDcmVkZW50aWFsKGNyZWRlbnRpYWwpIHtcbiAgICByZXR1cm4gKGlzT2JqZWN0V2l0aFByb3BlcnRpZXMoY3JlZGVudGlhbCwgW1wibmFtZVwiLCBcImtleVwiXSkgJiZcbiAgICAgICAgdHlwZW9mIGNyZWRlbnRpYWwua2V5ID09PSBcInN0cmluZ1wiICYmXG4gICAgICAgIHR5cGVvZiBjcmVkZW50aWFsLm5hbWUgPT09IFwic3RyaW5nXCIpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXp1cmVOYW1lZEtleUNyZWRlbnRpYWwuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-auth/dist/esm/azureNamedKeyCredential.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-auth/dist/esm/azureSASCredential.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist/esm/azureSASCredential.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzureSASCredential: () => (/* binding */ AzureSASCredential),\n/* harmony export */   isSASCredential: () => (/* binding */ isSASCredential)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * A static-signature-based credential that supports updating\n * the underlying signature value.\n */\nclass AzureSASCredential {\n    /**\n     * The value of the shared access signature to be used in authentication\n     */\n    get signature() {\n        return this._signature;\n    }\n    /**\n     * Create an instance of an AzureSASCredential for use\n     * with a service client.\n     *\n     * @param signature - The initial value of the shared access signature to use in authentication\n     */\n    constructor(signature) {\n        if (!signature) {\n            throw new Error(\"shared access signature must be a non-empty string\");\n        }\n        this._signature = signature;\n    }\n    /**\n     * Change the value of the signature.\n     *\n     * Updates will take effect upon the next request after\n     * updating the signature value.\n     *\n     * @param newSignature - The new shared access signature value to be used\n     */\n    update(newSignature) {\n        if (!newSignature) {\n            throw new Error(\"shared access signature must be a non-empty string\");\n        }\n        this._signature = newSignature;\n    }\n}\n/**\n * Tests an object to determine whether it implements SASCredential.\n *\n * @param credential - The assumed SASCredential to be tested.\n */\nfunction isSASCredential(credential) {\n    return ((0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.isObjectWithProperties)(credential, [\"signature\"]) && typeof credential.signature === \"string\");\n}\n//# sourceMappingURL=azureSASCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtYXV0aC9kaXN0L2VzbS9henVyZVNBU0NyZWRlbnRpYWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUMwRDtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSx3RUFBc0I7QUFDbEM7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxoZWxsby12b2ljZVxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtYXV0aFxcZGlzdFxcZXNtXFxhenVyZVNBU0NyZWRlbnRpYWwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBpc09iamVjdFdpdGhQcm9wZXJ0aWVzIH0gZnJvbSBcIkBhenVyZS9jb3JlLXV0aWxcIjtcbi8qKlxuICogQSBzdGF0aWMtc2lnbmF0dXJlLWJhc2VkIGNyZWRlbnRpYWwgdGhhdCBzdXBwb3J0cyB1cGRhdGluZ1xuICogdGhlIHVuZGVybHlpbmcgc2lnbmF0dXJlIHZhbHVlLlxuICovXG5leHBvcnQgY2xhc3MgQXp1cmVTQVNDcmVkZW50aWFsIHtcbiAgICAvKipcbiAgICAgKiBUaGUgdmFsdWUgb2YgdGhlIHNoYXJlZCBhY2Nlc3Mgc2lnbmF0dXJlIHRvIGJlIHVzZWQgaW4gYXV0aGVudGljYXRpb25cbiAgICAgKi9cbiAgICBnZXQgc2lnbmF0dXJlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fc2lnbmF0dXJlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYW4gaW5zdGFuY2Ugb2YgYW4gQXp1cmVTQVNDcmVkZW50aWFsIGZvciB1c2VcbiAgICAgKiB3aXRoIGEgc2VydmljZSBjbGllbnQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gc2lnbmF0dXJlIC0gVGhlIGluaXRpYWwgdmFsdWUgb2YgdGhlIHNoYXJlZCBhY2Nlc3Mgc2lnbmF0dXJlIHRvIHVzZSBpbiBhdXRoZW50aWNhdGlvblxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHNpZ25hdHVyZSkge1xuICAgICAgICBpZiAoIXNpZ25hdHVyZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwic2hhcmVkIGFjY2VzcyBzaWduYXR1cmUgbXVzdCBiZSBhIG5vbi1lbXB0eSBzdHJpbmdcIik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fc2lnbmF0dXJlID0gc2lnbmF0dXJlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDaGFuZ2UgdGhlIHZhbHVlIG9mIHRoZSBzaWduYXR1cmUuXG4gICAgICpcbiAgICAgKiBVcGRhdGVzIHdpbGwgdGFrZSBlZmZlY3QgdXBvbiB0aGUgbmV4dCByZXF1ZXN0IGFmdGVyXG4gICAgICogdXBkYXRpbmcgdGhlIHNpZ25hdHVyZSB2YWx1ZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBuZXdTaWduYXR1cmUgLSBUaGUgbmV3IHNoYXJlZCBhY2Nlc3Mgc2lnbmF0dXJlIHZhbHVlIHRvIGJlIHVzZWRcbiAgICAgKi9cbiAgICB1cGRhdGUobmV3U2lnbmF0dXJlKSB7XG4gICAgICAgIGlmICghbmV3U2lnbmF0dXJlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJzaGFyZWQgYWNjZXNzIHNpZ25hdHVyZSBtdXN0IGJlIGEgbm9uLWVtcHR5IHN0cmluZ1wiKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9zaWduYXR1cmUgPSBuZXdTaWduYXR1cmU7XG4gICAgfVxufVxuLyoqXG4gKiBUZXN0cyBhbiBvYmplY3QgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgaXQgaW1wbGVtZW50cyBTQVNDcmVkZW50aWFsLlxuICpcbiAqIEBwYXJhbSBjcmVkZW50aWFsIC0gVGhlIGFzc3VtZWQgU0FTQ3JlZGVudGlhbCB0byBiZSB0ZXN0ZWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1NBU0NyZWRlbnRpYWwoY3JlZGVudGlhbCkge1xuICAgIHJldHVybiAoaXNPYmplY3RXaXRoUHJvcGVydGllcyhjcmVkZW50aWFsLCBbXCJzaWduYXR1cmVcIl0pICYmIHR5cGVvZiBjcmVkZW50aWFsLnNpZ25hdHVyZSA9PT0gXCJzdHJpbmdcIik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1henVyZVNBU0NyZWRlbnRpYWwuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-auth/dist/esm/azureSASCredential.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-auth/dist/esm/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist/esm/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzureKeyCredential: () => (/* reexport safe */ _azureKeyCredential_js__WEBPACK_IMPORTED_MODULE_0__.AzureKeyCredential),\n/* harmony export */   AzureNamedKeyCredential: () => (/* reexport safe */ _azureNamedKeyCredential_js__WEBPACK_IMPORTED_MODULE_2__.AzureNamedKeyCredential),\n/* harmony export */   AzureSASCredential: () => (/* reexport safe */ _azureSASCredential_js__WEBPACK_IMPORTED_MODULE_3__.AzureSASCredential),\n/* harmony export */   isKeyCredential: () => (/* reexport safe */ _keyCredential_js__WEBPACK_IMPORTED_MODULE_1__.isKeyCredential),\n/* harmony export */   isNamedKeyCredential: () => (/* reexport safe */ _azureNamedKeyCredential_js__WEBPACK_IMPORTED_MODULE_2__.isNamedKeyCredential),\n/* harmony export */   isSASCredential: () => (/* reexport safe */ _azureSASCredential_js__WEBPACK_IMPORTED_MODULE_3__.isSASCredential),\n/* harmony export */   isTokenCredential: () => (/* reexport safe */ _tokenCredential_js__WEBPACK_IMPORTED_MODULE_4__.isTokenCredential)\n/* harmony export */ });\n/* harmony import */ var _azureKeyCredential_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./azureKeyCredential.js */ \"(ssr)/./node_modules/@azure/core-auth/dist/esm/azureKeyCredential.js\");\n/* harmony import */ var _keyCredential_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./keyCredential.js */ \"(ssr)/./node_modules/@azure/core-auth/dist/esm/keyCredential.js\");\n/* harmony import */ var _azureNamedKeyCredential_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./azureNamedKeyCredential.js */ \"(ssr)/./node_modules/@azure/core-auth/dist/esm/azureNamedKeyCredential.js\");\n/* harmony import */ var _azureSASCredential_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./azureSASCredential.js */ \"(ssr)/./node_modules/@azure/core-auth/dist/esm/azureSASCredential.js\");\n/* harmony import */ var _tokenCredential_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tokenCredential.js */ \"(ssr)/./node_modules/@azure/core-auth/dist/esm/tokenCredential.js\");\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtYXV0aC9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBNkQ7QUFDUjtBQUN5QztBQUNoQjtBQUNwQjtBQUMxRCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxoZWxsby12b2ljZVxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtYXV0aFxcZGlzdFxcZXNtXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBBenVyZUtleUNyZWRlbnRpYWwgfSBmcm9tIFwiLi9henVyZUtleUNyZWRlbnRpYWwuanNcIjtcbmV4cG9ydCB7IGlzS2V5Q3JlZGVudGlhbCB9IGZyb20gXCIuL2tleUNyZWRlbnRpYWwuanNcIjtcbmV4cG9ydCB7IEF6dXJlTmFtZWRLZXlDcmVkZW50aWFsLCBpc05hbWVkS2V5Q3JlZGVudGlhbCwgfSBmcm9tIFwiLi9henVyZU5hbWVkS2V5Q3JlZGVudGlhbC5qc1wiO1xuZXhwb3J0IHsgQXp1cmVTQVNDcmVkZW50aWFsLCBpc1NBU0NyZWRlbnRpYWwgfSBmcm9tIFwiLi9henVyZVNBU0NyZWRlbnRpYWwuanNcIjtcbmV4cG9ydCB7IGlzVG9rZW5DcmVkZW50aWFsLCB9IGZyb20gXCIuL3Rva2VuQ3JlZGVudGlhbC5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-auth/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-auth/dist/esm/keyCredential.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist/esm/keyCredential.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isKeyCredential: () => (/* binding */ isKeyCredential)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Tests an object to determine whether it implements KeyCredential.\n *\n * @param credential - The assumed KeyCredential to be tested.\n */\nfunction isKeyCredential(credential) {\n    return (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.isObjectWithProperties)(credential, [\"key\"]) && typeof credential.key === \"string\";\n}\n//# sourceMappingURL=keyCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtYXV0aC9kaXN0L2VzbS9rZXlDcmVkZW50aWFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUMwRDtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLHdFQUFzQjtBQUNqQztBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGhlbGxvLXZvaWNlXFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1hdXRoXFxkaXN0XFxlc21cXGtleUNyZWRlbnRpYWwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBpc09iamVjdFdpdGhQcm9wZXJ0aWVzIH0gZnJvbSBcIkBhenVyZS9jb3JlLXV0aWxcIjtcbi8qKlxuICogVGVzdHMgYW4gb2JqZWN0IHRvIGRldGVybWluZSB3aGV0aGVyIGl0IGltcGxlbWVudHMgS2V5Q3JlZGVudGlhbC5cbiAqXG4gKiBAcGFyYW0gY3JlZGVudGlhbCAtIFRoZSBhc3N1bWVkIEtleUNyZWRlbnRpYWwgdG8gYmUgdGVzdGVkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNLZXlDcmVkZW50aWFsKGNyZWRlbnRpYWwpIHtcbiAgICByZXR1cm4gaXNPYmplY3RXaXRoUHJvcGVydGllcyhjcmVkZW50aWFsLCBbXCJrZXlcIl0pICYmIHR5cGVvZiBjcmVkZW50aWFsLmtleSA9PT0gXCJzdHJpbmdcIjtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWtleUNyZWRlbnRpYWwuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-auth/dist/esm/keyCredential.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-auth/dist/esm/tokenCredential.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist/esm/tokenCredential.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isBearerToken: () => (/* binding */ isBearerToken),\n/* harmony export */   isPopToken: () => (/* binding */ isPopToken),\n/* harmony export */   isTokenCredential: () => (/* binding */ isTokenCredential)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * @internal\n * @param accessToken - Access token\n * @returns Whether a token is bearer type or not\n */\nfunction isBearerToken(accessToken) {\n    return !accessToken.tokenType || accessToken.tokenType === \"Bearer\";\n}\n/**\n * @internal\n * @param accessToken - Access token\n * @returns Whether a token is Pop token or not\n */\nfunction isPopToken(accessToken) {\n    return accessToken.tokenType === \"pop\";\n}\n/**\n * Tests an object to determine whether it implements TokenCredential.\n *\n * @param credential - The assumed TokenCredential to be tested.\n */\nfunction isTokenCredential(credential) {\n    // Check for an object with a 'getToken' function and possibly with\n    // a 'signRequest' function.  We do this check to make sure that\n    // a ServiceClientCredentials implementor (like TokenClientCredentials\n    // in ms-rest-nodeauth) doesn't get mistaken for a TokenCredential if\n    // it doesn't actually implement TokenCredential also.\n    const castCredential = credential;\n    return (castCredential &&\n        typeof castCredential.getToken === \"function\" &&\n        (castCredential.signRequest === undefined || castCredential.getToken.length > 0));\n}\n//# sourceMappingURL=tokenCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtYXV0aC9kaXN0L2VzbS90b2tlbkNyZWRlbnRpYWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxoZWxsby12b2ljZVxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtYXV0aFxcZGlzdFxcZXNtXFx0b2tlbkNyZWRlbnRpYWwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vKipcbiAqIEBpbnRlcm5hbFxuICogQHBhcmFtIGFjY2Vzc1Rva2VuIC0gQWNjZXNzIHRva2VuXG4gKiBAcmV0dXJucyBXaGV0aGVyIGEgdG9rZW4gaXMgYmVhcmVyIHR5cGUgb3Igbm90XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0JlYXJlclRva2VuKGFjY2Vzc1Rva2VuKSB7XG4gICAgcmV0dXJuICFhY2Nlc3NUb2tlbi50b2tlblR5cGUgfHwgYWNjZXNzVG9rZW4udG9rZW5UeXBlID09PSBcIkJlYXJlclwiO1xufVxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqIEBwYXJhbSBhY2Nlc3NUb2tlbiAtIEFjY2VzcyB0b2tlblxuICogQHJldHVybnMgV2hldGhlciBhIHRva2VuIGlzIFBvcCB0b2tlbiBvciBub3RcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzUG9wVG9rZW4oYWNjZXNzVG9rZW4pIHtcbiAgICByZXR1cm4gYWNjZXNzVG9rZW4udG9rZW5UeXBlID09PSBcInBvcFwiO1xufVxuLyoqXG4gKiBUZXN0cyBhbiBvYmplY3QgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgaXQgaW1wbGVtZW50cyBUb2tlbkNyZWRlbnRpYWwuXG4gKlxuICogQHBhcmFtIGNyZWRlbnRpYWwgLSBUaGUgYXNzdW1lZCBUb2tlbkNyZWRlbnRpYWwgdG8gYmUgdGVzdGVkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNUb2tlbkNyZWRlbnRpYWwoY3JlZGVudGlhbCkge1xuICAgIC8vIENoZWNrIGZvciBhbiBvYmplY3Qgd2l0aCBhICdnZXRUb2tlbicgZnVuY3Rpb24gYW5kIHBvc3NpYmx5IHdpdGhcbiAgICAvLyBhICdzaWduUmVxdWVzdCcgZnVuY3Rpb24uICBXZSBkbyB0aGlzIGNoZWNrIHRvIG1ha2Ugc3VyZSB0aGF0XG4gICAgLy8gYSBTZXJ2aWNlQ2xpZW50Q3JlZGVudGlhbHMgaW1wbGVtZW50b3IgKGxpa2UgVG9rZW5DbGllbnRDcmVkZW50aWFsc1xuICAgIC8vIGluIG1zLXJlc3Qtbm9kZWF1dGgpIGRvZXNuJ3QgZ2V0IG1pc3Rha2VuIGZvciBhIFRva2VuQ3JlZGVudGlhbCBpZlxuICAgIC8vIGl0IGRvZXNuJ3QgYWN0dWFsbHkgaW1wbGVtZW50IFRva2VuQ3JlZGVudGlhbCBhbHNvLlxuICAgIGNvbnN0IGNhc3RDcmVkZW50aWFsID0gY3JlZGVudGlhbDtcbiAgICByZXR1cm4gKGNhc3RDcmVkZW50aWFsICYmXG4gICAgICAgIHR5cGVvZiBjYXN0Q3JlZGVudGlhbC5nZXRUb2tlbiA9PT0gXCJmdW5jdGlvblwiICYmXG4gICAgICAgIChjYXN0Q3JlZGVudGlhbC5zaWduUmVxdWVzdCA9PT0gdW5kZWZpbmVkIHx8IGNhc3RDcmVkZW50aWFsLmdldFRva2VuLmxlbmd0aCA+IDApKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRva2VuQ3JlZGVudGlhbC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-auth/dist/esm/tokenCredential.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/commonjs/state.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/commonjs/state.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.state = void 0;\n/**\n * Holds the singleton operationRequestMap, to be shared across CJS and ESM imports.\n */\nexports.state = {\n    operationRequestMap: new WeakMap(),\n};\n//# sourceMappingURL=state-cjs.cjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvY29tbW9uanMvc3RhdGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGhlbGxvLXZvaWNlXFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1jbGllbnRcXGRpc3RcXGNvbW1vbmpzXFxzdGF0ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zdGF0ZSA9IHZvaWQgMDtcbi8qKlxuICogSG9sZHMgdGhlIHNpbmdsZXRvbiBvcGVyYXRpb25SZXF1ZXN0TWFwLCB0byBiZSBzaGFyZWQgYWNyb3NzIENKUyBhbmQgRVNNIGltcG9ydHMuXG4gKi9cbmV4cG9ydHMuc3RhdGUgPSB7XG4gICAgb3BlcmF0aW9uUmVxdWVzdE1hcDogbmV3IFdlYWtNYXAoKSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdGF0ZS1janMuY2pzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/commonjs/state.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/authorizeRequestOnClaimChallenge.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/authorizeRequestOnClaimChallenge.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authorizeRequestOnClaimChallenge: () => (/* binding */ authorizeRequestOnClaimChallenge),\n/* harmony export */   parseCAEChallenge: () => (/* binding */ parseCAEChallenge)\n/* harmony export */ });\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./log.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/log.js\");\n/* harmony import */ var _base64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base64.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/base64.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * Converts: `Bearer a=\"b\", c=\"d\", Bearer d=\"e\", f=\"g\"`.\n * Into: `[ { a: 'b', c: 'd' }, { d: 'e', f: 'g' } ]`.\n *\n * @internal\n */\nfunction parseCAEChallenge(challenges) {\n    const bearerChallenges = `, ${challenges.trim()}`.split(\", Bearer \").filter((x) => x);\n    return bearerChallenges.map((challenge) => {\n        const challengeParts = `${challenge.trim()}, `.split('\", ').filter((x) => x);\n        const keyValuePairs = challengeParts.map((keyValue) => (([key, value]) => ({ [key]: value }))(keyValue.trim().split('=\"')));\n        // Key-value pairs to plain object:\n        return keyValuePairs.reduce((a, b) => (Object.assign(Object.assign({}, a), b)), {});\n    });\n}\n/**\n * This function can be used as a callback for the `bearerTokenAuthenticationPolicy` of `@azure/core-rest-pipeline`, to support CAE challenges:\n * [Continuous Access Evaluation](https://learn.microsoft.com/azure/active-directory/conditional-access/concept-continuous-access-evaluation).\n *\n * Call the `bearerTokenAuthenticationPolicy` with the following options:\n *\n * ```ts snippet:AuthorizeRequestOnClaimChallenge\n * import { bearerTokenAuthenticationPolicy } from \"@azure/core-rest-pipeline\";\n * import { authorizeRequestOnClaimChallenge } from \"@azure/core-client\";\n *\n * const policy = bearerTokenAuthenticationPolicy({\n *   challengeCallbacks: {\n *     authorizeRequestOnChallenge: authorizeRequestOnClaimChallenge,\n *   },\n *   scopes: [\"https://service/.default\"],\n * });\n * ```\n *\n * Once provided, the `bearerTokenAuthenticationPolicy` policy will internally handle Continuous Access Evaluation (CAE) challenges.\n * When it can't complete a challenge it will return the 401 (unauthorized) response from ARM.\n *\n * Example challenge with claims:\n *\n * ```\n * Bearer authorization_uri=\"https://login.windows-ppe.net/\", error=\"invalid_token\",\n * error_description=\"User session has been revoked\",\n * claims=\"eyJhY2Nlc3NfdG9rZW4iOnsibmJmIjp7ImVzc2VudGlhbCI6dHJ1ZSwgInZhbHVlIjoiMTYwMzc0MjgwMCJ9fX0=\"\n * ```\n */\nasync function authorizeRequestOnClaimChallenge(onChallengeOptions) {\n    var _a;\n    const { scopes, response } = onChallengeOptions;\n    const logger = onChallengeOptions.logger || _log_js__WEBPACK_IMPORTED_MODULE_0__.logger;\n    const challenge = response.headers.get(\"WWW-Authenticate\");\n    if (!challenge) {\n        logger.info(`The WWW-Authenticate header was missing. Failed to perform the Continuous Access Evaluation authentication flow.`);\n        return false;\n    }\n    const challenges = parseCAEChallenge(challenge) || [];\n    const parsedChallenge = challenges.find((x) => x.claims);\n    if (!parsedChallenge) {\n        logger.info(`The WWW-Authenticate header was missing the necessary \"claims\" to perform the Continuous Access Evaluation authentication flow.`);\n        return false;\n    }\n    const accessToken = await onChallengeOptions.getAccessToken(parsedChallenge.scope ? [parsedChallenge.scope] : scopes, {\n        claims: (0,_base64_js__WEBPACK_IMPORTED_MODULE_1__.decodeStringToString)(parsedChallenge.claims),\n    });\n    if (!accessToken) {\n        return false;\n    }\n    onChallengeOptions.request.headers.set(\"Authorization\", `${(_a = accessToken.tokenType) !== null && _a !== void 0 ? _a : \"Bearer\"} ${accessToken.token}`);\n    return true;\n}\n//# sourceMappingURL=authorizeRequestOnClaimChallenge.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL2F1dGhvcml6ZVJlcXVlc3RPbkNsYWltQ2hhbGxlbmdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ3NEO0FBQ0g7QUFDbkQ7QUFDQTtBQUNBLGNBQWMsZ0JBQWdCLElBQUksaUJBQWlCO0FBQ25EO0FBQ0E7QUFDQTtBQUNPO0FBQ1Asa0NBQWtDLGtCQUFrQjtBQUNwRDtBQUNBLGtDQUFrQyxpQkFBaUI7QUFDbkQscUZBQXFGLGNBQWM7QUFDbkc7QUFDQSw2RUFBNkUsYUFBYTtBQUMxRixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksa0NBQWtDO0FBQzlDLFlBQVksbUNBQW1DO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLFlBQVksbUJBQW1CO0FBQy9CLGdEQUFnRCwyQ0FBZ0I7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGdFQUFvQjtBQUNwQyxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsK0RBQStELHdFQUF3RSxFQUFFLGtCQUFrQjtBQUMzSjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLWNsaWVudFxcZGlzdFxcZXNtXFxhdXRob3JpemVSZXF1ZXN0T25DbGFpbUNoYWxsZW5nZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGxvZ2dlciBhcyBjb3JlQ2xpZW50TG9nZ2VyIH0gZnJvbSBcIi4vbG9nLmpzXCI7XG5pbXBvcnQgeyBkZWNvZGVTdHJpbmdUb1N0cmluZyB9IGZyb20gXCIuL2Jhc2U2NC5qc1wiO1xuLyoqXG4gKiBDb252ZXJ0czogYEJlYXJlciBhPVwiYlwiLCBjPVwiZFwiLCBCZWFyZXIgZD1cImVcIiwgZj1cImdcImAuXG4gKiBJbnRvOiBgWyB7IGE6ICdiJywgYzogJ2QnIH0sIHsgZDogJ2UnLCBmOiAnZycgfSBdYC5cbiAqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQ0FFQ2hhbGxlbmdlKGNoYWxsZW5nZXMpIHtcbiAgICBjb25zdCBiZWFyZXJDaGFsbGVuZ2VzID0gYCwgJHtjaGFsbGVuZ2VzLnRyaW0oKX1gLnNwbGl0KFwiLCBCZWFyZXIgXCIpLmZpbHRlcigoeCkgPT4geCk7XG4gICAgcmV0dXJuIGJlYXJlckNoYWxsZW5nZXMubWFwKChjaGFsbGVuZ2UpID0+IHtcbiAgICAgICAgY29uc3QgY2hhbGxlbmdlUGFydHMgPSBgJHtjaGFsbGVuZ2UudHJpbSgpfSwgYC5zcGxpdCgnXCIsICcpLmZpbHRlcigoeCkgPT4geCk7XG4gICAgICAgIGNvbnN0IGtleVZhbHVlUGFpcnMgPSBjaGFsbGVuZ2VQYXJ0cy5tYXAoKGtleVZhbHVlKSA9PiAoKFtrZXksIHZhbHVlXSkgPT4gKHsgW2tleV06IHZhbHVlIH0pKShrZXlWYWx1ZS50cmltKCkuc3BsaXQoJz1cIicpKSk7XG4gICAgICAgIC8vIEtleS12YWx1ZSBwYWlycyB0byBwbGFpbiBvYmplY3Q6XG4gICAgICAgIHJldHVybiBrZXlWYWx1ZVBhaXJzLnJlZHVjZSgoYSwgYikgPT4gKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgYSksIGIpKSwge30pO1xuICAgIH0pO1xufVxuLyoqXG4gKiBUaGlzIGZ1bmN0aW9uIGNhbiBiZSB1c2VkIGFzIGEgY2FsbGJhY2sgZm9yIHRoZSBgYmVhcmVyVG9rZW5BdXRoZW50aWNhdGlvblBvbGljeWAgb2YgYEBhenVyZS9jb3JlLXJlc3QtcGlwZWxpbmVgLCB0byBzdXBwb3J0IENBRSBjaGFsbGVuZ2VzOlxuICogW0NvbnRpbnVvdXMgQWNjZXNzIEV2YWx1YXRpb25dKGh0dHBzOi8vbGVhcm4ubWljcm9zb2Z0LmNvbS9henVyZS9hY3RpdmUtZGlyZWN0b3J5L2NvbmRpdGlvbmFsLWFjY2Vzcy9jb25jZXB0LWNvbnRpbnVvdXMtYWNjZXNzLWV2YWx1YXRpb24pLlxuICpcbiAqIENhbGwgdGhlIGBiZWFyZXJUb2tlbkF1dGhlbnRpY2F0aW9uUG9saWN5YCB3aXRoIHRoZSBmb2xsb3dpbmcgb3B0aW9uczpcbiAqXG4gKiBgYGB0cyBzbmlwcGV0OkF1dGhvcml6ZVJlcXVlc3RPbkNsYWltQ2hhbGxlbmdlXG4gKiBpbXBvcnQgeyBiZWFyZXJUb2tlbkF1dGhlbnRpY2F0aW9uUG9saWN5IH0gZnJvbSBcIkBhenVyZS9jb3JlLXJlc3QtcGlwZWxpbmVcIjtcbiAqIGltcG9ydCB7IGF1dGhvcml6ZVJlcXVlc3RPbkNsYWltQ2hhbGxlbmdlIH0gZnJvbSBcIkBhenVyZS9jb3JlLWNsaWVudFwiO1xuICpcbiAqIGNvbnN0IHBvbGljeSA9IGJlYXJlclRva2VuQXV0aGVudGljYXRpb25Qb2xpY3koe1xuICogICBjaGFsbGVuZ2VDYWxsYmFja3M6IHtcbiAqICAgICBhdXRob3JpemVSZXF1ZXN0T25DaGFsbGVuZ2U6IGF1dGhvcml6ZVJlcXVlc3RPbkNsYWltQ2hhbGxlbmdlLFxuICogICB9LFxuICogICBzY29wZXM6IFtcImh0dHBzOi8vc2VydmljZS8uZGVmYXVsdFwiXSxcbiAqIH0pO1xuICogYGBgXG4gKlxuICogT25jZSBwcm92aWRlZCwgdGhlIGBiZWFyZXJUb2tlbkF1dGhlbnRpY2F0aW9uUG9saWN5YCBwb2xpY3kgd2lsbCBpbnRlcm5hbGx5IGhhbmRsZSBDb250aW51b3VzIEFjY2VzcyBFdmFsdWF0aW9uIChDQUUpIGNoYWxsZW5nZXMuXG4gKiBXaGVuIGl0IGNhbid0IGNvbXBsZXRlIGEgY2hhbGxlbmdlIGl0IHdpbGwgcmV0dXJuIHRoZSA0MDEgKHVuYXV0aG9yaXplZCkgcmVzcG9uc2UgZnJvbSBBUk0uXG4gKlxuICogRXhhbXBsZSBjaGFsbGVuZ2Ugd2l0aCBjbGFpbXM6XG4gKlxuICogYGBgXG4gKiBCZWFyZXIgYXV0aG9yaXphdGlvbl91cmk9XCJodHRwczovL2xvZ2luLndpbmRvd3MtcHBlLm5ldC9cIiwgZXJyb3I9XCJpbnZhbGlkX3Rva2VuXCIsXG4gKiBlcnJvcl9kZXNjcmlwdGlvbj1cIlVzZXIgc2Vzc2lvbiBoYXMgYmVlbiByZXZva2VkXCIsXG4gKiBjbGFpbXM9XCJleUpoWTJObGMzTmZkRzlyWlc0aU9uc2libUptSWpwN0ltVnpjMlZ1ZEdsaGJDSTZkSEoxWlN3Z0luWmhiSFZsSWpvaU1UWXdNemMwTWpnd01DSjlmWDA9XCJcbiAqIGBgYFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gYXV0aG9yaXplUmVxdWVzdE9uQ2xhaW1DaGFsbGVuZ2Uob25DaGFsbGVuZ2VPcHRpb25zKSB7XG4gICAgdmFyIF9hO1xuICAgIGNvbnN0IHsgc2NvcGVzLCByZXNwb25zZSB9ID0gb25DaGFsbGVuZ2VPcHRpb25zO1xuICAgIGNvbnN0IGxvZ2dlciA9IG9uQ2hhbGxlbmdlT3B0aW9ucy5sb2dnZXIgfHwgY29yZUNsaWVudExvZ2dlcjtcbiAgICBjb25zdCBjaGFsbGVuZ2UgPSByZXNwb25zZS5oZWFkZXJzLmdldChcIldXVy1BdXRoZW50aWNhdGVcIik7XG4gICAgaWYgKCFjaGFsbGVuZ2UpIHtcbiAgICAgICAgbG9nZ2VyLmluZm8oYFRoZSBXV1ctQXV0aGVudGljYXRlIGhlYWRlciB3YXMgbWlzc2luZy4gRmFpbGVkIHRvIHBlcmZvcm0gdGhlIENvbnRpbnVvdXMgQWNjZXNzIEV2YWx1YXRpb24gYXV0aGVudGljYXRpb24gZmxvdy5gKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBjb25zdCBjaGFsbGVuZ2VzID0gcGFyc2VDQUVDaGFsbGVuZ2UoY2hhbGxlbmdlKSB8fCBbXTtcbiAgICBjb25zdCBwYXJzZWRDaGFsbGVuZ2UgPSBjaGFsbGVuZ2VzLmZpbmQoKHgpID0+IHguY2xhaW1zKTtcbiAgICBpZiAoIXBhcnNlZENoYWxsZW5nZSkge1xuICAgICAgICBsb2dnZXIuaW5mbyhgVGhlIFdXVy1BdXRoZW50aWNhdGUgaGVhZGVyIHdhcyBtaXNzaW5nIHRoZSBuZWNlc3NhcnkgXCJjbGFpbXNcIiB0byBwZXJmb3JtIHRoZSBDb250aW51b3VzIEFjY2VzcyBFdmFsdWF0aW9uIGF1dGhlbnRpY2F0aW9uIGZsb3cuYCk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgY29uc3QgYWNjZXNzVG9rZW4gPSBhd2FpdCBvbkNoYWxsZW5nZU9wdGlvbnMuZ2V0QWNjZXNzVG9rZW4ocGFyc2VkQ2hhbGxlbmdlLnNjb3BlID8gW3BhcnNlZENoYWxsZW5nZS5zY29wZV0gOiBzY29wZXMsIHtcbiAgICAgICAgY2xhaW1zOiBkZWNvZGVTdHJpbmdUb1N0cmluZyhwYXJzZWRDaGFsbGVuZ2UuY2xhaW1zKSxcbiAgICB9KTtcbiAgICBpZiAoIWFjY2Vzc1Rva2VuKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgb25DaGFsbGVuZ2VPcHRpb25zLnJlcXVlc3QuaGVhZGVycy5zZXQoXCJBdXRob3JpemF0aW9uXCIsIGAkeyhfYSA9IGFjY2Vzc1Rva2VuLnRva2VuVHlwZSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogXCJCZWFyZXJcIn0gJHthY2Nlc3NUb2tlbi50b2tlbn1gKTtcbiAgICByZXR1cm4gdHJ1ZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF1dGhvcml6ZVJlcXVlc3RPbkNsYWltQ2hhbGxlbmdlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/authorizeRequestOnClaimChallenge.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/authorizeRequestOnTenantChallenge.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/authorizeRequestOnTenantChallenge.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authorizeRequestOnTenantChallenge: () => (/* binding */ authorizeRequestOnTenantChallenge)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * A set of constants used internally when processing requests.\n */\nconst Constants = {\n    DefaultScope: \"/.default\",\n    /**\n     * Defines constants for use with HTTP headers.\n     */\n    HeaderConstants: {\n        /**\n         * The Authorization header.\n         */\n        AUTHORIZATION: \"authorization\",\n    },\n};\nfunction isUuid(text) {\n    return /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/.test(text);\n}\n/**\n * Defines a callback to handle auth challenge for Storage APIs.\n * This implements the bearer challenge process described here: https://learn.microsoft.com/rest/api/storageservices/authorize-with-azure-active-directory#bearer-challenge\n * Handling has specific features for storage that departs to the general AAD challenge docs.\n **/\nconst authorizeRequestOnTenantChallenge = async (challengeOptions) => {\n    var _a;\n    const requestOptions = requestToOptions(challengeOptions.request);\n    const challenge = getChallenge(challengeOptions.response);\n    if (challenge) {\n        const challengeInfo = parseChallenge(challenge);\n        const challengeScopes = buildScopes(challengeOptions, challengeInfo);\n        const tenantId = extractTenantId(challengeInfo);\n        if (!tenantId) {\n            return false;\n        }\n        const accessToken = await challengeOptions.getAccessToken(challengeScopes, Object.assign(Object.assign({}, requestOptions), { tenantId }));\n        if (!accessToken) {\n            return false;\n        }\n        challengeOptions.request.headers.set(Constants.HeaderConstants.AUTHORIZATION, `${(_a = accessToken.tokenType) !== null && _a !== void 0 ? _a : \"Bearer\"} ${accessToken.token}`);\n        return true;\n    }\n    return false;\n};\n/**\n * Extracts the tenant id from the challenge information\n * The tenant id is contained in the authorization_uri as the first\n * path part.\n */\nfunction extractTenantId(challengeInfo) {\n    const parsedAuthUri = new URL(challengeInfo.authorization_uri);\n    const pathSegments = parsedAuthUri.pathname.split(\"/\");\n    const tenantId = pathSegments[1];\n    if (tenantId && isUuid(tenantId)) {\n        return tenantId;\n    }\n    return undefined;\n}\n/**\n * Builds the authentication scopes based on the information that comes in the\n * challenge information. Scopes url is present in the resource_id, if it is empty\n * we keep using the original scopes.\n */\nfunction buildScopes(challengeOptions, challengeInfo) {\n    if (!challengeInfo.resource_id) {\n        return challengeOptions.scopes;\n    }\n    const challengeScopes = new URL(challengeInfo.resource_id);\n    challengeScopes.pathname = Constants.DefaultScope;\n    let scope = challengeScopes.toString();\n    if (scope === \"https://disk.azure.com/.default\") {\n        // the extra slash is required by the service\n        scope = \"https://disk.azure.com//.default\";\n    }\n    return [scope];\n}\n/**\n * We will retrieve the challenge only if the response status code was 401,\n * and if the response contained the header \"WWW-Authenticate\" with a non-empty value.\n */\nfunction getChallenge(response) {\n    const challenge = response.headers.get(\"WWW-Authenticate\");\n    if (response.status === 401 && challenge) {\n        return challenge;\n    }\n    return;\n}\n/**\n * Converts: `Bearer a=\"b\" c=\"d\"`.\n * Into: `[ { a: 'b', c: 'd' }]`.\n *\n * @internal\n */\nfunction parseChallenge(challenge) {\n    const bearerChallenge = challenge.slice(\"Bearer \".length);\n    const challengeParts = `${bearerChallenge.trim()} `.split(\" \").filter((x) => x);\n    const keyValuePairs = challengeParts.map((keyValue) => (([key, value]) => ({ [key]: value }))(keyValue.trim().split(\"=\")));\n    // Key-value pairs to plain object:\n    return keyValuePairs.reduce((a, b) => (Object.assign(Object.assign({}, a), b)), {});\n}\n/**\n * Extracts the options form a Pipeline Request for later re-use\n */\nfunction requestToOptions(request) {\n    return {\n        abortSignal: request.abortSignal,\n        requestOptions: {\n            timeout: request.timeout,\n        },\n        tracingOptions: request.tracingOptions,\n    };\n}\n//# sourceMappingURL=authorizeRequestOnTenantChallenge.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL2F1dGhvcml6ZVJlcXVlc3RPblRlbmFudENoYWxsZW5nZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSx5QkFBeUIsRUFBRSxlQUFlLEVBQUUsZUFBZSxFQUFFLGVBQWUsRUFBRSxlQUFlLEdBQUc7QUFDaEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlIQUFpSCxxQkFBcUIsVUFBVTtBQUNoSjtBQUNBO0FBQ0E7QUFDQSx5RkFBeUYsd0VBQXdFLEVBQUUsa0JBQWtCO0FBQ3JMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxnQkFBZ0I7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qix3QkFBd0I7QUFDdEQsaUZBQWlGLGNBQWM7QUFDL0Y7QUFDQSx5RUFBeUUsYUFBYTtBQUN0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLWNsaWVudFxcZGlzdFxcZXNtXFxhdXRob3JpemVSZXF1ZXN0T25UZW5hbnRDaGFsbGVuZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vKipcbiAqIEEgc2V0IG9mIGNvbnN0YW50cyB1c2VkIGludGVybmFsbHkgd2hlbiBwcm9jZXNzaW5nIHJlcXVlc3RzLlxuICovXG5jb25zdCBDb25zdGFudHMgPSB7XG4gICAgRGVmYXVsdFNjb3BlOiBcIi8uZGVmYXVsdFwiLFxuICAgIC8qKlxuICAgICAqIERlZmluZXMgY29uc3RhbnRzIGZvciB1c2Ugd2l0aCBIVFRQIGhlYWRlcnMuXG4gICAgICovXG4gICAgSGVhZGVyQ29uc3RhbnRzOiB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGUgQXV0aG9yaXphdGlvbiBoZWFkZXIuXG4gICAgICAgICAqL1xuICAgICAgICBBVVRIT1JJWkFUSU9OOiBcImF1dGhvcml6YXRpb25cIixcbiAgICB9LFxufTtcbmZ1bmN0aW9uIGlzVXVpZCh0ZXh0KSB7XG4gICAgcmV0dXJuIC9eWzAtOWEtZkEtRl17OH1cXGItWzAtOWEtZkEtRl17NH1cXGItWzAtOWEtZkEtRl17NH1cXGItWzAtOWEtZkEtRl17NH1cXGItWzAtOWEtZkEtRl17MTJ9JC8udGVzdCh0ZXh0KTtcbn1cbi8qKlxuICogRGVmaW5lcyBhIGNhbGxiYWNrIHRvIGhhbmRsZSBhdXRoIGNoYWxsZW5nZSBmb3IgU3RvcmFnZSBBUElzLlxuICogVGhpcyBpbXBsZW1lbnRzIHRoZSBiZWFyZXIgY2hhbGxlbmdlIHByb2Nlc3MgZGVzY3JpYmVkIGhlcmU6IGh0dHBzOi8vbGVhcm4ubWljcm9zb2Z0LmNvbS9yZXN0L2FwaS9zdG9yYWdlc2VydmljZXMvYXV0aG9yaXplLXdpdGgtYXp1cmUtYWN0aXZlLWRpcmVjdG9yeSNiZWFyZXItY2hhbGxlbmdlXG4gKiBIYW5kbGluZyBoYXMgc3BlY2lmaWMgZmVhdHVyZXMgZm9yIHN0b3JhZ2UgdGhhdCBkZXBhcnRzIHRvIHRoZSBnZW5lcmFsIEFBRCBjaGFsbGVuZ2UgZG9jcy5cbiAqKi9cbmV4cG9ydCBjb25zdCBhdXRob3JpemVSZXF1ZXN0T25UZW5hbnRDaGFsbGVuZ2UgPSBhc3luYyAoY2hhbGxlbmdlT3B0aW9ucykgPT4ge1xuICAgIHZhciBfYTtcbiAgICBjb25zdCByZXF1ZXN0T3B0aW9ucyA9IHJlcXVlc3RUb09wdGlvbnMoY2hhbGxlbmdlT3B0aW9ucy5yZXF1ZXN0KTtcbiAgICBjb25zdCBjaGFsbGVuZ2UgPSBnZXRDaGFsbGVuZ2UoY2hhbGxlbmdlT3B0aW9ucy5yZXNwb25zZSk7XG4gICAgaWYgKGNoYWxsZW5nZSkge1xuICAgICAgICBjb25zdCBjaGFsbGVuZ2VJbmZvID0gcGFyc2VDaGFsbGVuZ2UoY2hhbGxlbmdlKTtcbiAgICAgICAgY29uc3QgY2hhbGxlbmdlU2NvcGVzID0gYnVpbGRTY29wZXMoY2hhbGxlbmdlT3B0aW9ucywgY2hhbGxlbmdlSW5mbyk7XG4gICAgICAgIGNvbnN0IHRlbmFudElkID0gZXh0cmFjdFRlbmFudElkKGNoYWxsZW5nZUluZm8pO1xuICAgICAgICBpZiAoIXRlbmFudElkKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYWNjZXNzVG9rZW4gPSBhd2FpdCBjaGFsbGVuZ2VPcHRpb25zLmdldEFjY2Vzc1Rva2VuKGNoYWxsZW5nZVNjb3BlcywgT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCByZXF1ZXN0T3B0aW9ucyksIHsgdGVuYW50SWQgfSkpO1xuICAgICAgICBpZiAoIWFjY2Vzc1Rva2VuKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgY2hhbGxlbmdlT3B0aW9ucy5yZXF1ZXN0LmhlYWRlcnMuc2V0KENvbnN0YW50cy5IZWFkZXJDb25zdGFudHMuQVVUSE9SSVpBVElPTiwgYCR7KF9hID0gYWNjZXNzVG9rZW4udG9rZW5UeXBlKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBcIkJlYXJlclwifSAke2FjY2Vzc1Rva2VuLnRva2VufWApO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufTtcbi8qKlxuICogRXh0cmFjdHMgdGhlIHRlbmFudCBpZCBmcm9tIHRoZSBjaGFsbGVuZ2UgaW5mb3JtYXRpb25cbiAqIFRoZSB0ZW5hbnQgaWQgaXMgY29udGFpbmVkIGluIHRoZSBhdXRob3JpemF0aW9uX3VyaSBhcyB0aGUgZmlyc3RcbiAqIHBhdGggcGFydC5cbiAqL1xuZnVuY3Rpb24gZXh0cmFjdFRlbmFudElkKGNoYWxsZW5nZUluZm8pIHtcbiAgICBjb25zdCBwYXJzZWRBdXRoVXJpID0gbmV3IFVSTChjaGFsbGVuZ2VJbmZvLmF1dGhvcml6YXRpb25fdXJpKTtcbiAgICBjb25zdCBwYXRoU2VnbWVudHMgPSBwYXJzZWRBdXRoVXJpLnBhdGhuYW1lLnNwbGl0KFwiL1wiKTtcbiAgICBjb25zdCB0ZW5hbnRJZCA9IHBhdGhTZWdtZW50c1sxXTtcbiAgICBpZiAodGVuYW50SWQgJiYgaXNVdWlkKHRlbmFudElkKSkge1xuICAgICAgICByZXR1cm4gdGVuYW50SWQ7XG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWQ7XG59XG4vKipcbiAqIEJ1aWxkcyB0aGUgYXV0aGVudGljYXRpb24gc2NvcGVzIGJhc2VkIG9uIHRoZSBpbmZvcm1hdGlvbiB0aGF0IGNvbWVzIGluIHRoZVxuICogY2hhbGxlbmdlIGluZm9ybWF0aW9uLiBTY29wZXMgdXJsIGlzIHByZXNlbnQgaW4gdGhlIHJlc291cmNlX2lkLCBpZiBpdCBpcyBlbXB0eVxuICogd2Uga2VlcCB1c2luZyB0aGUgb3JpZ2luYWwgc2NvcGVzLlxuICovXG5mdW5jdGlvbiBidWlsZFNjb3BlcyhjaGFsbGVuZ2VPcHRpb25zLCBjaGFsbGVuZ2VJbmZvKSB7XG4gICAgaWYgKCFjaGFsbGVuZ2VJbmZvLnJlc291cmNlX2lkKSB7XG4gICAgICAgIHJldHVybiBjaGFsbGVuZ2VPcHRpb25zLnNjb3BlcztcbiAgICB9XG4gICAgY29uc3QgY2hhbGxlbmdlU2NvcGVzID0gbmV3IFVSTChjaGFsbGVuZ2VJbmZvLnJlc291cmNlX2lkKTtcbiAgICBjaGFsbGVuZ2VTY29wZXMucGF0aG5hbWUgPSBDb25zdGFudHMuRGVmYXVsdFNjb3BlO1xuICAgIGxldCBzY29wZSA9IGNoYWxsZW5nZVNjb3Blcy50b1N0cmluZygpO1xuICAgIGlmIChzY29wZSA9PT0gXCJodHRwczovL2Rpc2suYXp1cmUuY29tLy5kZWZhdWx0XCIpIHtcbiAgICAgICAgLy8gdGhlIGV4dHJhIHNsYXNoIGlzIHJlcXVpcmVkIGJ5IHRoZSBzZXJ2aWNlXG4gICAgICAgIHNjb3BlID0gXCJodHRwczovL2Rpc2suYXp1cmUuY29tLy8uZGVmYXVsdFwiO1xuICAgIH1cbiAgICByZXR1cm4gW3Njb3BlXTtcbn1cbi8qKlxuICogV2Ugd2lsbCByZXRyaWV2ZSB0aGUgY2hhbGxlbmdlIG9ubHkgaWYgdGhlIHJlc3BvbnNlIHN0YXR1cyBjb2RlIHdhcyA0MDEsXG4gKiBhbmQgaWYgdGhlIHJlc3BvbnNlIGNvbnRhaW5lZCB0aGUgaGVhZGVyIFwiV1dXLUF1dGhlbnRpY2F0ZVwiIHdpdGggYSBub24tZW1wdHkgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIGdldENoYWxsZW5nZShyZXNwb25zZSkge1xuICAgIGNvbnN0IGNoYWxsZW5nZSA9IHJlc3BvbnNlLmhlYWRlcnMuZ2V0KFwiV1dXLUF1dGhlbnRpY2F0ZVwiKTtcbiAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDEgJiYgY2hhbGxlbmdlKSB7XG4gICAgICAgIHJldHVybiBjaGFsbGVuZ2U7XG4gICAgfVxuICAgIHJldHVybjtcbn1cbi8qKlxuICogQ29udmVydHM6IGBCZWFyZXIgYT1cImJcIiBjPVwiZFwiYC5cbiAqIEludG86IGBbIHsgYTogJ2InLCBjOiAnZCcgfV1gLlxuICpcbiAqIEBpbnRlcm5hbFxuICovXG5mdW5jdGlvbiBwYXJzZUNoYWxsZW5nZShjaGFsbGVuZ2UpIHtcbiAgICBjb25zdCBiZWFyZXJDaGFsbGVuZ2UgPSBjaGFsbGVuZ2Uuc2xpY2UoXCJCZWFyZXIgXCIubGVuZ3RoKTtcbiAgICBjb25zdCBjaGFsbGVuZ2VQYXJ0cyA9IGAke2JlYXJlckNoYWxsZW5nZS50cmltKCl9IGAuc3BsaXQoXCIgXCIpLmZpbHRlcigoeCkgPT4geCk7XG4gICAgY29uc3Qga2V5VmFsdWVQYWlycyA9IGNoYWxsZW5nZVBhcnRzLm1hcCgoa2V5VmFsdWUpID0+ICgoW2tleSwgdmFsdWVdKSA9PiAoeyBba2V5XTogdmFsdWUgfSkpKGtleVZhbHVlLnRyaW0oKS5zcGxpdChcIj1cIikpKTtcbiAgICAvLyBLZXktdmFsdWUgcGFpcnMgdG8gcGxhaW4gb2JqZWN0OlxuICAgIHJldHVybiBrZXlWYWx1ZVBhaXJzLnJlZHVjZSgoYSwgYikgPT4gKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgYSksIGIpKSwge30pO1xufVxuLyoqXG4gKiBFeHRyYWN0cyB0aGUgb3B0aW9ucyBmb3JtIGEgUGlwZWxpbmUgUmVxdWVzdCBmb3IgbGF0ZXIgcmUtdXNlXG4gKi9cbmZ1bmN0aW9uIHJlcXVlc3RUb09wdGlvbnMocmVxdWVzdCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGFib3J0U2lnbmFsOiByZXF1ZXN0LmFib3J0U2lnbmFsLFxuICAgICAgICByZXF1ZXN0T3B0aW9uczoge1xuICAgICAgICAgICAgdGltZW91dDogcmVxdWVzdC50aW1lb3V0LFxuICAgICAgICB9LFxuICAgICAgICB0cmFjaW5nT3B0aW9uczogcmVxdWVzdC50cmFjaW5nT3B0aW9ucyxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXV0aG9yaXplUmVxdWVzdE9uVGVuYW50Q2hhbGxlbmdlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/authorizeRequestOnTenantChallenge.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/base64.js":
/*!************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/base64.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeString: () => (/* binding */ decodeString),\n/* harmony export */   decodeStringToString: () => (/* binding */ decodeStringToString),\n/* harmony export */   encodeByteArray: () => (/* binding */ encodeByteArray),\n/* harmony export */   encodeString: () => (/* binding */ encodeString)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Encodes a string in base64 format.\n * @param value - the string to encode\n * @internal\n */\nfunction encodeString(value) {\n    return Buffer.from(value).toString(\"base64\");\n}\n/**\n * Encodes a byte array in base64 format.\n * @param value - the Uint8Aray to encode\n * @internal\n */\nfunction encodeByteArray(value) {\n    const bufferValue = value instanceof Buffer ? value : Buffer.from(value.buffer);\n    return bufferValue.toString(\"base64\");\n}\n/**\n * Decodes a base64 string into a byte array.\n * @param value - the base64 string to decode\n * @internal\n */\nfunction decodeString(value) {\n    return Buffer.from(value, \"base64\");\n}\n/**\n * Decodes a base64 string into a string.\n * @param value - the base64 string to decode\n * @internal\n */\nfunction decodeStringToString(value) {\n    return Buffer.from(value, \"base64\").toString();\n}\n//# sourceMappingURL=base64.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL2Jhc2U2NC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGhlbGxvLXZvaWNlXFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1jbGllbnRcXGRpc3RcXGVzbVxcYmFzZTY0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqXG4gKiBFbmNvZGVzIGEgc3RyaW5nIGluIGJhc2U2NCBmb3JtYXQuXG4gKiBAcGFyYW0gdmFsdWUgLSB0aGUgc3RyaW5nIHRvIGVuY29kZVxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVTdHJpbmcodmFsdWUpIHtcbiAgICByZXR1cm4gQnVmZmVyLmZyb20odmFsdWUpLnRvU3RyaW5nKFwiYmFzZTY0XCIpO1xufVxuLyoqXG4gKiBFbmNvZGVzIGEgYnl0ZSBhcnJheSBpbiBiYXNlNjQgZm9ybWF0LlxuICogQHBhcmFtIHZhbHVlIC0gdGhlIFVpbnQ4QXJheSB0byBlbmNvZGVcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlQnl0ZUFycmF5KHZhbHVlKSB7XG4gICAgY29uc3QgYnVmZmVyVmFsdWUgPSB2YWx1ZSBpbnN0YW5jZW9mIEJ1ZmZlciA/IHZhbHVlIDogQnVmZmVyLmZyb20odmFsdWUuYnVmZmVyKTtcbiAgICByZXR1cm4gYnVmZmVyVmFsdWUudG9TdHJpbmcoXCJiYXNlNjRcIik7XG59XG4vKipcbiAqIERlY29kZXMgYSBiYXNlNjQgc3RyaW5nIGludG8gYSBieXRlIGFycmF5LlxuICogQHBhcmFtIHZhbHVlIC0gdGhlIGJhc2U2NCBzdHJpbmcgdG8gZGVjb2RlXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVN0cmluZyh2YWx1ZSkge1xuICAgIHJldHVybiBCdWZmZXIuZnJvbSh2YWx1ZSwgXCJiYXNlNjRcIik7XG59XG4vKipcbiAqIERlY29kZXMgYSBiYXNlNjQgc3RyaW5nIGludG8gYSBzdHJpbmcuXG4gKiBAcGFyYW0gdmFsdWUgLSB0aGUgYmFzZTY0IHN0cmluZyB0byBkZWNvZGVcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlU3RyaW5nVG9TdHJpbmcodmFsdWUpIHtcbiAgICByZXR1cm4gQnVmZmVyLmZyb20odmFsdWUsIFwiYmFzZTY0XCIpLnRvU3RyaW5nKCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlNjQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/base64.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/deserializationPolicy.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/deserializationPolicy.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deserializationPolicy: () => (/* binding */ deserializationPolicy),\n/* harmony export */   deserializationPolicyName: () => (/* binding */ deserializationPolicyName)\n/* harmony export */ });\n/* harmony import */ var _interfaces_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interfaces.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/interfaces.js\");\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n/* harmony import */ var _serializer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./serializer.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/serializer.js\");\n/* harmony import */ var _operationHelpers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operationHelpers.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/operationHelpers.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\nconst defaultJsonContentTypes = [\"application/json\", \"text/json\"];\nconst defaultXmlContentTypes = [\"application/xml\", \"application/atom+xml\"];\n/**\n * The programmatic identifier of the deserializationPolicy.\n */\nconst deserializationPolicyName = \"deserializationPolicy\";\n/**\n * This policy handles parsing out responses according to OperationSpecs on the request.\n */\nfunction deserializationPolicy(options = {}) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    const jsonContentTypes = (_b = (_a = options.expectedContentTypes) === null || _a === void 0 ? void 0 : _a.json) !== null && _b !== void 0 ? _b : defaultJsonContentTypes;\n    const xmlContentTypes = (_d = (_c = options.expectedContentTypes) === null || _c === void 0 ? void 0 : _c.xml) !== null && _d !== void 0 ? _d : defaultXmlContentTypes;\n    const parseXML = options.parseXML;\n    const serializerOptions = options.serializerOptions;\n    const updatedOptions = {\n        xml: {\n            rootName: (_e = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.rootName) !== null && _e !== void 0 ? _e : \"\",\n            includeRoot: (_f = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.includeRoot) !== null && _f !== void 0 ? _f : false,\n            xmlCharKey: (_g = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.xmlCharKey) !== null && _g !== void 0 ? _g : _interfaces_js__WEBPACK_IMPORTED_MODULE_0__.XML_CHARKEY,\n        },\n    };\n    return {\n        name: deserializationPolicyName,\n        async sendRequest(request, next) {\n            const response = await next(request);\n            return deserializeResponseBody(jsonContentTypes, xmlContentTypes, response, updatedOptions, parseXML);\n        },\n    };\n}\nfunction getOperationResponseMap(parsedResponse) {\n    let result;\n    const request = parsedResponse.request;\n    const operationInfo = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_3__.getOperationRequestInfo)(request);\n    const operationSpec = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationSpec;\n    if (operationSpec) {\n        if (!(operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationResponseGetter)) {\n            result = operationSpec.responses[parsedResponse.status];\n        }\n        else {\n            result = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationResponseGetter(operationSpec, parsedResponse);\n        }\n    }\n    return result;\n}\nfunction shouldDeserializeResponse(parsedResponse) {\n    const request = parsedResponse.request;\n    const operationInfo = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_3__.getOperationRequestInfo)(request);\n    const shouldDeserialize = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.shouldDeserialize;\n    let result;\n    if (shouldDeserialize === undefined) {\n        result = true;\n    }\n    else if (typeof shouldDeserialize === \"boolean\") {\n        result = shouldDeserialize;\n    }\n    else {\n        result = shouldDeserialize(parsedResponse);\n    }\n    return result;\n}\nasync function deserializeResponseBody(jsonContentTypes, xmlContentTypes, response, options, parseXML) {\n    const parsedResponse = await parse(jsonContentTypes, xmlContentTypes, response, options, parseXML);\n    if (!shouldDeserializeResponse(parsedResponse)) {\n        return parsedResponse;\n    }\n    const operationInfo = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_3__.getOperationRequestInfo)(parsedResponse.request);\n    const operationSpec = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationSpec;\n    if (!operationSpec || !operationSpec.responses) {\n        return parsedResponse;\n    }\n    const responseSpec = getOperationResponseMap(parsedResponse);\n    const { error, shouldReturnResponse } = handleErrorResponse(parsedResponse, operationSpec, responseSpec, options);\n    if (error) {\n        throw error;\n    }\n    else if (shouldReturnResponse) {\n        return parsedResponse;\n    }\n    // An operation response spec does exist for current status code, so\n    // use it to deserialize the response.\n    if (responseSpec) {\n        if (responseSpec.bodyMapper) {\n            let valueToDeserialize = parsedResponse.parsedBody;\n            if (operationSpec.isXML && responseSpec.bodyMapper.type.name === _serializer_js__WEBPACK_IMPORTED_MODULE_2__.MapperTypeNames.Sequence) {\n                valueToDeserialize =\n                    typeof valueToDeserialize === \"object\"\n                        ? valueToDeserialize[responseSpec.bodyMapper.xmlElementName]\n                        : [];\n            }\n            try {\n                parsedResponse.parsedBody = operationSpec.serializer.deserialize(responseSpec.bodyMapper, valueToDeserialize, \"operationRes.parsedBody\", options);\n            }\n            catch (deserializeError) {\n                const restError = new _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__.RestError(`Error ${deserializeError} occurred in deserializing the responseBody - ${parsedResponse.bodyAsText}`, {\n                    statusCode: parsedResponse.status,\n                    request: parsedResponse.request,\n                    response: parsedResponse,\n                });\n                throw restError;\n            }\n        }\n        else if (operationSpec.httpMethod === \"HEAD\") {\n            // head methods never have a body, but we return a boolean to indicate presence/absence of the resource\n            parsedResponse.parsedBody = response.status >= 200 && response.status < 300;\n        }\n        if (responseSpec.headersMapper) {\n            parsedResponse.parsedHeaders = operationSpec.serializer.deserialize(responseSpec.headersMapper, parsedResponse.headers.toJSON(), \"operationRes.parsedHeaders\", { xml: {}, ignoreUnknownProperties: true });\n        }\n    }\n    return parsedResponse;\n}\nfunction isOperationSpecEmpty(operationSpec) {\n    const expectedStatusCodes = Object.keys(operationSpec.responses);\n    return (expectedStatusCodes.length === 0 ||\n        (expectedStatusCodes.length === 1 && expectedStatusCodes[0] === \"default\"));\n}\nfunction handleErrorResponse(parsedResponse, operationSpec, responseSpec, options) {\n    var _a, _b, _c, _d, _e;\n    const isSuccessByStatus = 200 <= parsedResponse.status && parsedResponse.status < 300;\n    const isExpectedStatusCode = isOperationSpecEmpty(operationSpec)\n        ? isSuccessByStatus\n        : !!responseSpec;\n    if (isExpectedStatusCode) {\n        if (responseSpec) {\n            if (!responseSpec.isError) {\n                return { error: null, shouldReturnResponse: false };\n            }\n        }\n        else {\n            return { error: null, shouldReturnResponse: false };\n        }\n    }\n    const errorResponseSpec = responseSpec !== null && responseSpec !== void 0 ? responseSpec : operationSpec.responses.default;\n    const initialErrorMessage = ((_a = parsedResponse.request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.has(parsedResponse.status))\n        ? `Unexpected status code: ${parsedResponse.status}`\n        : parsedResponse.bodyAsText;\n    const error = new _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__.RestError(initialErrorMessage, {\n        statusCode: parsedResponse.status,\n        request: parsedResponse.request,\n        response: parsedResponse,\n    });\n    // If the item failed but there's no error spec or default spec to deserialize the error,\n    // and the parsed body doesn't look like an error object,\n    // we should fail so we just throw the parsed response\n    if (!errorResponseSpec &&\n        !(((_c = (_b = parsedResponse.parsedBody) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.code) && ((_e = (_d = parsedResponse.parsedBody) === null || _d === void 0 ? void 0 : _d.error) === null || _e === void 0 ? void 0 : _e.message))) {\n        throw error;\n    }\n    const defaultBodyMapper = errorResponseSpec === null || errorResponseSpec === void 0 ? void 0 : errorResponseSpec.bodyMapper;\n    const defaultHeadersMapper = errorResponseSpec === null || errorResponseSpec === void 0 ? void 0 : errorResponseSpec.headersMapper;\n    try {\n        // If error response has a body, try to deserialize it using default body mapper.\n        // Then try to extract error code & message from it\n        if (parsedResponse.parsedBody) {\n            const parsedBody = parsedResponse.parsedBody;\n            let deserializedError;\n            if (defaultBodyMapper) {\n                let valueToDeserialize = parsedBody;\n                if (operationSpec.isXML && defaultBodyMapper.type.name === _serializer_js__WEBPACK_IMPORTED_MODULE_2__.MapperTypeNames.Sequence) {\n                    valueToDeserialize = [];\n                    const elementName = defaultBodyMapper.xmlElementName;\n                    if (typeof parsedBody === \"object\" && elementName) {\n                        valueToDeserialize = parsedBody[elementName];\n                    }\n                }\n                deserializedError = operationSpec.serializer.deserialize(defaultBodyMapper, valueToDeserialize, \"error.response.parsedBody\", options);\n            }\n            const internalError = parsedBody.error || deserializedError || parsedBody;\n            error.code = internalError.code;\n            if (internalError.message) {\n                error.message = internalError.message;\n            }\n            if (defaultBodyMapper) {\n                error.response.parsedBody = deserializedError;\n            }\n        }\n        // If error response has headers, try to deserialize it using default header mapper\n        if (parsedResponse.headers && defaultHeadersMapper) {\n            error.response.parsedHeaders =\n                operationSpec.serializer.deserialize(defaultHeadersMapper, parsedResponse.headers.toJSON(), \"operationRes.parsedHeaders\");\n        }\n    }\n    catch (defaultError) {\n        error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody - \"${parsedResponse.bodyAsText}\" for the default response.`;\n    }\n    return { error, shouldReturnResponse: false };\n}\nasync function parse(jsonContentTypes, xmlContentTypes, operationResponse, opts, parseXML) {\n    var _a;\n    if (!((_a = operationResponse.request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.has(operationResponse.status)) &&\n        operationResponse.bodyAsText) {\n        const text = operationResponse.bodyAsText;\n        const contentType = operationResponse.headers.get(\"Content-Type\") || \"\";\n        const contentComponents = !contentType\n            ? []\n            : contentType.split(\";\").map((component) => component.toLowerCase());\n        try {\n            if (contentComponents.length === 0 ||\n                contentComponents.some((component) => jsonContentTypes.indexOf(component) !== -1)) {\n                operationResponse.parsedBody = JSON.parse(text);\n                return operationResponse;\n            }\n            else if (contentComponents.some((component) => xmlContentTypes.indexOf(component) !== -1)) {\n                if (!parseXML) {\n                    throw new Error(\"Parsing XML not supported.\");\n                }\n                const body = await parseXML(text, opts.xml);\n                operationResponse.parsedBody = body;\n                return operationResponse;\n            }\n        }\n        catch (err) {\n            const msg = `Error \"${err}\" occurred while parsing the response body - ${operationResponse.bodyAsText}.`;\n            const errCode = err.code || _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__.RestError.PARSE_ERROR;\n            const e = new _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__.RestError(msg, {\n                code: errCode,\n                statusCode: operationResponse.status,\n                request: operationResponse.request,\n                response: operationResponse,\n            });\n            throw e;\n        }\n    }\n    return operationResponse;\n}\n//# sourceMappingURL=deserializationPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/deserializationPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/httpClientCache.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/httpClientCache.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCachedDefaultHttpClient: () => (/* binding */ getCachedDefaultHttpClient)\n/* harmony export */ });\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nlet cachedHttpClient;\nfunction getCachedDefaultHttpClient() {\n    if (!cachedHttpClient) {\n        cachedHttpClient = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createDefaultHttpClient)();\n    }\n    return cachedHttpClient;\n}\n//# sourceMappingURL=httpClientCache.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL2h0dHBDbGllbnRDYWNoZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDb0U7QUFDcEU7QUFDTztBQUNQO0FBQ0EsMkJBQTJCLGtGQUF1QjtBQUNsRDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxoZWxsby12b2ljZVxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtY2xpZW50XFxkaXN0XFxlc21cXGh0dHBDbGllbnRDYWNoZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGNyZWF0ZURlZmF1bHRIdHRwQ2xpZW50IH0gZnJvbSBcIkBhenVyZS9jb3JlLXJlc3QtcGlwZWxpbmVcIjtcbmxldCBjYWNoZWRIdHRwQ2xpZW50O1xuZXhwb3J0IGZ1bmN0aW9uIGdldENhY2hlZERlZmF1bHRIdHRwQ2xpZW50KCkge1xuICAgIGlmICghY2FjaGVkSHR0cENsaWVudCkge1xuICAgICAgICBjYWNoZWRIdHRwQ2xpZW50ID0gY3JlYXRlRGVmYXVsdEh0dHBDbGllbnQoKTtcbiAgICB9XG4gICAgcmV0dXJuIGNhY2hlZEh0dHBDbGllbnQ7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1odHRwQ2xpZW50Q2FjaGUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/httpClientCache.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapperTypeNames: () => (/* reexport safe */ _serializer_js__WEBPACK_IMPORTED_MODULE_0__.MapperTypeNames),\n/* harmony export */   ServiceClient: () => (/* reexport safe */ _serviceClient_js__WEBPACK_IMPORTED_MODULE_1__.ServiceClient),\n/* harmony export */   XML_ATTRKEY: () => (/* reexport safe */ _interfaces_js__WEBPACK_IMPORTED_MODULE_3__.XML_ATTRKEY),\n/* harmony export */   XML_CHARKEY: () => (/* reexport safe */ _interfaces_js__WEBPACK_IMPORTED_MODULE_3__.XML_CHARKEY),\n/* harmony export */   authorizeRequestOnClaimChallenge: () => (/* reexport safe */ _authorizeRequestOnClaimChallenge_js__WEBPACK_IMPORTED_MODULE_6__.authorizeRequestOnClaimChallenge),\n/* harmony export */   authorizeRequestOnTenantChallenge: () => (/* reexport safe */ _authorizeRequestOnTenantChallenge_js__WEBPACK_IMPORTED_MODULE_7__.authorizeRequestOnTenantChallenge),\n/* harmony export */   createClientPipeline: () => (/* reexport safe */ _pipeline_js__WEBPACK_IMPORTED_MODULE_2__.createClientPipeline),\n/* harmony export */   createSerializer: () => (/* reexport safe */ _serializer_js__WEBPACK_IMPORTED_MODULE_0__.createSerializer),\n/* harmony export */   deserializationPolicy: () => (/* reexport safe */ _deserializationPolicy_js__WEBPACK_IMPORTED_MODULE_4__.deserializationPolicy),\n/* harmony export */   deserializationPolicyName: () => (/* reexport safe */ _deserializationPolicy_js__WEBPACK_IMPORTED_MODULE_4__.deserializationPolicyName),\n/* harmony export */   serializationPolicy: () => (/* reexport safe */ _serializationPolicy_js__WEBPACK_IMPORTED_MODULE_5__.serializationPolicy),\n/* harmony export */   serializationPolicyName: () => (/* reexport safe */ _serializationPolicy_js__WEBPACK_IMPORTED_MODULE_5__.serializationPolicyName)\n/* harmony export */ });\n/* harmony import */ var _serializer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./serializer.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/serializer.js\");\n/* harmony import */ var _serviceClient_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./serviceClient.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/serviceClient.js\");\n/* harmony import */ var _pipeline_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pipeline.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/pipeline.js\");\n/* harmony import */ var _interfaces_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./interfaces.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/interfaces.js\");\n/* harmony import */ var _deserializationPolicy_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./deserializationPolicy.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/deserializationPolicy.js\");\n/* harmony import */ var _serializationPolicy_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./serializationPolicy.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/serializationPolicy.js\");\n/* harmony import */ var _authorizeRequestOnClaimChallenge_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./authorizeRequestOnClaimChallenge.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/authorizeRequestOnClaimChallenge.js\");\n/* harmony import */ var _authorizeRequestOnTenantChallenge_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./authorizeRequestOnTenantChallenge.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/authorizeRequestOnTenantChallenge.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNvRTtBQUNqQjtBQUNFO0FBQ087QUFDbUM7QUFDTjtBQUNBO0FBQ0U7QUFDM0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLWNsaWVudFxcZGlzdFxcZXNtXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCB7IGNyZWF0ZVNlcmlhbGl6ZXIsIE1hcHBlclR5cGVOYW1lcyB9IGZyb20gXCIuL3NlcmlhbGl6ZXIuanNcIjtcbmV4cG9ydCB7IFNlcnZpY2VDbGllbnQgfSBmcm9tIFwiLi9zZXJ2aWNlQ2xpZW50LmpzXCI7XG5leHBvcnQgeyBjcmVhdGVDbGllbnRQaXBlbGluZSB9IGZyb20gXCIuL3BpcGVsaW5lLmpzXCI7XG5leHBvcnQgeyBYTUxfQVRUUktFWSwgWE1MX0NIQVJLRVksIH0gZnJvbSBcIi4vaW50ZXJmYWNlcy5qc1wiO1xuZXhwb3J0IHsgZGVzZXJpYWxpemF0aW9uUG9saWN5LCBkZXNlcmlhbGl6YXRpb25Qb2xpY3lOYW1lLCB9IGZyb20gXCIuL2Rlc2VyaWFsaXphdGlvblBvbGljeS5qc1wiO1xuZXhwb3J0IHsgc2VyaWFsaXphdGlvblBvbGljeSwgc2VyaWFsaXphdGlvblBvbGljeU5hbWUsIH0gZnJvbSBcIi4vc2VyaWFsaXphdGlvblBvbGljeS5qc1wiO1xuZXhwb3J0IHsgYXV0aG9yaXplUmVxdWVzdE9uQ2xhaW1DaGFsbGVuZ2UgfSBmcm9tIFwiLi9hdXRob3JpemVSZXF1ZXN0T25DbGFpbUNoYWxsZW5nZS5qc1wiO1xuZXhwb3J0IHsgYXV0aG9yaXplUmVxdWVzdE9uVGVuYW50Q2hhbGxlbmdlIH0gZnJvbSBcIi4vYXV0aG9yaXplUmVxdWVzdE9uVGVuYW50Q2hhbGxlbmdlLmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/interfaceHelpers.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/interfaceHelpers.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getPathStringFromParameter: () => (/* binding */ getPathStringFromParameter),\n/* harmony export */   getStreamingResponseStatusCodes: () => (/* binding */ getStreamingResponseStatusCodes)\n/* harmony export */ });\n/* harmony import */ var _serializer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./serializer.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/serializer.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Gets the list of status codes for streaming responses.\n * @internal\n */\nfunction getStreamingResponseStatusCodes(operationSpec) {\n    const result = new Set();\n    for (const statusCode in operationSpec.responses) {\n        const operationResponse = operationSpec.responses[statusCode];\n        if (operationResponse.bodyMapper &&\n            operationResponse.bodyMapper.type.name === _serializer_js__WEBPACK_IMPORTED_MODULE_0__.MapperTypeNames.Stream) {\n            result.add(Number(statusCode));\n        }\n    }\n    return result;\n}\n/**\n * Get the path to this parameter's value as a dotted string (a.b.c).\n * @param parameter - The parameter to get the path string for.\n * @returns The path to this parameter's value as a dotted string.\n * @internal\n */\nfunction getPathStringFromParameter(parameter) {\n    const { parameterPath, mapper } = parameter;\n    let result;\n    if (typeof parameterPath === \"string\") {\n        result = parameterPath;\n    }\n    else if (Array.isArray(parameterPath)) {\n        result = parameterPath.join(\".\");\n    }\n    else {\n        result = mapper.serializedName;\n    }\n    return result;\n}\n//# sourceMappingURL=interfaceHelpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL2ludGVyZmFjZUhlbHBlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNrRDtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsMkRBQWU7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSx3QkFBd0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLWNsaWVudFxcZGlzdFxcZXNtXFxpbnRlcmZhY2VIZWxwZXJzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgTWFwcGVyVHlwZU5hbWVzIH0gZnJvbSBcIi4vc2VyaWFsaXplci5qc1wiO1xuLyoqXG4gKiBHZXRzIHRoZSBsaXN0IG9mIHN0YXR1cyBjb2RlcyBmb3Igc3RyZWFtaW5nIHJlc3BvbnNlcy5cbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0U3RyZWFtaW5nUmVzcG9uc2VTdGF0dXNDb2RlcyhvcGVyYXRpb25TcGVjKSB7XG4gICAgY29uc3QgcmVzdWx0ID0gbmV3IFNldCgpO1xuICAgIGZvciAoY29uc3Qgc3RhdHVzQ29kZSBpbiBvcGVyYXRpb25TcGVjLnJlc3BvbnNlcykge1xuICAgICAgICBjb25zdCBvcGVyYXRpb25SZXNwb25zZSA9IG9wZXJhdGlvblNwZWMucmVzcG9uc2VzW3N0YXR1c0NvZGVdO1xuICAgICAgICBpZiAob3BlcmF0aW9uUmVzcG9uc2UuYm9keU1hcHBlciAmJlxuICAgICAgICAgICAgb3BlcmF0aW9uUmVzcG9uc2UuYm9keU1hcHBlci50eXBlLm5hbWUgPT09IE1hcHBlclR5cGVOYW1lcy5TdHJlYW0pIHtcbiAgICAgICAgICAgIHJlc3VsdC5hZGQoTnVtYmVyKHN0YXR1c0NvZGUpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuLyoqXG4gKiBHZXQgdGhlIHBhdGggdG8gdGhpcyBwYXJhbWV0ZXIncyB2YWx1ZSBhcyBhIGRvdHRlZCBzdHJpbmcgKGEuYi5jKS5cbiAqIEBwYXJhbSBwYXJhbWV0ZXIgLSBUaGUgcGFyYW1ldGVyIHRvIGdldCB0aGUgcGF0aCBzdHJpbmcgZm9yLlxuICogQHJldHVybnMgVGhlIHBhdGggdG8gdGhpcyBwYXJhbWV0ZXIncyB2YWx1ZSBhcyBhIGRvdHRlZCBzdHJpbmcuXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFBhdGhTdHJpbmdGcm9tUGFyYW1ldGVyKHBhcmFtZXRlcikge1xuICAgIGNvbnN0IHsgcGFyYW1ldGVyUGF0aCwgbWFwcGVyIH0gPSBwYXJhbWV0ZXI7XG4gICAgbGV0IHJlc3VsdDtcbiAgICBpZiAodHlwZW9mIHBhcmFtZXRlclBhdGggPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgcmVzdWx0ID0gcGFyYW1ldGVyUGF0aDtcbiAgICB9XG4gICAgZWxzZSBpZiAoQXJyYXkuaXNBcnJheShwYXJhbWV0ZXJQYXRoKSkge1xuICAgICAgICByZXN1bHQgPSBwYXJhbWV0ZXJQYXRoLmpvaW4oXCIuXCIpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmVzdWx0ID0gbWFwcGVyLnNlcmlhbGl6ZWROYW1lO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJmYWNlSGVscGVycy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/interfaceHelpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/interfaces.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/interfaces.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   XML_ATTRKEY: () => (/* binding */ XML_ATTRKEY),\n/* harmony export */   XML_CHARKEY: () => (/* binding */ XML_CHARKEY)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Default key used to access the XML attributes.\n */\nconst XML_ATTRKEY = \"$\";\n/**\n * Default key used to access the XML value content.\n */\nconst XML_CHARKEY = \"_\";\n//# sourceMappingURL=interfaces.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL2ludGVyZmFjZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGhlbGxvLXZvaWNlXFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1jbGllbnRcXGRpc3RcXGVzbVxcaW50ZXJmYWNlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbi8qKlxuICogRGVmYXVsdCBrZXkgdXNlZCB0byBhY2Nlc3MgdGhlIFhNTCBhdHRyaWJ1dGVzLlxuICovXG5leHBvcnQgY29uc3QgWE1MX0FUVFJLRVkgPSBcIiRcIjtcbi8qKlxuICogRGVmYXVsdCBrZXkgdXNlZCB0byBhY2Nlc3MgdGhlIFhNTCB2YWx1ZSBjb250ZW50LlxuICovXG5leHBvcnQgY29uc3QgWE1MX0NIQVJLRVkgPSBcIl9cIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVyZmFjZXMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/interfaces.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/log.js":
/*!*********************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/log.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/logger */ \"(ssr)/./node_modules/@azure/logger/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nconst logger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_0__.createClientLogger)(\"core-client\");\n//# sourceMappingURL=log.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL2xvZy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDbUQ7QUFDNUMsZUFBZSxpRUFBa0I7QUFDeEMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLWNsaWVudFxcZGlzdFxcZXNtXFxsb2cuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBjcmVhdGVDbGllbnRMb2dnZXIgfSBmcm9tIFwiQGF6dXJlL2xvZ2dlclwiO1xuZXhwb3J0IGNvbnN0IGxvZ2dlciA9IGNyZWF0ZUNsaWVudExvZ2dlcihcImNvcmUtY2xpZW50XCIpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9nLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/log.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/operationHelpers.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/operationHelpers.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getOperationArgumentValueFromParameter: () => (/* binding */ getOperationArgumentValueFromParameter),\n/* harmony export */   getOperationRequestInfo: () => (/* binding */ getOperationRequestInfo)\n/* harmony export */ });\n/* harmony import */ var _state_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./state.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/state.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * @internal\n * Retrieves the value to use for a given operation argument\n * @param operationArguments - The arguments passed from the generated client\n * @param parameter - The parameter description\n * @param fallbackObject - If something isn't found in the arguments bag, look here.\n *  Generally used to look at the service client properties.\n */\nfunction getOperationArgumentValueFromParameter(operationArguments, parameter, fallbackObject) {\n    let parameterPath = parameter.parameterPath;\n    const parameterMapper = parameter.mapper;\n    let value;\n    if (typeof parameterPath === \"string\") {\n        parameterPath = [parameterPath];\n    }\n    if (Array.isArray(parameterPath)) {\n        if (parameterPath.length > 0) {\n            if (parameterMapper.isConstant) {\n                value = parameterMapper.defaultValue;\n            }\n            else {\n                let propertySearchResult = getPropertyFromParameterPath(operationArguments, parameterPath);\n                if (!propertySearchResult.propertyFound && fallbackObject) {\n                    propertySearchResult = getPropertyFromParameterPath(fallbackObject, parameterPath);\n                }\n                let useDefaultValue = false;\n                if (!propertySearchResult.propertyFound) {\n                    useDefaultValue =\n                        parameterMapper.required ||\n                            (parameterPath[0] === \"options\" && parameterPath.length === 2);\n                }\n                value = useDefaultValue ? parameterMapper.defaultValue : propertySearchResult.propertyValue;\n            }\n        }\n    }\n    else {\n        if (parameterMapper.required) {\n            value = {};\n        }\n        for (const propertyName in parameterPath) {\n            const propertyMapper = parameterMapper.type.modelProperties[propertyName];\n            const propertyPath = parameterPath[propertyName];\n            const propertyValue = getOperationArgumentValueFromParameter(operationArguments, {\n                parameterPath: propertyPath,\n                mapper: propertyMapper,\n            }, fallbackObject);\n            if (propertyValue !== undefined) {\n                if (!value) {\n                    value = {};\n                }\n                value[propertyName] = propertyValue;\n            }\n        }\n    }\n    return value;\n}\nfunction getPropertyFromParameterPath(parent, parameterPath) {\n    const result = { propertyFound: false };\n    let i = 0;\n    for (; i < parameterPath.length; ++i) {\n        const parameterPathPart = parameterPath[i];\n        // Make sure to check inherited properties too, so don't use hasOwnProperty().\n        if (parent && parameterPathPart in parent) {\n            parent = parent[parameterPathPart];\n        }\n        else {\n            break;\n        }\n    }\n    if (i === parameterPath.length) {\n        result.propertyValue = parent;\n        result.propertyFound = true;\n    }\n    return result;\n}\nconst originalRequestSymbol = Symbol.for(\"@azure/core-client original request\");\nfunction hasOriginalRequest(request) {\n    return originalRequestSymbol in request;\n}\nfunction getOperationRequestInfo(request) {\n    if (hasOriginalRequest(request)) {\n        return getOperationRequestInfo(request[originalRequestSymbol]);\n    }\n    let info = _state_js__WEBPACK_IMPORTED_MODULE_0__.state.operationRequestMap.get(request);\n    if (!info) {\n        info = {};\n        _state_js__WEBPACK_IMPORTED_MODULE_0__.state.operationRequestMap.set(request, info);\n    }\n    return info;\n}\n//# sourceMappingURL=operationHelpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL29wZXJhdGlvbkhlbHBlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBLFdBQVcsMEJBQTBCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxlQUFlLDRDQUFLO0FBQ3BCO0FBQ0E7QUFDQSxRQUFRLDRDQUFLO0FBQ2I7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLWNsaWVudFxcZGlzdFxcZXNtXFxvcGVyYXRpb25IZWxwZXJzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgc3RhdGUgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiO1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqIFJldHJpZXZlcyB0aGUgdmFsdWUgdG8gdXNlIGZvciBhIGdpdmVuIG9wZXJhdGlvbiBhcmd1bWVudFxuICogQHBhcmFtIG9wZXJhdGlvbkFyZ3VtZW50cyAtIFRoZSBhcmd1bWVudHMgcGFzc2VkIGZyb20gdGhlIGdlbmVyYXRlZCBjbGllbnRcbiAqIEBwYXJhbSBwYXJhbWV0ZXIgLSBUaGUgcGFyYW1ldGVyIGRlc2NyaXB0aW9uXG4gKiBAcGFyYW0gZmFsbGJhY2tPYmplY3QgLSBJZiBzb21ldGhpbmcgaXNuJ3QgZm91bmQgaW4gdGhlIGFyZ3VtZW50cyBiYWcsIGxvb2sgaGVyZS5cbiAqICBHZW5lcmFsbHkgdXNlZCB0byBsb29rIGF0IHRoZSBzZXJ2aWNlIGNsaWVudCBwcm9wZXJ0aWVzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0T3BlcmF0aW9uQXJndW1lbnRWYWx1ZUZyb21QYXJhbWV0ZXIob3BlcmF0aW9uQXJndW1lbnRzLCBwYXJhbWV0ZXIsIGZhbGxiYWNrT2JqZWN0KSB7XG4gICAgbGV0IHBhcmFtZXRlclBhdGggPSBwYXJhbWV0ZXIucGFyYW1ldGVyUGF0aDtcbiAgICBjb25zdCBwYXJhbWV0ZXJNYXBwZXIgPSBwYXJhbWV0ZXIubWFwcGVyO1xuICAgIGxldCB2YWx1ZTtcbiAgICBpZiAodHlwZW9mIHBhcmFtZXRlclBhdGggPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgcGFyYW1ldGVyUGF0aCA9IFtwYXJhbWV0ZXJQYXRoXTtcbiAgICB9XG4gICAgaWYgKEFycmF5LmlzQXJyYXkocGFyYW1ldGVyUGF0aCkpIHtcbiAgICAgICAgaWYgKHBhcmFtZXRlclBhdGgubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgaWYgKHBhcmFtZXRlck1hcHBlci5pc0NvbnN0YW50KSB7XG4gICAgICAgICAgICAgICAgdmFsdWUgPSBwYXJhbWV0ZXJNYXBwZXIuZGVmYXVsdFZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgbGV0IHByb3BlcnR5U2VhcmNoUmVzdWx0ID0gZ2V0UHJvcGVydHlGcm9tUGFyYW1ldGVyUGF0aChvcGVyYXRpb25Bcmd1bWVudHMsIHBhcmFtZXRlclBhdGgpO1xuICAgICAgICAgICAgICAgIGlmICghcHJvcGVydHlTZWFyY2hSZXN1bHQucHJvcGVydHlGb3VuZCAmJiBmYWxsYmFja09iamVjdCkge1xuICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0eVNlYXJjaFJlc3VsdCA9IGdldFByb3BlcnR5RnJvbVBhcmFtZXRlclBhdGgoZmFsbGJhY2tPYmplY3QsIHBhcmFtZXRlclBhdGgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBsZXQgdXNlRGVmYXVsdFZhbHVlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgaWYgKCFwcm9wZXJ0eVNlYXJjaFJlc3VsdC5wcm9wZXJ0eUZvdW5kKSB7XG4gICAgICAgICAgICAgICAgICAgIHVzZURlZmF1bHRWYWx1ZSA9XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJhbWV0ZXJNYXBwZXIucmVxdWlyZWQgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAocGFyYW1ldGVyUGF0aFswXSA9PT0gXCJvcHRpb25zXCIgJiYgcGFyYW1ldGVyUGF0aC5sZW5ndGggPT09IDIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YWx1ZSA9IHVzZURlZmF1bHRWYWx1ZSA/IHBhcmFtZXRlck1hcHBlci5kZWZhdWx0VmFsdWUgOiBwcm9wZXJ0eVNlYXJjaFJlc3VsdC5wcm9wZXJ0eVZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBpZiAocGFyYW1ldGVyTWFwcGVyLnJlcXVpcmVkKSB7XG4gICAgICAgICAgICB2YWx1ZSA9IHt9O1xuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3QgcHJvcGVydHlOYW1lIGluIHBhcmFtZXRlclBhdGgpIHtcbiAgICAgICAgICAgIGNvbnN0IHByb3BlcnR5TWFwcGVyID0gcGFyYW1ldGVyTWFwcGVyLnR5cGUubW9kZWxQcm9wZXJ0aWVzW3Byb3BlcnR5TmFtZV07XG4gICAgICAgICAgICBjb25zdCBwcm9wZXJ0eVBhdGggPSBwYXJhbWV0ZXJQYXRoW3Byb3BlcnR5TmFtZV07XG4gICAgICAgICAgICBjb25zdCBwcm9wZXJ0eVZhbHVlID0gZ2V0T3BlcmF0aW9uQXJndW1lbnRWYWx1ZUZyb21QYXJhbWV0ZXIob3BlcmF0aW9uQXJndW1lbnRzLCB7XG4gICAgICAgICAgICAgICAgcGFyYW1ldGVyUGF0aDogcHJvcGVydHlQYXRoLFxuICAgICAgICAgICAgICAgIG1hcHBlcjogcHJvcGVydHlNYXBwZXIsXG4gICAgICAgICAgICB9LCBmYWxsYmFja09iamVjdCk7XG4gICAgICAgICAgICBpZiAocHJvcGVydHlWYWx1ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgaWYgKCF2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IHt9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YWx1ZVtwcm9wZXJ0eU5hbWVdID0gcHJvcGVydHlWYWx1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdmFsdWU7XG59XG5mdW5jdGlvbiBnZXRQcm9wZXJ0eUZyb21QYXJhbWV0ZXJQYXRoKHBhcmVudCwgcGFyYW1ldGVyUGF0aCkge1xuICAgIGNvbnN0IHJlc3VsdCA9IHsgcHJvcGVydHlGb3VuZDogZmFsc2UgfTtcbiAgICBsZXQgaSA9IDA7XG4gICAgZm9yICg7IGkgPCBwYXJhbWV0ZXJQYXRoLmxlbmd0aDsgKytpKSB7XG4gICAgICAgIGNvbnN0IHBhcmFtZXRlclBhdGhQYXJ0ID0gcGFyYW1ldGVyUGF0aFtpXTtcbiAgICAgICAgLy8gTWFrZSBzdXJlIHRvIGNoZWNrIGluaGVyaXRlZCBwcm9wZXJ0aWVzIHRvbywgc28gZG9uJ3QgdXNlIGhhc093blByb3BlcnR5KCkuXG4gICAgICAgIGlmIChwYXJlbnQgJiYgcGFyYW1ldGVyUGF0aFBhcnQgaW4gcGFyZW50KSB7XG4gICAgICAgICAgICBwYXJlbnQgPSBwYXJlbnRbcGFyYW1ldGVyUGF0aFBhcnRdO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKGkgPT09IHBhcmFtZXRlclBhdGgubGVuZ3RoKSB7XG4gICAgICAgIHJlc3VsdC5wcm9wZXJ0eVZhbHVlID0gcGFyZW50O1xuICAgICAgICByZXN1bHQucHJvcGVydHlGb3VuZCA9IHRydWU7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5jb25zdCBvcmlnaW5hbFJlcXVlc3RTeW1ib2wgPSBTeW1ib2wuZm9yKFwiQGF6dXJlL2NvcmUtY2xpZW50IG9yaWdpbmFsIHJlcXVlc3RcIik7XG5mdW5jdGlvbiBoYXNPcmlnaW5hbFJlcXVlc3QocmVxdWVzdCkge1xuICAgIHJldHVybiBvcmlnaW5hbFJlcXVlc3RTeW1ib2wgaW4gcmVxdWVzdDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRPcGVyYXRpb25SZXF1ZXN0SW5mbyhyZXF1ZXN0KSB7XG4gICAgaWYgKGhhc09yaWdpbmFsUmVxdWVzdChyZXF1ZXN0KSkge1xuICAgICAgICByZXR1cm4gZ2V0T3BlcmF0aW9uUmVxdWVzdEluZm8ocmVxdWVzdFtvcmlnaW5hbFJlcXVlc3RTeW1ib2xdKTtcbiAgICB9XG4gICAgbGV0IGluZm8gPSBzdGF0ZS5vcGVyYXRpb25SZXF1ZXN0TWFwLmdldChyZXF1ZXN0KTtcbiAgICBpZiAoIWluZm8pIHtcbiAgICAgICAgaW5mbyA9IHt9O1xuICAgICAgICBzdGF0ZS5vcGVyYXRpb25SZXF1ZXN0TWFwLnNldChyZXF1ZXN0LCBpbmZvKTtcbiAgICB9XG4gICAgcmV0dXJuIGluZm87XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vcGVyYXRpb25IZWxwZXJzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/operationHelpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/pipeline.js":
/*!**************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/pipeline.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createClientPipeline: () => (/* binding */ createClientPipeline)\n/* harmony export */ });\n/* harmony import */ var _deserializationPolicy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./deserializationPolicy.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/deserializationPolicy.js\");\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n/* harmony import */ var _serializationPolicy_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./serializationPolicy.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/serializationPolicy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n/**\n * Creates a new Pipeline for use with a Service Client.\n * Adds in deserializationPolicy by default.\n * Also adds in bearerTokenAuthenticationPolicy if passed a TokenCredential.\n * @param options - Options to customize the created pipeline.\n */\nfunction createClientPipeline(options = {}) {\n    const pipeline = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__.createPipelineFromOptions)(options !== null && options !== void 0 ? options : {});\n    if (options.credentialOptions) {\n        pipeline.addPolicy((0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__.bearerTokenAuthenticationPolicy)({\n            credential: options.credentialOptions.credential,\n            scopes: options.credentialOptions.credentialScopes,\n        }));\n    }\n    pipeline.addPolicy((0,_serializationPolicy_js__WEBPACK_IMPORTED_MODULE_2__.serializationPolicy)(options.serializationOptions), { phase: \"Serialize\" });\n    pipeline.addPolicy((0,_deserializationPolicy_js__WEBPACK_IMPORTED_MODULE_0__.deserializationPolicy)(options.deserializationOptions), {\n        phase: \"Deserialize\",\n    });\n    return pipeline;\n}\n//# sourceMappingURL=pipeline.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL3BpcGVsaW5lLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ21FO0FBQ3FDO0FBQ3pDO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDBDQUEwQztBQUNqRCxxQkFBcUIsb0ZBQXlCLHNEQUFzRDtBQUNwRztBQUNBLDJCQUEyQiwwRkFBK0I7QUFDMUQ7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLHVCQUF1Qiw0RUFBbUIsa0NBQWtDLG9CQUFvQjtBQUNoRyx1QkFBdUIsZ0ZBQXFCO0FBQzVDO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxoZWxsby12b2ljZVxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtY2xpZW50XFxkaXN0XFxlc21cXHBpcGVsaW5lLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgZGVzZXJpYWxpemF0aW9uUG9saWN5IH0gZnJvbSBcIi4vZGVzZXJpYWxpemF0aW9uUG9saWN5LmpzXCI7XG5pbXBvcnQgeyBiZWFyZXJUb2tlbkF1dGhlbnRpY2F0aW9uUG9saWN5LCBjcmVhdGVQaXBlbGluZUZyb21PcHRpb25zLCB9IGZyb20gXCJAYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lXCI7XG5pbXBvcnQgeyBzZXJpYWxpemF0aW9uUG9saWN5IH0gZnJvbSBcIi4vc2VyaWFsaXphdGlvblBvbGljeS5qc1wiO1xuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IFBpcGVsaW5lIGZvciB1c2Ugd2l0aCBhIFNlcnZpY2UgQ2xpZW50LlxuICogQWRkcyBpbiBkZXNlcmlhbGl6YXRpb25Qb2xpY3kgYnkgZGVmYXVsdC5cbiAqIEFsc28gYWRkcyBpbiBiZWFyZXJUb2tlbkF1dGhlbnRpY2F0aW9uUG9saWN5IGlmIHBhc3NlZCBhIFRva2VuQ3JlZGVudGlhbC5cbiAqIEBwYXJhbSBvcHRpb25zIC0gT3B0aW9ucyB0byBjdXN0b21pemUgdGhlIGNyZWF0ZWQgcGlwZWxpbmUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDbGllbnRQaXBlbGluZShvcHRpb25zID0ge30pIHtcbiAgICBjb25zdCBwaXBlbGluZSA9IGNyZWF0ZVBpcGVsaW5lRnJvbU9wdGlvbnMob3B0aW9ucyAhPT0gbnVsbCAmJiBvcHRpb25zICE9PSB2b2lkIDAgPyBvcHRpb25zIDoge30pO1xuICAgIGlmIChvcHRpb25zLmNyZWRlbnRpYWxPcHRpb25zKSB7XG4gICAgICAgIHBpcGVsaW5lLmFkZFBvbGljeShiZWFyZXJUb2tlbkF1dGhlbnRpY2F0aW9uUG9saWN5KHtcbiAgICAgICAgICAgIGNyZWRlbnRpYWw6IG9wdGlvbnMuY3JlZGVudGlhbE9wdGlvbnMuY3JlZGVudGlhbCxcbiAgICAgICAgICAgIHNjb3Blczogb3B0aW9ucy5jcmVkZW50aWFsT3B0aW9ucy5jcmVkZW50aWFsU2NvcGVzLFxuICAgICAgICB9KSk7XG4gICAgfVxuICAgIHBpcGVsaW5lLmFkZFBvbGljeShzZXJpYWxpemF0aW9uUG9saWN5KG9wdGlvbnMuc2VyaWFsaXphdGlvbk9wdGlvbnMpLCB7IHBoYXNlOiBcIlNlcmlhbGl6ZVwiIH0pO1xuICAgIHBpcGVsaW5lLmFkZFBvbGljeShkZXNlcmlhbGl6YXRpb25Qb2xpY3kob3B0aW9ucy5kZXNlcmlhbGl6YXRpb25PcHRpb25zKSwge1xuICAgICAgICBwaGFzZTogXCJEZXNlcmlhbGl6ZVwiLFxuICAgIH0pO1xuICAgIHJldHVybiBwaXBlbGluZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBpcGVsaW5lLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/pipeline.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/serializationPolicy.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/serializationPolicy.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serializationPolicy: () => (/* binding */ serializationPolicy),\n/* harmony export */   serializationPolicyName: () => (/* binding */ serializationPolicyName),\n/* harmony export */   serializeHeaders: () => (/* binding */ serializeHeaders),\n/* harmony export */   serializeRequestBody: () => (/* binding */ serializeRequestBody)\n/* harmony export */ });\n/* harmony import */ var _interfaces_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interfaces.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/interfaces.js\");\n/* harmony import */ var _operationHelpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./operationHelpers.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/operationHelpers.js\");\n/* harmony import */ var _serializer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./serializer.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/serializer.js\");\n/* harmony import */ var _interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./interfaceHelpers.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/interfaceHelpers.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n/**\n * The programmatic identifier of the serializationPolicy.\n */\nconst serializationPolicyName = \"serializationPolicy\";\n/**\n * This policy handles assembling the request body and headers using\n * an OperationSpec and OperationArguments on the request.\n */\nfunction serializationPolicy(options = {}) {\n    const stringifyXML = options.stringifyXML;\n    return {\n        name: serializationPolicyName,\n        async sendRequest(request, next) {\n            const operationInfo = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_1__.getOperationRequestInfo)(request);\n            const operationSpec = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationSpec;\n            const operationArguments = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationArguments;\n            if (operationSpec && operationArguments) {\n                serializeHeaders(request, operationArguments, operationSpec);\n                serializeRequestBody(request, operationArguments, operationSpec, stringifyXML);\n            }\n            return next(request);\n        },\n    };\n}\n/**\n * @internal\n */\nfunction serializeHeaders(request, operationArguments, operationSpec) {\n    var _a, _b;\n    if (operationSpec.headerParameters) {\n        for (const headerParameter of operationSpec.headerParameters) {\n            let headerValue = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_1__.getOperationArgumentValueFromParameter)(operationArguments, headerParameter);\n            if ((headerValue !== null && headerValue !== undefined) || headerParameter.mapper.required) {\n                headerValue = operationSpec.serializer.serialize(headerParameter.mapper, headerValue, (0,_interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_3__.getPathStringFromParameter)(headerParameter));\n                const headerCollectionPrefix = headerParameter.mapper\n                    .headerCollectionPrefix;\n                if (headerCollectionPrefix) {\n                    for (const key of Object.keys(headerValue)) {\n                        request.headers.set(headerCollectionPrefix + key, headerValue[key]);\n                    }\n                }\n                else {\n                    request.headers.set(headerParameter.mapper.serializedName || (0,_interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_3__.getPathStringFromParameter)(headerParameter), headerValue);\n                }\n            }\n        }\n    }\n    const customHeaders = (_b = (_a = operationArguments.options) === null || _a === void 0 ? void 0 : _a.requestOptions) === null || _b === void 0 ? void 0 : _b.customHeaders;\n    if (customHeaders) {\n        for (const customHeaderName of Object.keys(customHeaders)) {\n            request.headers.set(customHeaderName, customHeaders[customHeaderName]);\n        }\n    }\n}\n/**\n * @internal\n */\nfunction serializeRequestBody(request, operationArguments, operationSpec, stringifyXML = function () {\n    throw new Error(\"XML serialization unsupported!\");\n}) {\n    var _a, _b, _c, _d, _e;\n    const serializerOptions = (_a = operationArguments.options) === null || _a === void 0 ? void 0 : _a.serializerOptions;\n    const updatedOptions = {\n        xml: {\n            rootName: (_b = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.rootName) !== null && _b !== void 0 ? _b : \"\",\n            includeRoot: (_c = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.includeRoot) !== null && _c !== void 0 ? _c : false,\n            xmlCharKey: (_d = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.xmlCharKey) !== null && _d !== void 0 ? _d : _interfaces_js__WEBPACK_IMPORTED_MODULE_0__.XML_CHARKEY,\n        },\n    };\n    const xmlCharKey = updatedOptions.xml.xmlCharKey;\n    if (operationSpec.requestBody && operationSpec.requestBody.mapper) {\n        request.body = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_1__.getOperationArgumentValueFromParameter)(operationArguments, operationSpec.requestBody);\n        const bodyMapper = operationSpec.requestBody.mapper;\n        const { required, serializedName, xmlName, xmlElementName, xmlNamespace, xmlNamespacePrefix, nullable, } = bodyMapper;\n        const typeName = bodyMapper.type.name;\n        try {\n            if ((request.body !== undefined && request.body !== null) ||\n                (nullable && request.body === null) ||\n                required) {\n                const requestBodyParameterPathString = (0,_interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_3__.getPathStringFromParameter)(operationSpec.requestBody);\n                request.body = operationSpec.serializer.serialize(bodyMapper, request.body, requestBodyParameterPathString, updatedOptions);\n                const isStream = typeName === _serializer_js__WEBPACK_IMPORTED_MODULE_2__.MapperTypeNames.Stream;\n                if (operationSpec.isXML) {\n                    const xmlnsKey = xmlNamespacePrefix ? `xmlns:${xmlNamespacePrefix}` : \"xmlns\";\n                    const value = getXmlValueWithNamespace(xmlNamespace, xmlnsKey, typeName, request.body, updatedOptions);\n                    if (typeName === _serializer_js__WEBPACK_IMPORTED_MODULE_2__.MapperTypeNames.Sequence) {\n                        request.body = stringifyXML(prepareXMLRootList(value, xmlElementName || xmlName || serializedName, xmlnsKey, xmlNamespace), { rootName: xmlName || serializedName, xmlCharKey });\n                    }\n                    else if (!isStream) {\n                        request.body = stringifyXML(value, {\n                            rootName: xmlName || serializedName,\n                            xmlCharKey,\n                        });\n                    }\n                }\n                else if (typeName === _serializer_js__WEBPACK_IMPORTED_MODULE_2__.MapperTypeNames.String &&\n                    (((_e = operationSpec.contentType) === null || _e === void 0 ? void 0 : _e.match(\"text/plain\")) || operationSpec.mediaType === \"text\")) {\n                    // the String serializer has validated that request body is a string\n                    // so just send the string.\n                    return;\n                }\n                else if (!isStream) {\n                    request.body = JSON.stringify(request.body);\n                }\n            }\n        }\n        catch (error) {\n            throw new Error(`Error \"${error.message}\" occurred in serializing the payload - ${JSON.stringify(serializedName, undefined, \"  \")}.`);\n        }\n    }\n    else if (operationSpec.formDataParameters && operationSpec.formDataParameters.length > 0) {\n        request.formData = {};\n        for (const formDataParameter of operationSpec.formDataParameters) {\n            const formDataParameterValue = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_1__.getOperationArgumentValueFromParameter)(operationArguments, formDataParameter);\n            if (formDataParameterValue !== undefined && formDataParameterValue !== null) {\n                const formDataParameterPropertyName = formDataParameter.mapper.serializedName || (0,_interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_3__.getPathStringFromParameter)(formDataParameter);\n                request.formData[formDataParameterPropertyName] = operationSpec.serializer.serialize(formDataParameter.mapper, formDataParameterValue, (0,_interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_3__.getPathStringFromParameter)(formDataParameter), updatedOptions);\n            }\n        }\n    }\n}\n/**\n * Adds an xml namespace to the xml serialized object if needed, otherwise it just returns the value itself\n */\nfunction getXmlValueWithNamespace(xmlNamespace, xmlnsKey, typeName, serializedValue, options) {\n    // Composite and Sequence schemas already got their root namespace set during serialization\n    // We just need to add xmlns to the other schema types\n    if (xmlNamespace && ![\"Composite\", \"Sequence\", \"Dictionary\"].includes(typeName)) {\n        const result = {};\n        result[options.xml.xmlCharKey] = serializedValue;\n        result[_interfaces_js__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY] = { [xmlnsKey]: xmlNamespace };\n        return result;\n    }\n    return serializedValue;\n}\nfunction prepareXMLRootList(obj, elementName, xmlNamespaceKey, xmlNamespace) {\n    if (!Array.isArray(obj)) {\n        obj = [obj];\n    }\n    if (!xmlNamespaceKey || !xmlNamespace) {\n        return { [elementName]: obj };\n    }\n    const result = { [elementName]: obj };\n    result[_interfaces_js__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY] = { [xmlNamespaceKey]: xmlNamespace };\n    return result;\n}\n//# sourceMappingURL=serializationPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/serializationPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/serializer.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/serializer.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapperTypeNames: () => (/* binding */ MapperTypeNames),\n/* harmony export */   createSerializer: () => (/* binding */ createSerializer)\n/* harmony export */ });\n/* harmony import */ var _base64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base64.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/base64.js\");\n/* harmony import */ var _interfaces_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interfaces.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/interfaces.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/utils.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\nclass SerializerImpl {\n    constructor(modelMappers = {}, isXML = false) {\n        this.modelMappers = modelMappers;\n        this.isXML = isXML;\n    }\n    /**\n     * @deprecated Removing the constraints validation on client side.\n     */\n    validateConstraints(mapper, value, objectName) {\n        const failValidation = (constraintName, constraintValue) => {\n            throw new Error(`\"${objectName}\" with value \"${value}\" should satisfy the constraint \"${constraintName}\": ${constraintValue}.`);\n        };\n        if (mapper.constraints && value !== undefined && value !== null) {\n            const { ExclusiveMaximum, ExclusiveMinimum, InclusiveMaximum, InclusiveMinimum, MaxItems, MaxLength, MinItems, MinLength, MultipleOf, Pattern, UniqueItems, } = mapper.constraints;\n            if (ExclusiveMaximum !== undefined && value >= ExclusiveMaximum) {\n                failValidation(\"ExclusiveMaximum\", ExclusiveMaximum);\n            }\n            if (ExclusiveMinimum !== undefined && value <= ExclusiveMinimum) {\n                failValidation(\"ExclusiveMinimum\", ExclusiveMinimum);\n            }\n            if (InclusiveMaximum !== undefined && value > InclusiveMaximum) {\n                failValidation(\"InclusiveMaximum\", InclusiveMaximum);\n            }\n            if (InclusiveMinimum !== undefined && value < InclusiveMinimum) {\n                failValidation(\"InclusiveMinimum\", InclusiveMinimum);\n            }\n            if (MaxItems !== undefined && value.length > MaxItems) {\n                failValidation(\"MaxItems\", MaxItems);\n            }\n            if (MaxLength !== undefined && value.length > MaxLength) {\n                failValidation(\"MaxLength\", MaxLength);\n            }\n            if (MinItems !== undefined && value.length < MinItems) {\n                failValidation(\"MinItems\", MinItems);\n            }\n            if (MinLength !== undefined && value.length < MinLength) {\n                failValidation(\"MinLength\", MinLength);\n            }\n            if (MultipleOf !== undefined && value % MultipleOf !== 0) {\n                failValidation(\"MultipleOf\", MultipleOf);\n            }\n            if (Pattern) {\n                const pattern = typeof Pattern === \"string\" ? new RegExp(Pattern) : Pattern;\n                if (typeof value !== \"string\" || value.match(pattern) === null) {\n                    failValidation(\"Pattern\", Pattern);\n                }\n            }\n            if (UniqueItems &&\n                value.some((item, i, ar) => ar.indexOf(item) !== i)) {\n                failValidation(\"UniqueItems\", UniqueItems);\n            }\n        }\n    }\n    /**\n     * Serialize the given object based on its metadata defined in the mapper\n     *\n     * @param mapper - The mapper which defines the metadata of the serializable object\n     *\n     * @param object - A valid Javascript object to be serialized\n     *\n     * @param objectName - Name of the serialized object\n     *\n     * @param options - additional options to serialization\n     *\n     * @returns A valid serialized Javascript object\n     */\n    serialize(mapper, object, objectName, options = { xml: {} }) {\n        var _a, _b, _c;\n        const updatedOptions = {\n            xml: {\n                rootName: (_a = options.xml.rootName) !== null && _a !== void 0 ? _a : \"\",\n                includeRoot: (_b = options.xml.includeRoot) !== null && _b !== void 0 ? _b : false,\n                xmlCharKey: (_c = options.xml.xmlCharKey) !== null && _c !== void 0 ? _c : _interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_CHARKEY,\n            },\n        };\n        let payload = {};\n        const mapperType = mapper.type.name;\n        if (!objectName) {\n            objectName = mapper.serializedName;\n        }\n        if (mapperType.match(/^Sequence$/i) !== null) {\n            payload = [];\n        }\n        if (mapper.isConstant) {\n            object = mapper.defaultValue;\n        }\n        // This table of allowed values should help explain\n        // the mapper.required and mapper.nullable properties.\n        // X means \"neither undefined or null are allowed\".\n        //           || required\n        //           || true      | false\n        //  nullable || ==========================\n        //      true || null      | undefined/null\n        //     false || X         | undefined\n        // undefined || X         | undefined/null\n        const { required, nullable } = mapper;\n        if (required && nullable && object === undefined) {\n            throw new Error(`${objectName} cannot be undefined.`);\n        }\n        if (required && !nullable && (object === undefined || object === null)) {\n            throw new Error(`${objectName} cannot be null or undefined.`);\n        }\n        if (!required && nullable === false && object === null) {\n            throw new Error(`${objectName} cannot be null.`);\n        }\n        if (object === undefined || object === null) {\n            payload = object;\n        }\n        else {\n            if (mapperType.match(/^any$/i) !== null) {\n                payload = object;\n            }\n            else if (mapperType.match(/^(Number|String|Boolean|Object|Stream|Uuid)$/i) !== null) {\n                payload = serializeBasicTypes(mapperType, objectName, object);\n            }\n            else if (mapperType.match(/^Enum$/i) !== null) {\n                const enumMapper = mapper;\n                payload = serializeEnumType(objectName, enumMapper.type.allowedValues, object);\n            }\n            else if (mapperType.match(/^(Date|DateTime|TimeSpan|DateTimeRfc1123|UnixTime)$/i) !== null) {\n                payload = serializeDateTypes(mapperType, object, objectName);\n            }\n            else if (mapperType.match(/^ByteArray$/i) !== null) {\n                payload = serializeByteArrayType(objectName, object);\n            }\n            else if (mapperType.match(/^Base64Url$/i) !== null) {\n                payload = serializeBase64UrlType(objectName, object);\n            }\n            else if (mapperType.match(/^Sequence$/i) !== null) {\n                payload = serializeSequenceType(this, mapper, object, objectName, Boolean(this.isXML), updatedOptions);\n            }\n            else if (mapperType.match(/^Dictionary$/i) !== null) {\n                payload = serializeDictionaryType(this, mapper, object, objectName, Boolean(this.isXML), updatedOptions);\n            }\n            else if (mapperType.match(/^Composite$/i) !== null) {\n                payload = serializeCompositeType(this, mapper, object, objectName, Boolean(this.isXML), updatedOptions);\n            }\n        }\n        return payload;\n    }\n    /**\n     * Deserialize the given object based on its metadata defined in the mapper\n     *\n     * @param mapper - The mapper which defines the metadata of the serializable object\n     *\n     * @param responseBody - A valid Javascript entity to be deserialized\n     *\n     * @param objectName - Name of the deserialized object\n     *\n     * @param options - Controls behavior of XML parser and builder.\n     *\n     * @returns A valid deserialized Javascript object\n     */\n    deserialize(mapper, responseBody, objectName, options = { xml: {} }) {\n        var _a, _b, _c, _d;\n        const updatedOptions = {\n            xml: {\n                rootName: (_a = options.xml.rootName) !== null && _a !== void 0 ? _a : \"\",\n                includeRoot: (_b = options.xml.includeRoot) !== null && _b !== void 0 ? _b : false,\n                xmlCharKey: (_c = options.xml.xmlCharKey) !== null && _c !== void 0 ? _c : _interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_CHARKEY,\n            },\n            ignoreUnknownProperties: (_d = options.ignoreUnknownProperties) !== null && _d !== void 0 ? _d : false,\n        };\n        if (responseBody === undefined || responseBody === null) {\n            if (this.isXML && mapper.type.name === \"Sequence\" && !mapper.xmlIsWrapped) {\n                // Edge case for empty XML non-wrapped lists. xml2js can't distinguish\n                // between the list being empty versus being missing,\n                // so let's do the more user-friendly thing and return an empty list.\n                responseBody = [];\n            }\n            // specifically check for undefined as default value can be a falsey value `0, \"\", false, null`\n            if (mapper.defaultValue !== undefined) {\n                responseBody = mapper.defaultValue;\n            }\n            return responseBody;\n        }\n        let payload;\n        const mapperType = mapper.type.name;\n        if (!objectName) {\n            objectName = mapper.serializedName;\n        }\n        if (mapperType.match(/^Composite$/i) !== null) {\n            payload = deserializeCompositeType(this, mapper, responseBody, objectName, updatedOptions);\n        }\n        else {\n            if (this.isXML) {\n                const xmlCharKey = updatedOptions.xml.xmlCharKey;\n                /**\n                 * If the mapper specifies this as a non-composite type value but the responseBody contains\n                 * both header (\"$\" i.e., XML_ATTRKEY) and body (\"#\" i.e., XML_CHARKEY) properties,\n                 * then just reduce the responseBody value to the body (\"#\" i.e., XML_CHARKEY) property.\n                 */\n                if (responseBody[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY] !== undefined && responseBody[xmlCharKey] !== undefined) {\n                    responseBody = responseBody[xmlCharKey];\n                }\n            }\n            if (mapperType.match(/^Number$/i) !== null) {\n                payload = parseFloat(responseBody);\n                if (isNaN(payload)) {\n                    payload = responseBody;\n                }\n            }\n            else if (mapperType.match(/^Boolean$/i) !== null) {\n                if (responseBody === \"true\") {\n                    payload = true;\n                }\n                else if (responseBody === \"false\") {\n                    payload = false;\n                }\n                else {\n                    payload = responseBody;\n                }\n            }\n            else if (mapperType.match(/^(String|Enum|Object|Stream|Uuid|TimeSpan|any)$/i) !== null) {\n                payload = responseBody;\n            }\n            else if (mapperType.match(/^(Date|DateTime|DateTimeRfc1123)$/i) !== null) {\n                payload = new Date(responseBody);\n            }\n            else if (mapperType.match(/^UnixTime$/i) !== null) {\n                payload = unixTimeToDate(responseBody);\n            }\n            else if (mapperType.match(/^ByteArray$/i) !== null) {\n                payload = _base64_js__WEBPACK_IMPORTED_MODULE_0__.decodeString(responseBody);\n            }\n            else if (mapperType.match(/^Base64Url$/i) !== null) {\n                payload = base64UrlToByteArray(responseBody);\n            }\n            else if (mapperType.match(/^Sequence$/i) !== null) {\n                payload = deserializeSequenceType(this, mapper, responseBody, objectName, updatedOptions);\n            }\n            else if (mapperType.match(/^Dictionary$/i) !== null) {\n                payload = deserializeDictionaryType(this, mapper, responseBody, objectName, updatedOptions);\n            }\n        }\n        if (mapper.isConstant) {\n            payload = mapper.defaultValue;\n        }\n        return payload;\n    }\n}\n/**\n * Method that creates and returns a Serializer.\n * @param modelMappers - Known models to map\n * @param isXML - If XML should be supported\n */\nfunction createSerializer(modelMappers = {}, isXML = false) {\n    return new SerializerImpl(modelMappers, isXML);\n}\nfunction trimEnd(str, ch) {\n    let len = str.length;\n    while (len - 1 >= 0 && str[len - 1] === ch) {\n        --len;\n    }\n    return str.substr(0, len);\n}\nfunction bufferToBase64Url(buffer) {\n    if (!buffer) {\n        return undefined;\n    }\n    if (!(buffer instanceof Uint8Array)) {\n        throw new Error(`Please provide an input of type Uint8Array for converting to Base64Url.`);\n    }\n    // Uint8Array to Base64.\n    const str = _base64_js__WEBPACK_IMPORTED_MODULE_0__.encodeByteArray(buffer);\n    // Base64 to Base64Url.\n    return trimEnd(str, \"=\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\nfunction base64UrlToByteArray(str) {\n    if (!str) {\n        return undefined;\n    }\n    if (str && typeof str.valueOf() !== \"string\") {\n        throw new Error(\"Please provide an input of type string for converting to Uint8Array\");\n    }\n    // Base64Url to Base64.\n    str = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    // Base64 to Uint8Array.\n    return _base64_js__WEBPACK_IMPORTED_MODULE_0__.decodeString(str);\n}\nfunction splitSerializeName(prop) {\n    const classes = [];\n    let partialclass = \"\";\n    if (prop) {\n        const subwords = prop.split(\".\");\n        for (const item of subwords) {\n            if (item.charAt(item.length - 1) === \"\\\\\") {\n                partialclass += item.substr(0, item.length - 1) + \".\";\n            }\n            else {\n                partialclass += item;\n                classes.push(partialclass);\n                partialclass = \"\";\n            }\n        }\n    }\n    return classes;\n}\nfunction dateToUnixTime(d) {\n    if (!d) {\n        return undefined;\n    }\n    if (typeof d.valueOf() === \"string\") {\n        d = new Date(d);\n    }\n    return Math.floor(d.getTime() / 1000);\n}\nfunction unixTimeToDate(n) {\n    if (!n) {\n        return undefined;\n    }\n    return new Date(n * 1000);\n}\nfunction serializeBasicTypes(typeName, objectName, value) {\n    if (value !== null && value !== undefined) {\n        if (typeName.match(/^Number$/i) !== null) {\n            if (typeof value !== \"number\") {\n                throw new Error(`${objectName} with value ${value} must be of type number.`);\n            }\n        }\n        else if (typeName.match(/^String$/i) !== null) {\n            if (typeof value.valueOf() !== \"string\") {\n                throw new Error(`${objectName} with value \"${value}\" must be of type string.`);\n            }\n        }\n        else if (typeName.match(/^Uuid$/i) !== null) {\n            if (!(typeof value.valueOf() === \"string\" && (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isValidUuid)(value))) {\n                throw new Error(`${objectName} with value \"${value}\" must be of type string and a valid uuid.`);\n            }\n        }\n        else if (typeName.match(/^Boolean$/i) !== null) {\n            if (typeof value !== \"boolean\") {\n                throw new Error(`${objectName} with value ${value} must be of type boolean.`);\n            }\n        }\n        else if (typeName.match(/^Stream$/i) !== null) {\n            const objectType = typeof value;\n            if (objectType !== \"string\" &&\n                typeof value.pipe !== \"function\" && // NodeJS.ReadableStream\n                typeof value.tee !== \"function\" && // browser ReadableStream\n                !(value instanceof ArrayBuffer) &&\n                !ArrayBuffer.isView(value) &&\n                // File objects count as a type of Blob, so we want to use instanceof explicitly\n                !((typeof Blob === \"function\" || typeof Blob === \"object\") && value instanceof Blob) &&\n                objectType !== \"function\") {\n                throw new Error(`${objectName} must be a string, Blob, ArrayBuffer, ArrayBufferView, ReadableStream, or () => ReadableStream.`);\n            }\n        }\n    }\n    return value;\n}\nfunction serializeEnumType(objectName, allowedValues, value) {\n    if (!allowedValues) {\n        throw new Error(`Please provide a set of allowedValues to validate ${objectName} as an Enum Type.`);\n    }\n    const isPresent = allowedValues.some((item) => {\n        if (typeof item.valueOf() === \"string\") {\n            return item.toLowerCase() === value.toLowerCase();\n        }\n        return item === value;\n    });\n    if (!isPresent) {\n        throw new Error(`${value} is not a valid value for ${objectName}. The valid values are: ${JSON.stringify(allowedValues)}.`);\n    }\n    return value;\n}\nfunction serializeByteArrayType(objectName, value) {\n    if (value !== undefined && value !== null) {\n        if (!(value instanceof Uint8Array)) {\n            throw new Error(`${objectName} must be of type Uint8Array.`);\n        }\n        value = _base64_js__WEBPACK_IMPORTED_MODULE_0__.encodeByteArray(value);\n    }\n    return value;\n}\nfunction serializeBase64UrlType(objectName, value) {\n    if (value !== undefined && value !== null) {\n        if (!(value instanceof Uint8Array)) {\n            throw new Error(`${objectName} must be of type Uint8Array.`);\n        }\n        value = bufferToBase64Url(value);\n    }\n    return value;\n}\nfunction serializeDateTypes(typeName, value, objectName) {\n    if (value !== undefined && value !== null) {\n        if (typeName.match(/^Date$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n            }\n            value =\n                value instanceof Date\n                    ? value.toISOString().substring(0, 10)\n                    : new Date(value).toISOString().substring(0, 10);\n        }\n        else if (typeName.match(/^DateTime$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n            }\n            value = value instanceof Date ? value.toISOString() : new Date(value).toISOString();\n        }\n        else if (typeName.match(/^DateTimeRfc1123$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in RFC-1123 format.`);\n            }\n            value = value instanceof Date ? value.toUTCString() : new Date(value).toUTCString();\n        }\n        else if (typeName.match(/^UnixTime$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in RFC-1123/ISO8601 format ` +\n                    `for it to be serialized in UnixTime/Epoch format.`);\n            }\n            value = dateToUnixTime(value);\n        }\n        else if (typeName.match(/^TimeSpan$/i) !== null) {\n            if (!(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isDuration)(value)) {\n                throw new Error(`${objectName} must be a string in ISO 8601 format. Instead was \"${value}\".`);\n            }\n        }\n    }\n    return value;\n}\nfunction serializeSequenceType(serializer, mapper, object, objectName, isXml, options) {\n    var _a;\n    if (!Array.isArray(object)) {\n        throw new Error(`${objectName} must be of type Array.`);\n    }\n    let elementType = mapper.type.element;\n    if (!elementType || typeof elementType !== \"object\") {\n        throw new Error(`element\" metadata for an Array must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}.`);\n    }\n    // Quirk: Composite mappers referenced by `element` might\n    // not have *all* properties declared (like uberParent),\n    // so let's try to look up the full definition by name.\n    if (elementType.type.name === \"Composite\" && elementType.type.className) {\n        elementType = (_a = serializer.modelMappers[elementType.type.className]) !== null && _a !== void 0 ? _a : elementType;\n    }\n    const tempArray = [];\n    for (let i = 0; i < object.length; i++) {\n        const serializedValue = serializer.serialize(elementType, object[i], objectName, options);\n        if (isXml && elementType.xmlNamespace) {\n            const xmlnsKey = elementType.xmlNamespacePrefix\n                ? `xmlns:${elementType.xmlNamespacePrefix}`\n                : \"xmlns\";\n            if (elementType.type.name === \"Composite\") {\n                tempArray[i] = Object.assign({}, serializedValue);\n                tempArray[i][_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY] = { [xmlnsKey]: elementType.xmlNamespace };\n            }\n            else {\n                tempArray[i] = {};\n                tempArray[i][options.xml.xmlCharKey] = serializedValue;\n                tempArray[i][_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY] = { [xmlnsKey]: elementType.xmlNamespace };\n            }\n        }\n        else {\n            tempArray[i] = serializedValue;\n        }\n    }\n    return tempArray;\n}\nfunction serializeDictionaryType(serializer, mapper, object, objectName, isXml, options) {\n    if (typeof object !== \"object\") {\n        throw new Error(`${objectName} must be of type object.`);\n    }\n    const valueType = mapper.type.value;\n    if (!valueType || typeof valueType !== \"object\") {\n        throw new Error(`\"value\" metadata for a Dictionary must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}.`);\n    }\n    const tempDictionary = {};\n    for (const key of Object.keys(object)) {\n        const serializedValue = serializer.serialize(valueType, object[key], objectName, options);\n        // If the element needs an XML namespace we need to add it within the $ property\n        tempDictionary[key] = getXmlObjectValue(valueType, serializedValue, isXml, options);\n    }\n    // Add the namespace to the root element if needed\n    if (isXml && mapper.xmlNamespace) {\n        const xmlnsKey = mapper.xmlNamespacePrefix ? `xmlns:${mapper.xmlNamespacePrefix}` : \"xmlns\";\n        const result = tempDictionary;\n        result[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY] = { [xmlnsKey]: mapper.xmlNamespace };\n        return result;\n    }\n    return tempDictionary;\n}\n/**\n * Resolves the additionalProperties property from a referenced mapper\n * @param serializer - the serializer containing the entire set of mappers\n * @param mapper - the composite mapper to resolve\n * @param objectName - name of the object being serialized\n */\nfunction resolveAdditionalProperties(serializer, mapper, objectName) {\n    const additionalProperties = mapper.type.additionalProperties;\n    if (!additionalProperties && mapper.type.className) {\n        const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n        return modelMapper === null || modelMapper === void 0 ? void 0 : modelMapper.type.additionalProperties;\n    }\n    return additionalProperties;\n}\n/**\n * Finds the mapper referenced by className\n * @param serializer - the serializer containing the entire set of mappers\n * @param mapper - the composite mapper to resolve\n * @param objectName - name of the object being serialized\n */\nfunction resolveReferencedMapper(serializer, mapper, objectName) {\n    const className = mapper.type.className;\n    if (!className) {\n        throw new Error(`Class name for model \"${objectName}\" is not provided in the mapper \"${JSON.stringify(mapper, undefined, 2)}\".`);\n    }\n    return serializer.modelMappers[className];\n}\n/**\n * Resolves a composite mapper's modelProperties.\n * @param serializer - the serializer containing the entire set of mappers\n * @param mapper - the composite mapper to resolve\n */\nfunction resolveModelProperties(serializer, mapper, objectName) {\n    let modelProps = mapper.type.modelProperties;\n    if (!modelProps) {\n        const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n        if (!modelMapper) {\n            throw new Error(`mapper() cannot be null or undefined for model \"${mapper.type.className}\".`);\n        }\n        modelProps = modelMapper === null || modelMapper === void 0 ? void 0 : modelMapper.type.modelProperties;\n        if (!modelProps) {\n            throw new Error(`modelProperties cannot be null or undefined in the ` +\n                `mapper \"${JSON.stringify(modelMapper)}\" of type \"${mapper.type.className}\" for object \"${objectName}\".`);\n        }\n    }\n    return modelProps;\n}\nfunction serializeCompositeType(serializer, mapper, object, objectName, isXml, options) {\n    if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n        mapper = getPolymorphicMapper(serializer, mapper, object, \"clientName\");\n    }\n    if (object !== undefined && object !== null) {\n        const payload = {};\n        const modelProps = resolveModelProperties(serializer, mapper, objectName);\n        for (const key of Object.keys(modelProps)) {\n            const propertyMapper = modelProps[key];\n            if (propertyMapper.readOnly) {\n                continue;\n            }\n            let propName;\n            let parentObject = payload;\n            if (serializer.isXML) {\n                if (propertyMapper.xmlIsWrapped) {\n                    propName = propertyMapper.xmlName;\n                }\n                else {\n                    propName = propertyMapper.xmlElementName || propertyMapper.xmlName;\n                }\n            }\n            else {\n                const paths = splitSerializeName(propertyMapper.serializedName);\n                propName = paths.pop();\n                for (const pathName of paths) {\n                    const childObject = parentObject[pathName];\n                    if ((childObject === undefined || childObject === null) &&\n                        ((object[key] !== undefined && object[key] !== null) ||\n                            propertyMapper.defaultValue !== undefined)) {\n                        parentObject[pathName] = {};\n                    }\n                    parentObject = parentObject[pathName];\n                }\n            }\n            if (parentObject !== undefined && parentObject !== null) {\n                if (isXml && mapper.xmlNamespace) {\n                    const xmlnsKey = mapper.xmlNamespacePrefix\n                        ? `xmlns:${mapper.xmlNamespacePrefix}`\n                        : \"xmlns\";\n                    parentObject[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY] = Object.assign(Object.assign({}, parentObject[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY]), { [xmlnsKey]: mapper.xmlNamespace });\n                }\n                const propertyObjectName = propertyMapper.serializedName !== \"\"\n                    ? objectName + \".\" + propertyMapper.serializedName\n                    : objectName;\n                let toSerialize = object[key];\n                const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n                if (polymorphicDiscriminator &&\n                    polymorphicDiscriminator.clientName === key &&\n                    (toSerialize === undefined || toSerialize === null)) {\n                    toSerialize = mapper.serializedName;\n                }\n                const serializedValue = serializer.serialize(propertyMapper, toSerialize, propertyObjectName, options);\n                if (serializedValue !== undefined && propName !== undefined && propName !== null) {\n                    const value = getXmlObjectValue(propertyMapper, serializedValue, isXml, options);\n                    if (isXml && propertyMapper.xmlIsAttribute) {\n                        // XML_ATTRKEY, i.e., $ is the key attributes are kept under in xml2js.\n                        // This keeps things simple while preventing name collision\n                        // with names in user documents.\n                        parentObject[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY] = parentObject[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY] || {};\n                        parentObject[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY][propName] = serializedValue;\n                    }\n                    else if (isXml && propertyMapper.xmlIsWrapped) {\n                        parentObject[propName] = { [propertyMapper.xmlElementName]: value };\n                    }\n                    else {\n                        parentObject[propName] = value;\n                    }\n                }\n            }\n        }\n        const additionalPropertiesMapper = resolveAdditionalProperties(serializer, mapper, objectName);\n        if (additionalPropertiesMapper) {\n            const propNames = Object.keys(modelProps);\n            for (const clientPropName in object) {\n                const isAdditionalProperty = propNames.every((pn) => pn !== clientPropName);\n                if (isAdditionalProperty) {\n                    payload[clientPropName] = serializer.serialize(additionalPropertiesMapper, object[clientPropName], objectName + '[\"' + clientPropName + '\"]', options);\n                }\n            }\n        }\n        return payload;\n    }\n    return object;\n}\nfunction getXmlObjectValue(propertyMapper, serializedValue, isXml, options) {\n    if (!isXml || !propertyMapper.xmlNamespace) {\n        return serializedValue;\n    }\n    const xmlnsKey = propertyMapper.xmlNamespacePrefix\n        ? `xmlns:${propertyMapper.xmlNamespacePrefix}`\n        : \"xmlns\";\n    const xmlNamespace = { [xmlnsKey]: propertyMapper.xmlNamespace };\n    if ([\"Composite\"].includes(propertyMapper.type.name)) {\n        if (serializedValue[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY]) {\n            return serializedValue;\n        }\n        else {\n            const result = Object.assign({}, serializedValue);\n            result[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY] = xmlNamespace;\n            return result;\n        }\n    }\n    const result = {};\n    result[options.xml.xmlCharKey] = serializedValue;\n    result[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY] = xmlNamespace;\n    return result;\n}\nfunction isSpecialXmlProperty(propertyName, options) {\n    return [_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY, options.xml.xmlCharKey].includes(propertyName);\n}\nfunction deserializeCompositeType(serializer, mapper, responseBody, objectName, options) {\n    var _a, _b;\n    const xmlCharKey = (_a = options.xml.xmlCharKey) !== null && _a !== void 0 ? _a : _interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_CHARKEY;\n    if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n        mapper = getPolymorphicMapper(serializer, mapper, responseBody, \"serializedName\");\n    }\n    const modelProps = resolveModelProperties(serializer, mapper, objectName);\n    let instance = {};\n    const handledPropertyNames = [];\n    for (const key of Object.keys(modelProps)) {\n        const propertyMapper = modelProps[key];\n        const paths = splitSerializeName(modelProps[key].serializedName);\n        handledPropertyNames.push(paths[0]);\n        const { serializedName, xmlName, xmlElementName } = propertyMapper;\n        let propertyObjectName = objectName;\n        if (serializedName !== \"\" && serializedName !== undefined) {\n            propertyObjectName = objectName + \".\" + serializedName;\n        }\n        const headerCollectionPrefix = propertyMapper.headerCollectionPrefix;\n        if (headerCollectionPrefix) {\n            const dictionary = {};\n            for (const headerKey of Object.keys(responseBody)) {\n                if (headerKey.startsWith(headerCollectionPrefix)) {\n                    dictionary[headerKey.substring(headerCollectionPrefix.length)] = serializer.deserialize(propertyMapper.type.value, responseBody[headerKey], propertyObjectName, options);\n                }\n                handledPropertyNames.push(headerKey);\n            }\n            instance[key] = dictionary;\n        }\n        else if (serializer.isXML) {\n            if (propertyMapper.xmlIsAttribute && responseBody[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY]) {\n                instance[key] = serializer.deserialize(propertyMapper, responseBody[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY][xmlName], propertyObjectName, options);\n            }\n            else if (propertyMapper.xmlIsMsText) {\n                if (responseBody[xmlCharKey] !== undefined) {\n                    instance[key] = responseBody[xmlCharKey];\n                }\n                else if (typeof responseBody === \"string\") {\n                    // The special case where xml parser parses \"<Name>content</Name>\" into JSON of\n                    //   `{ name: \"content\"}` instead of `{ name: { \"_\": \"content\" }}`\n                    instance[key] = responseBody;\n                }\n            }\n            else {\n                const propertyName = xmlElementName || xmlName || serializedName;\n                if (propertyMapper.xmlIsWrapped) {\n                    /* a list of <xmlElementName> wrapped by <xmlName>\n                      For the xml example below\n                        <Cors>\n                          <CorsRule>...</CorsRule>\n                          <CorsRule>...</CorsRule>\n                        </Cors>\n                      the responseBody has\n                        {\n                          Cors: {\n                            CorsRule: [{...}, {...}]\n                          }\n                        }\n                      xmlName is \"Cors\" and xmlElementName is\"CorsRule\".\n                    */\n                    const wrapped = responseBody[xmlName];\n                    const elementList = (_b = wrapped === null || wrapped === void 0 ? void 0 : wrapped[xmlElementName]) !== null && _b !== void 0 ? _b : [];\n                    instance[key] = serializer.deserialize(propertyMapper, elementList, propertyObjectName, options);\n                    handledPropertyNames.push(xmlName);\n                }\n                else {\n                    const property = responseBody[propertyName];\n                    instance[key] = serializer.deserialize(propertyMapper, property, propertyObjectName, options);\n                    handledPropertyNames.push(propertyName);\n                }\n            }\n        }\n        else {\n            // deserialize the property if it is present in the provided responseBody instance\n            let propertyInstance;\n            let res = responseBody;\n            // traversing the object step by step.\n            let steps = 0;\n            for (const item of paths) {\n                if (!res)\n                    break;\n                steps++;\n                res = res[item];\n            }\n            // only accept null when reaching the last position of object otherwise it would be undefined\n            if (res === null && steps < paths.length) {\n                res = undefined;\n            }\n            propertyInstance = res;\n            const polymorphicDiscriminator = mapper.type.polymorphicDiscriminator;\n            // checking that the model property name (key)(ex: \"fishtype\") and the\n            // clientName of the polymorphicDiscriminator {metadata} (ex: \"fishtype\")\n            // instead of the serializedName of the polymorphicDiscriminator (ex: \"fish.type\")\n            // is a better approach. The generator is not consistent with escaping '\\.' in the\n            // serializedName of the property (ex: \"fish\\.type\") that is marked as polymorphic discriminator\n            // and the serializedName of the metadata polymorphicDiscriminator (ex: \"fish.type\"). However,\n            // the clientName transformation of the polymorphicDiscriminator (ex: \"fishtype\") and\n            // the transformation of model property name (ex: \"fishtype\") is done consistently.\n            // Hence, it is a safer bet to rely on the clientName of the polymorphicDiscriminator.\n            if (polymorphicDiscriminator &&\n                key === polymorphicDiscriminator.clientName &&\n                (propertyInstance === undefined || propertyInstance === null)) {\n                propertyInstance = mapper.serializedName;\n            }\n            let serializedValue;\n            // paging\n            if (Array.isArray(responseBody[key]) && modelProps[key].serializedName === \"\") {\n                propertyInstance = responseBody[key];\n                const arrayInstance = serializer.deserialize(propertyMapper, propertyInstance, propertyObjectName, options);\n                // Copy over any properties that have already been added into the instance, where they do\n                // not exist on the newly de-serialized array\n                for (const [k, v] of Object.entries(instance)) {\n                    if (!Object.prototype.hasOwnProperty.call(arrayInstance, k)) {\n                        arrayInstance[k] = v;\n                    }\n                }\n                instance = arrayInstance;\n            }\n            else if (propertyInstance !== undefined || propertyMapper.defaultValue !== undefined) {\n                serializedValue = serializer.deserialize(propertyMapper, propertyInstance, propertyObjectName, options);\n                instance[key] = serializedValue;\n            }\n        }\n    }\n    const additionalPropertiesMapper = mapper.type.additionalProperties;\n    if (additionalPropertiesMapper) {\n        const isAdditionalProperty = (responsePropName) => {\n            for (const clientPropName in modelProps) {\n                const paths = splitSerializeName(modelProps[clientPropName].serializedName);\n                if (paths[0] === responsePropName) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        for (const responsePropName in responseBody) {\n            if (isAdditionalProperty(responsePropName)) {\n                instance[responsePropName] = serializer.deserialize(additionalPropertiesMapper, responseBody[responsePropName], objectName + '[\"' + responsePropName + '\"]', options);\n            }\n        }\n    }\n    else if (responseBody && !options.ignoreUnknownProperties) {\n        for (const key of Object.keys(responseBody)) {\n            if (instance[key] === undefined &&\n                !handledPropertyNames.includes(key) &&\n                !isSpecialXmlProperty(key, options)) {\n                instance[key] = responseBody[key];\n            }\n        }\n    }\n    return instance;\n}\nfunction deserializeDictionaryType(serializer, mapper, responseBody, objectName, options) {\n    /* jshint validthis: true */\n    const value = mapper.type.value;\n    if (!value || typeof value !== \"object\") {\n        throw new Error(`\"value\" metadata for a Dictionary must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}`);\n    }\n    if (responseBody) {\n        const tempDictionary = {};\n        for (const key of Object.keys(responseBody)) {\n            tempDictionary[key] = serializer.deserialize(value, responseBody[key], objectName, options);\n        }\n        return tempDictionary;\n    }\n    return responseBody;\n}\nfunction deserializeSequenceType(serializer, mapper, responseBody, objectName, options) {\n    var _a;\n    let element = mapper.type.element;\n    if (!element || typeof element !== \"object\") {\n        throw new Error(`element\" metadata for an Array must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}`);\n    }\n    if (responseBody) {\n        if (!Array.isArray(responseBody)) {\n            // xml2js will interpret a single element array as just the element, so force it to be an array\n            responseBody = [responseBody];\n        }\n        // Quirk: Composite mappers referenced by `element` might\n        // not have *all* properties declared (like uberParent),\n        // so let's try to look up the full definition by name.\n        if (element.type.name === \"Composite\" && element.type.className) {\n            element = (_a = serializer.modelMappers[element.type.className]) !== null && _a !== void 0 ? _a : element;\n        }\n        const tempArray = [];\n        for (let i = 0; i < responseBody.length; i++) {\n            tempArray[i] = serializer.deserialize(element, responseBody[i], `${objectName}[${i}]`, options);\n        }\n        return tempArray;\n    }\n    return responseBody;\n}\nfunction getIndexDiscriminator(discriminators, discriminatorValue, typeName) {\n    const typeNamesToCheck = [typeName];\n    while (typeNamesToCheck.length) {\n        const currentName = typeNamesToCheck.shift();\n        const indexDiscriminator = discriminatorValue === currentName\n            ? discriminatorValue\n            : currentName + \".\" + discriminatorValue;\n        if (Object.prototype.hasOwnProperty.call(discriminators, indexDiscriminator)) {\n            return discriminators[indexDiscriminator];\n        }\n        else {\n            for (const [name, mapper] of Object.entries(discriminators)) {\n                if (name.startsWith(currentName + \".\") &&\n                    mapper.type.uberParent === currentName &&\n                    mapper.type.className) {\n                    typeNamesToCheck.push(mapper.type.className);\n                }\n            }\n        }\n    }\n    return undefined;\n}\nfunction getPolymorphicMapper(serializer, mapper, object, polymorphicPropertyName) {\n    var _a;\n    const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n    if (polymorphicDiscriminator) {\n        let discriminatorName = polymorphicDiscriminator[polymorphicPropertyName];\n        if (discriminatorName) {\n            // The serializedName might have \\\\, which we just want to ignore\n            if (polymorphicPropertyName === \"serializedName\") {\n                discriminatorName = discriminatorName.replace(/\\\\/gi, \"\");\n            }\n            const discriminatorValue = object[discriminatorName];\n            const typeName = (_a = mapper.type.uberParent) !== null && _a !== void 0 ? _a : mapper.type.className;\n            if (typeof discriminatorValue === \"string\" && typeName) {\n                const polymorphicMapper = getIndexDiscriminator(serializer.modelMappers.discriminators, discriminatorValue, typeName);\n                if (polymorphicMapper) {\n                    mapper = polymorphicMapper;\n                }\n            }\n        }\n    }\n    return mapper;\n}\nfunction getPolymorphicDiscriminatorRecursively(serializer, mapper) {\n    return (mapper.type.polymorphicDiscriminator ||\n        getPolymorphicDiscriminatorSafely(serializer, mapper.type.uberParent) ||\n        getPolymorphicDiscriminatorSafely(serializer, mapper.type.className));\n}\nfunction getPolymorphicDiscriminatorSafely(serializer, typeName) {\n    return (typeName &&\n        serializer.modelMappers[typeName] &&\n        serializer.modelMappers[typeName].type.polymorphicDiscriminator);\n}\n/**\n * Known types of Mappers\n */\nconst MapperTypeNames = {\n    Base64Url: \"Base64Url\",\n    Boolean: \"Boolean\",\n    ByteArray: \"ByteArray\",\n    Composite: \"Composite\",\n    Date: \"Date\",\n    DateTime: \"DateTime\",\n    DateTimeRfc1123: \"DateTimeRfc1123\",\n    Dictionary: \"Dictionary\",\n    Enum: \"Enum\",\n    Number: \"Number\",\n    Object: \"Object\",\n    Sequence: \"Sequence\",\n    String: \"String\",\n    Stream: \"Stream\",\n    TimeSpan: \"TimeSpan\",\n    UnixTime: \"UnixTime\",\n};\n//# sourceMappingURL=serializer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/serializer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/serviceClient.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/serviceClient.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ServiceClient: () => (/* binding */ ServiceClient)\n/* harmony export */ });\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n/* harmony import */ var _pipeline_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pipeline.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/pipeline.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/utils.js\");\n/* harmony import */ var _httpClientCache_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./httpClientCache.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/httpClientCache.js\");\n/* harmony import */ var _operationHelpers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operationHelpers.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/operationHelpers.js\");\n/* harmony import */ var _urlHelpers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./urlHelpers.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/urlHelpers.js\");\n/* harmony import */ var _interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./interfaceHelpers.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/interfaceHelpers.js\");\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./log.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/log.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n/**\n * Initializes a new instance of the ServiceClient.\n */\nclass ServiceClient {\n    /**\n     * The ServiceClient constructor\n     * @param options - The service client options that govern the behavior of the client.\n     */\n    constructor(options = {}) {\n        var _a, _b;\n        this._requestContentType = options.requestContentType;\n        this._endpoint = (_a = options.endpoint) !== null && _a !== void 0 ? _a : options.baseUri;\n        if (options.baseUri) {\n            _log_js__WEBPACK_IMPORTED_MODULE_7__.logger.warning(\"The baseUri option for SDK Clients has been deprecated, please use endpoint instead.\");\n        }\n        this._allowInsecureConnection = options.allowInsecureConnection;\n        this._httpClient = options.httpClient || (0,_httpClientCache_js__WEBPACK_IMPORTED_MODULE_3__.getCachedDefaultHttpClient)();\n        this.pipeline = options.pipeline || createDefaultPipeline(options);\n        if ((_b = options.additionalPolicies) === null || _b === void 0 ? void 0 : _b.length) {\n            for (const { policy, position } of options.additionalPolicies) {\n                // Sign happens after Retry and is commonly needed to occur\n                // before policies that intercept post-retry.\n                const afterPhase = position === \"perRetry\" ? \"Sign\" : undefined;\n                this.pipeline.addPolicy(policy, {\n                    afterPhase,\n                });\n            }\n        }\n    }\n    /**\n     * Send the provided httpRequest.\n     */\n    async sendRequest(request) {\n        return this.pipeline.sendRequest(this._httpClient, request);\n    }\n    /**\n     * Send an HTTP request that is populated using the provided OperationSpec.\n     * @typeParam T - The typed result of the request, based on the OperationSpec.\n     * @param operationArguments - The arguments that the HTTP request's templated values will be populated from.\n     * @param operationSpec - The OperationSpec to use to populate the httpRequest.\n     */\n    async sendOperationRequest(operationArguments, operationSpec) {\n        const endpoint = operationSpec.baseUrl || this._endpoint;\n        if (!endpoint) {\n            throw new Error(\"If operationSpec.baseUrl is not specified, then the ServiceClient must have a endpoint string property that contains the base URL to use.\");\n        }\n        // Templatized URLs sometimes reference properties on the ServiceClient child class,\n        // so we have to pass `this` below in order to search these properties if they're\n        // not part of OperationArguments\n        const url = (0,_urlHelpers_js__WEBPACK_IMPORTED_MODULE_5__.getRequestUrl)(endpoint, operationSpec, operationArguments, this);\n        const request = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createPipelineRequest)({\n            url,\n        });\n        request.method = operationSpec.httpMethod;\n        const operationInfo = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_4__.getOperationRequestInfo)(request);\n        operationInfo.operationSpec = operationSpec;\n        operationInfo.operationArguments = operationArguments;\n        const contentType = operationSpec.contentType || this._requestContentType;\n        if (contentType && operationSpec.requestBody) {\n            request.headers.set(\"Content-Type\", contentType);\n        }\n        const options = operationArguments.options;\n        if (options) {\n            const requestOptions = options.requestOptions;\n            if (requestOptions) {\n                if (requestOptions.timeout) {\n                    request.timeout = requestOptions.timeout;\n                }\n                if (requestOptions.onUploadProgress) {\n                    request.onUploadProgress = requestOptions.onUploadProgress;\n                }\n                if (requestOptions.onDownloadProgress) {\n                    request.onDownloadProgress = requestOptions.onDownloadProgress;\n                }\n                if (requestOptions.shouldDeserialize !== undefined) {\n                    operationInfo.shouldDeserialize = requestOptions.shouldDeserialize;\n                }\n                if (requestOptions.allowInsecureConnection) {\n                    request.allowInsecureConnection = true;\n                }\n            }\n            if (options.abortSignal) {\n                request.abortSignal = options.abortSignal;\n            }\n            if (options.tracingOptions) {\n                request.tracingOptions = options.tracingOptions;\n            }\n        }\n        if (this._allowInsecureConnection) {\n            request.allowInsecureConnection = true;\n        }\n        if (request.streamResponseStatusCodes === undefined) {\n            request.streamResponseStatusCodes = (0,_interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_6__.getStreamingResponseStatusCodes)(operationSpec);\n        }\n        try {\n            const rawResponse = await this.sendRequest(request);\n            const flatResponse = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.flattenResponse)(rawResponse, operationSpec.responses[rawResponse.status]);\n            if (options === null || options === void 0 ? void 0 : options.onResponse) {\n                options.onResponse(rawResponse, flatResponse);\n            }\n            return flatResponse;\n        }\n        catch (error) {\n            if (typeof error === \"object\" && (error === null || error === void 0 ? void 0 : error.response)) {\n                const rawResponse = error.response;\n                const flatResponse = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.flattenResponse)(rawResponse, operationSpec.responses[error.statusCode] || operationSpec.responses[\"default\"]);\n                error.details = flatResponse;\n                if (options === null || options === void 0 ? void 0 : options.onResponse) {\n                    options.onResponse(rawResponse, flatResponse, error);\n                }\n            }\n            throw error;\n        }\n    }\n}\nfunction createDefaultPipeline(options) {\n    const credentialScopes = getCredentialScopes(options);\n    const credentialOptions = options.credential && credentialScopes\n        ? { credentialScopes, credential: options.credential }\n        : undefined;\n    return (0,_pipeline_js__WEBPACK_IMPORTED_MODULE_1__.createClientPipeline)(Object.assign(Object.assign({}, options), { credentialOptions }));\n}\nfunction getCredentialScopes(options) {\n    if (options.credentialScopes) {\n        return options.credentialScopes;\n    }\n    if (options.endpoint) {\n        return `${options.endpoint}/.default`;\n    }\n    if (options.baseUri) {\n        return `${options.baseUri}/.default`;\n    }\n    if (options.credential && !options.credentialScopes) {\n        throw new Error(`When using credentials, the ServiceClientOptions must contain either a endpoint or a credentialScopes. Unable to create a bearerTokenAuthenticationPolicy`);\n    }\n    return undefined;\n}\n//# sourceMappingURL=serviceClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/serviceClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/state.js":
/*!***********************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/state.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   state: () => (/* binding */ state)\n/* harmony export */ });\n/* harmony import */ var _commonjs_state_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../commonjs/state.js */ \"(ssr)/./node_modules/@azure/core-client/dist/commonjs/state.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n// @ts-expect-error The recommended approach to sharing module state between ESM and CJS.\n// See https://github.com/isaacs/tshy/blob/main/README.md#module-local-state for additional information.\n\n/**\n * Defines the shared state between CJS and ESM by re-exporting the CJS state.\n */\nconst state = _commonjs_state_js__WEBPACK_IMPORTED_MODULE_0__.state;\n//# sourceMappingURL=state.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL3N0YXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDeUQ7QUFDekQ7QUFDQTtBQUNBO0FBQ08sY0FBYyxxREFBUTtBQUM3QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxoZWxsby12b2ljZVxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtY2xpZW50XFxkaXN0XFxlc21cXHN0YXRlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLy8gQHRzLWV4cGVjdC1lcnJvciBUaGUgcmVjb21tZW5kZWQgYXBwcm9hY2ggdG8gc2hhcmluZyBtb2R1bGUgc3RhdGUgYmV0d2VlbiBFU00gYW5kIENKUy5cbi8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vaXNhYWNzL3RzaHkvYmxvYi9tYWluL1JFQURNRS5tZCNtb2R1bGUtbG9jYWwtc3RhdGUgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24uXG5pbXBvcnQgeyBzdGF0ZSBhcyBjanNTdGF0ZSB9IGZyb20gXCIuLi9jb21tb25qcy9zdGF0ZS5qc1wiO1xuLyoqXG4gKiBEZWZpbmVzIHRoZSBzaGFyZWQgc3RhdGUgYmV0d2VlbiBDSlMgYW5kIEVTTSBieSByZS1leHBvcnRpbmcgdGhlIENKUyBzdGF0ZS5cbiAqL1xuZXhwb3J0IGNvbnN0IHN0YXRlID0gY2pzU3RhdGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdGF0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/state.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/urlHelpers.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/urlHelpers.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   appendQueryParams: () => (/* binding */ appendQueryParams),\n/* harmony export */   getRequestUrl: () => (/* binding */ getRequestUrl)\n/* harmony export */ });\n/* harmony import */ var _operationHelpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./operationHelpers.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/operationHelpers.js\");\n/* harmony import */ var _interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interfaceHelpers.js */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/interfaceHelpers.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\nconst CollectionFormatToDelimiterMap = {\n    CSV: \",\",\n    SSV: \" \",\n    Multi: \"Multi\",\n    TSV: \"\\t\",\n    Pipes: \"|\",\n};\nfunction getRequestUrl(baseUri, operationSpec, operationArguments, fallbackObject) {\n    const urlReplacements = calculateUrlReplacements(operationSpec, operationArguments, fallbackObject);\n    let isAbsolutePath = false;\n    let requestUrl = replaceAll(baseUri, urlReplacements);\n    if (operationSpec.path) {\n        let path = replaceAll(operationSpec.path, urlReplacements);\n        // QUIRK: sometimes we get a path component like /{nextLink}\n        // which may be a fully formed URL with a leading /. In that case, we should\n        // remove the leading /\n        if (operationSpec.path === \"/{nextLink}\" && path.startsWith(\"/\")) {\n            path = path.substring(1);\n        }\n        // QUIRK: sometimes we get a path component like {nextLink}\n        // which may be a fully formed URL. In that case, we should\n        // ignore the baseUri.\n        if (isAbsoluteUrl(path)) {\n            requestUrl = path;\n            isAbsolutePath = true;\n        }\n        else {\n            requestUrl = appendPath(requestUrl, path);\n        }\n    }\n    const { queryParams, sequenceParams } = calculateQueryParameters(operationSpec, operationArguments, fallbackObject);\n    /**\n     * Notice that this call sets the `noOverwrite` parameter to true if the `requestUrl`\n     * is an absolute path. This ensures that existing query parameter values in `requestUrl`\n     * do not get overwritten. On the other hand when `requestUrl` is not absolute path, it\n     * is still being built so there is nothing to overwrite.\n     */\n    requestUrl = appendQueryParams(requestUrl, queryParams, sequenceParams, isAbsolutePath);\n    return requestUrl;\n}\nfunction replaceAll(input, replacements) {\n    let result = input;\n    for (const [searchValue, replaceValue] of replacements) {\n        result = result.split(searchValue).join(replaceValue);\n    }\n    return result;\n}\nfunction calculateUrlReplacements(operationSpec, operationArguments, fallbackObject) {\n    var _a;\n    const result = new Map();\n    if ((_a = operationSpec.urlParameters) === null || _a === void 0 ? void 0 : _a.length) {\n        for (const urlParameter of operationSpec.urlParameters) {\n            let urlParameterValue = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_0__.getOperationArgumentValueFromParameter)(operationArguments, urlParameter, fallbackObject);\n            const parameterPathString = (0,_interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_1__.getPathStringFromParameter)(urlParameter);\n            urlParameterValue = operationSpec.serializer.serialize(urlParameter.mapper, urlParameterValue, parameterPathString);\n            if (!urlParameter.skipEncoding) {\n                urlParameterValue = encodeURIComponent(urlParameterValue);\n            }\n            result.set(`{${urlParameter.mapper.serializedName || parameterPathString}}`, urlParameterValue);\n        }\n    }\n    return result;\n}\nfunction isAbsoluteUrl(url) {\n    return url.includes(\"://\");\n}\nfunction appendPath(url, pathToAppend) {\n    if (!pathToAppend) {\n        return url;\n    }\n    const parsedUrl = new URL(url);\n    let newPath = parsedUrl.pathname;\n    if (!newPath.endsWith(\"/\")) {\n        newPath = `${newPath}/`;\n    }\n    if (pathToAppend.startsWith(\"/\")) {\n        pathToAppend = pathToAppend.substring(1);\n    }\n    const searchStart = pathToAppend.indexOf(\"?\");\n    if (searchStart !== -1) {\n        const path = pathToAppend.substring(0, searchStart);\n        const search = pathToAppend.substring(searchStart + 1);\n        newPath = newPath + path;\n        if (search) {\n            parsedUrl.search = parsedUrl.search ? `${parsedUrl.search}&${search}` : search;\n        }\n    }\n    else {\n        newPath = newPath + pathToAppend;\n    }\n    parsedUrl.pathname = newPath;\n    return parsedUrl.toString();\n}\nfunction calculateQueryParameters(operationSpec, operationArguments, fallbackObject) {\n    var _a;\n    const result = new Map();\n    const sequenceParams = new Set();\n    if ((_a = operationSpec.queryParameters) === null || _a === void 0 ? void 0 : _a.length) {\n        for (const queryParameter of operationSpec.queryParameters) {\n            if (queryParameter.mapper.type.name === \"Sequence\" && queryParameter.mapper.serializedName) {\n                sequenceParams.add(queryParameter.mapper.serializedName);\n            }\n            let queryParameterValue = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_0__.getOperationArgumentValueFromParameter)(operationArguments, queryParameter, fallbackObject);\n            if ((queryParameterValue !== undefined && queryParameterValue !== null) ||\n                queryParameter.mapper.required) {\n                queryParameterValue = operationSpec.serializer.serialize(queryParameter.mapper, queryParameterValue, (0,_interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_1__.getPathStringFromParameter)(queryParameter));\n                const delimiter = queryParameter.collectionFormat\n                    ? CollectionFormatToDelimiterMap[queryParameter.collectionFormat]\n                    : \"\";\n                if (Array.isArray(queryParameterValue)) {\n                    // replace null and undefined\n                    queryParameterValue = queryParameterValue.map((item) => {\n                        if (item === null || item === undefined) {\n                            return \"\";\n                        }\n                        return item;\n                    });\n                }\n                if (queryParameter.collectionFormat === \"Multi\" && queryParameterValue.length === 0) {\n                    continue;\n                }\n                else if (Array.isArray(queryParameterValue) &&\n                    (queryParameter.collectionFormat === \"SSV\" || queryParameter.collectionFormat === \"TSV\")) {\n                    queryParameterValue = queryParameterValue.join(delimiter);\n                }\n                if (!queryParameter.skipEncoding) {\n                    if (Array.isArray(queryParameterValue)) {\n                        queryParameterValue = queryParameterValue.map((item) => {\n                            return encodeURIComponent(item);\n                        });\n                    }\n                    else {\n                        queryParameterValue = encodeURIComponent(queryParameterValue);\n                    }\n                }\n                // Join pipes and CSV *after* encoding, or the server will be upset.\n                if (Array.isArray(queryParameterValue) &&\n                    (queryParameter.collectionFormat === \"CSV\" || queryParameter.collectionFormat === \"Pipes\")) {\n                    queryParameterValue = queryParameterValue.join(delimiter);\n                }\n                result.set(queryParameter.mapper.serializedName || (0,_interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_1__.getPathStringFromParameter)(queryParameter), queryParameterValue);\n            }\n        }\n    }\n    return {\n        queryParams: result,\n        sequenceParams,\n    };\n}\nfunction simpleParseQueryParams(queryString) {\n    const result = new Map();\n    if (!queryString || queryString[0] !== \"?\") {\n        return result;\n    }\n    // remove the leading ?\n    queryString = queryString.slice(1);\n    const pairs = queryString.split(\"&\");\n    for (const pair of pairs) {\n        const [name, value] = pair.split(\"=\", 2);\n        const existingValue = result.get(name);\n        if (existingValue) {\n            if (Array.isArray(existingValue)) {\n                existingValue.push(value);\n            }\n            else {\n                result.set(name, [existingValue, value]);\n            }\n        }\n        else {\n            result.set(name, value);\n        }\n    }\n    return result;\n}\n/** @internal */\nfunction appendQueryParams(url, queryParams, sequenceParams, noOverwrite = false) {\n    if (queryParams.size === 0) {\n        return url;\n    }\n    const parsedUrl = new URL(url);\n    // QUIRK: parsedUrl.searchParams will have their name/value pairs decoded, which\n    // can change their meaning to the server, such as in the case of a SAS signature.\n    // To avoid accidentally un-encoding a query param, we parse the key/values ourselves\n    const combinedParams = simpleParseQueryParams(parsedUrl.search);\n    for (const [name, value] of queryParams) {\n        const existingValue = combinedParams.get(name);\n        if (Array.isArray(existingValue)) {\n            if (Array.isArray(value)) {\n                existingValue.push(...value);\n                const valueSet = new Set(existingValue);\n                combinedParams.set(name, Array.from(valueSet));\n            }\n            else {\n                existingValue.push(value);\n            }\n        }\n        else if (existingValue) {\n            if (Array.isArray(value)) {\n                value.unshift(existingValue);\n            }\n            else if (sequenceParams.has(name)) {\n                combinedParams.set(name, [existingValue, value]);\n            }\n            if (!noOverwrite) {\n                combinedParams.set(name, value);\n            }\n        }\n        else {\n            combinedParams.set(name, value);\n        }\n    }\n    const searchPieces = [];\n    for (const [name, value] of combinedParams) {\n        if (typeof value === \"string\") {\n            searchPieces.push(`${name}=${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // QUIRK: If we get an array of values, include multiple key/value pairs\n            for (const subValue of value) {\n                searchPieces.push(`${name}=${subValue}`);\n            }\n        }\n        else {\n            searchPieces.push(`${name}=${value}`);\n        }\n    }\n    // QUIRK: we have to set search manually as searchParams will encode comma when it shouldn't.\n    parsedUrl.search = searchPieces.length ? `?${searchPieces.join(\"&\")}` : \"\";\n    return parsedUrl.toString();\n}\n//# sourceMappingURL=urlHelpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/urlHelpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-client/dist/esm/utils.js":
/*!***********************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/utils.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   flattenResponse: () => (/* binding */ flattenResponse),\n/* harmony export */   isDuration: () => (/* binding */ isDuration),\n/* harmony export */   isPrimitiveBody: () => (/* binding */ isPrimitiveBody),\n/* harmony export */   isValidUuid: () => (/* binding */ isValidUuid)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * A type guard for a primitive response body.\n * @param value - Value to test\n *\n * @internal\n */\nfunction isPrimitiveBody(value, mapperTypeName) {\n    return (mapperTypeName !== \"Composite\" &&\n        mapperTypeName !== \"Dictionary\" &&\n        (typeof value === \"string\" ||\n            typeof value === \"number\" ||\n            typeof value === \"boolean\" ||\n            (mapperTypeName === null || mapperTypeName === void 0 ? void 0 : mapperTypeName.match(/^(Date|DateTime|DateTimeRfc1123|UnixTime|ByteArray|Base64Url)$/i)) !==\n                null ||\n            value === undefined ||\n            value === null));\n}\nconst validateISODuration = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n/**\n * Returns true if the given string is in ISO 8601 format.\n * @param value - The value to be validated for ISO 8601 duration format.\n * @internal\n */\nfunction isDuration(value) {\n    return validateISODuration.test(value);\n}\nconst validUuidRegex = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i;\n/**\n * Returns true if the provided uuid is valid.\n *\n * @param uuid - The uuid that needs to be validated.\n *\n * @internal\n */\nfunction isValidUuid(uuid) {\n    return validUuidRegex.test(uuid);\n}\n/**\n * Maps the response as follows:\n * - wraps the response body if needed (typically if its type is primitive).\n * - returns null if the combination of the headers and the body is empty.\n * - otherwise, returns the combination of the headers and the body.\n *\n * @param responseObject - a representation of the parsed response\n * @returns the response that will be returned to the user which can be null and/or wrapped\n *\n * @internal\n */\nfunction handleNullableResponseAndWrappableBody(responseObject) {\n    const combinedHeadersAndBody = Object.assign(Object.assign({}, responseObject.headers), responseObject.body);\n    if (responseObject.hasNullableType &&\n        Object.getOwnPropertyNames(combinedHeadersAndBody).length === 0) {\n        return responseObject.shouldWrapBody ? { body: null } : null;\n    }\n    else {\n        return responseObject.shouldWrapBody\n            ? Object.assign(Object.assign({}, responseObject.headers), { body: responseObject.body }) : combinedHeadersAndBody;\n    }\n}\n/**\n * Take a `FullOperationResponse` and turn it into a flat\n * response object to hand back to the consumer.\n * @param fullResponse - The processed response from the operation request\n * @param responseSpec - The response map from the OperationSpec\n *\n * @internal\n */\nfunction flattenResponse(fullResponse, responseSpec) {\n    var _a, _b;\n    const parsedHeaders = fullResponse.parsedHeaders;\n    // head methods never have a body, but we return a boolean set to body property\n    // to indicate presence/absence of the resource\n    if (fullResponse.request.method === \"HEAD\") {\n        return Object.assign(Object.assign({}, parsedHeaders), { body: fullResponse.parsedBody });\n    }\n    const bodyMapper = responseSpec && responseSpec.bodyMapper;\n    const isNullable = Boolean(bodyMapper === null || bodyMapper === void 0 ? void 0 : bodyMapper.nullable);\n    const expectedBodyTypeName = bodyMapper === null || bodyMapper === void 0 ? void 0 : bodyMapper.type.name;\n    /** If the body is asked for, we look at the expected body type to handle it */\n    if (expectedBodyTypeName === \"Stream\") {\n        return Object.assign(Object.assign({}, parsedHeaders), { blobBody: fullResponse.blobBody, readableStreamBody: fullResponse.readableStreamBody });\n    }\n    const modelProperties = (expectedBodyTypeName === \"Composite\" &&\n        bodyMapper.type.modelProperties) ||\n        {};\n    const isPageableResponse = Object.keys(modelProperties).some((k) => modelProperties[k].serializedName === \"\");\n    if (expectedBodyTypeName === \"Sequence\" || isPageableResponse) {\n        const arrayResponse = (_a = fullResponse.parsedBody) !== null && _a !== void 0 ? _a : [];\n        for (const key of Object.keys(modelProperties)) {\n            if (modelProperties[key].serializedName) {\n                arrayResponse[key] = (_b = fullResponse.parsedBody) === null || _b === void 0 ? void 0 : _b[key];\n            }\n        }\n        if (parsedHeaders) {\n            for (const key of Object.keys(parsedHeaders)) {\n                arrayResponse[key] = parsedHeaders[key];\n            }\n        }\n        return isNullable &&\n            !fullResponse.parsedBody &&\n            !parsedHeaders &&\n            Object.getOwnPropertyNames(modelProperties).length === 0\n            ? null\n            : arrayResponse;\n    }\n    return handleNullableResponseAndWrappableBody({\n        body: fullResponse.parsedBody,\n        headers: parsedHeaders,\n        hasNullableType: isNullable,\n        shouldWrapBody: isPrimitiveBody(fullResponse.parsedBody, expectedBodyTypeName),\n    });\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-client/dist/esm/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-http-compat/dist/esm/extendedClient.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/core-http-compat/dist/esm/extendedClient.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExtendedServiceClient: () => (/* binding */ ExtendedServiceClient)\n/* harmony export */ });\n/* harmony import */ var _policies_disableKeepAlivePolicy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./policies/disableKeepAlivePolicy.js */ \"(ssr)/./node_modules/@azure/core-http-compat/dist/esm/policies/disableKeepAlivePolicy.js\");\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n/* harmony import */ var _azure_core_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/core-client */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/index.js\");\n/* harmony import */ var _response_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./response.js */ \"(ssr)/./node_modules/@azure/core-http-compat/dist/esm/response.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n/**\n * Client to provide compatability between core V1 & V2.\n */\nclass ExtendedServiceClient extends _azure_core_client__WEBPACK_IMPORTED_MODULE_2__.ServiceClient {\n    constructor(options) {\n        var _a, _b;\n        super(options);\n        if (((_a = options.keepAliveOptions) === null || _a === void 0 ? void 0 : _a.enable) === false &&\n            !(0,_policies_disableKeepAlivePolicy_js__WEBPACK_IMPORTED_MODULE_0__.pipelineContainsDisableKeepAlivePolicy)(this.pipeline)) {\n            this.pipeline.addPolicy((0,_policies_disableKeepAlivePolicy_js__WEBPACK_IMPORTED_MODULE_0__.createDisableKeepAlivePolicy)());\n        }\n        if (((_b = options.redirectOptions) === null || _b === void 0 ? void 0 : _b.handleRedirects) === false) {\n            this.pipeline.removePolicy({\n                name: _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__.redirectPolicyName,\n            });\n        }\n    }\n    /**\n     * Compatible send operation request function.\n     *\n     * @param operationArguments - Operation arguments\n     * @param operationSpec - Operation Spec\n     * @returns\n     */\n    async sendOperationRequest(operationArguments, operationSpec) {\n        var _a;\n        const userProvidedCallBack = (_a = operationArguments === null || operationArguments === void 0 ? void 0 : operationArguments.options) === null || _a === void 0 ? void 0 : _a.onResponse;\n        let lastResponse;\n        function onResponse(rawResponse, flatResponse, error) {\n            lastResponse = rawResponse;\n            if (userProvidedCallBack) {\n                userProvidedCallBack(rawResponse, flatResponse, error);\n            }\n        }\n        operationArguments.options = Object.assign(Object.assign({}, operationArguments.options), { onResponse });\n        const result = await super.sendOperationRequest(operationArguments, operationSpec);\n        if (lastResponse) {\n            Object.defineProperty(result, \"_response\", {\n                value: (0,_response_js__WEBPACK_IMPORTED_MODULE_3__.toCompatResponse)(lastResponse),\n            });\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=extendedClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtaHR0cC1jb21wYXQvZGlzdC9lc20vZXh0ZW5kZWRDbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQzZIO0FBQzlEO0FBQ1o7QUFDRjtBQUNqRDtBQUNBO0FBQ0E7QUFDTyxvQ0FBb0MsNkRBQWE7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLDJHQUFzQztBQUNuRCxvQ0FBb0MsaUdBQTRCO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix5RUFBa0I7QUFDeEMsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FLGlDQUFpQyxZQUFZO0FBQ2hIO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qiw4REFBZ0I7QUFDdkMsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLWh0dHAtY29tcGF0XFxkaXN0XFxlc21cXGV4dGVuZGVkQ2xpZW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgY3JlYXRlRGlzYWJsZUtlZXBBbGl2ZVBvbGljeSwgcGlwZWxpbmVDb250YWluc0Rpc2FibGVLZWVwQWxpdmVQb2xpY3ksIH0gZnJvbSBcIi4vcG9saWNpZXMvZGlzYWJsZUtlZXBBbGl2ZVBvbGljeS5qc1wiO1xuaW1wb3J0IHsgcmVkaXJlY3RQb2xpY3lOYW1lIH0gZnJvbSBcIkBhenVyZS9jb3JlLXJlc3QtcGlwZWxpbmVcIjtcbmltcG9ydCB7IFNlcnZpY2VDbGllbnQgfSBmcm9tIFwiQGF6dXJlL2NvcmUtY2xpZW50XCI7XG5pbXBvcnQgeyB0b0NvbXBhdFJlc3BvbnNlIH0gZnJvbSBcIi4vcmVzcG9uc2UuanNcIjtcbi8qKlxuICogQ2xpZW50IHRvIHByb3ZpZGUgY29tcGF0YWJpbGl0eSBiZXR3ZWVuIGNvcmUgVjEgJiBWMi5cbiAqL1xuZXhwb3J0IGNsYXNzIEV4dGVuZGVkU2VydmljZUNsaWVudCBleHRlbmRzIFNlcnZpY2VDbGllbnQge1xuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgc3VwZXIob3B0aW9ucyk7XG4gICAgICAgIGlmICgoKF9hID0gb3B0aW9ucy5rZWVwQWxpdmVPcHRpb25zKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZW5hYmxlKSA9PT0gZmFsc2UgJiZcbiAgICAgICAgICAgICFwaXBlbGluZUNvbnRhaW5zRGlzYWJsZUtlZXBBbGl2ZVBvbGljeSh0aGlzLnBpcGVsaW5lKSkge1xuICAgICAgICAgICAgdGhpcy5waXBlbGluZS5hZGRQb2xpY3koY3JlYXRlRGlzYWJsZUtlZXBBbGl2ZVBvbGljeSgpKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoKChfYiA9IG9wdGlvbnMucmVkaXJlY3RPcHRpb25zKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuaGFuZGxlUmVkaXJlY3RzKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgIHRoaXMucGlwZWxpbmUucmVtb3ZlUG9saWN5KHtcbiAgICAgICAgICAgICAgICBuYW1lOiByZWRpcmVjdFBvbGljeU5hbWUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBDb21wYXRpYmxlIHNlbmQgb3BlcmF0aW9uIHJlcXVlc3QgZnVuY3Rpb24uXG4gICAgICpcbiAgICAgKiBAcGFyYW0gb3BlcmF0aW9uQXJndW1lbnRzIC0gT3BlcmF0aW9uIGFyZ3VtZW50c1xuICAgICAqIEBwYXJhbSBvcGVyYXRpb25TcGVjIC0gT3BlcmF0aW9uIFNwZWNcbiAgICAgKiBAcmV0dXJuc1xuICAgICAqL1xuICAgIGFzeW5jIHNlbmRPcGVyYXRpb25SZXF1ZXN0KG9wZXJhdGlvbkFyZ3VtZW50cywgb3BlcmF0aW9uU3BlYykge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGNvbnN0IHVzZXJQcm92aWRlZENhbGxCYWNrID0gKF9hID0gb3BlcmF0aW9uQXJndW1lbnRzID09PSBudWxsIHx8IG9wZXJhdGlvbkFyZ3VtZW50cyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3BlcmF0aW9uQXJndW1lbnRzLm9wdGlvbnMpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5vblJlc3BvbnNlO1xuICAgICAgICBsZXQgbGFzdFJlc3BvbnNlO1xuICAgICAgICBmdW5jdGlvbiBvblJlc3BvbnNlKHJhd1Jlc3BvbnNlLCBmbGF0UmVzcG9uc2UsIGVycm9yKSB7XG4gICAgICAgICAgICBsYXN0UmVzcG9uc2UgPSByYXdSZXNwb25zZTtcbiAgICAgICAgICAgIGlmICh1c2VyUHJvdmlkZWRDYWxsQmFjaykge1xuICAgICAgICAgICAgICAgIHVzZXJQcm92aWRlZENhbGxCYWNrKHJhd1Jlc3BvbnNlLCBmbGF0UmVzcG9uc2UsIGVycm9yKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBvcGVyYXRpb25Bcmd1bWVudHMub3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgb3BlcmF0aW9uQXJndW1lbnRzLm9wdGlvbnMpLCB7IG9uUmVzcG9uc2UgfSk7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHN1cGVyLnNlbmRPcGVyYXRpb25SZXF1ZXN0KG9wZXJhdGlvbkFyZ3VtZW50cywgb3BlcmF0aW9uU3BlYyk7XG4gICAgICAgIGlmIChsYXN0UmVzcG9uc2UpIHtcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyZXN1bHQsIFwiX3Jlc3BvbnNlXCIsIHtcbiAgICAgICAgICAgICAgICB2YWx1ZTogdG9Db21wYXRSZXNwb25zZShsYXN0UmVzcG9uc2UpLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1leHRlbmRlZENsaWVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-http-compat/dist/esm/extendedClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-http-compat/dist/esm/httpClientAdapter.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/core-http-compat/dist/esm/httpClientAdapter.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertHttpClient: () => (/* binding */ convertHttpClient)\n/* harmony export */ });\n/* harmony import */ var _response_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./response.js */ \"(ssr)/./node_modules/@azure/core-http-compat/dist/esm/response.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util.js */ \"(ssr)/./node_modules/@azure/core-http-compat/dist/esm/util.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * Converts a RequestPolicy based HttpClient to a PipelineRequest based HttpClient.\n * @param requestPolicyClient - A HttpClient compatible with core-http\n * @returns A HttpClient compatible with core-rest-pipeline\n */\nfunction convertHttpClient(requestPolicyClient) {\n    return {\n        sendRequest: async (request) => {\n            const response = await requestPolicyClient.sendRequest((0,_util_js__WEBPACK_IMPORTED_MODULE_1__.toWebResourceLike)(request, { createProxy: true }));\n            return (0,_response_js__WEBPACK_IMPORTED_MODULE_0__.toPipelineResponse)(response);\n        },\n    };\n}\n//# sourceMappingURL=httpClientAdapter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtaHR0cC1jb21wYXQvZGlzdC9lc20vaHR0cENsaWVudEFkYXB0ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNtRDtBQUNMO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxtRUFBbUUsMkRBQWlCLFlBQVksbUJBQW1CO0FBQ25ILG1CQUFtQixnRUFBa0I7QUFDckMsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxoZWxsby12b2ljZVxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtaHR0cC1jb21wYXRcXGRpc3RcXGVzbVxcaHR0cENsaWVudEFkYXB0ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyB0b1BpcGVsaW5lUmVzcG9uc2UgfSBmcm9tIFwiLi9yZXNwb25zZS5qc1wiO1xuaW1wb3J0IHsgdG9XZWJSZXNvdXJjZUxpa2UgfSBmcm9tIFwiLi91dGlsLmpzXCI7XG4vKipcbiAqIENvbnZlcnRzIGEgUmVxdWVzdFBvbGljeSBiYXNlZCBIdHRwQ2xpZW50IHRvIGEgUGlwZWxpbmVSZXF1ZXN0IGJhc2VkIEh0dHBDbGllbnQuXG4gKiBAcGFyYW0gcmVxdWVzdFBvbGljeUNsaWVudCAtIEEgSHR0cENsaWVudCBjb21wYXRpYmxlIHdpdGggY29yZS1odHRwXG4gKiBAcmV0dXJucyBBIEh0dHBDbGllbnQgY29tcGF0aWJsZSB3aXRoIGNvcmUtcmVzdC1waXBlbGluZVxuICovXG5leHBvcnQgZnVuY3Rpb24gY29udmVydEh0dHBDbGllbnQocmVxdWVzdFBvbGljeUNsaWVudCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHNlbmRSZXF1ZXN0OiBhc3luYyAocmVxdWVzdCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCByZXF1ZXN0UG9saWN5Q2xpZW50LnNlbmRSZXF1ZXN0KHRvV2ViUmVzb3VyY2VMaWtlKHJlcXVlc3QsIHsgY3JlYXRlUHJveHk6IHRydWUgfSkpO1xuICAgICAgICAgICAgcmV0dXJuIHRvUGlwZWxpbmVSZXNwb25zZShyZXNwb25zZSk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWh0dHBDbGllbnRBZGFwdGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-http-compat/dist/esm/httpClientAdapter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-http-compat/dist/esm/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/core-http-compat/dist/esm/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExtendedServiceClient: () => (/* reexport safe */ _extendedClient_js__WEBPACK_IMPORTED_MODULE_0__.ExtendedServiceClient),\n/* harmony export */   HttpPipelineLogLevel: () => (/* reexport safe */ _policies_requestPolicyFactoryPolicy_js__WEBPACK_IMPORTED_MODULE_1__.HttpPipelineLogLevel),\n/* harmony export */   convertHttpClient: () => (/* reexport safe */ _httpClientAdapter_js__WEBPACK_IMPORTED_MODULE_3__.convertHttpClient),\n/* harmony export */   createRequestPolicyFactoryPolicy: () => (/* reexport safe */ _policies_requestPolicyFactoryPolicy_js__WEBPACK_IMPORTED_MODULE_1__.createRequestPolicyFactoryPolicy),\n/* harmony export */   disableKeepAlivePolicyName: () => (/* reexport safe */ _policies_disableKeepAlivePolicy_js__WEBPACK_IMPORTED_MODULE_2__.disableKeepAlivePolicyName),\n/* harmony export */   requestPolicyFactoryPolicyName: () => (/* reexport safe */ _policies_requestPolicyFactoryPolicy_js__WEBPACK_IMPORTED_MODULE_1__.requestPolicyFactoryPolicyName),\n/* harmony export */   toHttpHeadersLike: () => (/* reexport safe */ _util_js__WEBPACK_IMPORTED_MODULE_4__.toHttpHeadersLike)\n/* harmony export */ });\n/* harmony import */ var _extendedClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./extendedClient.js */ \"(ssr)/./node_modules/@azure/core-http-compat/dist/esm/extendedClient.js\");\n/* harmony import */ var _policies_requestPolicyFactoryPolicy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./policies/requestPolicyFactoryPolicy.js */ \"(ssr)/./node_modules/@azure/core-http-compat/dist/esm/policies/requestPolicyFactoryPolicy.js\");\n/* harmony import */ var _policies_disableKeepAlivePolicy_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./policies/disableKeepAlivePolicy.js */ \"(ssr)/./node_modules/@azure/core-http-compat/dist/esm/policies/disableKeepAlivePolicy.js\");\n/* harmony import */ var _httpClientAdapter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./httpClientAdapter.js */ \"(ssr)/./node_modules/@azure/core-http-compat/dist/esm/httpClientAdapter.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util.js */ \"(ssr)/./node_modules/@azure/core-http-compat/dist/esm/util.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * A Shim Library that provides compatibility between Core V1 & V2 Packages.\n *\n * @packageDocumentation\n */\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtaHR0cC1jb21wYXQvZGlzdC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDNkQ7QUFDc0Y7QUFDakU7QUFDdkI7QUFDWjtBQUMvQyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxoZWxsby12b2ljZVxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtaHR0cC1jb21wYXRcXGRpc3RcXGVzbVxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vKipcbiAqIEEgU2hpbSBMaWJyYXJ5IHRoYXQgcHJvdmlkZXMgY29tcGF0aWJpbGl0eSBiZXR3ZWVuIENvcmUgVjEgJiBWMiBQYWNrYWdlcy5cbiAqXG4gKiBAcGFja2FnZURvY3VtZW50YXRpb25cbiAqL1xuZXhwb3J0IHsgRXh0ZW5kZWRTZXJ2aWNlQ2xpZW50LCB9IGZyb20gXCIuL2V4dGVuZGVkQ2xpZW50LmpzXCI7XG5leHBvcnQgeyByZXF1ZXN0UG9saWN5RmFjdG9yeVBvbGljeU5hbWUsIGNyZWF0ZVJlcXVlc3RQb2xpY3lGYWN0b3J5UG9saWN5LCBIdHRwUGlwZWxpbmVMb2dMZXZlbCwgfSBmcm9tIFwiLi9wb2xpY2llcy9yZXF1ZXN0UG9saWN5RmFjdG9yeVBvbGljeS5qc1wiO1xuZXhwb3J0IHsgZGlzYWJsZUtlZXBBbGl2ZVBvbGljeU5hbWUgfSBmcm9tIFwiLi9wb2xpY2llcy9kaXNhYmxlS2VlcEFsaXZlUG9saWN5LmpzXCI7XG5leHBvcnQgeyBjb252ZXJ0SHR0cENsaWVudCB9IGZyb20gXCIuL2h0dHBDbGllbnRBZGFwdGVyLmpzXCI7XG5leHBvcnQgeyB0b0h0dHBIZWFkZXJzTGlrZSwgfSBmcm9tIFwiLi91dGlsLmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-http-compat/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-http-compat/dist/esm/policies/disableKeepAlivePolicy.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@azure/core-http-compat/dist/esm/policies/disableKeepAlivePolicy.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDisableKeepAlivePolicy: () => (/* binding */ createDisableKeepAlivePolicy),\n/* harmony export */   disableKeepAlivePolicyName: () => (/* binding */ disableKeepAlivePolicyName),\n/* harmony export */   pipelineContainsDisableKeepAlivePolicy: () => (/* binding */ pipelineContainsDisableKeepAlivePolicy)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nconst disableKeepAlivePolicyName = \"DisableKeepAlivePolicy\";\nfunction createDisableKeepAlivePolicy() {\n    return {\n        name: disableKeepAlivePolicyName,\n        async sendRequest(request, next) {\n            request.disableKeepAlive = true;\n            return next(request);\n        },\n    };\n}\n/**\n * @internal\n */\nfunction pipelineContainsDisableKeepAlivePolicy(pipeline) {\n    return pipeline.getOrderedPolicies().some((policy) => policy.name === disableKeepAlivePolicyName);\n}\n//# sourceMappingURL=disableKeepAlivePolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtaHR0cC1jb21wYXQvZGlzdC9lc20vcG9saWNpZXMvZGlzYWJsZUtlZXBBbGl2ZVBvbGljeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ087QUFDQTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGhlbGxvLXZvaWNlXFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1odHRwLWNvbXBhdFxcZGlzdFxcZXNtXFxwb2xpY2llc1xcZGlzYWJsZUtlZXBBbGl2ZVBvbGljeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCBjb25zdCBkaXNhYmxlS2VlcEFsaXZlUG9saWN5TmFtZSA9IFwiRGlzYWJsZUtlZXBBbGl2ZVBvbGljeVwiO1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZURpc2FibGVLZWVwQWxpdmVQb2xpY3koKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogZGlzYWJsZUtlZXBBbGl2ZVBvbGljeU5hbWUsXG4gICAgICAgIGFzeW5jIHNlbmRSZXF1ZXN0KHJlcXVlc3QsIG5leHQpIHtcbiAgICAgICAgICAgIHJlcXVlc3QuZGlzYWJsZUtlZXBBbGl2ZSA9IHRydWU7XG4gICAgICAgICAgICByZXR1cm4gbmV4dChyZXF1ZXN0KTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBpcGVsaW5lQ29udGFpbnNEaXNhYmxlS2VlcEFsaXZlUG9saWN5KHBpcGVsaW5lKSB7XG4gICAgcmV0dXJuIHBpcGVsaW5lLmdldE9yZGVyZWRQb2xpY2llcygpLnNvbWUoKHBvbGljeSkgPT4gcG9saWN5Lm5hbWUgPT09IGRpc2FibGVLZWVwQWxpdmVQb2xpY3lOYW1lKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRpc2FibGVLZWVwQWxpdmVQb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-http-compat/dist/esm/policies/disableKeepAlivePolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-http-compat/dist/esm/policies/requestPolicyFactoryPolicy.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@azure/core-http-compat/dist/esm/policies/requestPolicyFactoryPolicy.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpPipelineLogLevel: () => (/* binding */ HttpPipelineLogLevel),\n/* harmony export */   createRequestPolicyFactoryPolicy: () => (/* binding */ createRequestPolicyFactoryPolicy),\n/* harmony export */   requestPolicyFactoryPolicyName: () => (/* binding */ requestPolicyFactoryPolicyName)\n/* harmony export */ });\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util.js */ \"(ssr)/./node_modules/@azure/core-http-compat/dist/esm/util.js\");\n/* harmony import */ var _response_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../response.js */ \"(ssr)/./node_modules/@azure/core-http-compat/dist/esm/response.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * An enum for compatibility with RequestPolicy\n */\nvar HttpPipelineLogLevel;\n(function (HttpPipelineLogLevel) {\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"ERROR\"] = 1] = \"ERROR\";\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"INFO\"] = 3] = \"INFO\";\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"OFF\"] = 0] = \"OFF\";\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"WARNING\"] = 2] = \"WARNING\";\n})(HttpPipelineLogLevel || (HttpPipelineLogLevel = {}));\nconst mockRequestPolicyOptions = {\n    log(_logLevel, _message) {\n        /* do nothing */\n    },\n    shouldLog(_logLevel) {\n        return false;\n    },\n};\n/**\n * The name of the RequestPolicyFactoryPolicy\n */\nconst requestPolicyFactoryPolicyName = \"RequestPolicyFactoryPolicy\";\n/**\n * A policy that wraps policies written for core-http.\n * @param factories - An array of `RequestPolicyFactory` objects from a core-http pipeline\n */\nfunction createRequestPolicyFactoryPolicy(factories) {\n    const orderedFactories = factories.slice().reverse();\n    return {\n        name: requestPolicyFactoryPolicyName,\n        async sendRequest(request, next) {\n            let httpPipeline = {\n                async sendRequest(httpRequest) {\n                    const response = await next((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.toPipelineRequest)(httpRequest));\n                    return (0,_response_js__WEBPACK_IMPORTED_MODULE_1__.toCompatResponse)(response, { createProxy: true });\n                },\n            };\n            for (const factory of orderedFactories) {\n                httpPipeline = factory.create(httpPipeline, mockRequestPolicyOptions);\n            }\n            const webResourceLike = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.toWebResourceLike)(request, { createProxy: true });\n            const response = await httpPipeline.sendRequest(webResourceLike);\n            return (0,_response_js__WEBPACK_IMPORTED_MODULE_1__.toPipelineResponse)(response);\n        },\n    };\n}\n//# sourceMappingURL=requestPolicyFactoryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtaHR0cC1jb21wYXQvZGlzdC9lc20vcG9saWNpZXMvcmVxdWVzdFBvbGljeUZhY3RvcnlQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ2tFO0FBQ0k7QUFDdEU7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxvREFBb0Q7QUFDckQ7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsMkRBQWlCO0FBQ2pFLDJCQUEyQiw4REFBZ0IsYUFBYSxtQkFBbUI7QUFDM0UsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLDJEQUFpQixZQUFZLG1CQUFtQjtBQUNwRjtBQUNBLG1CQUFtQixnRUFBa0I7QUFDckMsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxoZWxsby12b2ljZVxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtaHR0cC1jb21wYXRcXGRpc3RcXGVzbVxccG9saWNpZXNcXHJlcXVlc3RQb2xpY3lGYWN0b3J5UG9saWN5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgdG9QaXBlbGluZVJlcXVlc3QsIHRvV2ViUmVzb3VyY2VMaWtlIH0gZnJvbSBcIi4uL3V0aWwuanNcIjtcbmltcG9ydCB7IHRvQ29tcGF0UmVzcG9uc2UsIHRvUGlwZWxpbmVSZXNwb25zZSB9IGZyb20gXCIuLi9yZXNwb25zZS5qc1wiO1xuLyoqXG4gKiBBbiBlbnVtIGZvciBjb21wYXRpYmlsaXR5IHdpdGggUmVxdWVzdFBvbGljeVxuICovXG5leHBvcnQgdmFyIEh0dHBQaXBlbGluZUxvZ0xldmVsO1xuKGZ1bmN0aW9uIChIdHRwUGlwZWxpbmVMb2dMZXZlbCkge1xuICAgIEh0dHBQaXBlbGluZUxvZ0xldmVsW0h0dHBQaXBlbGluZUxvZ0xldmVsW1wiRVJST1JcIl0gPSAxXSA9IFwiRVJST1JcIjtcbiAgICBIdHRwUGlwZWxpbmVMb2dMZXZlbFtIdHRwUGlwZWxpbmVMb2dMZXZlbFtcIklORk9cIl0gPSAzXSA9IFwiSU5GT1wiO1xuICAgIEh0dHBQaXBlbGluZUxvZ0xldmVsW0h0dHBQaXBlbGluZUxvZ0xldmVsW1wiT0ZGXCJdID0gMF0gPSBcIk9GRlwiO1xuICAgIEh0dHBQaXBlbGluZUxvZ0xldmVsW0h0dHBQaXBlbGluZUxvZ0xldmVsW1wiV0FSTklOR1wiXSA9IDJdID0gXCJXQVJOSU5HXCI7XG59KShIdHRwUGlwZWxpbmVMb2dMZXZlbCB8fCAoSHR0cFBpcGVsaW5lTG9nTGV2ZWwgPSB7fSkpO1xuY29uc3QgbW9ja1JlcXVlc3RQb2xpY3lPcHRpb25zID0ge1xuICAgIGxvZyhfbG9nTGV2ZWwsIF9tZXNzYWdlKSB7XG4gICAgICAgIC8qIGRvIG5vdGhpbmcgKi9cbiAgICB9LFxuICAgIHNob3VsZExvZyhfbG9nTGV2ZWwpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0sXG59O1xuLyoqXG4gKiBUaGUgbmFtZSBvZiB0aGUgUmVxdWVzdFBvbGljeUZhY3RvcnlQb2xpY3lcbiAqL1xuZXhwb3J0IGNvbnN0IHJlcXVlc3RQb2xpY3lGYWN0b3J5UG9saWN5TmFtZSA9IFwiUmVxdWVzdFBvbGljeUZhY3RvcnlQb2xpY3lcIjtcbi8qKlxuICogQSBwb2xpY3kgdGhhdCB3cmFwcyBwb2xpY2llcyB3cml0dGVuIGZvciBjb3JlLWh0dHAuXG4gKiBAcGFyYW0gZmFjdG9yaWVzIC0gQW4gYXJyYXkgb2YgYFJlcXVlc3RQb2xpY3lGYWN0b3J5YCBvYmplY3RzIGZyb20gYSBjb3JlLWh0dHAgcGlwZWxpbmVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVJlcXVlc3RQb2xpY3lGYWN0b3J5UG9saWN5KGZhY3Rvcmllcykge1xuICAgIGNvbnN0IG9yZGVyZWRGYWN0b3JpZXMgPSBmYWN0b3JpZXMuc2xpY2UoKS5yZXZlcnNlKCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogcmVxdWVzdFBvbGljeUZhY3RvcnlQb2xpY3lOYW1lLFxuICAgICAgICBhc3luYyBzZW5kUmVxdWVzdChyZXF1ZXN0LCBuZXh0KSB7XG4gICAgICAgICAgICBsZXQgaHR0cFBpcGVsaW5lID0ge1xuICAgICAgICAgICAgICAgIGFzeW5jIHNlbmRSZXF1ZXN0KGh0dHBSZXF1ZXN0KSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgbmV4dCh0b1BpcGVsaW5lUmVxdWVzdChodHRwUmVxdWVzdCkpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdG9Db21wYXRSZXNwb25zZShyZXNwb25zZSwgeyBjcmVhdGVQcm94eTogdHJ1ZSB9KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgZmFjdG9yeSBvZiBvcmRlcmVkRmFjdG9yaWVzKSB7XG4gICAgICAgICAgICAgICAgaHR0cFBpcGVsaW5lID0gZmFjdG9yeS5jcmVhdGUoaHR0cFBpcGVsaW5lLCBtb2NrUmVxdWVzdFBvbGljeU9wdGlvbnMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3Qgd2ViUmVzb3VyY2VMaWtlID0gdG9XZWJSZXNvdXJjZUxpa2UocmVxdWVzdCwgeyBjcmVhdGVQcm94eTogdHJ1ZSB9KTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgaHR0cFBpcGVsaW5lLnNlbmRSZXF1ZXN0KHdlYlJlc291cmNlTGlrZSk7XG4gICAgICAgICAgICByZXR1cm4gdG9QaXBlbGluZVJlc3BvbnNlKHJlc3BvbnNlKTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVxdWVzdFBvbGljeUZhY3RvcnlQb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-http-compat/dist/esm/policies/requestPolicyFactoryPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-http-compat/dist/esm/response.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/core-http-compat/dist/esm/response.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toCompatResponse: () => (/* binding */ toCompatResponse),\n/* harmony export */   toPipelineResponse: () => (/* binding */ toPipelineResponse)\n/* harmony export */ });\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util.js */ \"(ssr)/./node_modules/@azure/core-http-compat/dist/esm/util.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\nconst originalResponse = Symbol(\"Original FullOperationResponse\");\n/**\n * A helper to convert response objects from the new pipeline back to the old one.\n * @param response - A response object from core-client.\n * @returns A response compatible with `HttpOperationResponse` from core-http.\n */\nfunction toCompatResponse(response, options) {\n    let request = (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.toWebResourceLike)(response.request);\n    let headers = (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.toHttpHeadersLike)(response.headers);\n    if (options === null || options === void 0 ? void 0 : options.createProxy) {\n        return new Proxy(response, {\n            get(target, prop, receiver) {\n                if (prop === \"headers\") {\n                    return headers;\n                }\n                else if (prop === \"request\") {\n                    return request;\n                }\n                else if (prop === originalResponse) {\n                    return response;\n                }\n                return Reflect.get(target, prop, receiver);\n            },\n            set(target, prop, value, receiver) {\n                if (prop === \"headers\") {\n                    headers = value;\n                }\n                else if (prop === \"request\") {\n                    request = value;\n                }\n                return Reflect.set(target, prop, value, receiver);\n            },\n        });\n    }\n    else {\n        return Object.assign(Object.assign({}, response), { request,\n            headers });\n    }\n}\n/**\n * A helper to convert back to a PipelineResponse\n * @param compatResponse - A response compatible with `HttpOperationResponse` from core-http.\n */\nfunction toPipelineResponse(compatResponse) {\n    const extendedCompatResponse = compatResponse;\n    const response = extendedCompatResponse[originalResponse];\n    const headers = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createHttpHeaders)(compatResponse.headers.toJson({ preserveCase: true }));\n    if (response) {\n        response.headers = headers;\n        return response;\n    }\n    else {\n        return Object.assign(Object.assign({}, compatResponse), { headers, request: (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.toPipelineRequest)(compatResponse.request) });\n    }\n}\n//# sourceMappingURL=response.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtaHR0cC1jb21wYXQvZGlzdC9lc20vcmVzcG9uc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDOEQ7QUFDc0I7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxrQkFBa0IsMkRBQWlCO0FBQ25DLGtCQUFrQiwyREFBaUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBLDZDQUE2QyxlQUFlO0FBQzVELHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxvQkFBb0IsNEVBQWlCLGlDQUFpQyxvQkFBb0I7QUFDMUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QyxxQkFBcUIsa0JBQWtCLDJEQUFpQiwwQkFBMEI7QUFDL0g7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGhlbGxvLXZvaWNlXFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1odHRwLWNvbXBhdFxcZGlzdFxcZXNtXFxyZXNwb25zZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGNyZWF0ZUh0dHBIZWFkZXJzIH0gZnJvbSBcIkBhenVyZS9jb3JlLXJlc3QtcGlwZWxpbmVcIjtcbmltcG9ydCB7IHRvSHR0cEhlYWRlcnNMaWtlLCB0b1BpcGVsaW5lUmVxdWVzdCwgdG9XZWJSZXNvdXJjZUxpa2UgfSBmcm9tIFwiLi91dGlsLmpzXCI7XG5jb25zdCBvcmlnaW5hbFJlc3BvbnNlID0gU3ltYm9sKFwiT3JpZ2luYWwgRnVsbE9wZXJhdGlvblJlc3BvbnNlXCIpO1xuLyoqXG4gKiBBIGhlbHBlciB0byBjb252ZXJ0IHJlc3BvbnNlIG9iamVjdHMgZnJvbSB0aGUgbmV3IHBpcGVsaW5lIGJhY2sgdG8gdGhlIG9sZCBvbmUuXG4gKiBAcGFyYW0gcmVzcG9uc2UgLSBBIHJlc3BvbnNlIG9iamVjdCBmcm9tIGNvcmUtY2xpZW50LlxuICogQHJldHVybnMgQSByZXNwb25zZSBjb21wYXRpYmxlIHdpdGggYEh0dHBPcGVyYXRpb25SZXNwb25zZWAgZnJvbSBjb3JlLWh0dHAuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b0NvbXBhdFJlc3BvbnNlKHJlc3BvbnNlLCBvcHRpb25zKSB7XG4gICAgbGV0IHJlcXVlc3QgPSB0b1dlYlJlc291cmNlTGlrZShyZXNwb25zZS5yZXF1ZXN0KTtcbiAgICBsZXQgaGVhZGVycyA9IHRvSHR0cEhlYWRlcnNMaWtlKHJlc3BvbnNlLmhlYWRlcnMpO1xuICAgIGlmIChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuY3JlYXRlUHJveHkpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm94eShyZXNwb25zZSwge1xuICAgICAgICAgICAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpIHtcbiAgICAgICAgICAgICAgICBpZiAocHJvcCA9PT0gXCJoZWFkZXJzXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGhlYWRlcnM7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHByb3AgPT09IFwicmVxdWVzdFwiKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXF1ZXN0O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChwcm9wID09PSBvcmlnaW5hbFJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIFJlZmxlY3QuZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNldCh0YXJnZXQsIHByb3AsIHZhbHVlLCByZWNlaXZlcikge1xuICAgICAgICAgICAgICAgIGlmIChwcm9wID09PSBcImhlYWRlcnNcIikge1xuICAgICAgICAgICAgICAgICAgICBoZWFkZXJzID0gdmFsdWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHByb3AgPT09IFwicmVxdWVzdFwiKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlcXVlc3QgPSB2YWx1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIFJlZmxlY3Quc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUsIHJlY2VpdmVyKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgcmVzcG9uc2UpLCB7IHJlcXVlc3QsXG4gICAgICAgICAgICBoZWFkZXJzIH0pO1xuICAgIH1cbn1cbi8qKlxuICogQSBoZWxwZXIgdG8gY29udmVydCBiYWNrIHRvIGEgUGlwZWxpbmVSZXNwb25zZVxuICogQHBhcmFtIGNvbXBhdFJlc3BvbnNlIC0gQSByZXNwb25zZSBjb21wYXRpYmxlIHdpdGggYEh0dHBPcGVyYXRpb25SZXNwb25zZWAgZnJvbSBjb3JlLWh0dHAuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b1BpcGVsaW5lUmVzcG9uc2UoY29tcGF0UmVzcG9uc2UpIHtcbiAgICBjb25zdCBleHRlbmRlZENvbXBhdFJlc3BvbnNlID0gY29tcGF0UmVzcG9uc2U7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBleHRlbmRlZENvbXBhdFJlc3BvbnNlW29yaWdpbmFsUmVzcG9uc2VdO1xuICAgIGNvbnN0IGhlYWRlcnMgPSBjcmVhdGVIdHRwSGVhZGVycyhjb21wYXRSZXNwb25zZS5oZWFkZXJzLnRvSnNvbih7IHByZXNlcnZlQ2FzZTogdHJ1ZSB9KSk7XG4gICAgaWYgKHJlc3BvbnNlKSB7XG4gICAgICAgIHJlc3BvbnNlLmhlYWRlcnMgPSBoZWFkZXJzO1xuICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBjb21wYXRSZXNwb25zZSksIHsgaGVhZGVycywgcmVxdWVzdDogdG9QaXBlbGluZVJlcXVlc3QoY29tcGF0UmVzcG9uc2UucmVxdWVzdCkgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVzcG9uc2UuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-http-compat/dist/esm/response.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-http-compat/dist/esm/util.js":
/*!***************************************************************!*\
  !*** ./node_modules/@azure/core-http-compat/dist/esm/util.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpHeaders: () => (/* binding */ HttpHeaders),\n/* harmony export */   toHttpHeadersLike: () => (/* binding */ toHttpHeadersLike),\n/* harmony export */   toPipelineRequest: () => (/* binding */ toPipelineRequest),\n/* harmony export */   toWebResourceLike: () => (/* binding */ toWebResourceLike)\n/* harmony export */ });\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// We use a custom symbol to cache a reference to the original request without\n// exposing it on the public interface.\nconst originalRequestSymbol = Symbol(\"Original PipelineRequest\");\n// Symbol.for() will return the same symbol if it's already been created\n// This particular one is used in core-client to handle the case of when a request is\n// cloned but we need to retrieve the OperationSpec and OperationArguments from the\n// original request.\nconst originalClientRequestSymbol = Symbol.for(\"@azure/core-client original request\");\nfunction toPipelineRequest(webResource, options = {}) {\n    const compatWebResource = webResource;\n    const request = compatWebResource[originalRequestSymbol];\n    const headers = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createHttpHeaders)(webResource.headers.toJson({ preserveCase: true }));\n    if (request) {\n        request.headers = headers;\n        return request;\n    }\n    else {\n        const newRequest = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createPipelineRequest)({\n            url: webResource.url,\n            method: webResource.method,\n            headers,\n            withCredentials: webResource.withCredentials,\n            timeout: webResource.timeout,\n            requestId: webResource.requestId,\n            abortSignal: webResource.abortSignal,\n            body: webResource.body,\n            formData: webResource.formData,\n            disableKeepAlive: !!webResource.keepAlive,\n            onDownloadProgress: webResource.onDownloadProgress,\n            onUploadProgress: webResource.onUploadProgress,\n            proxySettings: webResource.proxySettings,\n            streamResponseStatusCodes: webResource.streamResponseStatusCodes,\n            agent: webResource.agent,\n        });\n        if (options.originalRequest) {\n            newRequest[originalClientRequestSymbol] =\n                options.originalRequest;\n        }\n        return newRequest;\n    }\n}\nfunction toWebResourceLike(request, options) {\n    var _a;\n    const originalRequest = (_a = options === null || options === void 0 ? void 0 : options.originalRequest) !== null && _a !== void 0 ? _a : request;\n    const webResource = {\n        url: request.url,\n        method: request.method,\n        headers: toHttpHeadersLike(request.headers),\n        withCredentials: request.withCredentials,\n        timeout: request.timeout,\n        requestId: request.headers.get(\"x-ms-client-request-id\") || request.requestId,\n        abortSignal: request.abortSignal,\n        body: request.body,\n        formData: request.formData,\n        keepAlive: !!request.disableKeepAlive,\n        onDownloadProgress: request.onDownloadProgress,\n        onUploadProgress: request.onUploadProgress,\n        proxySettings: request.proxySettings,\n        streamResponseStatusCodes: request.streamResponseStatusCodes,\n        agent: request.agent,\n        clone() {\n            throw new Error(\"Cannot clone a non-proxied WebResourceLike\");\n        },\n        prepare() {\n            throw new Error(\"WebResourceLike.prepare() is not supported by @azure/core-http-compat\");\n        },\n        validateRequestProperties() {\n            /** do nothing */\n        },\n    };\n    if (options === null || options === void 0 ? void 0 : options.createProxy) {\n        return new Proxy(webResource, {\n            get(target, prop, receiver) {\n                if (prop === originalRequestSymbol) {\n                    return request;\n                }\n                else if (prop === \"clone\") {\n                    return () => {\n                        return toWebResourceLike(toPipelineRequest(webResource, { originalRequest }), {\n                            createProxy: true,\n                            originalRequest,\n                        });\n                    };\n                }\n                return Reflect.get(target, prop, receiver);\n            },\n            set(target, prop, value, receiver) {\n                if (prop === \"keepAlive\") {\n                    request.disableKeepAlive = !value;\n                }\n                const passThroughProps = [\n                    \"url\",\n                    \"method\",\n                    \"withCredentials\",\n                    \"timeout\",\n                    \"requestId\",\n                    \"abortSignal\",\n                    \"body\",\n                    \"formData\",\n                    \"onDownloadProgress\",\n                    \"onUploadProgress\",\n                    \"proxySettings\",\n                    \"streamResponseStatusCodes\",\n                    \"agent\",\n                ];\n                if (typeof prop === \"string\" && passThroughProps.includes(prop)) {\n                    request[prop] = value;\n                }\n                return Reflect.set(target, prop, value, receiver);\n            },\n        });\n    }\n    else {\n        return webResource;\n    }\n}\n/**\n * Converts HttpHeaders from core-rest-pipeline to look like\n * HttpHeaders from core-http.\n * @param headers - HttpHeaders from core-rest-pipeline\n * @returns HttpHeaders as they looked in core-http\n */\nfunction toHttpHeadersLike(headers) {\n    return new HttpHeaders(headers.toJSON({ preserveCase: true }));\n}\n/**\n * A collection of HttpHeaders that can be sent with a HTTP request.\n */\nfunction getHeaderKey(headerName) {\n    return headerName.toLowerCase();\n}\n/**\n * A collection of HTTP header key/value pairs.\n */\nclass HttpHeaders {\n    constructor(rawHeaders) {\n        this._headersMap = {};\n        if (rawHeaders) {\n            for (const headerName in rawHeaders) {\n                this.set(headerName, rawHeaders[headerName]);\n            }\n        }\n    }\n    /**\n     * Set a header in this collection with the provided name and value. The name is\n     * case-insensitive.\n     * @param headerName - The name of the header to set. This value is case-insensitive.\n     * @param headerValue - The value of the header to set.\n     */\n    set(headerName, headerValue) {\n        this._headersMap[getHeaderKey(headerName)] = {\n            name: headerName,\n            value: headerValue.toString(),\n        };\n    }\n    /**\n     * Get the header value for the provided header name, or undefined if no header exists in this\n     * collection with the provided name.\n     * @param headerName - The name of the header.\n     */\n    get(headerName) {\n        const header = this._headersMap[getHeaderKey(headerName)];\n        return !header ? undefined : header.value;\n    }\n    /**\n     * Get whether or not this header collection contains a header entry for the provided header name.\n     */\n    contains(headerName) {\n        return !!this._headersMap[getHeaderKey(headerName)];\n    }\n    /**\n     * Remove the header with the provided headerName. Return whether or not the header existed and\n     * was removed.\n     * @param headerName - The name of the header to remove.\n     */\n    remove(headerName) {\n        const result = this.contains(headerName);\n        delete this._headersMap[getHeaderKey(headerName)];\n        return result;\n    }\n    /**\n     * Get the headers that are contained this collection as an object.\n     */\n    rawHeaders() {\n        return this.toJson({ preserveCase: true });\n    }\n    /**\n     * Get the headers that are contained in this collection as an array.\n     */\n    headersArray() {\n        const headers = [];\n        for (const headerKey in this._headersMap) {\n            headers.push(this._headersMap[headerKey]);\n        }\n        return headers;\n    }\n    /**\n     * Get the header names that are contained in this collection.\n     */\n    headerNames() {\n        const headerNames = [];\n        const headers = this.headersArray();\n        for (let i = 0; i < headers.length; ++i) {\n            headerNames.push(headers[i].name);\n        }\n        return headerNames;\n    }\n    /**\n     * Get the header values that are contained in this collection.\n     */\n    headerValues() {\n        const headerValues = [];\n        const headers = this.headersArray();\n        for (let i = 0; i < headers.length; ++i) {\n            headerValues.push(headers[i].value);\n        }\n        return headerValues;\n    }\n    /**\n     * Get the JSON object representation of this HTTP header collection.\n     */\n    toJson(options = {}) {\n        const result = {};\n        if (options.preserveCase) {\n            for (const headerKey in this._headersMap) {\n                const header = this._headersMap[headerKey];\n                result[header.name] = header.value;\n            }\n        }\n        else {\n            for (const headerKey in this._headersMap) {\n                const header = this._headersMap[headerKey];\n                result[getHeaderKey(header.name)] = header.value;\n            }\n        }\n        return result;\n    }\n    /**\n     * Get the string representation of this HTTP header collection.\n     */\n    toString() {\n        return JSON.stringify(this.toJson({ preserveCase: true }));\n    }\n    /**\n     * Create a deep clone/copy of this HttpHeaders collection.\n     */\n    clone() {\n        const resultPreservingCasing = {};\n        for (const headerKey in this._headersMap) {\n            const header = this._headersMap[headerKey];\n            resultPreservingCasing[header.name] = header.value;\n        }\n        return new HttpHeaders(resultPreservingCasing);\n    }\n}\n//# sourceMappingURL=util.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-http-compat/dist/esm/util.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_RETRY_POLICY_COUNT: () => (/* binding */ DEFAULT_RETRY_POLICY_COUNT),\n/* harmony export */   SDK_VERSION: () => (/* binding */ SDK_VERSION)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nconst SDK_VERSION = \"1.19.1\";\nconst DEFAULT_RETRY_POLICY_COUNT = 3;\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ087QUFDQTtBQUNQIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGhlbGxvLXZvaWNlXFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1yZXN0LXBpcGVsaW5lXFxkaXN0XFxlc21cXGNvbnN0YW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCBjb25zdCBTREtfVkVSU0lPTiA9IFwiMS4xOS4xXCI7XG5leHBvcnQgY29uc3QgREVGQVVMVF9SRVRSWV9QT0xJQ1lfQ09VTlQgPSAzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/createPipelineFromOptions.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/createPipelineFromOptions.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPipelineFromOptions: () => (/* binding */ createPipelineFromOptions)\n/* harmony export */ });\n/* harmony import */ var _policies_logPolicy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./policies/logPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/logPolicy.js\");\n/* harmony import */ var _pipeline_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pipeline.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/pipeline.js\");\n/* harmony import */ var _policies_redirectPolicy_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./policies/redirectPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/redirectPolicy.js\");\n/* harmony import */ var _policies_userAgentPolicy_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./policies/userAgentPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/userAgentPolicy.js\");\n/* harmony import */ var _policies_multipartPolicy_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./policies/multipartPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/multipartPolicy.js\");\n/* harmony import */ var _policies_decompressResponsePolicy_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./policies/decompressResponsePolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/decompressResponsePolicy.js\");\n/* harmony import */ var _policies_defaultRetryPolicy_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./policies/defaultRetryPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/defaultRetryPolicy.js\");\n/* harmony import */ var _policies_formDataPolicy_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./policies/formDataPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/formDataPolicy.js\");\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @azure/core-util */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _policies_proxyPolicy_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./policies/proxyPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/proxyPolicy.js\");\n/* harmony import */ var _policies_setClientRequestIdPolicy_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./policies/setClientRequestIdPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/setClientRequestIdPolicy.js\");\n/* harmony import */ var _policies_agentPolicy_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./policies/agentPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/agentPolicy.js\");\n/* harmony import */ var _policies_tlsPolicy_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./policies/tlsPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tlsPolicy.js\");\n/* harmony import */ var _policies_tracingPolicy_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./policies/tracingPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tracingPolicy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Create a new pipeline with a default set of customizable policies.\n * @param options - Options to configure a custom pipeline.\n */\nfunction createPipelineFromOptions(options) {\n    var _a;\n    const pipeline = (0,_pipeline_js__WEBPACK_IMPORTED_MODULE_1__.createEmptyPipeline)();\n    if (_azure_core_util__WEBPACK_IMPORTED_MODULE_8__.isNodeLike) {\n        if (options.agent) {\n            pipeline.addPolicy((0,_policies_agentPolicy_js__WEBPACK_IMPORTED_MODULE_11__.agentPolicy)(options.agent));\n        }\n        if (options.tlsOptions) {\n            pipeline.addPolicy((0,_policies_tlsPolicy_js__WEBPACK_IMPORTED_MODULE_12__.tlsPolicy)(options.tlsOptions));\n        }\n        pipeline.addPolicy((0,_policies_proxyPolicy_js__WEBPACK_IMPORTED_MODULE_9__.proxyPolicy)(options.proxyOptions));\n        pipeline.addPolicy((0,_policies_decompressResponsePolicy_js__WEBPACK_IMPORTED_MODULE_5__.decompressResponsePolicy)());\n    }\n    pipeline.addPolicy((0,_policies_formDataPolicy_js__WEBPACK_IMPORTED_MODULE_7__.formDataPolicy)(), { beforePolicies: [_policies_multipartPolicy_js__WEBPACK_IMPORTED_MODULE_4__.multipartPolicyName] });\n    pipeline.addPolicy((0,_policies_userAgentPolicy_js__WEBPACK_IMPORTED_MODULE_3__.userAgentPolicy)(options.userAgentOptions));\n    pipeline.addPolicy((0,_policies_setClientRequestIdPolicy_js__WEBPACK_IMPORTED_MODULE_10__.setClientRequestIdPolicy)((_a = options.telemetryOptions) === null || _a === void 0 ? void 0 : _a.clientRequestIdHeaderName));\n    // The multipart policy is added after policies with no phase, so that\n    // policies can be added between it and formDataPolicy to modify\n    // properties (e.g., making the boundary constant in recorded tests).\n    pipeline.addPolicy((0,_policies_multipartPolicy_js__WEBPACK_IMPORTED_MODULE_4__.multipartPolicy)(), { afterPhase: \"Deserialize\" });\n    pipeline.addPolicy((0,_policies_defaultRetryPolicy_js__WEBPACK_IMPORTED_MODULE_6__.defaultRetryPolicy)(options.retryOptions), { phase: \"Retry\" });\n    pipeline.addPolicy((0,_policies_tracingPolicy_js__WEBPACK_IMPORTED_MODULE_13__.tracingPolicy)(Object.assign(Object.assign({}, options.userAgentOptions), options.loggingOptions)), {\n        afterPhase: \"Retry\",\n    });\n    if (_azure_core_util__WEBPACK_IMPORTED_MODULE_8__.isNodeLike) {\n        // Both XHR and Fetch expect to handle redirects automatically,\n        // so only include this policy when we're in Node.\n        pipeline.addPolicy((0,_policies_redirectPolicy_js__WEBPACK_IMPORTED_MODULE_2__.redirectPolicy)(options.redirectOptions), { afterPhase: \"Retry\" });\n    }\n    pipeline.addPolicy((0,_policies_logPolicy_js__WEBPACK_IMPORTED_MODULE_0__.logPolicy)(options.loggingOptions), { afterPhase: \"Sign\" });\n    return pipeline;\n}\n//# sourceMappingURL=createPipelineFromOptions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9jcmVhdGVQaXBlbGluZUZyb21PcHRpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDb0Q7QUFDQTtBQUNVO0FBQ0U7QUFDcUI7QUFDSDtBQUNaO0FBQ1I7QUFDaEI7QUFDVTtBQUMwQjtBQUMxQjtBQUNKO0FBQ1E7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EscUJBQXFCLGlFQUFtQjtBQUN4QyxRQUFRLHdEQUFVO0FBQ2xCO0FBQ0EsK0JBQStCLHNFQUFXO0FBQzFDO0FBQ0E7QUFDQSwrQkFBK0Isa0VBQVM7QUFDeEM7QUFDQSwyQkFBMkIscUVBQVc7QUFDdEMsMkJBQTJCLCtGQUF3QjtBQUNuRDtBQUNBLHVCQUF1QiwyRUFBYyxNQUFNLGlCQUFpQiw2RUFBbUIsR0FBRztBQUNsRix1QkFBdUIsNkVBQWU7QUFDdEMsdUJBQXVCLGdHQUF3QjtBQUMvQztBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsNkVBQWUsTUFBTSwyQkFBMkI7QUFDdkUsdUJBQXVCLG1GQUFrQiwwQkFBMEIsZ0JBQWdCO0FBQ25GLHVCQUF1QiwwRUFBYSwrQkFBK0I7QUFDbkU7QUFDQSxLQUFLO0FBQ0wsUUFBUSx3REFBVTtBQUNsQjtBQUNBO0FBQ0EsMkJBQTJCLDJFQUFjLDZCQUE2QixxQkFBcUI7QUFDM0Y7QUFDQSx1QkFBdUIsaUVBQVMsNEJBQTRCLG9CQUFvQjtBQUNoRjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXJlc3QtcGlwZWxpbmVcXGRpc3RcXGVzbVxcY3JlYXRlUGlwZWxpbmVGcm9tT3B0aW9ucy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGxvZ1BvbGljeSB9IGZyb20gXCIuL3BvbGljaWVzL2xvZ1BvbGljeS5qc1wiO1xuaW1wb3J0IHsgY3JlYXRlRW1wdHlQaXBlbGluZSB9IGZyb20gXCIuL3BpcGVsaW5lLmpzXCI7XG5pbXBvcnQgeyByZWRpcmVjdFBvbGljeSB9IGZyb20gXCIuL3BvbGljaWVzL3JlZGlyZWN0UG9saWN5LmpzXCI7XG5pbXBvcnQgeyB1c2VyQWdlbnRQb2xpY3kgfSBmcm9tIFwiLi9wb2xpY2llcy91c2VyQWdlbnRQb2xpY3kuanNcIjtcbmltcG9ydCB7IG11bHRpcGFydFBvbGljeSwgbXVsdGlwYXJ0UG9saWN5TmFtZSB9IGZyb20gXCIuL3BvbGljaWVzL211bHRpcGFydFBvbGljeS5qc1wiO1xuaW1wb3J0IHsgZGVjb21wcmVzc1Jlc3BvbnNlUG9saWN5IH0gZnJvbSBcIi4vcG9saWNpZXMvZGVjb21wcmVzc1Jlc3BvbnNlUG9saWN5LmpzXCI7XG5pbXBvcnQgeyBkZWZhdWx0UmV0cnlQb2xpY3kgfSBmcm9tIFwiLi9wb2xpY2llcy9kZWZhdWx0UmV0cnlQb2xpY3kuanNcIjtcbmltcG9ydCB7IGZvcm1EYXRhUG9saWN5IH0gZnJvbSBcIi4vcG9saWNpZXMvZm9ybURhdGFQb2xpY3kuanNcIjtcbmltcG9ydCB7IGlzTm9kZUxpa2UgfSBmcm9tIFwiQGF6dXJlL2NvcmUtdXRpbFwiO1xuaW1wb3J0IHsgcHJveHlQb2xpY3kgfSBmcm9tIFwiLi9wb2xpY2llcy9wcm94eVBvbGljeS5qc1wiO1xuaW1wb3J0IHsgc2V0Q2xpZW50UmVxdWVzdElkUG9saWN5IH0gZnJvbSBcIi4vcG9saWNpZXMvc2V0Q2xpZW50UmVxdWVzdElkUG9saWN5LmpzXCI7XG5pbXBvcnQgeyBhZ2VudFBvbGljeSB9IGZyb20gXCIuL3BvbGljaWVzL2FnZW50UG9saWN5LmpzXCI7XG5pbXBvcnQgeyB0bHNQb2xpY3kgfSBmcm9tIFwiLi9wb2xpY2llcy90bHNQb2xpY3kuanNcIjtcbmltcG9ydCB7IHRyYWNpbmdQb2xpY3kgfSBmcm9tIFwiLi9wb2xpY2llcy90cmFjaW5nUG9saWN5LmpzXCI7XG4vKipcbiAqIENyZWF0ZSBhIG5ldyBwaXBlbGluZSB3aXRoIGEgZGVmYXVsdCBzZXQgb2YgY3VzdG9taXphYmxlIHBvbGljaWVzLlxuICogQHBhcmFtIG9wdGlvbnMgLSBPcHRpb25zIHRvIGNvbmZpZ3VyZSBhIGN1c3RvbSBwaXBlbGluZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVBpcGVsaW5lRnJvbU9wdGlvbnMob3B0aW9ucykge1xuICAgIHZhciBfYTtcbiAgICBjb25zdCBwaXBlbGluZSA9IGNyZWF0ZUVtcHR5UGlwZWxpbmUoKTtcbiAgICBpZiAoaXNOb2RlTGlrZSkge1xuICAgICAgICBpZiAob3B0aW9ucy5hZ2VudCkge1xuICAgICAgICAgICAgcGlwZWxpbmUuYWRkUG9saWN5KGFnZW50UG9saWN5KG9wdGlvbnMuYWdlbnQpKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAob3B0aW9ucy50bHNPcHRpb25zKSB7XG4gICAgICAgICAgICBwaXBlbGluZS5hZGRQb2xpY3kodGxzUG9saWN5KG9wdGlvbnMudGxzT3B0aW9ucykpO1xuICAgICAgICB9XG4gICAgICAgIHBpcGVsaW5lLmFkZFBvbGljeShwcm94eVBvbGljeShvcHRpb25zLnByb3h5T3B0aW9ucykpO1xuICAgICAgICBwaXBlbGluZS5hZGRQb2xpY3koZGVjb21wcmVzc1Jlc3BvbnNlUG9saWN5KCkpO1xuICAgIH1cbiAgICBwaXBlbGluZS5hZGRQb2xpY3koZm9ybURhdGFQb2xpY3koKSwgeyBiZWZvcmVQb2xpY2llczogW211bHRpcGFydFBvbGljeU5hbWVdIH0pO1xuICAgIHBpcGVsaW5lLmFkZFBvbGljeSh1c2VyQWdlbnRQb2xpY3kob3B0aW9ucy51c2VyQWdlbnRPcHRpb25zKSk7XG4gICAgcGlwZWxpbmUuYWRkUG9saWN5KHNldENsaWVudFJlcXVlc3RJZFBvbGljeSgoX2EgPSBvcHRpb25zLnRlbGVtZXRyeU9wdGlvbnMpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jbGllbnRSZXF1ZXN0SWRIZWFkZXJOYW1lKSk7XG4gICAgLy8gVGhlIG11bHRpcGFydCBwb2xpY3kgaXMgYWRkZWQgYWZ0ZXIgcG9saWNpZXMgd2l0aCBubyBwaGFzZSwgc28gdGhhdFxuICAgIC8vIHBvbGljaWVzIGNhbiBiZSBhZGRlZCBiZXR3ZWVuIGl0IGFuZCBmb3JtRGF0YVBvbGljeSB0byBtb2RpZnlcbiAgICAvLyBwcm9wZXJ0aWVzIChlLmcuLCBtYWtpbmcgdGhlIGJvdW5kYXJ5IGNvbnN0YW50IGluIHJlY29yZGVkIHRlc3RzKS5cbiAgICBwaXBlbGluZS5hZGRQb2xpY3kobXVsdGlwYXJ0UG9saWN5KCksIHsgYWZ0ZXJQaGFzZTogXCJEZXNlcmlhbGl6ZVwiIH0pO1xuICAgIHBpcGVsaW5lLmFkZFBvbGljeShkZWZhdWx0UmV0cnlQb2xpY3kob3B0aW9ucy5yZXRyeU9wdGlvbnMpLCB7IHBoYXNlOiBcIlJldHJ5XCIgfSk7XG4gICAgcGlwZWxpbmUuYWRkUG9saWN5KHRyYWNpbmdQb2xpY3koT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBvcHRpb25zLnVzZXJBZ2VudE9wdGlvbnMpLCBvcHRpb25zLmxvZ2dpbmdPcHRpb25zKSksIHtcbiAgICAgICAgYWZ0ZXJQaGFzZTogXCJSZXRyeVwiLFxuICAgIH0pO1xuICAgIGlmIChpc05vZGVMaWtlKSB7XG4gICAgICAgIC8vIEJvdGggWEhSIGFuZCBGZXRjaCBleHBlY3QgdG8gaGFuZGxlIHJlZGlyZWN0cyBhdXRvbWF0aWNhbGx5LFxuICAgICAgICAvLyBzbyBvbmx5IGluY2x1ZGUgdGhpcyBwb2xpY3kgd2hlbiB3ZSdyZSBpbiBOb2RlLlxuICAgICAgICBwaXBlbGluZS5hZGRQb2xpY3kocmVkaXJlY3RQb2xpY3kob3B0aW9ucy5yZWRpcmVjdE9wdGlvbnMpLCB7IGFmdGVyUGhhc2U6IFwiUmV0cnlcIiB9KTtcbiAgICB9XG4gICAgcGlwZWxpbmUuYWRkUG9saWN5KGxvZ1BvbGljeShvcHRpb25zLmxvZ2dpbmdPcHRpb25zKSwgeyBhZnRlclBoYXNlOiBcIlNpZ25cIiB9KTtcbiAgICByZXR1cm4gcGlwZWxpbmU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcmVhdGVQaXBlbGluZUZyb21PcHRpb25zLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/createPipelineFromOptions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/defaultHttpClient.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/defaultHttpClient.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDefaultHttpClient: () => (/* binding */ createDefaultHttpClient)\n/* harmony export */ });\n/* harmony import */ var _nodeHttpClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./nodeHttpClient.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/nodeHttpClient.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Create the correct HttpClient for the current environment.\n */\nfunction createDefaultHttpClient() {\n    return (0,_nodeHttpClient_js__WEBPACK_IMPORTED_MODULE_0__.createNodeHttpClient)();\n}\n//# sourceMappingURL=defaultHttpClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9kZWZhdWx0SHR0cENsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDMkQ7QUFDM0Q7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLHdFQUFvQjtBQUMvQjtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGhlbGxvLXZvaWNlXFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1yZXN0LXBpcGVsaW5lXFxkaXN0XFxlc21cXGRlZmF1bHRIdHRwQ2xpZW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgY3JlYXRlTm9kZUh0dHBDbGllbnQgfSBmcm9tIFwiLi9ub2RlSHR0cENsaWVudC5qc1wiO1xuLyoqXG4gKiBDcmVhdGUgdGhlIGNvcnJlY3QgSHR0cENsaWVudCBmb3IgdGhlIGN1cnJlbnQgZW52aXJvbm1lbnQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVEZWZhdWx0SHR0cENsaWVudCgpIHtcbiAgICByZXR1cm4gY3JlYXRlTm9kZUh0dHBDbGllbnQoKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlZmF1bHRIdHRwQ2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/defaultHttpClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/httpHeaders.js":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/httpHeaders.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createHttpHeaders: () => (/* binding */ createHttpHeaders)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nfunction normalizeName(name) {\n    return name.toLowerCase();\n}\nfunction* headerIterator(map) {\n    for (const entry of map.values()) {\n        yield [entry.name, entry.value];\n    }\n}\nclass HttpHeadersImpl {\n    constructor(rawHeaders) {\n        this._headersMap = new Map();\n        if (rawHeaders) {\n            for (const headerName of Object.keys(rawHeaders)) {\n                this.set(headerName, rawHeaders[headerName]);\n            }\n        }\n    }\n    /**\n     * Set a header in this collection with the provided name and value. The name is\n     * case-insensitive.\n     * @param name - The name of the header to set. This value is case-insensitive.\n     * @param value - The value of the header to set.\n     */\n    set(name, value) {\n        this._headersMap.set(normalizeName(name), { name, value: String(value).trim() });\n    }\n    /**\n     * Get the header value for the provided header name, or undefined if no header exists in this\n     * collection with the provided name.\n     * @param name - The name of the header. This value is case-insensitive.\n     */\n    get(name) {\n        var _a;\n        return (_a = this._headersMap.get(normalizeName(name))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    /**\n     * Get whether or not this header collection contains a header entry for the provided header name.\n     * @param name - The name of the header to set. This value is case-insensitive.\n     */\n    has(name) {\n        return this._headersMap.has(normalizeName(name));\n    }\n    /**\n     * Remove the header with the provided headerName.\n     * @param name - The name of the header to remove.\n     */\n    delete(name) {\n        this._headersMap.delete(normalizeName(name));\n    }\n    /**\n     * Get the JSON object representation of this HTTP header collection.\n     */\n    toJSON(options = {}) {\n        const result = {};\n        if (options.preserveCase) {\n            for (const entry of this._headersMap.values()) {\n                result[entry.name] = entry.value;\n            }\n        }\n        else {\n            for (const [normalizedName, entry] of this._headersMap) {\n                result[normalizedName] = entry.value;\n            }\n        }\n        return result;\n    }\n    /**\n     * Get the string representation of this HTTP header collection.\n     */\n    toString() {\n        return JSON.stringify(this.toJSON({ preserveCase: true }));\n    }\n    /**\n     * Iterate over tuples of header [name, value] pairs.\n     */\n    [Symbol.iterator]() {\n        return headerIterator(this._headersMap);\n    }\n}\n/**\n * Creates an object that satisfies the `HttpHeaders` interface.\n * @param rawHeaders - A simple object representing initial headers\n */\nfunction createHttpHeaders(rawHeaders) {\n    return new HttpHeadersImpl(rawHeaders);\n}\n//# sourceMappingURL=httpHeaders.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9odHRwSGVhZGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxtQ0FBbUM7QUFDdkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsb0JBQW9CO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGhlbGxvLXZvaWNlXFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1yZXN0LXBpcGVsaW5lXFxkaXN0XFxlc21cXGh0dHBIZWFkZXJzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuZnVuY3Rpb24gbm9ybWFsaXplTmFtZShuYW1lKSB7XG4gICAgcmV0dXJuIG5hbWUudG9Mb3dlckNhc2UoKTtcbn1cbmZ1bmN0aW9uKiBoZWFkZXJJdGVyYXRvcihtYXApIHtcbiAgICBmb3IgKGNvbnN0IGVudHJ5IG9mIG1hcC52YWx1ZXMoKSkge1xuICAgICAgICB5aWVsZCBbZW50cnkubmFtZSwgZW50cnkudmFsdWVdO1xuICAgIH1cbn1cbmNsYXNzIEh0dHBIZWFkZXJzSW1wbCB7XG4gICAgY29uc3RydWN0b3IocmF3SGVhZGVycykge1xuICAgICAgICB0aGlzLl9oZWFkZXJzTWFwID0gbmV3IE1hcCgpO1xuICAgICAgICBpZiAocmF3SGVhZGVycykge1xuICAgICAgICAgICAgZm9yIChjb25zdCBoZWFkZXJOYW1lIG9mIE9iamVjdC5rZXlzKHJhd0hlYWRlcnMpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXQoaGVhZGVyTmFtZSwgcmF3SGVhZGVyc1toZWFkZXJOYW1lXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogU2V0IGEgaGVhZGVyIGluIHRoaXMgY29sbGVjdGlvbiB3aXRoIHRoZSBwcm92aWRlZCBuYW1lIGFuZCB2YWx1ZS4gVGhlIG5hbWUgaXNcbiAgICAgKiBjYXNlLWluc2Vuc2l0aXZlLlxuICAgICAqIEBwYXJhbSBuYW1lIC0gVGhlIG5hbWUgb2YgdGhlIGhlYWRlciB0byBzZXQuIFRoaXMgdmFsdWUgaXMgY2FzZS1pbnNlbnNpdGl2ZS5cbiAgICAgKiBAcGFyYW0gdmFsdWUgLSBUaGUgdmFsdWUgb2YgdGhlIGhlYWRlciB0byBzZXQuXG4gICAgICovXG4gICAgc2V0KG5hbWUsIHZhbHVlKSB7XG4gICAgICAgIHRoaXMuX2hlYWRlcnNNYXAuc2V0KG5vcm1hbGl6ZU5hbWUobmFtZSksIHsgbmFtZSwgdmFsdWU6IFN0cmluZyh2YWx1ZSkudHJpbSgpIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIGhlYWRlciB2YWx1ZSBmb3IgdGhlIHByb3ZpZGVkIGhlYWRlciBuYW1lLCBvciB1bmRlZmluZWQgaWYgbm8gaGVhZGVyIGV4aXN0cyBpbiB0aGlzXG4gICAgICogY29sbGVjdGlvbiB3aXRoIHRoZSBwcm92aWRlZCBuYW1lLlxuICAgICAqIEBwYXJhbSBuYW1lIC0gVGhlIG5hbWUgb2YgdGhlIGhlYWRlci4gVGhpcyB2YWx1ZSBpcyBjYXNlLWluc2Vuc2l0aXZlLlxuICAgICAqL1xuICAgIGdldChuYW1lKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgcmV0dXJuIChfYSA9IHRoaXMuX2hlYWRlcnNNYXAuZ2V0KG5vcm1hbGl6ZU5hbWUobmFtZSkpKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EudmFsdWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCB3aGV0aGVyIG9yIG5vdCB0aGlzIGhlYWRlciBjb2xsZWN0aW9uIGNvbnRhaW5zIGEgaGVhZGVyIGVudHJ5IGZvciB0aGUgcHJvdmlkZWQgaGVhZGVyIG5hbWUuXG4gICAgICogQHBhcmFtIG5hbWUgLSBUaGUgbmFtZSBvZiB0aGUgaGVhZGVyIHRvIHNldC4gVGhpcyB2YWx1ZSBpcyBjYXNlLWluc2Vuc2l0aXZlLlxuICAgICAqL1xuICAgIGhhcyhuYW1lKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9oZWFkZXJzTWFwLmhhcyhub3JtYWxpemVOYW1lKG5hbWUpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVtb3ZlIHRoZSBoZWFkZXIgd2l0aCB0aGUgcHJvdmlkZWQgaGVhZGVyTmFtZS5cbiAgICAgKiBAcGFyYW0gbmFtZSAtIFRoZSBuYW1lIG9mIHRoZSBoZWFkZXIgdG8gcmVtb3ZlLlxuICAgICAqL1xuICAgIGRlbGV0ZShuYW1lKSB7XG4gICAgICAgIHRoaXMuX2hlYWRlcnNNYXAuZGVsZXRlKG5vcm1hbGl6ZU5hbWUobmFtZSkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIEpTT04gb2JqZWN0IHJlcHJlc2VudGF0aW9uIG9mIHRoaXMgSFRUUCBoZWFkZXIgY29sbGVjdGlvbi5cbiAgICAgKi9cbiAgICB0b0pTT04ob3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHt9O1xuICAgICAgICBpZiAob3B0aW9ucy5wcmVzZXJ2ZUNhc2UpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgZW50cnkgb2YgdGhpcy5faGVhZGVyc01hcC52YWx1ZXMoKSkge1xuICAgICAgICAgICAgICAgIHJlc3VsdFtlbnRyeS5uYW1lXSA9IGVudHJ5LnZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZm9yIChjb25zdCBbbm9ybWFsaXplZE5hbWUsIGVudHJ5XSBvZiB0aGlzLl9oZWFkZXJzTWFwKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0W25vcm1hbGl6ZWROYW1lXSA9IGVudHJ5LnZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoaXMgSFRUUCBoZWFkZXIgY29sbGVjdGlvbi5cbiAgICAgKi9cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHRoaXMudG9KU09OKHsgcHJlc2VydmVDYXNlOiB0cnVlIH0pKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogSXRlcmF0ZSBvdmVyIHR1cGxlcyBvZiBoZWFkZXIgW25hbWUsIHZhbHVlXSBwYWlycy5cbiAgICAgKi9cbiAgICBbU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICAgICAgcmV0dXJuIGhlYWRlckl0ZXJhdG9yKHRoaXMuX2hlYWRlcnNNYXApO1xuICAgIH1cbn1cbi8qKlxuICogQ3JlYXRlcyBhbiBvYmplY3QgdGhhdCBzYXRpc2ZpZXMgdGhlIGBIdHRwSGVhZGVyc2AgaW50ZXJmYWNlLlxuICogQHBhcmFtIHJhd0hlYWRlcnMgLSBBIHNpbXBsZSBvYmplY3QgcmVwcmVzZW50aW5nIGluaXRpYWwgaGVhZGVyc1xuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlSHR0cEhlYWRlcnMocmF3SGVhZGVycykge1xuICAgIHJldHVybiBuZXcgSHR0cEhlYWRlcnNJbXBsKHJhd0hlYWRlcnMpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aHR0cEhlYWRlcnMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/httpHeaders.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RestError: () => (/* reexport safe */ _restError_js__WEBPACK_IMPORTED_MODULE_5__.RestError),\n/* harmony export */   agentPolicy: () => (/* reexport safe */ _policies_agentPolicy_js__WEBPACK_IMPORTED_MODULE_24__.agentPolicy),\n/* harmony export */   agentPolicyName: () => (/* reexport safe */ _policies_agentPolicy_js__WEBPACK_IMPORTED_MODULE_24__.agentPolicyName),\n/* harmony export */   auxiliaryAuthenticationHeaderPolicy: () => (/* reexport safe */ _policies_auxiliaryAuthenticationHeaderPolicy_js__WEBPACK_IMPORTED_MODULE_23__.auxiliaryAuthenticationHeaderPolicy),\n/* harmony export */   auxiliaryAuthenticationHeaderPolicyName: () => (/* reexport safe */ _policies_auxiliaryAuthenticationHeaderPolicy_js__WEBPACK_IMPORTED_MODULE_23__.auxiliaryAuthenticationHeaderPolicyName),\n/* harmony export */   bearerTokenAuthenticationPolicy: () => (/* reexport safe */ _policies_bearerTokenAuthenticationPolicy_js__WEBPACK_IMPORTED_MODULE_21__.bearerTokenAuthenticationPolicy),\n/* harmony export */   bearerTokenAuthenticationPolicyName: () => (/* reexport safe */ _policies_bearerTokenAuthenticationPolicy_js__WEBPACK_IMPORTED_MODULE_21__.bearerTokenAuthenticationPolicyName),\n/* harmony export */   createDefaultHttpClient: () => (/* reexport safe */ _defaultHttpClient_js__WEBPACK_IMPORTED_MODULE_2__.createDefaultHttpClient),\n/* harmony export */   createEmptyPipeline: () => (/* reexport safe */ _pipeline_js__WEBPACK_IMPORTED_MODULE_0__.createEmptyPipeline),\n/* harmony export */   createFile: () => (/* reexport safe */ _util_file_js__WEBPACK_IMPORTED_MODULE_25__.createFile),\n/* harmony export */   createFileFromStream: () => (/* reexport safe */ _util_file_js__WEBPACK_IMPORTED_MODULE_25__.createFileFromStream),\n/* harmony export */   createHttpHeaders: () => (/* reexport safe */ _httpHeaders_js__WEBPACK_IMPORTED_MODULE_3__.createHttpHeaders),\n/* harmony export */   createPipelineFromOptions: () => (/* reexport safe */ _createPipelineFromOptions_js__WEBPACK_IMPORTED_MODULE_1__.createPipelineFromOptions),\n/* harmony export */   createPipelineRequest: () => (/* reexport safe */ _pipelineRequest_js__WEBPACK_IMPORTED_MODULE_4__.createPipelineRequest),\n/* harmony export */   decompressResponsePolicy: () => (/* reexport safe */ _policies_decompressResponsePolicy_js__WEBPACK_IMPORTED_MODULE_6__.decompressResponsePolicy),\n/* harmony export */   decompressResponsePolicyName: () => (/* reexport safe */ _policies_decompressResponsePolicy_js__WEBPACK_IMPORTED_MODULE_6__.decompressResponsePolicyName),\n/* harmony export */   defaultRetryPolicy: () => (/* reexport safe */ _policies_defaultRetryPolicy_js__WEBPACK_IMPORTED_MODULE_17__.defaultRetryPolicy),\n/* harmony export */   exponentialRetryPolicy: () => (/* reexport safe */ _policies_exponentialRetryPolicy_js__WEBPACK_IMPORTED_MODULE_7__.exponentialRetryPolicy),\n/* harmony export */   exponentialRetryPolicyName: () => (/* reexport safe */ _policies_exponentialRetryPolicy_js__WEBPACK_IMPORTED_MODULE_7__.exponentialRetryPolicyName),\n/* harmony export */   formDataPolicy: () => (/* reexport safe */ _policies_formDataPolicy_js__WEBPACK_IMPORTED_MODULE_20__.formDataPolicy),\n/* harmony export */   formDataPolicyName: () => (/* reexport safe */ _policies_formDataPolicy_js__WEBPACK_IMPORTED_MODULE_20__.formDataPolicyName),\n/* harmony export */   getDefaultProxySettings: () => (/* reexport safe */ _policies_proxyPolicy_js__WEBPACK_IMPORTED_MODULE_11__.getDefaultProxySettings),\n/* harmony export */   isRestError: () => (/* reexport safe */ _restError_js__WEBPACK_IMPORTED_MODULE_5__.isRestError),\n/* harmony export */   logPolicy: () => (/* reexport safe */ _policies_logPolicy_js__WEBPACK_IMPORTED_MODULE_9__.logPolicy),\n/* harmony export */   logPolicyName: () => (/* reexport safe */ _policies_logPolicy_js__WEBPACK_IMPORTED_MODULE_9__.logPolicyName),\n/* harmony export */   multipartPolicy: () => (/* reexport safe */ _policies_multipartPolicy_js__WEBPACK_IMPORTED_MODULE_10__.multipartPolicy),\n/* harmony export */   multipartPolicyName: () => (/* reexport safe */ _policies_multipartPolicy_js__WEBPACK_IMPORTED_MODULE_10__.multipartPolicyName),\n/* harmony export */   ndJsonPolicy: () => (/* reexport safe */ _policies_ndJsonPolicy_js__WEBPACK_IMPORTED_MODULE_22__.ndJsonPolicy),\n/* harmony export */   ndJsonPolicyName: () => (/* reexport safe */ _policies_ndJsonPolicy_js__WEBPACK_IMPORTED_MODULE_22__.ndJsonPolicyName),\n/* harmony export */   proxyPolicy: () => (/* reexport safe */ _policies_proxyPolicy_js__WEBPACK_IMPORTED_MODULE_11__.proxyPolicy),\n/* harmony export */   proxyPolicyName: () => (/* reexport safe */ _policies_proxyPolicy_js__WEBPACK_IMPORTED_MODULE_11__.proxyPolicyName),\n/* harmony export */   redirectPolicy: () => (/* reexport safe */ _policies_redirectPolicy_js__WEBPACK_IMPORTED_MODULE_12__.redirectPolicy),\n/* harmony export */   redirectPolicyName: () => (/* reexport safe */ _policies_redirectPolicy_js__WEBPACK_IMPORTED_MODULE_12__.redirectPolicyName),\n/* harmony export */   retryPolicy: () => (/* reexport safe */ _policies_retryPolicy_js__WEBPACK_IMPORTED_MODULE_15__.retryPolicy),\n/* harmony export */   setClientRequestIdPolicy: () => (/* reexport safe */ _policies_setClientRequestIdPolicy_js__WEBPACK_IMPORTED_MODULE_8__.setClientRequestIdPolicy),\n/* harmony export */   setClientRequestIdPolicyName: () => (/* reexport safe */ _policies_setClientRequestIdPolicy_js__WEBPACK_IMPORTED_MODULE_8__.setClientRequestIdPolicyName),\n/* harmony export */   systemErrorRetryPolicy: () => (/* reexport safe */ _policies_systemErrorRetryPolicy_js__WEBPACK_IMPORTED_MODULE_13__.systemErrorRetryPolicy),\n/* harmony export */   systemErrorRetryPolicyName: () => (/* reexport safe */ _policies_systemErrorRetryPolicy_js__WEBPACK_IMPORTED_MODULE_13__.systemErrorRetryPolicyName),\n/* harmony export */   throttlingRetryPolicy: () => (/* reexport safe */ _policies_throttlingRetryPolicy_js__WEBPACK_IMPORTED_MODULE_14__.throttlingRetryPolicy),\n/* harmony export */   throttlingRetryPolicyName: () => (/* reexport safe */ _policies_throttlingRetryPolicy_js__WEBPACK_IMPORTED_MODULE_14__.throttlingRetryPolicyName),\n/* harmony export */   tlsPolicy: () => (/* reexport safe */ _policies_tlsPolicy_js__WEBPACK_IMPORTED_MODULE_19__.tlsPolicy),\n/* harmony export */   tlsPolicyName: () => (/* reexport safe */ _policies_tlsPolicy_js__WEBPACK_IMPORTED_MODULE_19__.tlsPolicyName),\n/* harmony export */   tracingPolicy: () => (/* reexport safe */ _policies_tracingPolicy_js__WEBPACK_IMPORTED_MODULE_16__.tracingPolicy),\n/* harmony export */   tracingPolicyName: () => (/* reexport safe */ _policies_tracingPolicy_js__WEBPACK_IMPORTED_MODULE_16__.tracingPolicyName),\n/* harmony export */   userAgentPolicy: () => (/* reexport safe */ _policies_userAgentPolicy_js__WEBPACK_IMPORTED_MODULE_18__.userAgentPolicy),\n/* harmony export */   userAgentPolicyName: () => (/* reexport safe */ _policies_userAgentPolicy_js__WEBPACK_IMPORTED_MODULE_18__.userAgentPolicyName)\n/* harmony export */ });\n/* harmony import */ var _pipeline_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pipeline.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/pipeline.js\");\n/* harmony import */ var _createPipelineFromOptions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./createPipelineFromOptions.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/createPipelineFromOptions.js\");\n/* harmony import */ var _defaultHttpClient_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./defaultHttpClient.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/defaultHttpClient.js\");\n/* harmony import */ var _httpHeaders_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./httpHeaders.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/httpHeaders.js\");\n/* harmony import */ var _pipelineRequest_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pipelineRequest.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/pipelineRequest.js\");\n/* harmony import */ var _restError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./restError.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/restError.js\");\n/* harmony import */ var _policies_decompressResponsePolicy_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./policies/decompressResponsePolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/decompressResponsePolicy.js\");\n/* harmony import */ var _policies_exponentialRetryPolicy_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./policies/exponentialRetryPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/exponentialRetryPolicy.js\");\n/* harmony import */ var _policies_setClientRequestIdPolicy_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./policies/setClientRequestIdPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/setClientRequestIdPolicy.js\");\n/* harmony import */ var _policies_logPolicy_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./policies/logPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/logPolicy.js\");\n/* harmony import */ var _policies_multipartPolicy_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./policies/multipartPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/multipartPolicy.js\");\n/* harmony import */ var _policies_proxyPolicy_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./policies/proxyPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/proxyPolicy.js\");\n/* harmony import */ var _policies_redirectPolicy_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./policies/redirectPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/redirectPolicy.js\");\n/* harmony import */ var _policies_systemErrorRetryPolicy_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./policies/systemErrorRetryPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/systemErrorRetryPolicy.js\");\n/* harmony import */ var _policies_throttlingRetryPolicy_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./policies/throttlingRetryPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/throttlingRetryPolicy.js\");\n/* harmony import */ var _policies_retryPolicy_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./policies/retryPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/retryPolicy.js\");\n/* harmony import */ var _policies_tracingPolicy_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./policies/tracingPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tracingPolicy.js\");\n/* harmony import */ var _policies_defaultRetryPolicy_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./policies/defaultRetryPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/defaultRetryPolicy.js\");\n/* harmony import */ var _policies_userAgentPolicy_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./policies/userAgentPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/userAgentPolicy.js\");\n/* harmony import */ var _policies_tlsPolicy_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./policies/tlsPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tlsPolicy.js\");\n/* harmony import */ var _policies_formDataPolicy_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./policies/formDataPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/formDataPolicy.js\");\n/* harmony import */ var _policies_bearerTokenAuthenticationPolicy_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./policies/bearerTokenAuthenticationPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/bearerTokenAuthenticationPolicy.js\");\n/* harmony import */ var _policies_ndJsonPolicy_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./policies/ndJsonPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/ndJsonPolicy.js\");\n/* harmony import */ var _policies_auxiliaryAuthenticationHeaderPolicy_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./policies/auxiliaryAuthenticationHeaderPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/auxiliaryAuthenticationHeaderPolicy.js\");\n/* harmony import */ var _policies_agentPolicy_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./policies/agentPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/agentPolicy.js\");\n/* harmony import */ var _util_file_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./util/file.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/file.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ3FEO0FBQ3VCO0FBQ1g7QUFDWjtBQUNRO0FBQ0w7QUFDeUQ7QUFDTjtBQUNNO0FBQzlDO0FBQ2tCO0FBQ2E7QUFDZjtBQUN3QjtBQUNIO0FBQ2hEO0FBQ3dCO0FBQ1Q7QUFDZTtBQUNuQjtBQUNlO0FBQ29EO0FBQzFEO0FBQ3NFO0FBQ3pFO0FBQ047QUFDbkUiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXJlc3QtcGlwZWxpbmVcXGRpc3RcXGVzbVxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5leHBvcnQgeyBjcmVhdGVFbXB0eVBpcGVsaW5lLCB9IGZyb20gXCIuL3BpcGVsaW5lLmpzXCI7XG5leHBvcnQgeyBjcmVhdGVQaXBlbGluZUZyb21PcHRpb25zLCB9IGZyb20gXCIuL2NyZWF0ZVBpcGVsaW5lRnJvbU9wdGlvbnMuanNcIjtcbmV4cG9ydCB7IGNyZWF0ZURlZmF1bHRIdHRwQ2xpZW50IH0gZnJvbSBcIi4vZGVmYXVsdEh0dHBDbGllbnQuanNcIjtcbmV4cG9ydCB7IGNyZWF0ZUh0dHBIZWFkZXJzIH0gZnJvbSBcIi4vaHR0cEhlYWRlcnMuanNcIjtcbmV4cG9ydCB7IGNyZWF0ZVBpcGVsaW5lUmVxdWVzdCB9IGZyb20gXCIuL3BpcGVsaW5lUmVxdWVzdC5qc1wiO1xuZXhwb3J0IHsgUmVzdEVycm9yLCBpc1Jlc3RFcnJvciB9IGZyb20gXCIuL3Jlc3RFcnJvci5qc1wiO1xuZXhwb3J0IHsgZGVjb21wcmVzc1Jlc3BvbnNlUG9saWN5LCBkZWNvbXByZXNzUmVzcG9uc2VQb2xpY3lOYW1lLCB9IGZyb20gXCIuL3BvbGljaWVzL2RlY29tcHJlc3NSZXNwb25zZVBvbGljeS5qc1wiO1xuZXhwb3J0IHsgZXhwb25lbnRpYWxSZXRyeVBvbGljeSwgZXhwb25lbnRpYWxSZXRyeVBvbGljeU5hbWUsIH0gZnJvbSBcIi4vcG9saWNpZXMvZXhwb25lbnRpYWxSZXRyeVBvbGljeS5qc1wiO1xuZXhwb3J0IHsgc2V0Q2xpZW50UmVxdWVzdElkUG9saWN5LCBzZXRDbGllbnRSZXF1ZXN0SWRQb2xpY3lOYW1lLCB9IGZyb20gXCIuL3BvbGljaWVzL3NldENsaWVudFJlcXVlc3RJZFBvbGljeS5qc1wiO1xuZXhwb3J0IHsgbG9nUG9saWN5LCBsb2dQb2xpY3lOYW1lIH0gZnJvbSBcIi4vcG9saWNpZXMvbG9nUG9saWN5LmpzXCI7XG5leHBvcnQgeyBtdWx0aXBhcnRQb2xpY3ksIG11bHRpcGFydFBvbGljeU5hbWUgfSBmcm9tIFwiLi9wb2xpY2llcy9tdWx0aXBhcnRQb2xpY3kuanNcIjtcbmV4cG9ydCB7IHByb3h5UG9saWN5LCBwcm94eVBvbGljeU5hbWUsIGdldERlZmF1bHRQcm94eVNldHRpbmdzIH0gZnJvbSBcIi4vcG9saWNpZXMvcHJveHlQb2xpY3kuanNcIjtcbmV4cG9ydCB7IHJlZGlyZWN0UG9saWN5LCByZWRpcmVjdFBvbGljeU5hbWUsIH0gZnJvbSBcIi4vcG9saWNpZXMvcmVkaXJlY3RQb2xpY3kuanNcIjtcbmV4cG9ydCB7IHN5c3RlbUVycm9yUmV0cnlQb2xpY3ksIHN5c3RlbUVycm9yUmV0cnlQb2xpY3lOYW1lLCB9IGZyb20gXCIuL3BvbGljaWVzL3N5c3RlbUVycm9yUmV0cnlQb2xpY3kuanNcIjtcbmV4cG9ydCB7IHRocm90dGxpbmdSZXRyeVBvbGljeSwgdGhyb3R0bGluZ1JldHJ5UG9saWN5TmFtZSwgfSBmcm9tIFwiLi9wb2xpY2llcy90aHJvdHRsaW5nUmV0cnlQb2xpY3kuanNcIjtcbmV4cG9ydCB7IHJldHJ5UG9saWN5IH0gZnJvbSBcIi4vcG9saWNpZXMvcmV0cnlQb2xpY3kuanNcIjtcbmV4cG9ydCB7IHRyYWNpbmdQb2xpY3ksIHRyYWNpbmdQb2xpY3lOYW1lLCB9IGZyb20gXCIuL3BvbGljaWVzL3RyYWNpbmdQb2xpY3kuanNcIjtcbmV4cG9ydCB7IGRlZmF1bHRSZXRyeVBvbGljeSwgfSBmcm9tIFwiLi9wb2xpY2llcy9kZWZhdWx0UmV0cnlQb2xpY3kuanNcIjtcbmV4cG9ydCB7IHVzZXJBZ2VudFBvbGljeSwgdXNlckFnZW50UG9saWN5TmFtZSwgfSBmcm9tIFwiLi9wb2xpY2llcy91c2VyQWdlbnRQb2xpY3kuanNcIjtcbmV4cG9ydCB7IHRsc1BvbGljeSwgdGxzUG9saWN5TmFtZSB9IGZyb20gXCIuL3BvbGljaWVzL3Rsc1BvbGljeS5qc1wiO1xuZXhwb3J0IHsgZm9ybURhdGFQb2xpY3ksIGZvcm1EYXRhUG9saWN5TmFtZSB9IGZyb20gXCIuL3BvbGljaWVzL2Zvcm1EYXRhUG9saWN5LmpzXCI7XG5leHBvcnQgeyBiZWFyZXJUb2tlbkF1dGhlbnRpY2F0aW9uUG9saWN5LCBiZWFyZXJUb2tlbkF1dGhlbnRpY2F0aW9uUG9saWN5TmFtZSwgfSBmcm9tIFwiLi9wb2xpY2llcy9iZWFyZXJUb2tlbkF1dGhlbnRpY2F0aW9uUG9saWN5LmpzXCI7XG5leHBvcnQgeyBuZEpzb25Qb2xpY3ksIG5kSnNvblBvbGljeU5hbWUgfSBmcm9tIFwiLi9wb2xpY2llcy9uZEpzb25Qb2xpY3kuanNcIjtcbmV4cG9ydCB7IGF1eGlsaWFyeUF1dGhlbnRpY2F0aW9uSGVhZGVyUG9saWN5LCBhdXhpbGlhcnlBdXRoZW50aWNhdGlvbkhlYWRlclBvbGljeU5hbWUsIH0gZnJvbSBcIi4vcG9saWNpZXMvYXV4aWxpYXJ5QXV0aGVudGljYXRpb25IZWFkZXJQb2xpY3kuanNcIjtcbmV4cG9ydCB7IGFnZW50UG9saWN5LCBhZ2VudFBvbGljeU5hbWUgfSBmcm9tIFwiLi9wb2xpY2llcy9hZ2VudFBvbGljeS5qc1wiO1xuZXhwb3J0IHsgY3JlYXRlRmlsZSwgY3JlYXRlRmlsZUZyb21TdHJlYW0sIH0gZnJvbSBcIi4vdXRpbC9maWxlLmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/log.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/logger */ \"(ssr)/./node_modules/@azure/logger/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nconst logger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_0__.createClientLogger)(\"core-rest-pipeline\");\n//# sourceMappingURL=log.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9sb2cuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ21EO0FBQzVDLGVBQWUsaUVBQWtCO0FBQ3hDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGhlbGxvLXZvaWNlXFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1yZXN0LXBpcGVsaW5lXFxkaXN0XFxlc21cXGxvZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGNyZWF0ZUNsaWVudExvZ2dlciB9IGZyb20gXCJAYXp1cmUvbG9nZ2VyXCI7XG5leHBvcnQgY29uc3QgbG9nZ2VyID0gY3JlYXRlQ2xpZW50TG9nZ2VyKFwiY29yZS1yZXN0LXBpcGVsaW5lXCIpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9nLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/nodeHttpClient.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/nodeHttpClient.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNodeHttpClient: () => (/* binding */ createNodeHttpClient),\n/* harmony export */   getBodyLength: () => (/* binding */ getBodyLength)\n/* harmony export */ });\n/* harmony import */ var node_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:http */ \"node:http\");\n/* harmony import */ var node_https__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node:https */ \"node:https\");\n/* harmony import */ var node_zlib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! node:zlib */ \"node:zlib\");\n/* harmony import */ var node_stream__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! node:stream */ \"node:stream\");\n/* harmony import */ var _azure_abort_controller__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/abort-controller */ \"(ssr)/./node_modules/@azure/abort-controller/dist/esm/index.js\");\n/* harmony import */ var _httpHeaders_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./httpHeaders.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/httpHeaders.js\");\n/* harmony import */ var _restError_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./restError.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/restError.js\");\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./log.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js\");\n/* harmony import */ var _util_sanitizer_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./util/sanitizer.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/sanitizer.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n\nconst DEFAULT_TLS_SETTINGS = {};\nfunction isReadableStream(body) {\n    return body && typeof body.pipe === \"function\";\n}\nfunction isStreamComplete(stream) {\n    if (stream.readable === false) {\n        return Promise.resolve();\n    }\n    return new Promise((resolve) => {\n        const handler = () => {\n            resolve();\n            stream.removeListener(\"close\", handler);\n            stream.removeListener(\"end\", handler);\n            stream.removeListener(\"error\", handler);\n        };\n        stream.on(\"close\", handler);\n        stream.on(\"end\", handler);\n        stream.on(\"error\", handler);\n    });\n}\nfunction isArrayBuffer(body) {\n    return body && typeof body.byteLength === \"number\";\n}\nclass ReportTransform extends node_stream__WEBPACK_IMPORTED_MODULE_3__.Transform {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\n    _transform(chunk, _encoding, callback) {\n        this.push(chunk);\n        this.loadedBytes += chunk.length;\n        try {\n            this.progressCallback({ loadedBytes: this.loadedBytes });\n            callback();\n        }\n        catch (e) {\n            callback(e);\n        }\n    }\n    constructor(progressCallback) {\n        super();\n        this.loadedBytes = 0;\n        this.progressCallback = progressCallback;\n    }\n}\n/**\n * A HttpClient implementation that uses Node's \"https\" module to send HTTPS requests.\n * @internal\n */\nclass NodeHttpClient {\n    constructor() {\n        this.cachedHttpsAgents = new WeakMap();\n    }\n    /**\n     * Makes a request over an underlying transport layer and returns the response.\n     * @param request - The request to be made.\n     */\n    async sendRequest(request) {\n        var _a, _b, _c;\n        const abortController = new AbortController();\n        let abortListener;\n        if (request.abortSignal) {\n            if (request.abortSignal.aborted) {\n                throw new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_4__.AbortError(\"The operation was aborted. Request has already been canceled.\");\n            }\n            abortListener = (event) => {\n                if (event.type === \"abort\") {\n                    abortController.abort();\n                }\n            };\n            request.abortSignal.addEventListener(\"abort\", abortListener);\n        }\n        let timeoutId;\n        if (request.timeout > 0) {\n            timeoutId = setTimeout(() => {\n                const sanitizer = new _util_sanitizer_js__WEBPACK_IMPORTED_MODULE_8__.Sanitizer();\n                _log_js__WEBPACK_IMPORTED_MODULE_7__.logger.info(`request to '${sanitizer.sanitizeUrl(request.url)}' timed out. canceling...`);\n                abortController.abort();\n            }, request.timeout);\n        }\n        const acceptEncoding = request.headers.get(\"Accept-Encoding\");\n        const shouldDecompress = (acceptEncoding === null || acceptEncoding === void 0 ? void 0 : acceptEncoding.includes(\"gzip\")) || (acceptEncoding === null || acceptEncoding === void 0 ? void 0 : acceptEncoding.includes(\"deflate\"));\n        let body = typeof request.body === \"function\" ? request.body() : request.body;\n        if (body && !request.headers.has(\"Content-Length\")) {\n            const bodyLength = getBodyLength(body);\n            if (bodyLength !== null) {\n                request.headers.set(\"Content-Length\", bodyLength);\n            }\n        }\n        let responseStream;\n        try {\n            if (body && request.onUploadProgress) {\n                const onUploadProgress = request.onUploadProgress;\n                const uploadReportStream = new ReportTransform(onUploadProgress);\n                uploadReportStream.on(\"error\", (e) => {\n                    _log_js__WEBPACK_IMPORTED_MODULE_7__.logger.error(\"Error in upload progress\", e);\n                });\n                if (isReadableStream(body)) {\n                    body.pipe(uploadReportStream);\n                }\n                else {\n                    uploadReportStream.end(body);\n                }\n                body = uploadReportStream;\n            }\n            const res = await this.makeRequest(request, abortController, body);\n            if (timeoutId !== undefined) {\n                clearTimeout(timeoutId);\n            }\n            const headers = getResponseHeaders(res);\n            const status = (_a = res.statusCode) !== null && _a !== void 0 ? _a : 0;\n            const response = {\n                status,\n                headers,\n                request,\n            };\n            // Responses to HEAD must not have a body.\n            // If they do return a body, that body must be ignored.\n            if (request.method === \"HEAD\") {\n                // call resume() and not destroy() to avoid closing the socket\n                // and losing keep alive\n                res.resume();\n                return response;\n            }\n            responseStream = shouldDecompress ? getDecodedResponseStream(res, headers) : res;\n            const onDownloadProgress = request.onDownloadProgress;\n            if (onDownloadProgress) {\n                const downloadReportStream = new ReportTransform(onDownloadProgress);\n                downloadReportStream.on(\"error\", (e) => {\n                    _log_js__WEBPACK_IMPORTED_MODULE_7__.logger.error(\"Error in download progress\", e);\n                });\n                responseStream.pipe(downloadReportStream);\n                responseStream = downloadReportStream;\n            }\n            if (\n            // Value of POSITIVE_INFINITY in streamResponseStatusCodes is considered as any status code\n            ((_b = request.streamResponseStatusCodes) === null || _b === void 0 ? void 0 : _b.has(Number.POSITIVE_INFINITY)) ||\n                ((_c = request.streamResponseStatusCodes) === null || _c === void 0 ? void 0 : _c.has(response.status))) {\n                response.readableStreamBody = responseStream;\n            }\n            else {\n                response.bodyAsText = await streamToText(responseStream);\n            }\n            return response;\n        }\n        finally {\n            // clean up event listener\n            if (request.abortSignal && abortListener) {\n                let uploadStreamDone = Promise.resolve();\n                if (isReadableStream(body)) {\n                    uploadStreamDone = isStreamComplete(body);\n                }\n                let downloadStreamDone = Promise.resolve();\n                if (isReadableStream(responseStream)) {\n                    downloadStreamDone = isStreamComplete(responseStream);\n                }\n                Promise.all([uploadStreamDone, downloadStreamDone])\n                    .then(() => {\n                    var _a;\n                    // eslint-disable-next-line promise/always-return\n                    if (abortListener) {\n                        (_a = request.abortSignal) === null || _a === void 0 ? void 0 : _a.removeEventListener(\"abort\", abortListener);\n                    }\n                })\n                    .catch((e) => {\n                    _log_js__WEBPACK_IMPORTED_MODULE_7__.logger.warning(\"Error when cleaning up abortListener on httpRequest\", e);\n                });\n            }\n        }\n    }\n    makeRequest(request, abortController, body) {\n        var _a;\n        const url = new URL(request.url);\n        const isInsecure = url.protocol !== \"https:\";\n        if (isInsecure && !request.allowInsecureConnection) {\n            throw new Error(`Cannot connect to ${request.url} while allowInsecureConnection is false.`);\n        }\n        const agent = (_a = request.agent) !== null && _a !== void 0 ? _a : this.getOrCreateAgent(request, isInsecure);\n        const options = {\n            agent,\n            hostname: url.hostname,\n            path: `${url.pathname}${url.search}`,\n            port: url.port,\n            method: request.method,\n            headers: request.headers.toJSON({ preserveCase: true }),\n        };\n        return new Promise((resolve, reject) => {\n            const req = isInsecure ? node_http__WEBPACK_IMPORTED_MODULE_0__.request(options, resolve) : node_https__WEBPACK_IMPORTED_MODULE_1__.request(options, resolve);\n            req.once(\"error\", (err) => {\n                var _a;\n                reject(new _restError_js__WEBPACK_IMPORTED_MODULE_6__.RestError(err.message, { code: (_a = err.code) !== null && _a !== void 0 ? _a : _restError_js__WEBPACK_IMPORTED_MODULE_6__.RestError.REQUEST_SEND_ERROR, request }));\n            });\n            abortController.signal.addEventListener(\"abort\", () => {\n                const abortError = new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_4__.AbortError(\"The operation was aborted. Rejecting from abort signal callback while making request.\");\n                req.destroy(abortError);\n                reject(abortError);\n            });\n            if (body && isReadableStream(body)) {\n                body.pipe(req);\n            }\n            else if (body) {\n                if (typeof body === \"string\" || Buffer.isBuffer(body)) {\n                    req.end(body);\n                }\n                else if (isArrayBuffer(body)) {\n                    req.end(ArrayBuffer.isView(body) ? Buffer.from(body.buffer) : Buffer.from(body));\n                }\n                else {\n                    _log_js__WEBPACK_IMPORTED_MODULE_7__.logger.error(\"Unrecognized body type\", body);\n                    reject(new _restError_js__WEBPACK_IMPORTED_MODULE_6__.RestError(\"Unrecognized body type\"));\n                }\n            }\n            else {\n                // streams don't like \"undefined\" being passed as data\n                req.end();\n            }\n        });\n    }\n    getOrCreateAgent(request, isInsecure) {\n        var _a;\n        const disableKeepAlive = request.disableKeepAlive;\n        // Handle Insecure requests first\n        if (isInsecure) {\n            if (disableKeepAlive) {\n                // keepAlive:false is the default so we don't need a custom Agent\n                return node_http__WEBPACK_IMPORTED_MODULE_0__.globalAgent;\n            }\n            if (!this.cachedHttpAgent) {\n                // If there is no cached agent create a new one and cache it.\n                this.cachedHttpAgent = new node_http__WEBPACK_IMPORTED_MODULE_0__.Agent({ keepAlive: true });\n            }\n            return this.cachedHttpAgent;\n        }\n        else {\n            if (disableKeepAlive && !request.tlsSettings) {\n                // When there are no tlsSettings and keepAlive is false\n                // we don't need a custom agent\n                return node_https__WEBPACK_IMPORTED_MODULE_1__.globalAgent;\n            }\n            // We use the tlsSettings to index cached clients\n            const tlsSettings = (_a = request.tlsSettings) !== null && _a !== void 0 ? _a : DEFAULT_TLS_SETTINGS;\n            // Get the cached agent or create a new one with the\n            // provided values for keepAlive and tlsSettings\n            let agent = this.cachedHttpsAgents.get(tlsSettings);\n            if (agent && agent.options.keepAlive === !disableKeepAlive) {\n                return agent;\n            }\n            _log_js__WEBPACK_IMPORTED_MODULE_7__.logger.info(\"No cached TLS Agent exist, creating a new Agent\");\n            agent = new node_https__WEBPACK_IMPORTED_MODULE_1__.Agent(Object.assign({ \n                // keepAlive is true if disableKeepAlive is false.\n                keepAlive: !disableKeepAlive }, tlsSettings));\n            this.cachedHttpsAgents.set(tlsSettings, agent);\n            return agent;\n        }\n    }\n}\nfunction getResponseHeaders(res) {\n    const headers = (0,_httpHeaders_js__WEBPACK_IMPORTED_MODULE_5__.createHttpHeaders)();\n    for (const header of Object.keys(res.headers)) {\n        const value = res.headers[header];\n        if (Array.isArray(value)) {\n            if (value.length > 0) {\n                headers.set(header, value[0]);\n            }\n        }\n        else if (value) {\n            headers.set(header, value);\n        }\n    }\n    return headers;\n}\nfunction getDecodedResponseStream(stream, headers) {\n    const contentEncoding = headers.get(\"Content-Encoding\");\n    if (contentEncoding === \"gzip\") {\n        const unzip = node_zlib__WEBPACK_IMPORTED_MODULE_2__.createGunzip();\n        stream.pipe(unzip);\n        return unzip;\n    }\n    else if (contentEncoding === \"deflate\") {\n        const inflate = node_zlib__WEBPACK_IMPORTED_MODULE_2__.createInflate();\n        stream.pipe(inflate);\n        return inflate;\n    }\n    return stream;\n}\nfunction streamToText(stream) {\n    return new Promise((resolve, reject) => {\n        const buffer = [];\n        stream.on(\"data\", (chunk) => {\n            if (Buffer.isBuffer(chunk)) {\n                buffer.push(chunk);\n            }\n            else {\n                buffer.push(Buffer.from(chunk));\n            }\n        });\n        stream.on(\"end\", () => {\n            resolve(Buffer.concat(buffer).toString(\"utf8\"));\n        });\n        stream.on(\"error\", (e) => {\n            if (e && (e === null || e === void 0 ? void 0 : e.name) === \"AbortError\") {\n                reject(e);\n            }\n            else {\n                reject(new _restError_js__WEBPACK_IMPORTED_MODULE_6__.RestError(`Error reading response as text: ${e.message}`, {\n                    code: _restError_js__WEBPACK_IMPORTED_MODULE_6__.RestError.PARSE_ERROR,\n                }));\n            }\n        });\n    });\n}\n/** @internal */\nfunction getBodyLength(body) {\n    if (!body) {\n        return 0;\n    }\n    else if (Buffer.isBuffer(body)) {\n        return body.length;\n    }\n    else if (isReadableStream(body)) {\n        return null;\n    }\n    else if (isArrayBuffer(body)) {\n        return body.byteLength;\n    }\n    else if (typeof body === \"string\") {\n        return Buffer.from(body).length;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * Create a new HttpClient instance for the NodeJS environment.\n * @internal\n */\nfunction createNodeHttpClient() {\n    return new NodeHttpClient();\n}\n//# sourceMappingURL=nodeHttpClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/nodeHttpClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/pipeline.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/pipeline.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createEmptyPipeline: () => (/* binding */ createEmptyPipeline)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nconst ValidPhaseNames = new Set([\"Deserialize\", \"Serialize\", \"Retry\", \"Sign\"]);\n/**\n * A private implementation of Pipeline.\n * Do not export this class from the package.\n * @internal\n */\nclass HttpPipeline {\n    constructor(policies) {\n        var _a;\n        this._policies = [];\n        this._policies = (_a = policies === null || policies === void 0 ? void 0 : policies.slice(0)) !== null && _a !== void 0 ? _a : [];\n        this._orderedPolicies = undefined;\n    }\n    addPolicy(policy, options = {}) {\n        if (options.phase && options.afterPhase) {\n            throw new Error(\"Policies inside a phase cannot specify afterPhase.\");\n        }\n        if (options.phase && !ValidPhaseNames.has(options.phase)) {\n            throw new Error(`Invalid phase name: ${options.phase}`);\n        }\n        if (options.afterPhase && !ValidPhaseNames.has(options.afterPhase)) {\n            throw new Error(`Invalid afterPhase name: ${options.afterPhase}`);\n        }\n        this._policies.push({\n            policy,\n            options,\n        });\n        this._orderedPolicies = undefined;\n    }\n    removePolicy(options) {\n        const removedPolicies = [];\n        this._policies = this._policies.filter((policyDescriptor) => {\n            if ((options.name && policyDescriptor.policy.name === options.name) ||\n                (options.phase && policyDescriptor.options.phase === options.phase)) {\n                removedPolicies.push(policyDescriptor.policy);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n        this._orderedPolicies = undefined;\n        return removedPolicies;\n    }\n    sendRequest(httpClient, request) {\n        const policies = this.getOrderedPolicies();\n        const pipeline = policies.reduceRight((next, policy) => {\n            return (req) => {\n                return policy.sendRequest(req, next);\n            };\n        }, (req) => httpClient.sendRequest(req));\n        return pipeline(request);\n    }\n    getOrderedPolicies() {\n        if (!this._orderedPolicies) {\n            this._orderedPolicies = this.orderPolicies();\n        }\n        return this._orderedPolicies;\n    }\n    clone() {\n        return new HttpPipeline(this._policies);\n    }\n    static create() {\n        return new HttpPipeline();\n    }\n    orderPolicies() {\n        /**\n         * The goal of this method is to reliably order pipeline policies\n         * based on their declared requirements when they were added.\n         *\n         * Order is first determined by phase:\n         *\n         * 1. Serialize Phase\n         * 2. Policies not in a phase\n         * 3. Deserialize Phase\n         * 4. Retry Phase\n         * 5. Sign Phase\n         *\n         * Within each phase, policies are executed in the order\n         * they were added unless they were specified to execute\n         * before/after other policies or after a particular phase.\n         *\n         * To determine the final order, we will walk the policy list\n         * in phase order multiple times until all dependencies are\n         * satisfied.\n         *\n         * `afterPolicies` are the set of policies that must be\n         * executed before a given policy. This requirement is\n         * considered satisfied when each of the listed policies\n         * have been scheduled.\n         *\n         * `beforePolicies` are the set of policies that must be\n         * executed after a given policy. Since this dependency\n         * can be expressed by converting it into a equivalent\n         * `afterPolicies` declarations, they are normalized\n         * into that form for simplicity.\n         *\n         * An `afterPhase` dependency is considered satisfied when all\n         * policies in that phase have scheduled.\n         *\n         */\n        const result = [];\n        // Track all policies we know about.\n        const policyMap = new Map();\n        function createPhase(name) {\n            return {\n                name,\n                policies: new Set(),\n                hasRun: false,\n                hasAfterPolicies: false,\n            };\n        }\n        // Track policies for each phase.\n        const serializePhase = createPhase(\"Serialize\");\n        const noPhase = createPhase(\"None\");\n        const deserializePhase = createPhase(\"Deserialize\");\n        const retryPhase = createPhase(\"Retry\");\n        const signPhase = createPhase(\"Sign\");\n        // a list of phases in order\n        const orderedPhases = [serializePhase, noPhase, deserializePhase, retryPhase, signPhase];\n        // Small helper function to map phase name to each Phase\n        function getPhase(phase) {\n            if (phase === \"Retry\") {\n                return retryPhase;\n            }\n            else if (phase === \"Serialize\") {\n                return serializePhase;\n            }\n            else if (phase === \"Deserialize\") {\n                return deserializePhase;\n            }\n            else if (phase === \"Sign\") {\n                return signPhase;\n            }\n            else {\n                return noPhase;\n            }\n        }\n        // First walk each policy and create a node to track metadata.\n        for (const descriptor of this._policies) {\n            const policy = descriptor.policy;\n            const options = descriptor.options;\n            const policyName = policy.name;\n            if (policyMap.has(policyName)) {\n                throw new Error(\"Duplicate policy names not allowed in pipeline\");\n            }\n            const node = {\n                policy,\n                dependsOn: new Set(),\n                dependants: new Set(),\n            };\n            if (options.afterPhase) {\n                node.afterPhase = getPhase(options.afterPhase);\n                node.afterPhase.hasAfterPolicies = true;\n            }\n            policyMap.set(policyName, node);\n            const phase = getPhase(options.phase);\n            phase.policies.add(node);\n        }\n        // Now that each policy has a node, connect dependency references.\n        for (const descriptor of this._policies) {\n            const { policy, options } = descriptor;\n            const policyName = policy.name;\n            const node = policyMap.get(policyName);\n            if (!node) {\n                throw new Error(`Missing node for policy ${policyName}`);\n            }\n            if (options.afterPolicies) {\n                for (const afterPolicyName of options.afterPolicies) {\n                    const afterNode = policyMap.get(afterPolicyName);\n                    if (afterNode) {\n                        // Linking in both directions helps later\n                        // when we want to notify dependants.\n                        node.dependsOn.add(afterNode);\n                        afterNode.dependants.add(node);\n                    }\n                }\n            }\n            if (options.beforePolicies) {\n                for (const beforePolicyName of options.beforePolicies) {\n                    const beforeNode = policyMap.get(beforePolicyName);\n                    if (beforeNode) {\n                        // To execute before another node, make it\n                        // depend on the current node.\n                        beforeNode.dependsOn.add(node);\n                        node.dependants.add(beforeNode);\n                    }\n                }\n            }\n        }\n        function walkPhase(phase) {\n            phase.hasRun = true;\n            // Sets iterate in insertion order\n            for (const node of phase.policies) {\n                if (node.afterPhase && (!node.afterPhase.hasRun || node.afterPhase.policies.size)) {\n                    // If this node is waiting on a phase to complete,\n                    // we need to skip it for now.\n                    // Even if the phase is empty, we should wait for it\n                    // to be walked to avoid re-ordering policies.\n                    continue;\n                }\n                if (node.dependsOn.size === 0) {\n                    // If there's nothing else we're waiting for, we can\n                    // add this policy to the result list.\n                    result.push(node.policy);\n                    // Notify anything that depends on this policy that\n                    // the policy has been scheduled.\n                    for (const dependant of node.dependants) {\n                        dependant.dependsOn.delete(node);\n                    }\n                    policyMap.delete(node.policy.name);\n                    phase.policies.delete(node);\n                }\n            }\n        }\n        function walkPhases() {\n            for (const phase of orderedPhases) {\n                walkPhase(phase);\n                // if the phase isn't complete\n                if (phase.policies.size > 0 && phase !== noPhase) {\n                    if (!noPhase.hasRun) {\n                        // Try running noPhase to see if that unblocks this phase next tick.\n                        // This can happen if a phase that happens before noPhase\n                        // is waiting on a noPhase policy to complete.\n                        walkPhase(noPhase);\n                    }\n                    // Don't proceed to the next phase until this phase finishes.\n                    return;\n                }\n                if (phase.hasAfterPolicies) {\n                    // Run any policies unblocked by this phase\n                    walkPhase(noPhase);\n                }\n            }\n        }\n        // Iterate until we've put every node in the result list.\n        let iteration = 0;\n        while (policyMap.size > 0) {\n            iteration++;\n            const initialResultLength = result.length;\n            // Keep walking each phase in order until we can order every node.\n            walkPhases();\n            // The result list *should* get at least one larger each time\n            // after the first full pass.\n            // Otherwise, we're going to loop forever.\n            if (result.length <= initialResultLength && iteration > 1) {\n                throw new Error(\"Cannot satisfy policy dependencies due to requirements cycle.\");\n            }\n        }\n        return result;\n    }\n}\n/**\n * Creates a totally empty pipeline.\n * Useful for testing or creating a custom one.\n */\nfunction createEmptyPipeline() {\n    return HttpPipeline.create();\n}\n//# sourceMappingURL=pipeline.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/pipeline.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/pipelineRequest.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/pipelineRequest.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPipelineRequest: () => (/* binding */ createPipelineRequest)\n/* harmony export */ });\n/* harmony import */ var _httpHeaders_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./httpHeaders.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/httpHeaders.js\");\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/core-util */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\nclass PipelineRequestImpl {\n    constructor(options) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        this.url = options.url;\n        this.body = options.body;\n        this.headers = (_a = options.headers) !== null && _a !== void 0 ? _a : (0,_httpHeaders_js__WEBPACK_IMPORTED_MODULE_0__.createHttpHeaders)();\n        this.method = (_b = options.method) !== null && _b !== void 0 ? _b : \"GET\";\n        this.timeout = (_c = options.timeout) !== null && _c !== void 0 ? _c : 0;\n        this.multipartBody = options.multipartBody;\n        this.formData = options.formData;\n        this.disableKeepAlive = (_d = options.disableKeepAlive) !== null && _d !== void 0 ? _d : false;\n        this.proxySettings = options.proxySettings;\n        this.streamResponseStatusCodes = options.streamResponseStatusCodes;\n        this.withCredentials = (_e = options.withCredentials) !== null && _e !== void 0 ? _e : false;\n        this.abortSignal = options.abortSignal;\n        this.tracingOptions = options.tracingOptions;\n        this.onUploadProgress = options.onUploadProgress;\n        this.onDownloadProgress = options.onDownloadProgress;\n        this.requestId = options.requestId || (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_1__.randomUUID)();\n        this.allowInsecureConnection = (_f = options.allowInsecureConnection) !== null && _f !== void 0 ? _f : false;\n        this.enableBrowserStreams = (_g = options.enableBrowserStreams) !== null && _g !== void 0 ? _g : false;\n        this.agent = options.agent;\n        this.tlsSettings = options.tlsSettings;\n    }\n}\n/**\n * Creates a new pipeline request with the given options.\n * This method is to allow for the easy setting of default values and not required.\n * @param options - The options to create the request with.\n */\nfunction createPipelineRequest(options) {\n    return new PipelineRequestImpl(options);\n}\n//# sourceMappingURL=pipelineRequest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9waXBlbGluZVJlcXVlc3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNxRDtBQUNQO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrRUFBK0Usa0VBQWlCO0FBQ2hHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4Qyw0REFBVTtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXJlc3QtcGlwZWxpbmVcXGRpc3RcXGVzbVxccGlwZWxpbmVSZXF1ZXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgY3JlYXRlSHR0cEhlYWRlcnMgfSBmcm9tIFwiLi9odHRwSGVhZGVycy5qc1wiO1xuaW1wb3J0IHsgcmFuZG9tVVVJRCB9IGZyb20gXCJAYXp1cmUvY29yZS11dGlsXCI7XG5jbGFzcyBQaXBlbGluZVJlcXVlc3RJbXBsIHtcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgICAgIHZhciBfYSwgX2IsIF9jLCBfZCwgX2UsIF9mLCBfZztcbiAgICAgICAgdGhpcy51cmwgPSBvcHRpb25zLnVybDtcbiAgICAgICAgdGhpcy5ib2R5ID0gb3B0aW9ucy5ib2R5O1xuICAgICAgICB0aGlzLmhlYWRlcnMgPSAoX2EgPSBvcHRpb25zLmhlYWRlcnMpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGNyZWF0ZUh0dHBIZWFkZXJzKCk7XG4gICAgICAgIHRoaXMubWV0aG9kID0gKF9iID0gb3B0aW9ucy5tZXRob2QpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IFwiR0VUXCI7XG4gICAgICAgIHRoaXMudGltZW91dCA9IChfYyA9IG9wdGlvbnMudGltZW91dCkgIT09IG51bGwgJiYgX2MgIT09IHZvaWQgMCA/IF9jIDogMDtcbiAgICAgICAgdGhpcy5tdWx0aXBhcnRCb2R5ID0gb3B0aW9ucy5tdWx0aXBhcnRCb2R5O1xuICAgICAgICB0aGlzLmZvcm1EYXRhID0gb3B0aW9ucy5mb3JtRGF0YTtcbiAgICAgICAgdGhpcy5kaXNhYmxlS2VlcEFsaXZlID0gKF9kID0gb3B0aW9ucy5kaXNhYmxlS2VlcEFsaXZlKSAhPT0gbnVsbCAmJiBfZCAhPT0gdm9pZCAwID8gX2QgOiBmYWxzZTtcbiAgICAgICAgdGhpcy5wcm94eVNldHRpbmdzID0gb3B0aW9ucy5wcm94eVNldHRpbmdzO1xuICAgICAgICB0aGlzLnN0cmVhbVJlc3BvbnNlU3RhdHVzQ29kZXMgPSBvcHRpb25zLnN0cmVhbVJlc3BvbnNlU3RhdHVzQ29kZXM7XG4gICAgICAgIHRoaXMud2l0aENyZWRlbnRpYWxzID0gKF9lID0gb3B0aW9ucy53aXRoQ3JlZGVudGlhbHMpICE9PSBudWxsICYmIF9lICE9PSB2b2lkIDAgPyBfZSA6IGZhbHNlO1xuICAgICAgICB0aGlzLmFib3J0U2lnbmFsID0gb3B0aW9ucy5hYm9ydFNpZ25hbDtcbiAgICAgICAgdGhpcy50cmFjaW5nT3B0aW9ucyA9IG9wdGlvbnMudHJhY2luZ09wdGlvbnM7XG4gICAgICAgIHRoaXMub25VcGxvYWRQcm9ncmVzcyA9IG9wdGlvbnMub25VcGxvYWRQcm9ncmVzcztcbiAgICAgICAgdGhpcy5vbkRvd25sb2FkUHJvZ3Jlc3MgPSBvcHRpb25zLm9uRG93bmxvYWRQcm9ncmVzcztcbiAgICAgICAgdGhpcy5yZXF1ZXN0SWQgPSBvcHRpb25zLnJlcXVlc3RJZCB8fCByYW5kb21VVUlEKCk7XG4gICAgICAgIHRoaXMuYWxsb3dJbnNlY3VyZUNvbm5lY3Rpb24gPSAoX2YgPSBvcHRpb25zLmFsbG93SW5zZWN1cmVDb25uZWN0aW9uKSAhPT0gbnVsbCAmJiBfZiAhPT0gdm9pZCAwID8gX2YgOiBmYWxzZTtcbiAgICAgICAgdGhpcy5lbmFibGVCcm93c2VyU3RyZWFtcyA9IChfZyA9IG9wdGlvbnMuZW5hYmxlQnJvd3NlclN0cmVhbXMpICE9PSBudWxsICYmIF9nICE9PSB2b2lkIDAgPyBfZyA6IGZhbHNlO1xuICAgICAgICB0aGlzLmFnZW50ID0gb3B0aW9ucy5hZ2VudDtcbiAgICAgICAgdGhpcy50bHNTZXR0aW5ncyA9IG9wdGlvbnMudGxzU2V0dGluZ3M7XG4gICAgfVxufVxuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IHBpcGVsaW5lIHJlcXVlc3Qgd2l0aCB0aGUgZ2l2ZW4gb3B0aW9ucy5cbiAqIFRoaXMgbWV0aG9kIGlzIHRvIGFsbG93IGZvciB0aGUgZWFzeSBzZXR0aW5nIG9mIGRlZmF1bHQgdmFsdWVzIGFuZCBub3QgcmVxdWlyZWQuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIFRoZSBvcHRpb25zIHRvIGNyZWF0ZSB0aGUgcmVxdWVzdCB3aXRoLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUGlwZWxpbmVSZXF1ZXN0KG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmV3IFBpcGVsaW5lUmVxdWVzdEltcGwob3B0aW9ucyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1waXBlbGluZVJlcXVlc3QuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/pipelineRequest.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/agentPolicy.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/agentPolicy.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   agentPolicy: () => (/* binding */ agentPolicy),\n/* harmony export */   agentPolicyName: () => (/* binding */ agentPolicyName)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Name of the Agent Policy\n */\nconst agentPolicyName = \"agentPolicy\";\n/**\n * Gets a pipeline policy that sets http.agent\n */\nfunction agentPolicy(agent) {\n    return {\n        name: agentPolicyName,\n        sendRequest: async (req, next) => {\n            // Users may define an agent on the request, honor it over the client level one\n            if (!req.agent) {\n                req.agent = agent;\n            }\n            return next(req);\n        },\n    };\n}\n//# sourceMappingURL=agentPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9hZ2VudFBvbGljeS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXJlc3QtcGlwZWxpbmVcXGRpc3RcXGVzbVxccG9saWNpZXNcXGFnZW50UG9saWN5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqXG4gKiBOYW1lIG9mIHRoZSBBZ2VudCBQb2xpY3lcbiAqL1xuZXhwb3J0IGNvbnN0IGFnZW50UG9saWN5TmFtZSA9IFwiYWdlbnRQb2xpY3lcIjtcbi8qKlxuICogR2V0cyBhIHBpcGVsaW5lIHBvbGljeSB0aGF0IHNldHMgaHR0cC5hZ2VudFxuICovXG5leHBvcnQgZnVuY3Rpb24gYWdlbnRQb2xpY3koYWdlbnQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBhZ2VudFBvbGljeU5hbWUsXG4gICAgICAgIHNlbmRSZXF1ZXN0OiBhc3luYyAocmVxLCBuZXh0KSA9PiB7XG4gICAgICAgICAgICAvLyBVc2VycyBtYXkgZGVmaW5lIGFuIGFnZW50IG9uIHRoZSByZXF1ZXN0LCBob25vciBpdCBvdmVyIHRoZSBjbGllbnQgbGV2ZWwgb25lXG4gICAgICAgICAgICBpZiAoIXJlcS5hZ2VudCkge1xuICAgICAgICAgICAgICAgIHJlcS5hZ2VudCA9IGFnZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG5leHQocmVxKTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWdlbnRQb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/agentPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/auxiliaryAuthenticationHeaderPolicy.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/auxiliaryAuthenticationHeaderPolicy.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   auxiliaryAuthenticationHeaderPolicy: () => (/* binding */ auxiliaryAuthenticationHeaderPolicy),\n/* harmony export */   auxiliaryAuthenticationHeaderPolicyName: () => (/* binding */ auxiliaryAuthenticationHeaderPolicyName)\n/* harmony export */ });\n/* harmony import */ var _util_tokenCycler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/tokenCycler.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/tokenCycler.js\");\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../log.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * The programmatic identifier of the auxiliaryAuthenticationHeaderPolicy.\n */\nconst auxiliaryAuthenticationHeaderPolicyName = \"auxiliaryAuthenticationHeaderPolicy\";\nconst AUTHORIZATION_AUXILIARY_HEADER = \"x-ms-authorization-auxiliary\";\nasync function sendAuthorizeRequest(options) {\n    var _a, _b;\n    const { scopes, getAccessToken, request } = options;\n    const getTokenOptions = {\n        abortSignal: request.abortSignal,\n        tracingOptions: request.tracingOptions,\n    };\n    return (_b = (_a = (await getAccessToken(scopes, getTokenOptions))) === null || _a === void 0 ? void 0 : _a.token) !== null && _b !== void 0 ? _b : \"\";\n}\n/**\n * A policy for external tokens to `x-ms-authorization-auxiliary` header.\n * This header will be used when creating a cross-tenant application we may need to handle authentication requests\n * for resources that are in different tenants.\n * You could see [ARM docs](https://learn.microsoft.com/en-us/azure/azure-resource-manager/management/authenticate-multi-tenant) for a rundown of how this feature works\n */\nfunction auxiliaryAuthenticationHeaderPolicy(options) {\n    const { credentials, scopes } = options;\n    const logger = options.logger || _log_js__WEBPACK_IMPORTED_MODULE_1__.logger;\n    const tokenCyclerMap = new WeakMap();\n    return {\n        name: auxiliaryAuthenticationHeaderPolicyName,\n        async sendRequest(request, next) {\n            if (!request.url.toLowerCase().startsWith(\"https://\")) {\n                throw new Error(\"Bearer token authentication for auxiliary header is not permitted for non-TLS protected (non-https) URLs.\");\n            }\n            if (!credentials || credentials.length === 0) {\n                logger.info(`${auxiliaryAuthenticationHeaderPolicyName} header will not be set due to empty credentials.`);\n                return next(request);\n            }\n            const tokenPromises = [];\n            for (const credential of credentials) {\n                let getAccessToken = tokenCyclerMap.get(credential);\n                if (!getAccessToken) {\n                    getAccessToken = (0,_util_tokenCycler_js__WEBPACK_IMPORTED_MODULE_0__.createTokenCycler)(credential);\n                    tokenCyclerMap.set(credential, getAccessToken);\n                }\n                tokenPromises.push(sendAuthorizeRequest({\n                    scopes: Array.isArray(scopes) ? scopes : [scopes],\n                    request,\n                    getAccessToken,\n                    logger,\n                }));\n            }\n            const auxiliaryTokens = (await Promise.all(tokenPromises)).filter((token) => Boolean(token));\n            if (auxiliaryTokens.length === 0) {\n                logger.warning(`None of the auxiliary tokens are valid. ${AUTHORIZATION_AUXILIARY_HEADER} header will not be set.`);\n                return next(request);\n            }\n            request.headers.set(AUTHORIZATION_AUXILIARY_HEADER, auxiliaryTokens.map((token) => `Bearer ${token}`).join(\", \"));\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=auxiliaryAuthenticationHeaderPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9hdXhpbGlhcnlBdXRoZW50aWNhdGlvbkhlYWRlclBvbGljeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUMyRDtBQUNWO0FBQ2pEO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsWUFBWSxrQ0FBa0M7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxZQUFZLHNCQUFzQjtBQUNsQyxxQ0FBcUMsMkNBQVU7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQix5Q0FBeUM7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLHVFQUFpQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSwwRUFBMEUsZ0NBQWdDO0FBQzFHO0FBQ0E7QUFDQSx5R0FBeUcsTUFBTTtBQUMvRztBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXJlc3QtcGlwZWxpbmVcXGRpc3RcXGVzbVxccG9saWNpZXNcXGF1eGlsaWFyeUF1dGhlbnRpY2F0aW9uSGVhZGVyUG9saWN5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgY3JlYXRlVG9rZW5DeWNsZXIgfSBmcm9tIFwiLi4vdXRpbC90b2tlbkN5Y2xlci5qc1wiO1xuaW1wb3J0IHsgbG9nZ2VyIGFzIGNvcmVMb2dnZXIgfSBmcm9tIFwiLi4vbG9nLmpzXCI7XG4vKipcbiAqIFRoZSBwcm9ncmFtbWF0aWMgaWRlbnRpZmllciBvZiB0aGUgYXV4aWxpYXJ5QXV0aGVudGljYXRpb25IZWFkZXJQb2xpY3kuXG4gKi9cbmV4cG9ydCBjb25zdCBhdXhpbGlhcnlBdXRoZW50aWNhdGlvbkhlYWRlclBvbGljeU5hbWUgPSBcImF1eGlsaWFyeUF1dGhlbnRpY2F0aW9uSGVhZGVyUG9saWN5XCI7XG5jb25zdCBBVVRIT1JJWkFUSU9OX0FVWElMSUFSWV9IRUFERVIgPSBcIngtbXMtYXV0aG9yaXphdGlvbi1hdXhpbGlhcnlcIjtcbmFzeW5jIGZ1bmN0aW9uIHNlbmRBdXRob3JpemVSZXF1ZXN0KG9wdGlvbnMpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIGNvbnN0IHsgc2NvcGVzLCBnZXRBY2Nlc3NUb2tlbiwgcmVxdWVzdCB9ID0gb3B0aW9ucztcbiAgICBjb25zdCBnZXRUb2tlbk9wdGlvbnMgPSB7XG4gICAgICAgIGFib3J0U2lnbmFsOiByZXF1ZXN0LmFib3J0U2lnbmFsLFxuICAgICAgICB0cmFjaW5nT3B0aW9uczogcmVxdWVzdC50cmFjaW5nT3B0aW9ucyxcbiAgICB9O1xuICAgIHJldHVybiAoX2IgPSAoX2EgPSAoYXdhaXQgZ2V0QWNjZXNzVG9rZW4oc2NvcGVzLCBnZXRUb2tlbk9wdGlvbnMpKSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnRva2VuKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBcIlwiO1xufVxuLyoqXG4gKiBBIHBvbGljeSBmb3IgZXh0ZXJuYWwgdG9rZW5zIHRvIGB4LW1zLWF1dGhvcml6YXRpb24tYXV4aWxpYXJ5YCBoZWFkZXIuXG4gKiBUaGlzIGhlYWRlciB3aWxsIGJlIHVzZWQgd2hlbiBjcmVhdGluZyBhIGNyb3NzLXRlbmFudCBhcHBsaWNhdGlvbiB3ZSBtYXkgbmVlZCB0byBoYW5kbGUgYXV0aGVudGljYXRpb24gcmVxdWVzdHNcbiAqIGZvciByZXNvdXJjZXMgdGhhdCBhcmUgaW4gZGlmZmVyZW50IHRlbmFudHMuXG4gKiBZb3UgY291bGQgc2VlIFtBUk0gZG9jc10oaHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL2VuLXVzL2F6dXJlL2F6dXJlLXJlc291cmNlLW1hbmFnZXIvbWFuYWdlbWVudC9hdXRoZW50aWNhdGUtbXVsdGktdGVuYW50KSBmb3IgYSBydW5kb3duIG9mIGhvdyB0aGlzIGZlYXR1cmUgd29ya3NcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGF1eGlsaWFyeUF1dGhlbnRpY2F0aW9uSGVhZGVyUG9saWN5KG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IGNyZWRlbnRpYWxzLCBzY29wZXMgfSA9IG9wdGlvbnM7XG4gICAgY29uc3QgbG9nZ2VyID0gb3B0aW9ucy5sb2dnZXIgfHwgY29yZUxvZ2dlcjtcbiAgICBjb25zdCB0b2tlbkN5Y2xlck1hcCA9IG5ldyBXZWFrTWFwKCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogYXV4aWxpYXJ5QXV0aGVudGljYXRpb25IZWFkZXJQb2xpY3lOYW1lLFxuICAgICAgICBhc3luYyBzZW5kUmVxdWVzdChyZXF1ZXN0LCBuZXh0KSB7XG4gICAgICAgICAgICBpZiAoIXJlcXVlc3QudXJsLnRvTG93ZXJDYXNlKCkuc3RhcnRzV2l0aChcImh0dHBzOi8vXCIpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQmVhcmVyIHRva2VuIGF1dGhlbnRpY2F0aW9uIGZvciBhdXhpbGlhcnkgaGVhZGVyIGlzIG5vdCBwZXJtaXR0ZWQgZm9yIG5vbi1UTFMgcHJvdGVjdGVkIChub24taHR0cHMpIFVSTHMuXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFjcmVkZW50aWFscyB8fCBjcmVkZW50aWFscy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICBsb2dnZXIuaW5mbyhgJHthdXhpbGlhcnlBdXRoZW50aWNhdGlvbkhlYWRlclBvbGljeU5hbWV9IGhlYWRlciB3aWxsIG5vdCBiZSBzZXQgZHVlIHRvIGVtcHR5IGNyZWRlbnRpYWxzLmApO1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXh0KHJlcXVlc3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgdG9rZW5Qcm9taXNlcyA9IFtdO1xuICAgICAgICAgICAgZm9yIChjb25zdCBjcmVkZW50aWFsIG9mIGNyZWRlbnRpYWxzKSB7XG4gICAgICAgICAgICAgICAgbGV0IGdldEFjY2Vzc1Rva2VuID0gdG9rZW5DeWNsZXJNYXAuZ2V0KGNyZWRlbnRpYWwpO1xuICAgICAgICAgICAgICAgIGlmICghZ2V0QWNjZXNzVG9rZW4pIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0QWNjZXNzVG9rZW4gPSBjcmVhdGVUb2tlbkN5Y2xlcihjcmVkZW50aWFsKTtcbiAgICAgICAgICAgICAgICAgICAgdG9rZW5DeWNsZXJNYXAuc2V0KGNyZWRlbnRpYWwsIGdldEFjY2Vzc1Rva2VuKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdG9rZW5Qcm9taXNlcy5wdXNoKHNlbmRBdXRob3JpemVSZXF1ZXN0KHtcbiAgICAgICAgICAgICAgICAgICAgc2NvcGVzOiBBcnJheS5pc0FycmF5KHNjb3BlcykgPyBzY29wZXMgOiBbc2NvcGVzXSxcbiAgICAgICAgICAgICAgICAgICAgcmVxdWVzdCxcbiAgICAgICAgICAgICAgICAgICAgZ2V0QWNjZXNzVG9rZW4sXG4gICAgICAgICAgICAgICAgICAgIGxvZ2dlcixcbiAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBhdXhpbGlhcnlUb2tlbnMgPSAoYXdhaXQgUHJvbWlzZS5hbGwodG9rZW5Qcm9taXNlcykpLmZpbHRlcigodG9rZW4pID0+IEJvb2xlYW4odG9rZW4pKTtcbiAgICAgICAgICAgIGlmIChhdXhpbGlhcnlUb2tlbnMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgbG9nZ2VyLndhcm5pbmcoYE5vbmUgb2YgdGhlIGF1eGlsaWFyeSB0b2tlbnMgYXJlIHZhbGlkLiAke0FVVEhPUklaQVRJT05fQVVYSUxJQVJZX0hFQURFUn0gaGVhZGVyIHdpbGwgbm90IGJlIHNldC5gKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV4dChyZXF1ZXN0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlcXVlc3QuaGVhZGVycy5zZXQoQVVUSE9SSVpBVElPTl9BVVhJTElBUllfSEVBREVSLCBhdXhpbGlhcnlUb2tlbnMubWFwKCh0b2tlbikgPT4gYEJlYXJlciAke3Rva2VufWApLmpvaW4oXCIsIFwiKSk7XG4gICAgICAgICAgICByZXR1cm4gbmV4dChyZXF1ZXN0KTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXV4aWxpYXJ5QXV0aGVudGljYXRpb25IZWFkZXJQb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/auxiliaryAuthenticationHeaderPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/bearerTokenAuthenticationPolicy.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/bearerTokenAuthenticationPolicy.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bearerTokenAuthenticationPolicy: () => (/* binding */ bearerTokenAuthenticationPolicy),\n/* harmony export */   bearerTokenAuthenticationPolicyName: () => (/* binding */ bearerTokenAuthenticationPolicyName),\n/* harmony export */   parseChallenges: () => (/* binding */ parseChallenges)\n/* harmony export */ });\n/* harmony import */ var _util_tokenCycler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/tokenCycler.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/tokenCycler.js\");\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../log.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js\");\n/* harmony import */ var _restError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../restError.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/restError.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n/**\n * The programmatic identifier of the bearerTokenAuthenticationPolicy.\n */\nconst bearerTokenAuthenticationPolicyName = \"bearerTokenAuthenticationPolicy\";\n/**\n * Try to send the given request.\n *\n * When a response is received, returns a tuple of the response received and, if the response was received\n * inside a thrown RestError, the RestError that was thrown.\n *\n * Otherwise, if an error was thrown while sending the request that did not provide an underlying response, it\n * will be rethrown.\n */\nasync function trySendRequest(request, next) {\n    try {\n        return [await next(request), undefined];\n    }\n    catch (e) {\n        if ((0,_restError_js__WEBPACK_IMPORTED_MODULE_2__.isRestError)(e) && e.response) {\n            return [e.response, e];\n        }\n        else {\n            throw e;\n        }\n    }\n}\n/**\n * Default authorize request handler\n */\nasync function defaultAuthorizeRequest(options) {\n    const { scopes, getAccessToken, request } = options;\n    // Enable CAE true by default\n    const getTokenOptions = {\n        abortSignal: request.abortSignal,\n        tracingOptions: request.tracingOptions,\n        enableCae: true,\n    };\n    const accessToken = await getAccessToken(scopes, getTokenOptions);\n    if (accessToken) {\n        options.request.headers.set(\"Authorization\", `Bearer ${accessToken.token}`);\n    }\n}\n/**\n * We will retrieve the challenge only if the response status code was 401,\n * and if the response contained the header \"WWW-Authenticate\" with a non-empty value.\n */\nfunction isChallengeResponse(response) {\n    return response.status === 401 && response.headers.has(\"WWW-Authenticate\");\n}\n/**\n * Re-authorize the request for CAE challenge.\n * The response containing the challenge is `options.response`.\n * If this method returns true, the underlying request will be sent once again.\n */\nasync function authorizeRequestOnCaeChallenge(onChallengeOptions, caeClaims) {\n    var _a;\n    const { scopes } = onChallengeOptions;\n    const accessToken = await onChallengeOptions.getAccessToken(scopes, {\n        enableCae: true,\n        claims: caeClaims,\n    });\n    if (!accessToken) {\n        return false;\n    }\n    onChallengeOptions.request.headers.set(\"Authorization\", `${(_a = accessToken.tokenType) !== null && _a !== void 0 ? _a : \"Bearer\"} ${accessToken.token}`);\n    return true;\n}\n/**\n * A policy that can request a token from a TokenCredential implementation and\n * then apply it to the Authorization header of a request as a Bearer token.\n */\nfunction bearerTokenAuthenticationPolicy(options) {\n    var _a, _b, _c;\n    const { credential, scopes, challengeCallbacks } = options;\n    const logger = options.logger || _log_js__WEBPACK_IMPORTED_MODULE_1__.logger;\n    const callbacks = {\n        authorizeRequest: (_b = (_a = challengeCallbacks === null || challengeCallbacks === void 0 ? void 0 : challengeCallbacks.authorizeRequest) === null || _a === void 0 ? void 0 : _a.bind(challengeCallbacks)) !== null && _b !== void 0 ? _b : defaultAuthorizeRequest,\n        authorizeRequestOnChallenge: (_c = challengeCallbacks === null || challengeCallbacks === void 0 ? void 0 : challengeCallbacks.authorizeRequestOnChallenge) === null || _c === void 0 ? void 0 : _c.bind(challengeCallbacks),\n    };\n    // This function encapsulates the entire process of reliably retrieving the token\n    // The options are left out of the public API until there's demand to configure this.\n    // Remember to extend `BearerTokenAuthenticationPolicyOptions` with `TokenCyclerOptions`\n    // in order to pass through the `options` object.\n    const getAccessToken = credential\n        ? (0,_util_tokenCycler_js__WEBPACK_IMPORTED_MODULE_0__.createTokenCycler)(credential /* , options */)\n        : () => Promise.resolve(null);\n    return {\n        name: bearerTokenAuthenticationPolicyName,\n        /**\n         * If there's no challenge parameter:\n         * - It will try to retrieve the token using the cache, or the credential's getToken.\n         * - Then it will try the next policy with or without the retrieved token.\n         *\n         * It uses the challenge parameters to:\n         * - Skip a first attempt to get the token from the credential if there's no cached token,\n         *   since it expects the token to be retrievable only after the challenge.\n         * - Prepare the outgoing request if the `prepareRequest` method has been provided.\n         * - Send an initial request to receive the challenge if it fails.\n         * - Process a challenge if the response contains it.\n         * - Retrieve a token with the challenge information, then re-send the request.\n         */\n        async sendRequest(request, next) {\n            if (!request.url.toLowerCase().startsWith(\"https://\")) {\n                throw new Error(\"Bearer token authentication is not permitted for non-TLS protected (non-https) URLs.\");\n            }\n            await callbacks.authorizeRequest({\n                scopes: Array.isArray(scopes) ? scopes : [scopes],\n                request,\n                getAccessToken,\n                logger,\n            });\n            let response;\n            let error;\n            let shouldSendRequest;\n            [response, error] = await trySendRequest(request, next);\n            if (isChallengeResponse(response)) {\n                let claims = getCaeChallengeClaims(response.headers.get(\"WWW-Authenticate\"));\n                // Handle CAE by default when receive CAE claim\n                if (claims) {\n                    let parsedClaim;\n                    // Return the response immediately if claims is not a valid base64 encoded string\n                    try {\n                        parsedClaim = atob(claims);\n                    }\n                    catch (e) {\n                        logger.warning(`The WWW-Authenticate header contains \"claims\" that cannot be parsed. Unable to perform the Continuous Access Evaluation authentication flow. Unparsable claims: ${claims}`);\n                        return response;\n                    }\n                    shouldSendRequest = await authorizeRequestOnCaeChallenge({\n                        scopes: Array.isArray(scopes) ? scopes : [scopes],\n                        response,\n                        request,\n                        getAccessToken,\n                        logger,\n                    }, parsedClaim);\n                    // Send updated request and handle response for RestError\n                    if (shouldSendRequest) {\n                        [response, error] = await trySendRequest(request, next);\n                    }\n                }\n                else if (callbacks.authorizeRequestOnChallenge) {\n                    // Handle custom challenges when client provides custom callback\n                    shouldSendRequest = await callbacks.authorizeRequestOnChallenge({\n                        scopes: Array.isArray(scopes) ? scopes : [scopes],\n                        request,\n                        response,\n                        getAccessToken,\n                        logger,\n                    });\n                    // Send updated request and handle response for RestError\n                    if (shouldSendRequest) {\n                        [response, error] = await trySendRequest(request, next);\n                    }\n                    // If we get another CAE Claim, we will handle it by default and return whatever value we receive for this\n                    if (isChallengeResponse(response)) {\n                        claims = getCaeChallengeClaims(response.headers.get(\"WWW-Authenticate\"));\n                        if (claims) {\n                            let parsedClaim;\n                            try {\n                                parsedClaim = atob(claims);\n                            }\n                            catch (e) {\n                                logger.warning(`The WWW-Authenticate header contains \"claims\" that cannot be parsed. Unable to perform the Continuous Access Evaluation authentication flow. Unparsable claims: ${claims}`);\n                                return response;\n                            }\n                            shouldSendRequest = await authorizeRequestOnCaeChallenge({\n                                scopes: Array.isArray(scopes) ? scopes : [scopes],\n                                response,\n                                request,\n                                getAccessToken,\n                                logger,\n                            }, parsedClaim);\n                            // Send updated request and handle response for RestError\n                            if (shouldSendRequest) {\n                                [response, error] = await trySendRequest(request, next);\n                            }\n                        }\n                    }\n                }\n            }\n            if (error) {\n                throw error;\n            }\n            else {\n                return response;\n            }\n        },\n    };\n}\n/**\n * Converts: `Bearer a=\"b\", c=\"d\", Pop e=\"f\", g=\"h\"`.\n * Into: `[ { scheme: 'Bearer', params: { a: 'b', c: 'd' } }, { scheme: 'Pop', params: { e: 'f', g: 'h' } } ]`.\n *\n * @internal\n */\nfunction parseChallenges(challenges) {\n    // Challenge regex seperates the string to individual challenges with different schemes in the format `Scheme a=\"b\", c=d`\n    // The challenge regex captures parameteres with either quotes values or unquoted values\n    const challengeRegex = /(\\w+)\\s+((?:\\w+=(?:\"[^\"]*\"|[^,]*),?\\s*)+)/g;\n    // Parameter regex captures the claims group removed from the scheme in the format `a=\"b\"` and `c=\"d\"`\n    // CAE challenge always have quoted parameters. For more reference, https://learn.microsoft.com/entra/identity-platform/claims-challenge\n    const paramRegex = /(\\w+)=\"([^\"]*)\"/g;\n    const parsedChallenges = [];\n    let match;\n    // Iterate over each challenge match\n    while ((match = challengeRegex.exec(challenges)) !== null) {\n        const scheme = match[1];\n        const paramsString = match[2];\n        const params = {};\n        let paramMatch;\n        // Iterate over each parameter match\n        while ((paramMatch = paramRegex.exec(paramsString)) !== null) {\n            params[paramMatch[1]] = paramMatch[2];\n        }\n        parsedChallenges.push({ scheme, params });\n    }\n    return parsedChallenges;\n}\n/**\n * Parse a pipeline response and look for a CAE challenge with \"Bearer\" scheme\n * Return the value in the header without parsing the challenge\n * @internal\n */\nfunction getCaeChallengeClaims(challenges) {\n    var _a;\n    if (!challenges) {\n        return;\n    }\n    // Find all challenges present in the header\n    const parsedChallenges = parseChallenges(challenges);\n    return (_a = parsedChallenges.find((x) => x.scheme === \"Bearer\" && x.params.claims && x.params.error === \"insufficient_claims\")) === null || _a === void 0 ? void 0 : _a.params.claims;\n}\n//# sourceMappingURL=bearerTokenAuthenticationPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/bearerTokenAuthenticationPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/decompressResponsePolicy.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/decompressResponsePolicy.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decompressResponsePolicy: () => (/* binding */ decompressResponsePolicy),\n/* harmony export */   decompressResponsePolicyName: () => (/* binding */ decompressResponsePolicyName)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * The programmatic identifier of the decompressResponsePolicy.\n */\nconst decompressResponsePolicyName = \"decompressResponsePolicy\";\n/**\n * A policy to enable response decompression according to Accept-Encoding header\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Encoding\n */\nfunction decompressResponsePolicy() {\n    return {\n        name: decompressResponsePolicyName,\n        async sendRequest(request, next) {\n            // HEAD requests have no body\n            if (request.method !== \"HEAD\") {\n                request.headers.set(\"Accept-Encoding\", \"gzip,deflate\");\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=decompressResponsePolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9kZWNvbXByZXNzUmVzcG9uc2VQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXJlc3QtcGlwZWxpbmVcXGRpc3RcXGVzbVxccG9saWNpZXNcXGRlY29tcHJlc3NSZXNwb25zZVBvbGljeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbi8qKlxuICogVGhlIHByb2dyYW1tYXRpYyBpZGVudGlmaWVyIG9mIHRoZSBkZWNvbXByZXNzUmVzcG9uc2VQb2xpY3kuXG4gKi9cbmV4cG9ydCBjb25zdCBkZWNvbXByZXNzUmVzcG9uc2VQb2xpY3lOYW1lID0gXCJkZWNvbXByZXNzUmVzcG9uc2VQb2xpY3lcIjtcbi8qKlxuICogQSBwb2xpY3kgdG8gZW5hYmxlIHJlc3BvbnNlIGRlY29tcHJlc3Npb24gYWNjb3JkaW5nIHRvIEFjY2VwdC1FbmNvZGluZyBoZWFkZXJcbiAqIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0hUVFAvSGVhZGVycy9BY2NlcHQtRW5jb2RpbmdcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29tcHJlc3NSZXNwb25zZVBvbGljeSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBkZWNvbXByZXNzUmVzcG9uc2VQb2xpY3lOYW1lLFxuICAgICAgICBhc3luYyBzZW5kUmVxdWVzdChyZXF1ZXN0LCBuZXh0KSB7XG4gICAgICAgICAgICAvLyBIRUFEIHJlcXVlc3RzIGhhdmUgbm8gYm9keVxuICAgICAgICAgICAgaWYgKHJlcXVlc3QubWV0aG9kICE9PSBcIkhFQURcIikge1xuICAgICAgICAgICAgICAgIHJlcXVlc3QuaGVhZGVycy5zZXQoXCJBY2NlcHQtRW5jb2RpbmdcIiwgXCJnemlwLGRlZmxhdGVcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbmV4dChyZXF1ZXN0KTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVjb21wcmVzc1Jlc3BvbnNlUG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/decompressResponsePolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/defaultRetryPolicy.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/defaultRetryPolicy.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultRetryPolicy: () => (/* binding */ defaultRetryPolicy),\n/* harmony export */   defaultRetryPolicyName: () => (/* binding */ defaultRetryPolicyName)\n/* harmony export */ });\n/* harmony import */ var _retryStrategies_exponentialRetryStrategy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../retryStrategies/exponentialRetryStrategy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/exponentialRetryStrategy.js\");\n/* harmony import */ var _retryStrategies_throttlingRetryStrategy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../retryStrategies/throttlingRetryStrategy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/throttlingRetryStrategy.js\");\n/* harmony import */ var _retryPolicy_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./retryPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/retryPolicy.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n/**\n * Name of the {@link defaultRetryPolicy}\n */\nconst defaultRetryPolicyName = \"defaultRetryPolicy\";\n/**\n * A policy that retries according to three strategies:\n * - When the server sends a 429 response with a Retry-After header.\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails, it will retry with an exponentially increasing delay.\n */\nfunction defaultRetryPolicy(options = {}) {\n    var _a;\n    return {\n        name: defaultRetryPolicyName,\n        sendRequest: (0,_retryPolicy_js__WEBPACK_IMPORTED_MODULE_2__.retryPolicy)([(0,_retryStrategies_throttlingRetryStrategy_js__WEBPACK_IMPORTED_MODULE_1__.throttlingRetryStrategy)(), (0,_retryStrategies_exponentialRetryStrategy_js__WEBPACK_IMPORTED_MODULE_0__.exponentialRetryStrategy)(options)], {\n            maxRetries: (_a = options.maxRetries) !== null && _a !== void 0 ? _a : _constants_js__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_RETRY_POLICY_COUNT,\n        }).sendRequest,\n    };\n}\n//# sourceMappingURL=defaultRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9kZWZhdWx0UmV0cnlQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUMwRjtBQUNGO0FBQ3pDO0FBQ2M7QUFDN0Q7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHdDQUF3QztBQUMvQztBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsNERBQVcsRUFBRSxvR0FBdUIsSUFBSSxzR0FBd0I7QUFDckYsbUZBQW1GLHFFQUEwQjtBQUM3RyxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGhlbGxvLXZvaWNlXFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1yZXN0LXBpcGVsaW5lXFxkaXN0XFxlc21cXHBvbGljaWVzXFxkZWZhdWx0UmV0cnlQb2xpY3kuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBleHBvbmVudGlhbFJldHJ5U3RyYXRlZ3kgfSBmcm9tIFwiLi4vcmV0cnlTdHJhdGVnaWVzL2V4cG9uZW50aWFsUmV0cnlTdHJhdGVneS5qc1wiO1xuaW1wb3J0IHsgdGhyb3R0bGluZ1JldHJ5U3RyYXRlZ3kgfSBmcm9tIFwiLi4vcmV0cnlTdHJhdGVnaWVzL3Rocm90dGxpbmdSZXRyeVN0cmF0ZWd5LmpzXCI7XG5pbXBvcnQgeyByZXRyeVBvbGljeSB9IGZyb20gXCIuL3JldHJ5UG9saWN5LmpzXCI7XG5pbXBvcnQgeyBERUZBVUxUX1JFVFJZX1BPTElDWV9DT1VOVCB9IGZyb20gXCIuLi9jb25zdGFudHMuanNcIjtcbi8qKlxuICogTmFtZSBvZiB0aGUge0BsaW5rIGRlZmF1bHRSZXRyeVBvbGljeX1cbiAqL1xuZXhwb3J0IGNvbnN0IGRlZmF1bHRSZXRyeVBvbGljeU5hbWUgPSBcImRlZmF1bHRSZXRyeVBvbGljeVwiO1xuLyoqXG4gKiBBIHBvbGljeSB0aGF0IHJldHJpZXMgYWNjb3JkaW5nIHRvIHRocmVlIHN0cmF0ZWdpZXM6XG4gKiAtIFdoZW4gdGhlIHNlcnZlciBzZW5kcyBhIDQyOSByZXNwb25zZSB3aXRoIGEgUmV0cnktQWZ0ZXIgaGVhZGVyLlxuICogLSBXaGVuIHRoZXJlIGFyZSBlcnJvcnMgaW4gdGhlIHVuZGVybHlpbmcgdHJhbnNwb3J0IGxheWVyIChlLmcuIEROUyBsb29rdXAgZmFpbHVyZXMpLlxuICogLSBPciBvdGhlcndpc2UgaWYgdGhlIG91dGdvaW5nIHJlcXVlc3QgZmFpbHMsIGl0IHdpbGwgcmV0cnkgd2l0aCBhbiBleHBvbmVudGlhbGx5IGluY3JlYXNpbmcgZGVsYXkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWZhdWx0UmV0cnlQb2xpY3kob3B0aW9ucyA9IHt9KSB7XG4gICAgdmFyIF9hO1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IGRlZmF1bHRSZXRyeVBvbGljeU5hbWUsXG4gICAgICAgIHNlbmRSZXF1ZXN0OiByZXRyeVBvbGljeShbdGhyb3R0bGluZ1JldHJ5U3RyYXRlZ3koKSwgZXhwb25lbnRpYWxSZXRyeVN0cmF0ZWd5KG9wdGlvbnMpXSwge1xuICAgICAgICAgICAgbWF4UmV0cmllczogKF9hID0gb3B0aW9ucy5tYXhSZXRyaWVzKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBERUZBVUxUX1JFVFJZX1BPTElDWV9DT1VOVCxcbiAgICAgICAgfSkuc2VuZFJlcXVlc3QsXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlZmF1bHRSZXRyeVBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/defaultRetryPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/exponentialRetryPolicy.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/exponentialRetryPolicy.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   exponentialRetryPolicy: () => (/* binding */ exponentialRetryPolicy),\n/* harmony export */   exponentialRetryPolicyName: () => (/* binding */ exponentialRetryPolicyName)\n/* harmony export */ });\n/* harmony import */ var _retryStrategies_exponentialRetryStrategy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../retryStrategies/exponentialRetryStrategy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/exponentialRetryStrategy.js\");\n/* harmony import */ var _retryPolicy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./retryPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/retryPolicy.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n/**\n * The programmatic identifier of the exponentialRetryPolicy.\n */\nconst exponentialRetryPolicyName = \"exponentialRetryPolicy\";\n/**\n * A policy that attempts to retry requests while introducing an exponentially increasing delay.\n * @param options - Options that configure retry logic.\n */\nfunction exponentialRetryPolicy(options = {}) {\n    var _a;\n    return (0,_retryPolicy_js__WEBPACK_IMPORTED_MODULE_1__.retryPolicy)([\n        (0,_retryStrategies_exponentialRetryStrategy_js__WEBPACK_IMPORTED_MODULE_0__.exponentialRetryStrategy)(Object.assign(Object.assign({}, options), { ignoreSystemErrors: true })),\n    ], {\n        maxRetries: (_a = options.maxRetries) !== null && _a !== void 0 ? _a : _constants_js__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_RETRY_POLICY_COUNT,\n    });\n}\n//# sourceMappingURL=exponentialRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9leHBvbmVudGlhbFJldHJ5UG9saWN5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUMwRjtBQUMzQztBQUNjO0FBQzdEO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDTyw0Q0FBNEM7QUFDbkQ7QUFDQSxXQUFXLDREQUFXO0FBQ3RCLFFBQVEsc0dBQXdCLCtCQUErQixjQUFjLDBCQUEwQjtBQUN2RztBQUNBLCtFQUErRSxxRUFBMEI7QUFDekcsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXJlc3QtcGlwZWxpbmVcXGRpc3RcXGVzbVxccG9saWNpZXNcXGV4cG9uZW50aWFsUmV0cnlQb2xpY3kuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBleHBvbmVudGlhbFJldHJ5U3RyYXRlZ3kgfSBmcm9tIFwiLi4vcmV0cnlTdHJhdGVnaWVzL2V4cG9uZW50aWFsUmV0cnlTdHJhdGVneS5qc1wiO1xuaW1wb3J0IHsgcmV0cnlQb2xpY3kgfSBmcm9tIFwiLi9yZXRyeVBvbGljeS5qc1wiO1xuaW1wb3J0IHsgREVGQVVMVF9SRVRSWV9QT0xJQ1lfQ09VTlQgfSBmcm9tIFwiLi4vY29uc3RhbnRzLmpzXCI7XG4vKipcbiAqIFRoZSBwcm9ncmFtbWF0aWMgaWRlbnRpZmllciBvZiB0aGUgZXhwb25lbnRpYWxSZXRyeVBvbGljeS5cbiAqL1xuZXhwb3J0IGNvbnN0IGV4cG9uZW50aWFsUmV0cnlQb2xpY3lOYW1lID0gXCJleHBvbmVudGlhbFJldHJ5UG9saWN5XCI7XG4vKipcbiAqIEEgcG9saWN5IHRoYXQgYXR0ZW1wdHMgdG8gcmV0cnkgcmVxdWVzdHMgd2hpbGUgaW50cm9kdWNpbmcgYW4gZXhwb25lbnRpYWxseSBpbmNyZWFzaW5nIGRlbGF5LlxuICogQHBhcmFtIG9wdGlvbnMgLSBPcHRpb25zIHRoYXQgY29uZmlndXJlIHJldHJ5IGxvZ2ljLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZXhwb25lbnRpYWxSZXRyeVBvbGljeShvcHRpb25zID0ge30pIHtcbiAgICB2YXIgX2E7XG4gICAgcmV0dXJuIHJldHJ5UG9saWN5KFtcbiAgICAgICAgZXhwb25lbnRpYWxSZXRyeVN0cmF0ZWd5KE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucyksIHsgaWdub3JlU3lzdGVtRXJyb3JzOiB0cnVlIH0pKSxcbiAgICBdLCB7XG4gICAgICAgIG1heFJldHJpZXM6IChfYSA9IG9wdGlvbnMubWF4UmV0cmllcykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogREVGQVVMVF9SRVRSWV9QT0xJQ1lfQ09VTlQsXG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1leHBvbmVudGlhbFJldHJ5UG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/exponentialRetryPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/formDataPolicy.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/formDataPolicy.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formDataPolicy: () => (/* binding */ formDataPolicy),\n/* harmony export */   formDataPolicyName: () => (/* binding */ formDataPolicyName)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _httpHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../httpHeaders.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/httpHeaders.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * The programmatic identifier of the formDataPolicy.\n */\nconst formDataPolicyName = \"formDataPolicy\";\nfunction formDataToFormDataMap(formData) {\n    var _a;\n    const formDataMap = {};\n    for (const [key, value] of formData.entries()) {\n        (_a = formDataMap[key]) !== null && _a !== void 0 ? _a : (formDataMap[key] = []);\n        formDataMap[key].push(value);\n    }\n    return formDataMap;\n}\n/**\n * A policy that encodes FormData on the request into the body.\n */\nfunction formDataPolicy() {\n    return {\n        name: formDataPolicyName,\n        async sendRequest(request, next) {\n            if (_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.isNodeLike && typeof FormData !== \"undefined\" && request.body instanceof FormData) {\n                request.formData = formDataToFormDataMap(request.body);\n                request.body = undefined;\n            }\n            if (request.formData) {\n                const contentType = request.headers.get(\"Content-Type\");\n                if (contentType && contentType.indexOf(\"application/x-www-form-urlencoded\") !== -1) {\n                    request.body = wwwFormUrlEncode(request.formData);\n                }\n                else {\n                    await prepareFormData(request.formData, request);\n                }\n                request.formData = undefined;\n            }\n            return next(request);\n        },\n    };\n}\nfunction wwwFormUrlEncode(formData) {\n    const urlSearchParams = new URLSearchParams();\n    for (const [key, value] of Object.entries(formData)) {\n        if (Array.isArray(value)) {\n            for (const subValue of value) {\n                urlSearchParams.append(key, subValue.toString());\n            }\n        }\n        else {\n            urlSearchParams.append(key, value.toString());\n        }\n    }\n    return urlSearchParams.toString();\n}\nasync function prepareFormData(formData, request) {\n    // validate content type (multipart/form-data)\n    const contentType = request.headers.get(\"Content-Type\");\n    if (contentType && !contentType.startsWith(\"multipart/form-data\")) {\n        // content type is specified and is not multipart/form-data. Exit.\n        return;\n    }\n    request.headers.set(\"Content-Type\", contentType !== null && contentType !== void 0 ? contentType : \"multipart/form-data\");\n    // set body to MultipartRequestBody using content from FormDataMap\n    const parts = [];\n    for (const [fieldName, values] of Object.entries(formData)) {\n        for (const value of Array.isArray(values) ? values : [values]) {\n            if (typeof value === \"string\") {\n                parts.push({\n                    headers: (0,_httpHeaders_js__WEBPACK_IMPORTED_MODULE_1__.createHttpHeaders)({\n                        \"Content-Disposition\": `form-data; name=\"${fieldName}\"`,\n                    }),\n                    body: (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(value, \"utf-8\"),\n                });\n            }\n            else if (value === undefined || value === null || typeof value !== \"object\") {\n                throw new Error(`Unexpected value for key ${fieldName}: ${value}. Value should be serialized to string first.`);\n            }\n            else {\n                // using || instead of ?? here since if value.name is empty we should create a file name\n                const fileName = value.name || \"blob\";\n                const headers = (0,_httpHeaders_js__WEBPACK_IMPORTED_MODULE_1__.createHttpHeaders)();\n                headers.set(\"Content-Disposition\", `form-data; name=\"${fieldName}\"; filename=\"${fileName}\"`);\n                // again, || is used since an empty value.type means the content type is unset\n                headers.set(\"Content-Type\", value.type || \"application/octet-stream\");\n                parts.push({\n                    headers,\n                    body: value,\n                });\n            }\n        }\n    }\n    request.multipartBody = { parts };\n}\n//# sourceMappingURL=formDataPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9mb3JtRGF0YVBvbGljeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNrRTtBQUNaO0FBQ3REO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isd0RBQVU7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsa0VBQWlCO0FBQzlDLDJEQUEyRCxRQUFRLFVBQVU7QUFDN0UscUJBQXFCO0FBQ3JCLDBCQUEwQixvRUFBa0I7QUFDNUMsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSw0REFBNEQsVUFBVSxJQUFJLE1BQU07QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0Msa0VBQWlCO0FBQ2pELCtEQUErRCxRQUFRLFVBQVUsR0FBRyxZQUFZLFNBQVM7QUFDekc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxoZWxsby12b2ljZVxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtcmVzdC1waXBlbGluZVxcZGlzdFxcZXNtXFxwb2xpY2llc1xcZm9ybURhdGFQb2xpY3kuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBpc05vZGVMaWtlLCBzdHJpbmdUb1VpbnQ4QXJyYXkgfSBmcm9tIFwiQGF6dXJlL2NvcmUtdXRpbFwiO1xuaW1wb3J0IHsgY3JlYXRlSHR0cEhlYWRlcnMgfSBmcm9tIFwiLi4vaHR0cEhlYWRlcnMuanNcIjtcbi8qKlxuICogVGhlIHByb2dyYW1tYXRpYyBpZGVudGlmaWVyIG9mIHRoZSBmb3JtRGF0YVBvbGljeS5cbiAqL1xuZXhwb3J0IGNvbnN0IGZvcm1EYXRhUG9saWN5TmFtZSA9IFwiZm9ybURhdGFQb2xpY3lcIjtcbmZ1bmN0aW9uIGZvcm1EYXRhVG9Gb3JtRGF0YU1hcChmb3JtRGF0YSkge1xuICAgIHZhciBfYTtcbiAgICBjb25zdCBmb3JtRGF0YU1hcCA9IHt9O1xuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIGZvcm1EYXRhLmVudHJpZXMoKSkge1xuICAgICAgICAoX2EgPSBmb3JtRGF0YU1hcFtrZXldKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiAoZm9ybURhdGFNYXBba2V5XSA9IFtdKTtcbiAgICAgICAgZm9ybURhdGFNYXBba2V5XS5wdXNoKHZhbHVlKTtcbiAgICB9XG4gICAgcmV0dXJuIGZvcm1EYXRhTWFwO1xufVxuLyoqXG4gKiBBIHBvbGljeSB0aGF0IGVuY29kZXMgRm9ybURhdGEgb24gdGhlIHJlcXVlc3QgaW50byB0aGUgYm9keS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZvcm1EYXRhUG9saWN5KCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IGZvcm1EYXRhUG9saWN5TmFtZSxcbiAgICAgICAgYXN5bmMgc2VuZFJlcXVlc3QocmVxdWVzdCwgbmV4dCkge1xuICAgICAgICAgICAgaWYgKGlzTm9kZUxpa2UgJiYgdHlwZW9mIEZvcm1EYXRhICE9PSBcInVuZGVmaW5lZFwiICYmIHJlcXVlc3QuYm9keSBpbnN0YW5jZW9mIEZvcm1EYXRhKSB7XG4gICAgICAgICAgICAgICAgcmVxdWVzdC5mb3JtRGF0YSA9IGZvcm1EYXRhVG9Gb3JtRGF0YU1hcChyZXF1ZXN0LmJvZHkpO1xuICAgICAgICAgICAgICAgIHJlcXVlc3QuYm9keSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChyZXF1ZXN0LmZvcm1EYXRhKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY29udGVudFR5cGUgPSByZXF1ZXN0LmhlYWRlcnMuZ2V0KFwiQ29udGVudC1UeXBlXCIpO1xuICAgICAgICAgICAgICAgIGlmIChjb250ZW50VHlwZSAmJiBjb250ZW50VHlwZS5pbmRleE9mKFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCIpICE9PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICByZXF1ZXN0LmJvZHkgPSB3d3dGb3JtVXJsRW5jb2RlKHJlcXVlc3QuZm9ybURhdGEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgYXdhaXQgcHJlcGFyZUZvcm1EYXRhKHJlcXVlc3QuZm9ybURhdGEsIHJlcXVlc3QpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXF1ZXN0LmZvcm1EYXRhID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG5leHQocmVxdWVzdCk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbmZ1bmN0aW9uIHd3d0Zvcm1VcmxFbmNvZGUoZm9ybURhdGEpIHtcbiAgICBjb25zdCB1cmxTZWFyY2hQYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKCk7XG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoZm9ybURhdGEpKSB7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICAgICAgZm9yIChjb25zdCBzdWJWYWx1ZSBvZiB2YWx1ZSkge1xuICAgICAgICAgICAgICAgIHVybFNlYXJjaFBhcmFtcy5hcHBlbmQoa2V5LCBzdWJWYWx1ZS50b1N0cmluZygpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHVybFNlYXJjaFBhcmFtcy5hcHBlbmQoa2V5LCB2YWx1ZS50b1N0cmluZygpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdXJsU2VhcmNoUGFyYW1zLnRvU3RyaW5nKCk7XG59XG5hc3luYyBmdW5jdGlvbiBwcmVwYXJlRm9ybURhdGEoZm9ybURhdGEsIHJlcXVlc3QpIHtcbiAgICAvLyB2YWxpZGF0ZSBjb250ZW50IHR5cGUgKG11bHRpcGFydC9mb3JtLWRhdGEpXG4gICAgY29uc3QgY29udGVudFR5cGUgPSByZXF1ZXN0LmhlYWRlcnMuZ2V0KFwiQ29udGVudC1UeXBlXCIpO1xuICAgIGlmIChjb250ZW50VHlwZSAmJiAhY29udGVudFR5cGUuc3RhcnRzV2l0aChcIm11bHRpcGFydC9mb3JtLWRhdGFcIikpIHtcbiAgICAgICAgLy8gY29udGVudCB0eXBlIGlzIHNwZWNpZmllZCBhbmQgaXMgbm90IG11bHRpcGFydC9mb3JtLWRhdGEuIEV4aXQuXG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgcmVxdWVzdC5oZWFkZXJzLnNldChcIkNvbnRlbnQtVHlwZVwiLCBjb250ZW50VHlwZSAhPT0gbnVsbCAmJiBjb250ZW50VHlwZSAhPT0gdm9pZCAwID8gY29udGVudFR5cGUgOiBcIm11bHRpcGFydC9mb3JtLWRhdGFcIik7XG4gICAgLy8gc2V0IGJvZHkgdG8gTXVsdGlwYXJ0UmVxdWVzdEJvZHkgdXNpbmcgY29udGVudCBmcm9tIEZvcm1EYXRhTWFwXG4gICAgY29uc3QgcGFydHMgPSBbXTtcbiAgICBmb3IgKGNvbnN0IFtmaWVsZE5hbWUsIHZhbHVlc10gb2YgT2JqZWN0LmVudHJpZXMoZm9ybURhdGEpKSB7XG4gICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgQXJyYXkuaXNBcnJheSh2YWx1ZXMpID8gdmFsdWVzIDogW3ZhbHVlc10pIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgICBwYXJ0cy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogY3JlYXRlSHR0cEhlYWRlcnMoe1xuICAgICAgICAgICAgICAgICAgICAgICAgXCJDb250ZW50LURpc3Bvc2l0aW9uXCI6IGBmb3JtLWRhdGE7IG5hbWU9XCIke2ZpZWxkTmFtZX1cImAsXG4gICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICBib2R5OiBzdHJpbmdUb1VpbnQ4QXJyYXkodmFsdWUsIFwidXRmLThcIiksXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHZhbHVlID09PSBudWxsIHx8IHR5cGVvZiB2YWx1ZSAhPT0gXCJvYmplY3RcIikge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5leHBlY3RlZCB2YWx1ZSBmb3Iga2V5ICR7ZmllbGROYW1lfTogJHt2YWx1ZX0uIFZhbHVlIHNob3VsZCBiZSBzZXJpYWxpemVkIHRvIHN0cmluZyBmaXJzdC5gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIHVzaW5nIHx8IGluc3RlYWQgb2YgPz8gaGVyZSBzaW5jZSBpZiB2YWx1ZS5uYW1lIGlzIGVtcHR5IHdlIHNob3VsZCBjcmVhdGUgYSBmaWxlIG5hbWVcbiAgICAgICAgICAgICAgICBjb25zdCBmaWxlTmFtZSA9IHZhbHVlLm5hbWUgfHwgXCJibG9iXCI7XG4gICAgICAgICAgICAgICAgY29uc3QgaGVhZGVycyA9IGNyZWF0ZUh0dHBIZWFkZXJzKCk7XG4gICAgICAgICAgICAgICAgaGVhZGVycy5zZXQoXCJDb250ZW50LURpc3Bvc2l0aW9uXCIsIGBmb3JtLWRhdGE7IG5hbWU9XCIke2ZpZWxkTmFtZX1cIjsgZmlsZW5hbWU9XCIke2ZpbGVOYW1lfVwiYCk7XG4gICAgICAgICAgICAgICAgLy8gYWdhaW4sIHx8IGlzIHVzZWQgc2luY2UgYW4gZW1wdHkgdmFsdWUudHlwZSBtZWFucyB0aGUgY29udGVudCB0eXBlIGlzIHVuc2V0XG4gICAgICAgICAgICAgICAgaGVhZGVycy5zZXQoXCJDb250ZW50LVR5cGVcIiwgdmFsdWUudHlwZSB8fCBcImFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbVwiKTtcbiAgICAgICAgICAgICAgICBwYXJ0cy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgaGVhZGVycyxcbiAgICAgICAgICAgICAgICAgICAgYm9keTogdmFsdWUsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmVxdWVzdC5tdWx0aXBhcnRCb2R5ID0geyBwYXJ0cyB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Zm9ybURhdGFQb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/formDataPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/logPolicy.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/logPolicy.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logPolicy: () => (/* binding */ logPolicy),\n/* harmony export */   logPolicyName: () => (/* binding */ logPolicyName)\n/* harmony export */ });\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../log.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js\");\n/* harmony import */ var _util_sanitizer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/sanitizer.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/sanitizer.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * The programmatic identifier of the logPolicy.\n */\nconst logPolicyName = \"logPolicy\";\n/**\n * A policy that logs all requests and responses.\n * @param options - Options to configure logPolicy.\n */\nfunction logPolicy(options = {}) {\n    var _a;\n    const logger = (_a = options.logger) !== null && _a !== void 0 ? _a : _log_js__WEBPACK_IMPORTED_MODULE_0__.logger.info;\n    const sanitizer = new _util_sanitizer_js__WEBPACK_IMPORTED_MODULE_1__.Sanitizer({\n        additionalAllowedHeaderNames: options.additionalAllowedHeaderNames,\n        additionalAllowedQueryParameters: options.additionalAllowedQueryParameters,\n    });\n    return {\n        name: logPolicyName,\n        async sendRequest(request, next) {\n            if (!logger.enabled) {\n                return next(request);\n            }\n            logger(`Request: ${sanitizer.sanitize(request)}`);\n            const response = await next(request);\n            logger(`Response status code: ${response.status}`);\n            logger(`Headers: ${sanitizer.sanitize(response.headers)}`);\n            return response;\n        },\n    };\n}\n//# sourceMappingURL=logPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9sb2dQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDaUQ7QUFDQTtBQUNqRDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ08sK0JBQStCO0FBQ3RDO0FBQ0EsMEVBQTBFLDJDQUFVO0FBQ3BGLDBCQUEwQix5REFBUztBQUNuQztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiw0QkFBNEI7QUFDM0Q7QUFDQSw0Q0FBNEMsZ0JBQWdCO0FBQzVELCtCQUErQixxQ0FBcUM7QUFDcEU7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGhlbGxvLXZvaWNlXFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1yZXN0LXBpcGVsaW5lXFxkaXN0XFxlc21cXHBvbGljaWVzXFxsb2dQb2xpY3kuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBsb2dnZXIgYXMgY29yZUxvZ2dlciB9IGZyb20gXCIuLi9sb2cuanNcIjtcbmltcG9ydCB7IFNhbml0aXplciB9IGZyb20gXCIuLi91dGlsL3Nhbml0aXplci5qc1wiO1xuLyoqXG4gKiBUaGUgcHJvZ3JhbW1hdGljIGlkZW50aWZpZXIgb2YgdGhlIGxvZ1BvbGljeS5cbiAqL1xuZXhwb3J0IGNvbnN0IGxvZ1BvbGljeU5hbWUgPSBcImxvZ1BvbGljeVwiO1xuLyoqXG4gKiBBIHBvbGljeSB0aGF0IGxvZ3MgYWxsIHJlcXVlc3RzIGFuZCByZXNwb25zZXMuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIE9wdGlvbnMgdG8gY29uZmlndXJlIGxvZ1BvbGljeS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGxvZ1BvbGljeShvcHRpb25zID0ge30pIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3QgbG9nZ2VyID0gKF9hID0gb3B0aW9ucy5sb2dnZXIpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGNvcmVMb2dnZXIuaW5mbztcbiAgICBjb25zdCBzYW5pdGl6ZXIgPSBuZXcgU2FuaXRpemVyKHtcbiAgICAgICAgYWRkaXRpb25hbEFsbG93ZWRIZWFkZXJOYW1lczogb3B0aW9ucy5hZGRpdGlvbmFsQWxsb3dlZEhlYWRlck5hbWVzLFxuICAgICAgICBhZGRpdGlvbmFsQWxsb3dlZFF1ZXJ5UGFyYW1ldGVyczogb3B0aW9ucy5hZGRpdGlvbmFsQWxsb3dlZFF1ZXJ5UGFyYW1ldGVycyxcbiAgICB9KTtcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBsb2dQb2xpY3lOYW1lLFxuICAgICAgICBhc3luYyBzZW5kUmVxdWVzdChyZXF1ZXN0LCBuZXh0KSB7XG4gICAgICAgICAgICBpZiAoIWxvZ2dlci5lbmFibGVkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5leHQocmVxdWVzdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsb2dnZXIoYFJlcXVlc3Q6ICR7c2FuaXRpemVyLnNhbml0aXplKHJlcXVlc3QpfWApO1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBuZXh0KHJlcXVlc3QpO1xuICAgICAgICAgICAgbG9nZ2VyKGBSZXNwb25zZSBzdGF0dXMgY29kZTogJHtyZXNwb25zZS5zdGF0dXN9YCk7XG4gICAgICAgICAgICBsb2dnZXIoYEhlYWRlcnM6ICR7c2FuaXRpemVyLnNhbml0aXplKHJlc3BvbnNlLmhlYWRlcnMpfWApO1xuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICB9LFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2dQb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/logPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/multipartPolicy.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/multipartPolicy.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   multipartPolicy: () => (/* binding */ multipartPolicy),\n/* harmony export */   multipartPolicyName: () => (/* binding */ multipartPolicyName)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _util_concat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/concat.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/concat.js\");\n/* harmony import */ var _util_typeGuards_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/typeGuards.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/typeGuards.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\nfunction generateBoundary() {\n    return `----AzSDKFormBoundary${(0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.randomUUID)()}`;\n}\nfunction encodeHeaders(headers) {\n    let result = \"\";\n    for (const [key, value] of headers) {\n        result += `${key}: ${value}\\r\\n`;\n    }\n    return result;\n}\nfunction getLength(source) {\n    if (source instanceof Uint8Array) {\n        return source.byteLength;\n    }\n    else if ((0,_util_typeGuards_js__WEBPACK_IMPORTED_MODULE_2__.isBlob)(source)) {\n        // if was created using createFile then -1 means we have an unknown size\n        return source.size === -1 ? undefined : source.size;\n    }\n    else {\n        return undefined;\n    }\n}\nfunction getTotalLength(sources) {\n    let total = 0;\n    for (const source of sources) {\n        const partLength = getLength(source);\n        if (partLength === undefined) {\n            return undefined;\n        }\n        else {\n            total += partLength;\n        }\n    }\n    return total;\n}\nasync function buildRequestBody(request, parts, boundary) {\n    const sources = [\n        (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(`--${boundary}`, \"utf-8\"),\n        ...parts.flatMap((part) => [\n            (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(\"\\r\\n\", \"utf-8\"),\n            (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(encodeHeaders(part.headers), \"utf-8\"),\n            (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(\"\\r\\n\", \"utf-8\"),\n            part.body,\n            (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(`\\r\\n--${boundary}`, \"utf-8\"),\n        ]),\n        (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(\"--\\r\\n\\r\\n\", \"utf-8\"),\n    ];\n    const contentLength = getTotalLength(sources);\n    if (contentLength) {\n        request.headers.set(\"Content-Length\", contentLength);\n    }\n    request.body = await (0,_util_concat_js__WEBPACK_IMPORTED_MODULE_1__.concat)(sources);\n}\n/**\n * Name of multipart policy\n */\nconst multipartPolicyName = \"multipartPolicy\";\nconst maxBoundaryLength = 70;\nconst validBoundaryCharacters = new Set(`abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'()+,-./:=?`);\nfunction assertValidBoundary(boundary) {\n    if (boundary.length > maxBoundaryLength) {\n        throw new Error(`Multipart boundary \"${boundary}\" exceeds maximum length of 70 characters`);\n    }\n    if (Array.from(boundary).some((x) => !validBoundaryCharacters.has(x))) {\n        throw new Error(`Multipart boundary \"${boundary}\" contains invalid characters`);\n    }\n}\n/**\n * Pipeline policy for multipart requests\n */\nfunction multipartPolicy() {\n    return {\n        name: multipartPolicyName,\n        async sendRequest(request, next) {\n            var _a;\n            if (!request.multipartBody) {\n                return next(request);\n            }\n            if (request.body) {\n                throw new Error(\"multipartBody and regular body cannot be set at the same time\");\n            }\n            let boundary = request.multipartBody.boundary;\n            const contentTypeHeader = (_a = request.headers.get(\"Content-Type\")) !== null && _a !== void 0 ? _a : \"multipart/mixed\";\n            const parsedHeader = contentTypeHeader.match(/^(multipart\\/[^ ;]+)(?:; *boundary=(.+))?$/);\n            if (!parsedHeader) {\n                throw new Error(`Got multipart request body, but content-type header was not multipart: ${contentTypeHeader}`);\n            }\n            const [, contentType, parsedBoundary] = parsedHeader;\n            if (parsedBoundary && boundary && parsedBoundary !== boundary) {\n                throw new Error(`Multipart boundary was specified as ${parsedBoundary} in the header, but got ${boundary} in the request body`);\n            }\n            boundary !== null && boundary !== void 0 ? boundary : (boundary = parsedBoundary);\n            if (boundary) {\n                assertValidBoundary(boundary);\n            }\n            else {\n                boundary = generateBoundary();\n            }\n            request.headers.set(\"Content-Type\", `${contentType}; boundary=${boundary}`);\n            await buildRequestBody(request, request.multipartBody.parts, boundary);\n            request.multipartBody = undefined;\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=multipartPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9tdWx0aXBhcnRQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ2tFO0FBQ3ZCO0FBQ0k7QUFDL0M7QUFDQSxtQ0FBbUMsNERBQVUsR0FBRztBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixJQUFJLElBQUksTUFBTTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsMkRBQU07QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLG9FQUFrQixNQUFNLFNBQVM7QUFDekM7QUFDQSxZQUFZLG9FQUFrQjtBQUM5QixZQUFZLG9FQUFrQjtBQUM5QixZQUFZLG9FQUFrQjtBQUM5QjtBQUNBLFlBQVksb0VBQWtCLFVBQVUsU0FBUztBQUNqRDtBQUNBLFFBQVEsb0VBQWtCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsdURBQU07QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLFNBQVM7QUFDeEQ7QUFDQTtBQUNBLCtDQUErQyxTQUFTO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJFQUEyRSxRQUFRO0FBQ25GO0FBQ0EsMEdBQTBHLGtCQUFrQjtBQUM1SDtBQUNBO0FBQ0E7QUFDQSx1RUFBdUUsZ0JBQWdCLHlCQUF5QixVQUFVO0FBQzFIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsY0FBYyxXQUFXLFNBQVM7QUFDckY7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxoZWxsby12b2ljZVxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtcmVzdC1waXBlbGluZVxcZGlzdFxcZXNtXFxwb2xpY2llc1xcbXVsdGlwYXJ0UG9saWN5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgcmFuZG9tVVVJRCwgc3RyaW5nVG9VaW50OEFycmF5IH0gZnJvbSBcIkBhenVyZS9jb3JlLXV0aWxcIjtcbmltcG9ydCB7IGNvbmNhdCB9IGZyb20gXCIuLi91dGlsL2NvbmNhdC5qc1wiO1xuaW1wb3J0IHsgaXNCbG9iIH0gZnJvbSBcIi4uL3V0aWwvdHlwZUd1YXJkcy5qc1wiO1xuZnVuY3Rpb24gZ2VuZXJhdGVCb3VuZGFyeSgpIHtcbiAgICByZXR1cm4gYC0tLS1BelNES0Zvcm1Cb3VuZGFyeSR7cmFuZG9tVVVJRCgpfWA7XG59XG5mdW5jdGlvbiBlbmNvZGVIZWFkZXJzKGhlYWRlcnMpIHtcbiAgICBsZXQgcmVzdWx0ID0gXCJcIjtcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBoZWFkZXJzKSB7XG4gICAgICAgIHJlc3VsdCArPSBgJHtrZXl9OiAke3ZhbHVlfVxcclxcbmA7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBnZXRMZW5ndGgoc291cmNlKSB7XG4gICAgaWYgKHNvdXJjZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgcmV0dXJuIHNvdXJjZS5ieXRlTGVuZ3RoO1xuICAgIH1cbiAgICBlbHNlIGlmIChpc0Jsb2Ioc291cmNlKSkge1xuICAgICAgICAvLyBpZiB3YXMgY3JlYXRlZCB1c2luZyBjcmVhdGVGaWxlIHRoZW4gLTEgbWVhbnMgd2UgaGF2ZSBhbiB1bmtub3duIHNpemVcbiAgICAgICAgcmV0dXJuIHNvdXJjZS5zaXplID09PSAtMSA/IHVuZGVmaW5lZCA6IHNvdXJjZS5zaXplO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG59XG5mdW5jdGlvbiBnZXRUb3RhbExlbmd0aChzb3VyY2VzKSB7XG4gICAgbGV0IHRvdGFsID0gMDtcbiAgICBmb3IgKGNvbnN0IHNvdXJjZSBvZiBzb3VyY2VzKSB7XG4gICAgICAgIGNvbnN0IHBhcnRMZW5ndGggPSBnZXRMZW5ndGgoc291cmNlKTtcbiAgICAgICAgaWYgKHBhcnRMZW5ndGggPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRvdGFsICs9IHBhcnRMZW5ndGg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRvdGFsO1xufVxuYXN5bmMgZnVuY3Rpb24gYnVpbGRSZXF1ZXN0Qm9keShyZXF1ZXN0LCBwYXJ0cywgYm91bmRhcnkpIHtcbiAgICBjb25zdCBzb3VyY2VzID0gW1xuICAgICAgICBzdHJpbmdUb1VpbnQ4QXJyYXkoYC0tJHtib3VuZGFyeX1gLCBcInV0Zi04XCIpLFxuICAgICAgICAuLi5wYXJ0cy5mbGF0TWFwKChwYXJ0KSA9PiBbXG4gICAgICAgICAgICBzdHJpbmdUb1VpbnQ4QXJyYXkoXCJcXHJcXG5cIiwgXCJ1dGYtOFwiKSxcbiAgICAgICAgICAgIHN0cmluZ1RvVWludDhBcnJheShlbmNvZGVIZWFkZXJzKHBhcnQuaGVhZGVycyksIFwidXRmLThcIiksXG4gICAgICAgICAgICBzdHJpbmdUb1VpbnQ4QXJyYXkoXCJcXHJcXG5cIiwgXCJ1dGYtOFwiKSxcbiAgICAgICAgICAgIHBhcnQuYm9keSxcbiAgICAgICAgICAgIHN0cmluZ1RvVWludDhBcnJheShgXFxyXFxuLS0ke2JvdW5kYXJ5fWAsIFwidXRmLThcIiksXG4gICAgICAgIF0pLFxuICAgICAgICBzdHJpbmdUb1VpbnQ4QXJyYXkoXCItLVxcclxcblxcclxcblwiLCBcInV0Zi04XCIpLFxuICAgIF07XG4gICAgY29uc3QgY29udGVudExlbmd0aCA9IGdldFRvdGFsTGVuZ3RoKHNvdXJjZXMpO1xuICAgIGlmIChjb250ZW50TGVuZ3RoKSB7XG4gICAgICAgIHJlcXVlc3QuaGVhZGVycy5zZXQoXCJDb250ZW50LUxlbmd0aFwiLCBjb250ZW50TGVuZ3RoKTtcbiAgICB9XG4gICAgcmVxdWVzdC5ib2R5ID0gYXdhaXQgY29uY2F0KHNvdXJjZXMpO1xufVxuLyoqXG4gKiBOYW1lIG9mIG11bHRpcGFydCBwb2xpY3lcbiAqL1xuZXhwb3J0IGNvbnN0IG11bHRpcGFydFBvbGljeU5hbWUgPSBcIm11bHRpcGFydFBvbGljeVwiO1xuY29uc3QgbWF4Qm91bmRhcnlMZW5ndGggPSA3MDtcbmNvbnN0IHZhbGlkQm91bmRhcnlDaGFyYWN0ZXJzID0gbmV3IFNldChgYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXpBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWjAxMjM0NTY3ODknKCkrLC0uLzo9P2ApO1xuZnVuY3Rpb24gYXNzZXJ0VmFsaWRCb3VuZGFyeShib3VuZGFyeSkge1xuICAgIGlmIChib3VuZGFyeS5sZW5ndGggPiBtYXhCb3VuZGFyeUxlbmd0aCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE11bHRpcGFydCBib3VuZGFyeSBcIiR7Ym91bmRhcnl9XCIgZXhjZWVkcyBtYXhpbXVtIGxlbmd0aCBvZiA3MCBjaGFyYWN0ZXJzYCk7XG4gICAgfVxuICAgIGlmIChBcnJheS5mcm9tKGJvdW5kYXJ5KS5zb21lKCh4KSA9PiAhdmFsaWRCb3VuZGFyeUNoYXJhY3RlcnMuaGFzKHgpKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE11bHRpcGFydCBib3VuZGFyeSBcIiR7Ym91bmRhcnl9XCIgY29udGFpbnMgaW52YWxpZCBjaGFyYWN0ZXJzYCk7XG4gICAgfVxufVxuLyoqXG4gKiBQaXBlbGluZSBwb2xpY3kgZm9yIG11bHRpcGFydCByZXF1ZXN0c1xuICovXG5leHBvcnQgZnVuY3Rpb24gbXVsdGlwYXJ0UG9saWN5KCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IG11bHRpcGFydFBvbGljeU5hbWUsXG4gICAgICAgIGFzeW5jIHNlbmRSZXF1ZXN0KHJlcXVlc3QsIG5leHQpIHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIGlmICghcmVxdWVzdC5tdWx0aXBhcnRCb2R5KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5leHQocmVxdWVzdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocmVxdWVzdC5ib2R5KSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwibXVsdGlwYXJ0Qm9keSBhbmQgcmVndWxhciBib2R5IGNhbm5vdCBiZSBzZXQgYXQgdGhlIHNhbWUgdGltZVwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCBib3VuZGFyeSA9IHJlcXVlc3QubXVsdGlwYXJ0Qm9keS5ib3VuZGFyeTtcbiAgICAgICAgICAgIGNvbnN0IGNvbnRlbnRUeXBlSGVhZGVyID0gKF9hID0gcmVxdWVzdC5oZWFkZXJzLmdldChcIkNvbnRlbnQtVHlwZVwiKSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogXCJtdWx0aXBhcnQvbWl4ZWRcIjtcbiAgICAgICAgICAgIGNvbnN0IHBhcnNlZEhlYWRlciA9IGNvbnRlbnRUeXBlSGVhZGVyLm1hdGNoKC9eKG11bHRpcGFydFxcL1teIDtdKykoPzo7ICpib3VuZGFyeT0oLispKT8kLyk7XG4gICAgICAgICAgICBpZiAoIXBhcnNlZEhlYWRlcikge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgR290IG11bHRpcGFydCByZXF1ZXN0IGJvZHksIGJ1dCBjb250ZW50LXR5cGUgaGVhZGVyIHdhcyBub3QgbXVsdGlwYXJ0OiAke2NvbnRlbnRUeXBlSGVhZGVyfWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgWywgY29udGVudFR5cGUsIHBhcnNlZEJvdW5kYXJ5XSA9IHBhcnNlZEhlYWRlcjtcbiAgICAgICAgICAgIGlmIChwYXJzZWRCb3VuZGFyeSAmJiBib3VuZGFyeSAmJiBwYXJzZWRCb3VuZGFyeSAhPT0gYm91bmRhcnkpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE11bHRpcGFydCBib3VuZGFyeSB3YXMgc3BlY2lmaWVkIGFzICR7cGFyc2VkQm91bmRhcnl9IGluIHRoZSBoZWFkZXIsIGJ1dCBnb3QgJHtib3VuZGFyeX0gaW4gdGhlIHJlcXVlc3QgYm9keWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYm91bmRhcnkgIT09IG51bGwgJiYgYm91bmRhcnkgIT09IHZvaWQgMCA/IGJvdW5kYXJ5IDogKGJvdW5kYXJ5ID0gcGFyc2VkQm91bmRhcnkpO1xuICAgICAgICAgICAgaWYgKGJvdW5kYXJ5KSB7XG4gICAgICAgICAgICAgICAgYXNzZXJ0VmFsaWRCb3VuZGFyeShib3VuZGFyeSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBib3VuZGFyeSA9IGdlbmVyYXRlQm91bmRhcnkoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlcXVlc3QuaGVhZGVycy5zZXQoXCJDb250ZW50LVR5cGVcIiwgYCR7Y29udGVudFR5cGV9OyBib3VuZGFyeT0ke2JvdW5kYXJ5fWApO1xuICAgICAgICAgICAgYXdhaXQgYnVpbGRSZXF1ZXN0Qm9keShyZXF1ZXN0LCByZXF1ZXN0Lm11bHRpcGFydEJvZHkucGFydHMsIGJvdW5kYXJ5KTtcbiAgICAgICAgICAgIHJlcXVlc3QubXVsdGlwYXJ0Qm9keSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIHJldHVybiBuZXh0KHJlcXVlc3QpO1xuICAgICAgICB9LFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tdWx0aXBhcnRQb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/multipartPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/ndJsonPolicy.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/ndJsonPolicy.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ndJsonPolicy: () => (/* binding */ ndJsonPolicy),\n/* harmony export */   ndJsonPolicyName: () => (/* binding */ ndJsonPolicyName)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * The programmatic identifier of the ndJsonPolicy.\n */\nconst ndJsonPolicyName = \"ndJsonPolicy\";\n/**\n * ndJsonPolicy is a policy used to control keep alive settings for every request.\n */\nfunction ndJsonPolicy() {\n    return {\n        name: ndJsonPolicyName,\n        async sendRequest(request, next) {\n            // There currently isn't a good way to bypass the serializer\n            if (typeof request.body === \"string\" && request.body.startsWith(\"[\")) {\n                const body = JSON.parse(request.body);\n                if (Array.isArray(body)) {\n                    request.body = body.map((item) => JSON.stringify(item) + \"\\n\").join(\"\");\n                }\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=ndJsonPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9uZEpzb25Qb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGhlbGxvLXZvaWNlXFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1yZXN0LXBpcGVsaW5lXFxkaXN0XFxlc21cXHBvbGljaWVzXFxuZEpzb25Qb2xpY3kuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vKipcbiAqIFRoZSBwcm9ncmFtbWF0aWMgaWRlbnRpZmllciBvZiB0aGUgbmRKc29uUG9saWN5LlxuICovXG5leHBvcnQgY29uc3QgbmRKc29uUG9saWN5TmFtZSA9IFwibmRKc29uUG9saWN5XCI7XG4vKipcbiAqIG5kSnNvblBvbGljeSBpcyBhIHBvbGljeSB1c2VkIHRvIGNvbnRyb2wga2VlcCBhbGl2ZSBzZXR0aW5ncyBmb3IgZXZlcnkgcmVxdWVzdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG5kSnNvblBvbGljeSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBuZEpzb25Qb2xpY3lOYW1lLFxuICAgICAgICBhc3luYyBzZW5kUmVxdWVzdChyZXF1ZXN0LCBuZXh0KSB7XG4gICAgICAgICAgICAvLyBUaGVyZSBjdXJyZW50bHkgaXNuJ3QgYSBnb29kIHdheSB0byBieXBhc3MgdGhlIHNlcmlhbGl6ZXJcbiAgICAgICAgICAgIGlmICh0eXBlb2YgcmVxdWVzdC5ib2R5ID09PSBcInN0cmluZ1wiICYmIHJlcXVlc3QuYm9keS5zdGFydHNXaXRoKFwiW1wiKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGJvZHkgPSBKU09OLnBhcnNlKHJlcXVlc3QuYm9keSk7XG4gICAgICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoYm9keSkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVxdWVzdC5ib2R5ID0gYm9keS5tYXAoKGl0ZW0pID0+IEpTT04uc3RyaW5naWZ5KGl0ZW0pICsgXCJcXG5cIikuam9pbihcIlwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbmV4dChyZXF1ZXN0KTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bmRKc29uUG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/ndJsonPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/proxyPolicy.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/proxyPolicy.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDefaultProxySettings: () => (/* binding */ getDefaultProxySettings),\n/* harmony export */   globalNoProxyList: () => (/* binding */ globalNoProxyList),\n/* harmony export */   loadNoProxy: () => (/* binding */ loadNoProxy),\n/* harmony export */   proxyPolicy: () => (/* binding */ proxyPolicy),\n/* harmony export */   proxyPolicyName: () => (/* binding */ proxyPolicyName)\n/* harmony export */ });\n/* harmony import */ var https_proxy_agent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! https-proxy-agent */ \"(ssr)/./node_modules/https-proxy-agent/dist/index.js\");\n/* harmony import */ var http_proxy_agent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! http-proxy-agent */ \"(ssr)/./node_modules/http-proxy-agent/dist/index.js\");\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../log.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\nconst HTTPS_PROXY = \"HTTPS_PROXY\";\nconst HTTP_PROXY = \"HTTP_PROXY\";\nconst ALL_PROXY = \"ALL_PROXY\";\nconst NO_PROXY = \"NO_PROXY\";\n/**\n * The programmatic identifier of the proxyPolicy.\n */\nconst proxyPolicyName = \"proxyPolicy\";\n/**\n * Stores the patterns specified in NO_PROXY environment variable.\n * @internal\n */\nconst globalNoProxyList = [];\nlet noProxyListLoaded = false;\n/** A cache of whether a host should bypass the proxy. */\nconst globalBypassedMap = new Map();\nfunction getEnvironmentValue(name) {\n    if (process.env[name]) {\n        return process.env[name];\n    }\n    else if (process.env[name.toLowerCase()]) {\n        return process.env[name.toLowerCase()];\n    }\n    return undefined;\n}\nfunction loadEnvironmentProxyValue() {\n    if (!process) {\n        return undefined;\n    }\n    const httpsProxy = getEnvironmentValue(HTTPS_PROXY);\n    const allProxy = getEnvironmentValue(ALL_PROXY);\n    const httpProxy = getEnvironmentValue(HTTP_PROXY);\n    return httpsProxy || allProxy || httpProxy;\n}\n/**\n * Check whether the host of a given `uri` matches any pattern in the no proxy list.\n * If there's a match, any request sent to the same host shouldn't have the proxy settings set.\n * This implementation is a port of https://github.com/Azure/azure-sdk-for-net/blob/8cca811371159e527159c7eb65602477898683e2/sdk/core/Azure.Core/src/Pipeline/Internal/HttpEnvironmentProxy.cs#L210\n */\nfunction isBypassed(uri, noProxyList, bypassedMap) {\n    if (noProxyList.length === 0) {\n        return false;\n    }\n    const host = new URL(uri).hostname;\n    if (bypassedMap === null || bypassedMap === void 0 ? void 0 : bypassedMap.has(host)) {\n        return bypassedMap.get(host);\n    }\n    let isBypassedFlag = false;\n    for (const pattern of noProxyList) {\n        if (pattern[0] === \".\") {\n            // This should match either domain it self or any subdomain or host\n            // .foo.com will match foo.com it self or *.foo.com\n            if (host.endsWith(pattern)) {\n                isBypassedFlag = true;\n            }\n            else {\n                if (host.length === pattern.length - 1 && host === pattern.slice(1)) {\n                    isBypassedFlag = true;\n                }\n            }\n        }\n        else {\n            if (host === pattern) {\n                isBypassedFlag = true;\n            }\n        }\n    }\n    bypassedMap === null || bypassedMap === void 0 ? void 0 : bypassedMap.set(host, isBypassedFlag);\n    return isBypassedFlag;\n}\nfunction loadNoProxy() {\n    const noProxy = getEnvironmentValue(NO_PROXY);\n    noProxyListLoaded = true;\n    if (noProxy) {\n        return noProxy\n            .split(\",\")\n            .map((item) => item.trim())\n            .filter((item) => item.length);\n    }\n    return [];\n}\n/**\n * This method converts a proxy url into `ProxySettings` for use with ProxyPolicy.\n * If no argument is given, it attempts to parse a proxy URL from the environment\n * variables `HTTPS_PROXY` or `HTTP_PROXY`.\n * @param proxyUrl - The url of the proxy to use. May contain authentication information.\n * @deprecated - Internally this method is no longer necessary when setting proxy information.\n */\nfunction getDefaultProxySettings(proxyUrl) {\n    if (!proxyUrl) {\n        proxyUrl = loadEnvironmentProxyValue();\n        if (!proxyUrl) {\n            return undefined;\n        }\n    }\n    const parsedUrl = new URL(proxyUrl);\n    const schema = parsedUrl.protocol ? parsedUrl.protocol + \"//\" : \"\";\n    return {\n        host: schema + parsedUrl.hostname,\n        port: Number.parseInt(parsedUrl.port || \"80\"),\n        username: parsedUrl.username,\n        password: parsedUrl.password,\n    };\n}\n/**\n * This method attempts to parse a proxy URL from the environment\n * variables `HTTPS_PROXY` or `HTTP_PROXY`.\n */\nfunction getDefaultProxySettingsInternal() {\n    const envProxy = loadEnvironmentProxyValue();\n    return envProxy ? new URL(envProxy) : undefined;\n}\nfunction getUrlFromProxySettings(settings) {\n    let parsedProxyUrl;\n    try {\n        parsedProxyUrl = new URL(settings.host);\n    }\n    catch (_a) {\n        throw new Error(`Expecting a valid host string in proxy settings, but found \"${settings.host}\".`);\n    }\n    parsedProxyUrl.port = String(settings.port);\n    if (settings.username) {\n        parsedProxyUrl.username = settings.username;\n    }\n    if (settings.password) {\n        parsedProxyUrl.password = settings.password;\n    }\n    return parsedProxyUrl;\n}\nfunction setProxyAgentOnRequest(request, cachedAgents, proxyUrl) {\n    // Custom Agent should take precedence so if one is present\n    // we should skip to avoid overwriting it.\n    if (request.agent) {\n        return;\n    }\n    const url = new URL(request.url);\n    const isInsecure = url.protocol !== \"https:\";\n    if (request.tlsSettings) {\n        _log_js__WEBPACK_IMPORTED_MODULE_2__.logger.warning(\"TLS settings are not supported in combination with custom Proxy, certificates provided to the client will be ignored.\");\n    }\n    const headers = request.headers.toJSON();\n    if (isInsecure) {\n        if (!cachedAgents.httpProxyAgent) {\n            cachedAgents.httpProxyAgent = new http_proxy_agent__WEBPACK_IMPORTED_MODULE_1__.HttpProxyAgent(proxyUrl, { headers });\n        }\n        request.agent = cachedAgents.httpProxyAgent;\n    }\n    else {\n        if (!cachedAgents.httpsProxyAgent) {\n            cachedAgents.httpsProxyAgent = new https_proxy_agent__WEBPACK_IMPORTED_MODULE_0__.HttpsProxyAgent(proxyUrl, { headers });\n        }\n        request.agent = cachedAgents.httpsProxyAgent;\n    }\n}\n/**\n * A policy that allows one to apply proxy settings to all requests.\n * If not passed static settings, they will be retrieved from the HTTPS_PROXY\n * or HTTP_PROXY environment variables.\n * @param proxySettings - ProxySettings to use on each request.\n * @param options - additional settings, for example, custom NO_PROXY patterns\n */\nfunction proxyPolicy(proxySettings, options) {\n    if (!noProxyListLoaded) {\n        globalNoProxyList.push(...loadNoProxy());\n    }\n    const defaultProxy = proxySettings\n        ? getUrlFromProxySettings(proxySettings)\n        : getDefaultProxySettingsInternal();\n    const cachedAgents = {};\n    return {\n        name: proxyPolicyName,\n        async sendRequest(request, next) {\n            var _a;\n            if (!request.proxySettings &&\n                defaultProxy &&\n                !isBypassed(request.url, (_a = options === null || options === void 0 ? void 0 : options.customNoProxyList) !== null && _a !== void 0 ? _a : globalNoProxyList, (options === null || options === void 0 ? void 0 : options.customNoProxyList) ? undefined : globalBypassedMap)) {\n                setProxyAgentOnRequest(request, cachedAgents, defaultProxy);\n            }\n            else if (request.proxySettings) {\n                setProxyAgentOnRequest(request, cachedAgents, getUrlFromProxySettings(request.proxySettings));\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=proxyPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/proxyPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/redirectPolicy.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/redirectPolicy.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   redirectPolicy: () => (/* binding */ redirectPolicy),\n/* harmony export */   redirectPolicyName: () => (/* binding */ redirectPolicyName)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * The programmatic identifier of the redirectPolicy.\n */\nconst redirectPolicyName = \"redirectPolicy\";\n/**\n * Methods that are allowed to follow redirects 301 and 302\n */\nconst allowedRedirect = [\"GET\", \"HEAD\"];\n/**\n * A policy to follow Location headers from the server in order\n * to support server-side redirection.\n * In the browser, this policy is not used.\n * @param options - Options to control policy behavior.\n */\nfunction redirectPolicy(options = {}) {\n    const { maxRetries = 20 } = options;\n    return {\n        name: redirectPolicyName,\n        async sendRequest(request, next) {\n            const response = await next(request);\n            return handleRedirect(next, response, maxRetries);\n        },\n    };\n}\nasync function handleRedirect(next, response, maxRetries, currentRetries = 0) {\n    const { request, status, headers } = response;\n    const locationHeader = headers.get(\"location\");\n    if (locationHeader &&\n        (status === 300 ||\n            (status === 301 && allowedRedirect.includes(request.method)) ||\n            (status === 302 && allowedRedirect.includes(request.method)) ||\n            (status === 303 && request.method === \"POST\") ||\n            status === 307) &&\n        currentRetries < maxRetries) {\n        const url = new URL(locationHeader, request.url);\n        request.url = url.toString();\n        // POST request with Status code 303 should be converted into a\n        // redirected GET request if the redirect url is present in the location header\n        if (status === 303) {\n            request.method = \"GET\";\n            request.headers.delete(\"Content-Length\");\n            delete request.body;\n        }\n        request.headers.delete(\"Authorization\");\n        const res = await next(request);\n        return handleRedirect(next, res, maxRetries, currentRetries + 1);\n    }\n    return response;\n}\n//# sourceMappingURL=redirectPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9yZWRpcmVjdFBvbGljeS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sb0NBQW9DO0FBQzNDLFlBQVksa0JBQWtCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsWUFBWSwyQkFBMkI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGhlbGxvLXZvaWNlXFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1yZXN0LXBpcGVsaW5lXFxkaXN0XFxlc21cXHBvbGljaWVzXFxyZWRpcmVjdFBvbGljeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbi8qKlxuICogVGhlIHByb2dyYW1tYXRpYyBpZGVudGlmaWVyIG9mIHRoZSByZWRpcmVjdFBvbGljeS5cbiAqL1xuZXhwb3J0IGNvbnN0IHJlZGlyZWN0UG9saWN5TmFtZSA9IFwicmVkaXJlY3RQb2xpY3lcIjtcbi8qKlxuICogTWV0aG9kcyB0aGF0IGFyZSBhbGxvd2VkIHRvIGZvbGxvdyByZWRpcmVjdHMgMzAxIGFuZCAzMDJcbiAqL1xuY29uc3QgYWxsb3dlZFJlZGlyZWN0ID0gW1wiR0VUXCIsIFwiSEVBRFwiXTtcbi8qKlxuICogQSBwb2xpY3kgdG8gZm9sbG93IExvY2F0aW9uIGhlYWRlcnMgZnJvbSB0aGUgc2VydmVyIGluIG9yZGVyXG4gKiB0byBzdXBwb3J0IHNlcnZlci1zaWRlIHJlZGlyZWN0aW9uLlxuICogSW4gdGhlIGJyb3dzZXIsIHRoaXMgcG9saWN5IGlzIG5vdCB1c2VkLlxuICogQHBhcmFtIG9wdGlvbnMgLSBPcHRpb25zIHRvIGNvbnRyb2wgcG9saWN5IGJlaGF2aW9yLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcmVkaXJlY3RQb2xpY3kob3B0aW9ucyA9IHt9KSB7XG4gICAgY29uc3QgeyBtYXhSZXRyaWVzID0gMjAgfSA9IG9wdGlvbnM7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogcmVkaXJlY3RQb2xpY3lOYW1lLFxuICAgICAgICBhc3luYyBzZW5kUmVxdWVzdChyZXF1ZXN0LCBuZXh0KSB7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IG5leHQocmVxdWVzdCk7XG4gICAgICAgICAgICByZXR1cm4gaGFuZGxlUmVkaXJlY3QobmV4dCwgcmVzcG9uc2UsIG1heFJldHJpZXMpO1xuICAgICAgICB9LFxuICAgIH07XG59XG5hc3luYyBmdW5jdGlvbiBoYW5kbGVSZWRpcmVjdChuZXh0LCByZXNwb25zZSwgbWF4UmV0cmllcywgY3VycmVudFJldHJpZXMgPSAwKSB7XG4gICAgY29uc3QgeyByZXF1ZXN0LCBzdGF0dXMsIGhlYWRlcnMgfSA9IHJlc3BvbnNlO1xuICAgIGNvbnN0IGxvY2F0aW9uSGVhZGVyID0gaGVhZGVycy5nZXQoXCJsb2NhdGlvblwiKTtcbiAgICBpZiAobG9jYXRpb25IZWFkZXIgJiZcbiAgICAgICAgKHN0YXR1cyA9PT0gMzAwIHx8XG4gICAgICAgICAgICAoc3RhdHVzID09PSAzMDEgJiYgYWxsb3dlZFJlZGlyZWN0LmluY2x1ZGVzKHJlcXVlc3QubWV0aG9kKSkgfHxcbiAgICAgICAgICAgIChzdGF0dXMgPT09IDMwMiAmJiBhbGxvd2VkUmVkaXJlY3QuaW5jbHVkZXMocmVxdWVzdC5tZXRob2QpKSB8fFxuICAgICAgICAgICAgKHN0YXR1cyA9PT0gMzAzICYmIHJlcXVlc3QubWV0aG9kID09PSBcIlBPU1RcIikgfHxcbiAgICAgICAgICAgIHN0YXR1cyA9PT0gMzA3KSAmJlxuICAgICAgICBjdXJyZW50UmV0cmllcyA8IG1heFJldHJpZXMpIHtcbiAgICAgICAgY29uc3QgdXJsID0gbmV3IFVSTChsb2NhdGlvbkhlYWRlciwgcmVxdWVzdC51cmwpO1xuICAgICAgICByZXF1ZXN0LnVybCA9IHVybC50b1N0cmluZygpO1xuICAgICAgICAvLyBQT1NUIHJlcXVlc3Qgd2l0aCBTdGF0dXMgY29kZSAzMDMgc2hvdWxkIGJlIGNvbnZlcnRlZCBpbnRvIGFcbiAgICAgICAgLy8gcmVkaXJlY3RlZCBHRVQgcmVxdWVzdCBpZiB0aGUgcmVkaXJlY3QgdXJsIGlzIHByZXNlbnQgaW4gdGhlIGxvY2F0aW9uIGhlYWRlclxuICAgICAgICBpZiAoc3RhdHVzID09PSAzMDMpIHtcbiAgICAgICAgICAgIHJlcXVlc3QubWV0aG9kID0gXCJHRVRcIjtcbiAgICAgICAgICAgIHJlcXVlc3QuaGVhZGVycy5kZWxldGUoXCJDb250ZW50LUxlbmd0aFwiKTtcbiAgICAgICAgICAgIGRlbGV0ZSByZXF1ZXN0LmJvZHk7XG4gICAgICAgIH1cbiAgICAgICAgcmVxdWVzdC5oZWFkZXJzLmRlbGV0ZShcIkF1dGhvcml6YXRpb25cIik7XG4gICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IG5leHQocmVxdWVzdCk7XG4gICAgICAgIHJldHVybiBoYW5kbGVSZWRpcmVjdChuZXh0LCByZXMsIG1heFJldHJpZXMsIGN1cnJlbnRSZXRyaWVzICsgMSk7XG4gICAgfVxuICAgIHJldHVybiByZXNwb25zZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlZGlyZWN0UG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/redirectPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/retryPolicy.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/retryPolicy.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   retryPolicy: () => (/* binding */ retryPolicy)\n/* harmony export */ });\n/* harmony import */ var _util_helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/helpers.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/helpers.js\");\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/logger */ \"(ssr)/./node_modules/@azure/logger/dist/esm/index.js\");\n/* harmony import */ var _azure_abort_controller__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/abort-controller */ \"(ssr)/./node_modules/@azure/abort-controller/dist/esm/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\nconst retryPolicyLogger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_1__.createClientLogger)(\"core-rest-pipeline retryPolicy\");\n/**\n * The programmatic identifier of the retryPolicy.\n */\nconst retryPolicyName = \"retryPolicy\";\n/**\n * retryPolicy is a generic policy to enable retrying requests when certain conditions are met\n */\nfunction retryPolicy(strategies, options = { maxRetries: _constants_js__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_RETRY_POLICY_COUNT }) {\n    const logger = options.logger || retryPolicyLogger;\n    return {\n        name: retryPolicyName,\n        async sendRequest(request, next) {\n            var _a, _b;\n            let response;\n            let responseError;\n            let retryCount = -1;\n            retryRequest: while (true) {\n                retryCount += 1;\n                response = undefined;\n                responseError = undefined;\n                try {\n                    logger.info(`Retry ${retryCount}: Attempting to send request`, request.requestId);\n                    response = await next(request);\n                    logger.info(`Retry ${retryCount}: Received a response from request`, request.requestId);\n                }\n                catch (e) {\n                    logger.error(`Retry ${retryCount}: Received an error from request`, request.requestId);\n                    // RestErrors are valid targets for the retry strategies.\n                    // If none of the retry strategies can work with them, they will be thrown later in this policy.\n                    // If the received error is not a RestError, it is immediately thrown.\n                    responseError = e;\n                    if (!e || responseError.name !== \"RestError\") {\n                        throw e;\n                    }\n                    response = responseError.response;\n                }\n                if ((_a = request.abortSignal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                    logger.error(`Retry ${retryCount}: Request aborted.`);\n                    const abortError = new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_2__.AbortError();\n                    throw abortError;\n                }\n                if (retryCount >= ((_b = options.maxRetries) !== null && _b !== void 0 ? _b : _constants_js__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_RETRY_POLICY_COUNT)) {\n                    logger.info(`Retry ${retryCount}: Maximum retries reached. Returning the last received response, or throwing the last received error.`);\n                    if (responseError) {\n                        throw responseError;\n                    }\n                    else if (response) {\n                        return response;\n                    }\n                    else {\n                        throw new Error(\"Maximum retries reached with no response or error to throw\");\n                    }\n                }\n                logger.info(`Retry ${retryCount}: Processing ${strategies.length} retry strategies.`);\n                strategiesLoop: for (const strategy of strategies) {\n                    const strategyLogger = strategy.logger || retryPolicyLogger;\n                    strategyLogger.info(`Retry ${retryCount}: Processing retry strategy ${strategy.name}.`);\n                    const modifiers = strategy.retry({\n                        retryCount,\n                        response,\n                        responseError,\n                    });\n                    if (modifiers.skipStrategy) {\n                        strategyLogger.info(`Retry ${retryCount}: Skipped.`);\n                        continue strategiesLoop;\n                    }\n                    const { errorToThrow, retryAfterInMs, redirectTo } = modifiers;\n                    if (errorToThrow) {\n                        strategyLogger.error(`Retry ${retryCount}: Retry strategy ${strategy.name} throws error:`, errorToThrow);\n                        throw errorToThrow;\n                    }\n                    if (retryAfterInMs || retryAfterInMs === 0) {\n                        strategyLogger.info(`Retry ${retryCount}: Retry strategy ${strategy.name} retries after ${retryAfterInMs}`);\n                        await (0,_util_helpers_js__WEBPACK_IMPORTED_MODULE_0__.delay)(retryAfterInMs, undefined, { abortSignal: request.abortSignal });\n                        continue retryRequest;\n                    }\n                    if (redirectTo) {\n                        strategyLogger.info(`Retry ${retryCount}: Retry strategy ${strategy.name} redirects to ${redirectTo}`);\n                        request.url = redirectTo;\n                        continue retryRequest;\n                    }\n                }\n                if (responseError) {\n                    logger.info(`None of the retry strategies could work with the received error. Throwing it.`);\n                    throw responseError;\n                }\n                if (response) {\n                    logger.info(`None of the retry strategies could work with the received response. Returning it.`);\n                    return response;\n                }\n                // If all the retries skip and there's no response,\n                // we're still in the retry loop, so a new request will be sent\n                // until `maxRetries` is reached.\n            }\n        },\n    };\n}\n//# sourceMappingURL=retryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/retryPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/setClientRequestIdPolicy.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/setClientRequestIdPolicy.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setClientRequestIdPolicy: () => (/* binding */ setClientRequestIdPolicy),\n/* harmony export */   setClientRequestIdPolicyName: () => (/* binding */ setClientRequestIdPolicyName)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * The programmatic identifier of the setClientRequestIdPolicy.\n */\nconst setClientRequestIdPolicyName = \"setClientRequestIdPolicy\";\n/**\n * Each PipelineRequest gets a unique id upon creation.\n * This policy passes that unique id along via an HTTP header to enable better\n * telemetry and tracing.\n * @param requestIdHeaderName - The name of the header to pass the request ID to.\n */\nfunction setClientRequestIdPolicy(requestIdHeaderName = \"x-ms-client-request-id\") {\n    return {\n        name: setClientRequestIdPolicyName,\n        async sendRequest(request, next) {\n            if (!request.headers.has(requestIdHeaderName)) {\n                request.headers.set(requestIdHeaderName, request.requestId);\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=setClientRequestIdPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9zZXRDbGllbnRSZXF1ZXN0SWRQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxoZWxsby12b2ljZVxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtcmVzdC1waXBlbGluZVxcZGlzdFxcZXNtXFxwb2xpY2llc1xcc2V0Q2xpZW50UmVxdWVzdElkUG9saWN5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqXG4gKiBUaGUgcHJvZ3JhbW1hdGljIGlkZW50aWZpZXIgb2YgdGhlIHNldENsaWVudFJlcXVlc3RJZFBvbGljeS5cbiAqL1xuZXhwb3J0IGNvbnN0IHNldENsaWVudFJlcXVlc3RJZFBvbGljeU5hbWUgPSBcInNldENsaWVudFJlcXVlc3RJZFBvbGljeVwiO1xuLyoqXG4gKiBFYWNoIFBpcGVsaW5lUmVxdWVzdCBnZXRzIGEgdW5pcXVlIGlkIHVwb24gY3JlYXRpb24uXG4gKiBUaGlzIHBvbGljeSBwYXNzZXMgdGhhdCB1bmlxdWUgaWQgYWxvbmcgdmlhIGFuIEhUVFAgaGVhZGVyIHRvIGVuYWJsZSBiZXR0ZXJcbiAqIHRlbGVtZXRyeSBhbmQgdHJhY2luZy5cbiAqIEBwYXJhbSByZXF1ZXN0SWRIZWFkZXJOYW1lIC0gVGhlIG5hbWUgb2YgdGhlIGhlYWRlciB0byBwYXNzIHRoZSByZXF1ZXN0IElEIHRvLlxuICovXG5leHBvcnQgZnVuY3Rpb24gc2V0Q2xpZW50UmVxdWVzdElkUG9saWN5KHJlcXVlc3RJZEhlYWRlck5hbWUgPSBcIngtbXMtY2xpZW50LXJlcXVlc3QtaWRcIikge1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IHNldENsaWVudFJlcXVlc3RJZFBvbGljeU5hbWUsXG4gICAgICAgIGFzeW5jIHNlbmRSZXF1ZXN0KHJlcXVlc3QsIG5leHQpIHtcbiAgICAgICAgICAgIGlmICghcmVxdWVzdC5oZWFkZXJzLmhhcyhyZXF1ZXN0SWRIZWFkZXJOYW1lKSkge1xuICAgICAgICAgICAgICAgIHJlcXVlc3QuaGVhZGVycy5zZXQocmVxdWVzdElkSGVhZGVyTmFtZSwgcmVxdWVzdC5yZXF1ZXN0SWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG5leHQocmVxdWVzdCk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNldENsaWVudFJlcXVlc3RJZFBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/setClientRequestIdPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/systemErrorRetryPolicy.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/systemErrorRetryPolicy.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   systemErrorRetryPolicy: () => (/* binding */ systemErrorRetryPolicy),\n/* harmony export */   systemErrorRetryPolicyName: () => (/* binding */ systemErrorRetryPolicyName)\n/* harmony export */ });\n/* harmony import */ var _retryStrategies_exponentialRetryStrategy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../retryStrategies/exponentialRetryStrategy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/exponentialRetryStrategy.js\");\n/* harmony import */ var _retryPolicy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./retryPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/retryPolicy.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n/**\n * Name of the {@link systemErrorRetryPolicy}\n */\nconst systemErrorRetryPolicyName = \"systemErrorRetryPolicy\";\n/**\n * A retry policy that specifically seeks to handle errors in the\n * underlying transport layer (e.g. DNS lookup failures) rather than\n * retryable error codes from the server itself.\n * @param options - Options that customize the policy.\n */\nfunction systemErrorRetryPolicy(options = {}) {\n    var _a;\n    return {\n        name: systemErrorRetryPolicyName,\n        sendRequest: (0,_retryPolicy_js__WEBPACK_IMPORTED_MODULE_1__.retryPolicy)([\n            (0,_retryStrategies_exponentialRetryStrategy_js__WEBPACK_IMPORTED_MODULE_0__.exponentialRetryStrategy)(Object.assign(Object.assign({}, options), { ignoreHttpStatusCodes: true })),\n        ], {\n            maxRetries: (_a = options.maxRetries) !== null && _a !== void 0 ? _a : _constants_js__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_RETRY_POLICY_COUNT,\n        }).sendRequest,\n    };\n}\n//# sourceMappingURL=systemErrorRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9zeXN0ZW1FcnJvclJldHJ5UG9saWN5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUMwRjtBQUMzQztBQUNjO0FBQzdEO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyw0Q0FBNEM7QUFDbkQ7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDREQUFXO0FBQ2hDLFlBQVksc0dBQXdCLCtCQUErQixjQUFjLDZCQUE2QjtBQUM5RztBQUNBLG1GQUFtRixxRUFBMEI7QUFDN0csU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxoZWxsby12b2ljZVxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtcmVzdC1waXBlbGluZVxcZGlzdFxcZXNtXFxwb2xpY2llc1xcc3lzdGVtRXJyb3JSZXRyeVBvbGljeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGV4cG9uZW50aWFsUmV0cnlTdHJhdGVneSB9IGZyb20gXCIuLi9yZXRyeVN0cmF0ZWdpZXMvZXhwb25lbnRpYWxSZXRyeVN0cmF0ZWd5LmpzXCI7XG5pbXBvcnQgeyByZXRyeVBvbGljeSB9IGZyb20gXCIuL3JldHJ5UG9saWN5LmpzXCI7XG5pbXBvcnQgeyBERUZBVUxUX1JFVFJZX1BPTElDWV9DT1VOVCB9IGZyb20gXCIuLi9jb25zdGFudHMuanNcIjtcbi8qKlxuICogTmFtZSBvZiB0aGUge0BsaW5rIHN5c3RlbUVycm9yUmV0cnlQb2xpY3l9XG4gKi9cbmV4cG9ydCBjb25zdCBzeXN0ZW1FcnJvclJldHJ5UG9saWN5TmFtZSA9IFwic3lzdGVtRXJyb3JSZXRyeVBvbGljeVwiO1xuLyoqXG4gKiBBIHJldHJ5IHBvbGljeSB0aGF0IHNwZWNpZmljYWxseSBzZWVrcyB0byBoYW5kbGUgZXJyb3JzIGluIHRoZVxuICogdW5kZXJseWluZyB0cmFuc3BvcnQgbGF5ZXIgKGUuZy4gRE5TIGxvb2t1cCBmYWlsdXJlcykgcmF0aGVyIHRoYW5cbiAqIHJldHJ5YWJsZSBlcnJvciBjb2RlcyBmcm9tIHRoZSBzZXJ2ZXIgaXRzZWxmLlxuICogQHBhcmFtIG9wdGlvbnMgLSBPcHRpb25zIHRoYXQgY3VzdG9taXplIHRoZSBwb2xpY3kuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzeXN0ZW1FcnJvclJldHJ5UG9saWN5KG9wdGlvbnMgPSB7fSkge1xuICAgIHZhciBfYTtcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBzeXN0ZW1FcnJvclJldHJ5UG9saWN5TmFtZSxcbiAgICAgICAgc2VuZFJlcXVlc3Q6IHJldHJ5UG9saWN5KFtcbiAgICAgICAgICAgIGV4cG9uZW50aWFsUmV0cnlTdHJhdGVneShPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbnMpLCB7IGlnbm9yZUh0dHBTdGF0dXNDb2RlczogdHJ1ZSB9KSksXG4gICAgICAgIF0sIHtcbiAgICAgICAgICAgIG1heFJldHJpZXM6IChfYSA9IG9wdGlvbnMubWF4UmV0cmllcykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogREVGQVVMVF9SRVRSWV9QT0xJQ1lfQ09VTlQsXG4gICAgICAgIH0pLnNlbmRSZXF1ZXN0LFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zeXN0ZW1FcnJvclJldHJ5UG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/systemErrorRetryPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/throttlingRetryPolicy.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/throttlingRetryPolicy.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   throttlingRetryPolicy: () => (/* binding */ throttlingRetryPolicy),\n/* harmony export */   throttlingRetryPolicyName: () => (/* binding */ throttlingRetryPolicyName)\n/* harmony export */ });\n/* harmony import */ var _retryStrategies_throttlingRetryStrategy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../retryStrategies/throttlingRetryStrategy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/throttlingRetryStrategy.js\");\n/* harmony import */ var _retryPolicy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./retryPolicy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/retryPolicy.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n/**\n * Name of the {@link throttlingRetryPolicy}\n */\nconst throttlingRetryPolicyName = \"throttlingRetryPolicy\";\n/**\n * A policy that retries when the server sends a 429 response with a Retry-After header.\n *\n * To learn more, please refer to\n * https://learn.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-request-limits,\n * https://learn.microsoft.com/en-us/azure/azure-subscription-service-limits and\n * https://learn.microsoft.com/en-us/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors\n *\n * @param options - Options that configure retry logic.\n */\nfunction throttlingRetryPolicy(options = {}) {\n    var _a;\n    return {\n        name: throttlingRetryPolicyName,\n        sendRequest: (0,_retryPolicy_js__WEBPACK_IMPORTED_MODULE_1__.retryPolicy)([(0,_retryStrategies_throttlingRetryStrategy_js__WEBPACK_IMPORTED_MODULE_0__.throttlingRetryStrategy)()], {\n            maxRetries: (_a = options.maxRetries) !== null && _a !== void 0 ? _a : _constants_js__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_RETRY_POLICY_COUNT,\n        }).sendRequest,\n    };\n}\n//# sourceMappingURL=throttlingRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy90aHJvdHRsaW5nUmV0cnlQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ3dGO0FBQ3pDO0FBQ2M7QUFDN0Q7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sMkNBQTJDO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw0REFBVyxFQUFFLG9HQUF1QjtBQUN6RCxtRkFBbUYscUVBQTBCO0FBQzdHLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXJlc3QtcGlwZWxpbmVcXGRpc3RcXGVzbVxccG9saWNpZXNcXHRocm90dGxpbmdSZXRyeVBvbGljeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IHRocm90dGxpbmdSZXRyeVN0cmF0ZWd5IH0gZnJvbSBcIi4uL3JldHJ5U3RyYXRlZ2llcy90aHJvdHRsaW5nUmV0cnlTdHJhdGVneS5qc1wiO1xuaW1wb3J0IHsgcmV0cnlQb2xpY3kgfSBmcm9tIFwiLi9yZXRyeVBvbGljeS5qc1wiO1xuaW1wb3J0IHsgREVGQVVMVF9SRVRSWV9QT0xJQ1lfQ09VTlQgfSBmcm9tIFwiLi4vY29uc3RhbnRzLmpzXCI7XG4vKipcbiAqIE5hbWUgb2YgdGhlIHtAbGluayB0aHJvdHRsaW5nUmV0cnlQb2xpY3l9XG4gKi9cbmV4cG9ydCBjb25zdCB0aHJvdHRsaW5nUmV0cnlQb2xpY3lOYW1lID0gXCJ0aHJvdHRsaW5nUmV0cnlQb2xpY3lcIjtcbi8qKlxuICogQSBwb2xpY3kgdGhhdCByZXRyaWVzIHdoZW4gdGhlIHNlcnZlciBzZW5kcyBhIDQyOSByZXNwb25zZSB3aXRoIGEgUmV0cnktQWZ0ZXIgaGVhZGVyLlxuICpcbiAqIFRvIGxlYXJuIG1vcmUsIHBsZWFzZSByZWZlciB0b1xuICogaHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL2VuLXVzL2F6dXJlL2F6dXJlLXJlc291cmNlLW1hbmFnZXIvcmVzb3VyY2UtbWFuYWdlci1yZXF1ZXN0LWxpbWl0cyxcbiAqIGh0dHBzOi8vbGVhcm4ubWljcm9zb2Z0LmNvbS9lbi11cy9henVyZS9henVyZS1zdWJzY3JpcHRpb24tc2VydmljZS1saW1pdHMgYW5kXG4gKiBodHRwczovL2xlYXJuLm1pY3Jvc29mdC5jb20vZW4tdXMvYXp1cmUvdmlydHVhbC1tYWNoaW5lcy90cm91Ymxlc2hvb3RpbmcvdHJvdWJsZXNob290aW5nLXRocm90dGxpbmctZXJyb3JzXG4gKlxuICogQHBhcmFtIG9wdGlvbnMgLSBPcHRpb25zIHRoYXQgY29uZmlndXJlIHJldHJ5IGxvZ2ljLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdGhyb3R0bGluZ1JldHJ5UG9saWN5KG9wdGlvbnMgPSB7fSkge1xuICAgIHZhciBfYTtcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiB0aHJvdHRsaW5nUmV0cnlQb2xpY3lOYW1lLFxuICAgICAgICBzZW5kUmVxdWVzdDogcmV0cnlQb2xpY3koW3Rocm90dGxpbmdSZXRyeVN0cmF0ZWd5KCldLCB7XG4gICAgICAgICAgICBtYXhSZXRyaWVzOiAoX2EgPSBvcHRpb25zLm1heFJldHJpZXMpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IERFRkFVTFRfUkVUUllfUE9MSUNZX0NPVU5ULFxuICAgICAgICB9KS5zZW5kUmVxdWVzdCxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dGhyb3R0bGluZ1JldHJ5UG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/throttlingRetryPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tlsPolicy.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tlsPolicy.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tlsPolicy: () => (/* binding */ tlsPolicy),\n/* harmony export */   tlsPolicyName: () => (/* binding */ tlsPolicyName)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Name of the TLS Policy\n */\nconst tlsPolicyName = \"tlsPolicy\";\n/**\n * Gets a pipeline policy that adds the client certificate to the HttpClient agent for authentication.\n */\nfunction tlsPolicy(tlsSettings) {\n    return {\n        name: tlsPolicyName,\n        sendRequest: async (req, next) => {\n            // Users may define a request tlsSettings, honor those over the client level one\n            if (!req.tlsSettings) {\n                req.tlsSettings = tlsSettings;\n            }\n            return next(req);\n        },\n    };\n}\n//# sourceMappingURL=tlsPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy90bHNQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGhlbGxvLXZvaWNlXFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1yZXN0LXBpcGVsaW5lXFxkaXN0XFxlc21cXHBvbGljaWVzXFx0bHNQb2xpY3kuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vKipcbiAqIE5hbWUgb2YgdGhlIFRMUyBQb2xpY3lcbiAqL1xuZXhwb3J0IGNvbnN0IHRsc1BvbGljeU5hbWUgPSBcInRsc1BvbGljeVwiO1xuLyoqXG4gKiBHZXRzIGEgcGlwZWxpbmUgcG9saWN5IHRoYXQgYWRkcyB0aGUgY2xpZW50IGNlcnRpZmljYXRlIHRvIHRoZSBIdHRwQ2xpZW50IGFnZW50IGZvciBhdXRoZW50aWNhdGlvbi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRsc1BvbGljeSh0bHNTZXR0aW5ncykge1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IHRsc1BvbGljeU5hbWUsXG4gICAgICAgIHNlbmRSZXF1ZXN0OiBhc3luYyAocmVxLCBuZXh0KSA9PiB7XG4gICAgICAgICAgICAvLyBVc2VycyBtYXkgZGVmaW5lIGEgcmVxdWVzdCB0bHNTZXR0aW5ncywgaG9ub3IgdGhvc2Ugb3ZlciB0aGUgY2xpZW50IGxldmVsIG9uZVxuICAgICAgICAgICAgaWYgKCFyZXEudGxzU2V0dGluZ3MpIHtcbiAgICAgICAgICAgICAgICByZXEudGxzU2V0dGluZ3MgPSB0bHNTZXR0aW5ncztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBuZXh0KHJlcSk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRsc1BvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tlsPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tracingPolicy.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tracingPolicy.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tracingPolicy: () => (/* binding */ tracingPolicy),\n/* harmony export */   tracingPolicyName: () => (/* binding */ tracingPolicyName)\n/* harmony export */ });\n/* harmony import */ var _azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-tracing */ \"(ssr)/./node_modules/@azure/core-tracing/dist/esm/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js\");\n/* harmony import */ var _util_userAgent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/userAgent.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgent.js\");\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../log.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js\");\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/core-util */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _restError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../restError.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/restError.js\");\n/* harmony import */ var _util_sanitizer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/sanitizer.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/sanitizer.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n/**\n * The programmatic identifier of the tracingPolicy.\n */\nconst tracingPolicyName = \"tracingPolicy\";\n/**\n * A simple policy to create OpenTelemetry Spans for each request made by the pipeline\n * that has SpanOptions with a parent.\n * Requests made without a parent Span will not be recorded.\n * @param options - Options to configure the telemetry logged by the tracing policy.\n */\nfunction tracingPolicy(options = {}) {\n    const userAgentPromise = (0,_util_userAgent_js__WEBPACK_IMPORTED_MODULE_2__.getUserAgentValue)(options.userAgentPrefix);\n    const sanitizer = new _util_sanitizer_js__WEBPACK_IMPORTED_MODULE_6__.Sanitizer({\n        additionalAllowedQueryParameters: options.additionalAllowedQueryParameters,\n    });\n    const tracingClient = tryCreateTracingClient();\n    return {\n        name: tracingPolicyName,\n        async sendRequest(request, next) {\n            var _a;\n            if (!tracingClient) {\n                return next(request);\n            }\n            const userAgent = await userAgentPromise;\n            const spanAttributes = {\n                \"http.url\": sanitizer.sanitizeUrl(request.url),\n                \"http.method\": request.method,\n                \"http.user_agent\": userAgent,\n                requestId: request.requestId,\n            };\n            if (userAgent) {\n                spanAttributes[\"http.user_agent\"] = userAgent;\n            }\n            const { span, tracingContext } = (_a = tryCreateSpan(tracingClient, request, spanAttributes)) !== null && _a !== void 0 ? _a : {};\n            if (!span || !tracingContext) {\n                return next(request);\n            }\n            try {\n                const response = await tracingClient.withContext(tracingContext, next, request);\n                tryProcessResponse(span, response);\n                return response;\n            }\n            catch (err) {\n                tryProcessError(span, err);\n                throw err;\n            }\n        },\n    };\n}\nfunction tryCreateTracingClient() {\n    try {\n        return (0,_azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__.createTracingClient)({\n            namespace: \"\",\n            packageName: \"@azure/core-rest-pipeline\",\n            packageVersion: _constants_js__WEBPACK_IMPORTED_MODULE_1__.SDK_VERSION,\n        });\n    }\n    catch (e) {\n        _log_js__WEBPACK_IMPORTED_MODULE_3__.logger.warning(`Error when creating the TracingClient: ${(0,_azure_core_util__WEBPACK_IMPORTED_MODULE_4__.getErrorMessage)(e)}`);\n        return undefined;\n    }\n}\nfunction tryCreateSpan(tracingClient, request, spanAttributes) {\n    try {\n        // As per spec, we do not need to differentiate between HTTP and HTTPS in span name.\n        const { span, updatedOptions } = tracingClient.startSpan(`HTTP ${request.method}`, { tracingOptions: request.tracingOptions }, {\n            spanKind: \"client\",\n            spanAttributes,\n        });\n        // If the span is not recording, don't do any more work.\n        if (!span.isRecording()) {\n            span.end();\n            return undefined;\n        }\n        // set headers\n        const headers = tracingClient.createRequestHeaders(updatedOptions.tracingOptions.tracingContext);\n        for (const [key, value] of Object.entries(headers)) {\n            request.headers.set(key, value);\n        }\n        return { span, tracingContext: updatedOptions.tracingOptions.tracingContext };\n    }\n    catch (e) {\n        _log_js__WEBPACK_IMPORTED_MODULE_3__.logger.warning(`Skipping creating a tracing span due to an error: ${(0,_azure_core_util__WEBPACK_IMPORTED_MODULE_4__.getErrorMessage)(e)}`);\n        return undefined;\n    }\n}\nfunction tryProcessError(span, error) {\n    try {\n        span.setStatus({\n            status: \"error\",\n            error: (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_4__.isError)(error) ? error : undefined,\n        });\n        if ((0,_restError_js__WEBPACK_IMPORTED_MODULE_5__.isRestError)(error) && error.statusCode) {\n            span.setAttribute(\"http.status_code\", error.statusCode);\n        }\n        span.end();\n    }\n    catch (e) {\n        _log_js__WEBPACK_IMPORTED_MODULE_3__.logger.warning(`Skipping tracing span processing due to an error: ${(0,_azure_core_util__WEBPACK_IMPORTED_MODULE_4__.getErrorMessage)(e)}`);\n    }\n}\nfunction tryProcessResponse(span, response) {\n    try {\n        span.setAttribute(\"http.status_code\", response.status);\n        const serviceRequestId = response.headers.get(\"x-ms-request-id\");\n        if (serviceRequestId) {\n            span.setAttribute(\"serviceRequestId\", serviceRequestId);\n        }\n        // Per semantic conventions, only set the status to error if the status code is 4xx or 5xx.\n        // Otherwise, the status MUST remain unset.\n        // https://opentelemetry.io/docs/specs/semconv/http/http-spans/#status\n        if (response.status >= 400) {\n            span.setStatus({\n                status: \"error\",\n            });\n        }\n        span.end();\n    }\n    catch (e) {\n        _log_js__WEBPACK_IMPORTED_MODULE_3__.logger.warning(`Skipping tracing span processing due to an error: ${(0,_azure_core_util__WEBPACK_IMPORTED_MODULE_4__.getErrorMessage)(e)}`);\n    }\n}\n//# sourceMappingURL=tracingPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tracingPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/userAgentPolicy.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/userAgentPolicy.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   userAgentPolicy: () => (/* binding */ userAgentPolicy),\n/* harmony export */   userAgentPolicyName: () => (/* binding */ userAgentPolicyName)\n/* harmony export */ });\n/* harmony import */ var _util_userAgent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/userAgent.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgent.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nconst UserAgentHeaderName = (0,_util_userAgent_js__WEBPACK_IMPORTED_MODULE_0__.getUserAgentHeaderName)();\n/**\n * The programmatic identifier of the userAgentPolicy.\n */\nconst userAgentPolicyName = \"userAgentPolicy\";\n/**\n * A policy that sets the User-Agent header (or equivalent) to reflect\n * the library version.\n * @param options - Options to customize the user agent value.\n */\nfunction userAgentPolicy(options = {}) {\n    const userAgentValue = (0,_util_userAgent_js__WEBPACK_IMPORTED_MODULE_0__.getUserAgentValue)(options.userAgentPrefix);\n    return {\n        name: userAgentPolicyName,\n        async sendRequest(request, next) {\n            if (!request.headers.has(UserAgentHeaderName)) {\n                request.headers.set(UserAgentHeaderName, await userAgentValue);\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=userAgentPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy91c2VyQWdlbnRQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNpRjtBQUNqRiw0QkFBNEIsMEVBQXNCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHFDQUFxQztBQUM1QywyQkFBMkIscUVBQWlCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxoZWxsby12b2ljZVxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtcmVzdC1waXBlbGluZVxcZGlzdFxcZXNtXFxwb2xpY2llc1xcdXNlckFnZW50UG9saWN5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgZ2V0VXNlckFnZW50SGVhZGVyTmFtZSwgZ2V0VXNlckFnZW50VmFsdWUgfSBmcm9tIFwiLi4vdXRpbC91c2VyQWdlbnQuanNcIjtcbmNvbnN0IFVzZXJBZ2VudEhlYWRlck5hbWUgPSBnZXRVc2VyQWdlbnRIZWFkZXJOYW1lKCk7XG4vKipcbiAqIFRoZSBwcm9ncmFtbWF0aWMgaWRlbnRpZmllciBvZiB0aGUgdXNlckFnZW50UG9saWN5LlxuICovXG5leHBvcnQgY29uc3QgdXNlckFnZW50UG9saWN5TmFtZSA9IFwidXNlckFnZW50UG9saWN5XCI7XG4vKipcbiAqIEEgcG9saWN5IHRoYXQgc2V0cyB0aGUgVXNlci1BZ2VudCBoZWFkZXIgKG9yIGVxdWl2YWxlbnQpIHRvIHJlZmxlY3RcbiAqIHRoZSBsaWJyYXJ5IHZlcnNpb24uXG4gKiBAcGFyYW0gb3B0aW9ucyAtIE9wdGlvbnMgdG8gY3VzdG9taXplIHRoZSB1c2VyIGFnZW50IHZhbHVlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlckFnZW50UG9saWN5KG9wdGlvbnMgPSB7fSkge1xuICAgIGNvbnN0IHVzZXJBZ2VudFZhbHVlID0gZ2V0VXNlckFnZW50VmFsdWUob3B0aW9ucy51c2VyQWdlbnRQcmVmaXgpO1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IHVzZXJBZ2VudFBvbGljeU5hbWUsXG4gICAgICAgIGFzeW5jIHNlbmRSZXF1ZXN0KHJlcXVlc3QsIG5leHQpIHtcbiAgICAgICAgICAgIGlmICghcmVxdWVzdC5oZWFkZXJzLmhhcyhVc2VyQWdlbnRIZWFkZXJOYW1lKSkge1xuICAgICAgICAgICAgICAgIHJlcXVlc3QuaGVhZGVycy5zZXQoVXNlckFnZW50SGVhZGVyTmFtZSwgYXdhaXQgdXNlckFnZW50VmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG5leHQocmVxdWVzdCk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVzZXJBZ2VudFBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/userAgentPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/restError.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/restError.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RestError: () => (/* binding */ RestError),\n/* harmony export */   isRestError: () => (/* binding */ isRestError)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _util_inspect_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/inspect.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/inspect.js\");\n/* harmony import */ var _util_sanitizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/sanitizer.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/sanitizer.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\nconst errorSanitizer = new _util_sanitizer_js__WEBPACK_IMPORTED_MODULE_2__.Sanitizer();\n/**\n * A custom error type for failed pipeline requests.\n */\nclass RestError extends Error {\n    constructor(message, options = {}) {\n        super(message);\n        this.name = \"RestError\";\n        this.code = options.code;\n        this.statusCode = options.statusCode;\n        // The request and response may contain sensitive information in the headers or body.\n        // To help prevent this sensitive information being accidentally logged, the request and response\n        // properties are marked as non-enumerable here. This prevents them showing up in the output of\n        // JSON.stringify and console.log.\n        Object.defineProperty(this, \"request\", { value: options.request, enumerable: false });\n        Object.defineProperty(this, \"response\", { value: options.response, enumerable: false });\n        Object.setPrototypeOf(this, RestError.prototype);\n    }\n    /**\n     * Logging method for util.inspect in Node\n     */\n    [_util_inspect_js__WEBPACK_IMPORTED_MODULE_1__.custom]() {\n        // Extract non-enumerable properties and add them back. This is OK since in this output the request and\n        // response get sanitized.\n        return `RestError: ${this.message} \\n ${errorSanitizer.sanitize(Object.assign(Object.assign({}, this), { request: this.request, response: this.response }))}`;\n    }\n}\n/**\n * Something went wrong when making the request.\n * This means the actual request failed for some reason,\n * such as a DNS issue or the connection being lost.\n */\nRestError.REQUEST_SEND_ERROR = \"REQUEST_SEND_ERROR\";\n/**\n * This means that parsing the response from the server failed.\n * It may have been malformed.\n */\nRestError.PARSE_ERROR = \"PARSE_ERROR\";\n/**\n * Typeguard for RestError\n * @param e - Something caught by a catch clause.\n */\nfunction isRestError(e) {\n    if (e instanceof RestError) {\n        return true;\n    }\n    return (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.isError)(e) && e.name === \"RestError\";\n}\n//# sourceMappingURL=restError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9yZXN0RXJyb3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQzJDO0FBQ0E7QUFDSztBQUNoRCwyQkFBMkIseURBQVM7QUFDcEM7QUFDQTtBQUNBO0FBQ087QUFDUCxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCwyQ0FBMkM7QUFDNUYsa0RBQWtELDRDQUE0QztBQUM5RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxvREFBTTtBQUNYO0FBQ0E7QUFDQSw2QkFBNkIsY0FBYyxLQUFLLHNEQUFzRCxXQUFXLGdEQUFnRCxHQUFHO0FBQ3BLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLFdBQVcseURBQU87QUFDbEI7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxoZWxsby12b2ljZVxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtcmVzdC1waXBlbGluZVxcZGlzdFxcZXNtXFxyZXN0RXJyb3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBpc0Vycm9yIH0gZnJvbSBcIkBhenVyZS9jb3JlLXV0aWxcIjtcbmltcG9ydCB7IGN1c3RvbSB9IGZyb20gXCIuL3V0aWwvaW5zcGVjdC5qc1wiO1xuaW1wb3J0IHsgU2FuaXRpemVyIH0gZnJvbSBcIi4vdXRpbC9zYW5pdGl6ZXIuanNcIjtcbmNvbnN0IGVycm9yU2FuaXRpemVyID0gbmV3IFNhbml0aXplcigpO1xuLyoqXG4gKiBBIGN1c3RvbSBlcnJvciB0eXBlIGZvciBmYWlsZWQgcGlwZWxpbmUgcmVxdWVzdHMuXG4gKi9cbmV4cG9ydCBjbGFzcyBSZXN0RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLm5hbWUgPSBcIlJlc3RFcnJvclwiO1xuICAgICAgICB0aGlzLmNvZGUgPSBvcHRpb25zLmNvZGU7XG4gICAgICAgIHRoaXMuc3RhdHVzQ29kZSA9IG9wdGlvbnMuc3RhdHVzQ29kZTtcbiAgICAgICAgLy8gVGhlIHJlcXVlc3QgYW5kIHJlc3BvbnNlIG1heSBjb250YWluIHNlbnNpdGl2ZSBpbmZvcm1hdGlvbiBpbiB0aGUgaGVhZGVycyBvciBib2R5LlxuICAgICAgICAvLyBUbyBoZWxwIHByZXZlbnQgdGhpcyBzZW5zaXRpdmUgaW5mb3JtYXRpb24gYmVpbmcgYWNjaWRlbnRhbGx5IGxvZ2dlZCwgdGhlIHJlcXVlc3QgYW5kIHJlc3BvbnNlXG4gICAgICAgIC8vIHByb3BlcnRpZXMgYXJlIG1hcmtlZCBhcyBub24tZW51bWVyYWJsZSBoZXJlLiBUaGlzIHByZXZlbnRzIHRoZW0gc2hvd2luZyB1cCBpbiB0aGUgb3V0cHV0IG9mXG4gICAgICAgIC8vIEpTT04uc3RyaW5naWZ5IGFuZCBjb25zb2xlLmxvZy5cbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwicmVxdWVzdFwiLCB7IHZhbHVlOiBvcHRpb25zLnJlcXVlc3QsIGVudW1lcmFibGU6IGZhbHNlIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJyZXNwb25zZVwiLCB7IHZhbHVlOiBvcHRpb25zLnJlc3BvbnNlLCBlbnVtZXJhYmxlOiBmYWxzZSB9KTtcbiAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIFJlc3RFcnJvci5wcm90b3R5cGUpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBMb2dnaW5nIG1ldGhvZCBmb3IgdXRpbC5pbnNwZWN0IGluIE5vZGVcbiAgICAgKi9cbiAgICBbY3VzdG9tXSgpIHtcbiAgICAgICAgLy8gRXh0cmFjdCBub24tZW51bWVyYWJsZSBwcm9wZXJ0aWVzIGFuZCBhZGQgdGhlbSBiYWNrLiBUaGlzIGlzIE9LIHNpbmNlIGluIHRoaXMgb3V0cHV0IHRoZSByZXF1ZXN0IGFuZFxuICAgICAgICAvLyByZXNwb25zZSBnZXQgc2FuaXRpemVkLlxuICAgICAgICByZXR1cm4gYFJlc3RFcnJvcjogJHt0aGlzLm1lc3NhZ2V9IFxcbiAke2Vycm9yU2FuaXRpemVyLnNhbml0aXplKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgdGhpcyksIHsgcmVxdWVzdDogdGhpcy5yZXF1ZXN0LCByZXNwb25zZTogdGhpcy5yZXNwb25zZSB9KSl9YDtcbiAgICB9XG59XG4vKipcbiAqIFNvbWV0aGluZyB3ZW50IHdyb25nIHdoZW4gbWFraW5nIHRoZSByZXF1ZXN0LlxuICogVGhpcyBtZWFucyB0aGUgYWN0dWFsIHJlcXVlc3QgZmFpbGVkIGZvciBzb21lIHJlYXNvbixcbiAqIHN1Y2ggYXMgYSBETlMgaXNzdWUgb3IgdGhlIGNvbm5lY3Rpb24gYmVpbmcgbG9zdC5cbiAqL1xuUmVzdEVycm9yLlJFUVVFU1RfU0VORF9FUlJPUiA9IFwiUkVRVUVTVF9TRU5EX0VSUk9SXCI7XG4vKipcbiAqIFRoaXMgbWVhbnMgdGhhdCBwYXJzaW5nIHRoZSByZXNwb25zZSBmcm9tIHRoZSBzZXJ2ZXIgZmFpbGVkLlxuICogSXQgbWF5IGhhdmUgYmVlbiBtYWxmb3JtZWQuXG4gKi9cblJlc3RFcnJvci5QQVJTRV9FUlJPUiA9IFwiUEFSU0VfRVJST1JcIjtcbi8qKlxuICogVHlwZWd1YXJkIGZvciBSZXN0RXJyb3JcbiAqIEBwYXJhbSBlIC0gU29tZXRoaW5nIGNhdWdodCBieSBhIGNhdGNoIGNsYXVzZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzUmVzdEVycm9yKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIFJlc3RFcnJvcikge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGlzRXJyb3IoZSkgJiYgZS5uYW1lID09PSBcIlJlc3RFcnJvclwiO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVzdEVycm9yLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/restError.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/exponentialRetryStrategy.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/exponentialRetryStrategy.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   exponentialRetryStrategy: () => (/* binding */ exponentialRetryStrategy),\n/* harmony export */   isExponentialRetryResponse: () => (/* binding */ isExponentialRetryResponse),\n/* harmony export */   isSystemError: () => (/* binding */ isSystemError)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _throttlingRetryStrategy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./throttlingRetryStrategy.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/throttlingRetryStrategy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n// intervals are in milliseconds\nconst DEFAULT_CLIENT_RETRY_INTERVAL = 1000;\nconst DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 64;\n/**\n * A retry strategy that retries with an exponentially increasing delay in these two cases:\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails (408, greater or equal than 500, except for 501 and 505).\n */\nfunction exponentialRetryStrategy(options = {}) {\n    var _a, _b;\n    const retryInterval = (_a = options.retryDelayInMs) !== null && _a !== void 0 ? _a : DEFAULT_CLIENT_RETRY_INTERVAL;\n    const maxRetryInterval = (_b = options.maxRetryDelayInMs) !== null && _b !== void 0 ? _b : DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n    return {\n        name: \"exponentialRetryStrategy\",\n        retry({ retryCount, response, responseError }) {\n            const matchedSystemError = isSystemError(responseError);\n            const ignoreSystemErrors = matchedSystemError && options.ignoreSystemErrors;\n            const isExponential = isExponentialRetryResponse(response);\n            const ignoreExponentialResponse = isExponential && options.ignoreHttpStatusCodes;\n            const unknownResponse = response && ((0,_throttlingRetryStrategy_js__WEBPACK_IMPORTED_MODULE_1__.isThrottlingRetryResponse)(response) || !isExponential);\n            if (unknownResponse || ignoreExponentialResponse || ignoreSystemErrors) {\n                return { skipStrategy: true };\n            }\n            if (responseError && !matchedSystemError && !isExponential) {\n                return { errorToThrow: responseError };\n            }\n            return (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.calculateRetryDelay)(retryCount, {\n                retryDelayInMs: retryInterval,\n                maxRetryDelayInMs: maxRetryInterval,\n            });\n        },\n    };\n}\n/**\n * A response is a retry response if it has status codes:\n * - 408, or\n * - Greater or equal than 500, except for 501 and 505.\n */\nfunction isExponentialRetryResponse(response) {\n    return Boolean(response &&\n        response.status !== undefined &&\n        (response.status >= 500 || response.status === 408) &&\n        response.status !== 501 &&\n        response.status !== 505);\n}\n/**\n * Determines whether an error from a pipeline response was triggered in the network layer.\n */\nfunction isSystemError(err) {\n    if (!err) {\n        return false;\n    }\n    return (err.code === \"ETIMEDOUT\" ||\n        err.code === \"ESOCKETTIMEDOUT\" ||\n        err.code === \"ECONNREFUSED\" ||\n        err.code === \"ECONNRESET\" ||\n        err.code === \"ENOENT\" ||\n        err.code === \"ENOTFOUND\");\n}\n//# sourceMappingURL=exponentialRetryStrategy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9yZXRyeVN0cmF0ZWdpZXMvZXhwb25lbnRpYWxSZXRyeVN0cmF0ZWd5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUN1RDtBQUNrQjtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sOENBQThDO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IscUNBQXFDO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELHNGQUF5QjtBQUMxRTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0EsbUJBQW1CLHFFQUFtQjtBQUN0QztBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGhlbGxvLXZvaWNlXFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1yZXN0LXBpcGVsaW5lXFxkaXN0XFxlc21cXHJldHJ5U3RyYXRlZ2llc1xcZXhwb25lbnRpYWxSZXRyeVN0cmF0ZWd5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgY2FsY3VsYXRlUmV0cnlEZWxheSB9IGZyb20gXCJAYXp1cmUvY29yZS11dGlsXCI7XG5pbXBvcnQgeyBpc1Rocm90dGxpbmdSZXRyeVJlc3BvbnNlIH0gZnJvbSBcIi4vdGhyb3R0bGluZ1JldHJ5U3RyYXRlZ3kuanNcIjtcbi8vIGludGVydmFscyBhcmUgaW4gbWlsbGlzZWNvbmRzXG5jb25zdCBERUZBVUxUX0NMSUVOVF9SRVRSWV9JTlRFUlZBTCA9IDEwMDA7XG5jb25zdCBERUZBVUxUX0NMSUVOVF9NQVhfUkVUUllfSU5URVJWQUwgPSAxMDAwICogNjQ7XG4vKipcbiAqIEEgcmV0cnkgc3RyYXRlZ3kgdGhhdCByZXRyaWVzIHdpdGggYW4gZXhwb25lbnRpYWxseSBpbmNyZWFzaW5nIGRlbGF5IGluIHRoZXNlIHR3byBjYXNlczpcbiAqIC0gV2hlbiB0aGVyZSBhcmUgZXJyb3JzIGluIHRoZSB1bmRlcmx5aW5nIHRyYW5zcG9ydCBsYXllciAoZS5nLiBETlMgbG9va3VwIGZhaWx1cmVzKS5cbiAqIC0gT3Igb3RoZXJ3aXNlIGlmIHRoZSBvdXRnb2luZyByZXF1ZXN0IGZhaWxzICg0MDgsIGdyZWF0ZXIgb3IgZXF1YWwgdGhhbiA1MDAsIGV4Y2VwdCBmb3IgNTAxIGFuZCA1MDUpLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZXhwb25lbnRpYWxSZXRyeVN0cmF0ZWd5KG9wdGlvbnMgPSB7fSkge1xuICAgIHZhciBfYSwgX2I7XG4gICAgY29uc3QgcmV0cnlJbnRlcnZhbCA9IChfYSA9IG9wdGlvbnMucmV0cnlEZWxheUluTXMpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IERFRkFVTFRfQ0xJRU5UX1JFVFJZX0lOVEVSVkFMO1xuICAgIGNvbnN0IG1heFJldHJ5SW50ZXJ2YWwgPSAoX2IgPSBvcHRpb25zLm1heFJldHJ5RGVsYXlJbk1zKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBERUZBVUxUX0NMSUVOVF9NQVhfUkVUUllfSU5URVJWQUw7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogXCJleHBvbmVudGlhbFJldHJ5U3RyYXRlZ3lcIixcbiAgICAgICAgcmV0cnkoeyByZXRyeUNvdW50LCByZXNwb25zZSwgcmVzcG9uc2VFcnJvciB9KSB7XG4gICAgICAgICAgICBjb25zdCBtYXRjaGVkU3lzdGVtRXJyb3IgPSBpc1N5c3RlbUVycm9yKHJlc3BvbnNlRXJyb3IpO1xuICAgICAgICAgICAgY29uc3QgaWdub3JlU3lzdGVtRXJyb3JzID0gbWF0Y2hlZFN5c3RlbUVycm9yICYmIG9wdGlvbnMuaWdub3JlU3lzdGVtRXJyb3JzO1xuICAgICAgICAgICAgY29uc3QgaXNFeHBvbmVudGlhbCA9IGlzRXhwb25lbnRpYWxSZXRyeVJlc3BvbnNlKHJlc3BvbnNlKTtcbiAgICAgICAgICAgIGNvbnN0IGlnbm9yZUV4cG9uZW50aWFsUmVzcG9uc2UgPSBpc0V4cG9uZW50aWFsICYmIG9wdGlvbnMuaWdub3JlSHR0cFN0YXR1c0NvZGVzO1xuICAgICAgICAgICAgY29uc3QgdW5rbm93blJlc3BvbnNlID0gcmVzcG9uc2UgJiYgKGlzVGhyb3R0bGluZ1JldHJ5UmVzcG9uc2UocmVzcG9uc2UpIHx8ICFpc0V4cG9uZW50aWFsKTtcbiAgICAgICAgICAgIGlmICh1bmtub3duUmVzcG9uc2UgfHwgaWdub3JlRXhwb25lbnRpYWxSZXNwb25zZSB8fCBpZ25vcmVTeXN0ZW1FcnJvcnMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4geyBza2lwU3RyYXRlZ3k6IHRydWUgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChyZXNwb25zZUVycm9yICYmICFtYXRjaGVkU3lzdGVtRXJyb3IgJiYgIWlzRXhwb25lbnRpYWwpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4geyBlcnJvclRvVGhyb3c6IHJlc3BvbnNlRXJyb3IgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjYWxjdWxhdGVSZXRyeURlbGF5KHJldHJ5Q291bnQsIHtcbiAgICAgICAgICAgICAgICByZXRyeURlbGF5SW5NczogcmV0cnlJbnRlcnZhbCxcbiAgICAgICAgICAgICAgICBtYXhSZXRyeURlbGF5SW5NczogbWF4UmV0cnlJbnRlcnZhbCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgIH07XG59XG4vKipcbiAqIEEgcmVzcG9uc2UgaXMgYSByZXRyeSByZXNwb25zZSBpZiBpdCBoYXMgc3RhdHVzIGNvZGVzOlxuICogLSA0MDgsIG9yXG4gKiAtIEdyZWF0ZXIgb3IgZXF1YWwgdGhhbiA1MDAsIGV4Y2VwdCBmb3IgNTAxIGFuZCA1MDUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0V4cG9uZW50aWFsUmV0cnlSZXNwb25zZShyZXNwb25zZSkge1xuICAgIHJldHVybiBCb29sZWFuKHJlc3BvbnNlICYmXG4gICAgICAgIHJlc3BvbnNlLnN0YXR1cyAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgIChyZXNwb25zZS5zdGF0dXMgPj0gNTAwIHx8IHJlc3BvbnNlLnN0YXR1cyA9PT0gNDA4KSAmJlxuICAgICAgICByZXNwb25zZS5zdGF0dXMgIT09IDUwMSAmJlxuICAgICAgICByZXNwb25zZS5zdGF0dXMgIT09IDUwNSk7XG59XG4vKipcbiAqIERldGVybWluZXMgd2hldGhlciBhbiBlcnJvciBmcm9tIGEgcGlwZWxpbmUgcmVzcG9uc2Ugd2FzIHRyaWdnZXJlZCBpbiB0aGUgbmV0d29yayBsYXllci5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzU3lzdGVtRXJyb3IoZXJyKSB7XG4gICAgaWYgKCFlcnIpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gKGVyci5jb2RlID09PSBcIkVUSU1FRE9VVFwiIHx8XG4gICAgICAgIGVyci5jb2RlID09PSBcIkVTT0NLRVRUSU1FRE9VVFwiIHx8XG4gICAgICAgIGVyci5jb2RlID09PSBcIkVDT05OUkVGVVNFRFwiIHx8XG4gICAgICAgIGVyci5jb2RlID09PSBcIkVDT05OUkVTRVRcIiB8fFxuICAgICAgICBlcnIuY29kZSA9PT0gXCJFTk9FTlRcIiB8fFxuICAgICAgICBlcnIuY29kZSA9PT0gXCJFTk9URk9VTkRcIik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1leHBvbmVudGlhbFJldHJ5U3RyYXRlZ3kuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/exponentialRetryStrategy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/throttlingRetryStrategy.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/throttlingRetryStrategy.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isThrottlingRetryResponse: () => (/* binding */ isThrottlingRetryResponse),\n/* harmony export */   throttlingRetryStrategy: () => (/* binding */ throttlingRetryStrategy)\n/* harmony export */ });\n/* harmony import */ var _util_helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/helpers.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/helpers.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * The header that comes back from Azure services representing\n * the amount of time (minimum) to wait to retry (in seconds or timestamp after which we can retry).\n */\nconst RetryAfterHeader = \"Retry-After\";\n/**\n * The headers that come back from Azure services representing\n * the amount of time (minimum) to wait to retry.\n *\n * \"retry-after-ms\", \"x-ms-retry-after-ms\" : milliseconds\n * \"Retry-After\" : seconds or timestamp\n */\nconst AllRetryAfterHeaders = [\"retry-after-ms\", \"x-ms-retry-after-ms\", RetryAfterHeader];\n/**\n * A response is a throttling retry response if it has a throttling status code (429 or 503),\n * as long as one of the [ \"Retry-After\" or \"retry-after-ms\" or \"x-ms-retry-after-ms\" ] headers has a valid value.\n *\n * Returns the `retryAfterInMs` value if the response is a throttling retry response.\n * If not throttling retry response, returns `undefined`.\n *\n * @internal\n */\nfunction getRetryAfterInMs(response) {\n    if (!(response && [429, 503].includes(response.status)))\n        return undefined;\n    try {\n        // Headers: \"retry-after-ms\", \"x-ms-retry-after-ms\", \"Retry-After\"\n        for (const header of AllRetryAfterHeaders) {\n            const retryAfterValue = (0,_util_helpers_js__WEBPACK_IMPORTED_MODULE_0__.parseHeaderValueAsNumber)(response, header);\n            if (retryAfterValue === 0 || retryAfterValue) {\n                // \"Retry-After\" header ==> seconds\n                // \"retry-after-ms\", \"x-ms-retry-after-ms\" headers ==> milli-seconds\n                const multiplyingFactor = header === RetryAfterHeader ? 1000 : 1;\n                return retryAfterValue * multiplyingFactor; // in milli-seconds\n            }\n        }\n        // RetryAfterHeader (\"Retry-After\") has a special case where it might be formatted as a date instead of a number of seconds\n        const retryAfterHeader = response.headers.get(RetryAfterHeader);\n        if (!retryAfterHeader)\n            return;\n        const date = Date.parse(retryAfterHeader);\n        const diff = date - Date.now();\n        // negative diff would mean a date in the past, so retry asap with 0 milliseconds\n        return Number.isFinite(diff) ? Math.max(0, diff) : undefined;\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n/**\n * A response is a retry response if it has a throttling status code (429 or 503),\n * as long as one of the [ \"Retry-After\" or \"retry-after-ms\" or \"x-ms-retry-after-ms\" ] headers has a valid value.\n */\nfunction isThrottlingRetryResponse(response) {\n    return Number.isFinite(getRetryAfterInMs(response));\n}\nfunction throttlingRetryStrategy() {\n    return {\n        name: \"throttlingRetryStrategy\",\n        retry({ response }) {\n            const retryAfterInMs = getRetryAfterInMs(response);\n            if (!Number.isFinite(retryAfterInMs)) {\n                return { skipStrategy: true };\n            }\n            return {\n                retryAfterInMs,\n            };\n        },\n    };\n}\n//# sourceMappingURL=throttlingRetryStrategy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9yZXRyeVN0cmF0ZWdpZXMvdGhyb3R0bGluZ1JldHJ5U3RyYXRlZ3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUM4RDtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQywwRUFBd0I7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQ7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxnQkFBZ0IsVUFBVTtBQUMxQjtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxoZWxsby12b2ljZVxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtcmVzdC1waXBlbGluZVxcZGlzdFxcZXNtXFxyZXRyeVN0cmF0ZWdpZXNcXHRocm90dGxpbmdSZXRyeVN0cmF0ZWd5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgcGFyc2VIZWFkZXJWYWx1ZUFzTnVtYmVyIH0gZnJvbSBcIi4uL3V0aWwvaGVscGVycy5qc1wiO1xuLyoqXG4gKiBUaGUgaGVhZGVyIHRoYXQgY29tZXMgYmFjayBmcm9tIEF6dXJlIHNlcnZpY2VzIHJlcHJlc2VudGluZ1xuICogdGhlIGFtb3VudCBvZiB0aW1lIChtaW5pbXVtKSB0byB3YWl0IHRvIHJldHJ5IChpbiBzZWNvbmRzIG9yIHRpbWVzdGFtcCBhZnRlciB3aGljaCB3ZSBjYW4gcmV0cnkpLlxuICovXG5jb25zdCBSZXRyeUFmdGVySGVhZGVyID0gXCJSZXRyeS1BZnRlclwiO1xuLyoqXG4gKiBUaGUgaGVhZGVycyB0aGF0IGNvbWUgYmFjayBmcm9tIEF6dXJlIHNlcnZpY2VzIHJlcHJlc2VudGluZ1xuICogdGhlIGFtb3VudCBvZiB0aW1lIChtaW5pbXVtKSB0byB3YWl0IHRvIHJldHJ5LlxuICpcbiAqIFwicmV0cnktYWZ0ZXItbXNcIiwgXCJ4LW1zLXJldHJ5LWFmdGVyLW1zXCIgOiBtaWxsaXNlY29uZHNcbiAqIFwiUmV0cnktQWZ0ZXJcIiA6IHNlY29uZHMgb3IgdGltZXN0YW1wXG4gKi9cbmNvbnN0IEFsbFJldHJ5QWZ0ZXJIZWFkZXJzID0gW1wicmV0cnktYWZ0ZXItbXNcIiwgXCJ4LW1zLXJldHJ5LWFmdGVyLW1zXCIsIFJldHJ5QWZ0ZXJIZWFkZXJdO1xuLyoqXG4gKiBBIHJlc3BvbnNlIGlzIGEgdGhyb3R0bGluZyByZXRyeSByZXNwb25zZSBpZiBpdCBoYXMgYSB0aHJvdHRsaW5nIHN0YXR1cyBjb2RlICg0Mjkgb3IgNTAzKSxcbiAqIGFzIGxvbmcgYXMgb25lIG9mIHRoZSBbIFwiUmV0cnktQWZ0ZXJcIiBvciBcInJldHJ5LWFmdGVyLW1zXCIgb3IgXCJ4LW1zLXJldHJ5LWFmdGVyLW1zXCIgXSBoZWFkZXJzIGhhcyBhIHZhbGlkIHZhbHVlLlxuICpcbiAqIFJldHVybnMgdGhlIGByZXRyeUFmdGVySW5Nc2AgdmFsdWUgaWYgdGhlIHJlc3BvbnNlIGlzIGEgdGhyb3R0bGluZyByZXRyeSByZXNwb25zZS5cbiAqIElmIG5vdCB0aHJvdHRsaW5nIHJldHJ5IHJlc3BvbnNlLCByZXR1cm5zIGB1bmRlZmluZWRgLlxuICpcbiAqIEBpbnRlcm5hbFxuICovXG5mdW5jdGlvbiBnZXRSZXRyeUFmdGVySW5NcyhyZXNwb25zZSkge1xuICAgIGlmICghKHJlc3BvbnNlICYmIFs0MjksIDUwM10uaW5jbHVkZXMocmVzcG9uc2Uuc3RhdHVzKSkpXG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gSGVhZGVyczogXCJyZXRyeS1hZnRlci1tc1wiLCBcIngtbXMtcmV0cnktYWZ0ZXItbXNcIiwgXCJSZXRyeS1BZnRlclwiXG4gICAgICAgIGZvciAoY29uc3QgaGVhZGVyIG9mIEFsbFJldHJ5QWZ0ZXJIZWFkZXJzKSB7XG4gICAgICAgICAgICBjb25zdCByZXRyeUFmdGVyVmFsdWUgPSBwYXJzZUhlYWRlclZhbHVlQXNOdW1iZXIocmVzcG9uc2UsIGhlYWRlcik7XG4gICAgICAgICAgICBpZiAocmV0cnlBZnRlclZhbHVlID09PSAwIHx8IHJldHJ5QWZ0ZXJWYWx1ZSkge1xuICAgICAgICAgICAgICAgIC8vIFwiUmV0cnktQWZ0ZXJcIiBoZWFkZXIgPT0+IHNlY29uZHNcbiAgICAgICAgICAgICAgICAvLyBcInJldHJ5LWFmdGVyLW1zXCIsIFwieC1tcy1yZXRyeS1hZnRlci1tc1wiIGhlYWRlcnMgPT0+IG1pbGxpLXNlY29uZHNcbiAgICAgICAgICAgICAgICBjb25zdCBtdWx0aXBseWluZ0ZhY3RvciA9IGhlYWRlciA9PT0gUmV0cnlBZnRlckhlYWRlciA/IDEwMDAgOiAxO1xuICAgICAgICAgICAgICAgIHJldHVybiByZXRyeUFmdGVyVmFsdWUgKiBtdWx0aXBseWluZ0ZhY3RvcjsgLy8gaW4gbWlsbGktc2Vjb25kc1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIFJldHJ5QWZ0ZXJIZWFkZXIgKFwiUmV0cnktQWZ0ZXJcIikgaGFzIGEgc3BlY2lhbCBjYXNlIHdoZXJlIGl0IG1pZ2h0IGJlIGZvcm1hdHRlZCBhcyBhIGRhdGUgaW5zdGVhZCBvZiBhIG51bWJlciBvZiBzZWNvbmRzXG4gICAgICAgIGNvbnN0IHJldHJ5QWZ0ZXJIZWFkZXIgPSByZXNwb25zZS5oZWFkZXJzLmdldChSZXRyeUFmdGVySGVhZGVyKTtcbiAgICAgICAgaWYgKCFyZXRyeUFmdGVySGVhZGVyKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBkYXRlID0gRGF0ZS5wYXJzZShyZXRyeUFmdGVySGVhZGVyKTtcbiAgICAgICAgY29uc3QgZGlmZiA9IGRhdGUgLSBEYXRlLm5vdygpO1xuICAgICAgICAvLyBuZWdhdGl2ZSBkaWZmIHdvdWxkIG1lYW4gYSBkYXRlIGluIHRoZSBwYXN0LCBzbyByZXRyeSBhc2FwIHdpdGggMCBtaWxsaXNlY29uZHNcbiAgICAgICAgcmV0dXJuIE51bWJlci5pc0Zpbml0ZShkaWZmKSA/IE1hdGgubWF4KDAsIGRpZmYpIDogdW5kZWZpbmVkO1xuICAgIH1cbiAgICBjYXRjaCAoX2EpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG59XG4vKipcbiAqIEEgcmVzcG9uc2UgaXMgYSByZXRyeSByZXNwb25zZSBpZiBpdCBoYXMgYSB0aHJvdHRsaW5nIHN0YXR1cyBjb2RlICg0Mjkgb3IgNTAzKSxcbiAqIGFzIGxvbmcgYXMgb25lIG9mIHRoZSBbIFwiUmV0cnktQWZ0ZXJcIiBvciBcInJldHJ5LWFmdGVyLW1zXCIgb3IgXCJ4LW1zLXJldHJ5LWFmdGVyLW1zXCIgXSBoZWFkZXJzIGhhcyBhIHZhbGlkIHZhbHVlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNUaHJvdHRsaW5nUmV0cnlSZXNwb25zZShyZXNwb25zZSkge1xuICAgIHJldHVybiBOdW1iZXIuaXNGaW5pdGUoZ2V0UmV0cnlBZnRlckluTXMocmVzcG9uc2UpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB0aHJvdHRsaW5nUmV0cnlTdHJhdGVneSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBcInRocm90dGxpbmdSZXRyeVN0cmF0ZWd5XCIsXG4gICAgICAgIHJldHJ5KHsgcmVzcG9uc2UgfSkge1xuICAgICAgICAgICAgY29uc3QgcmV0cnlBZnRlckluTXMgPSBnZXRSZXRyeUFmdGVySW5NcyhyZXNwb25zZSk7XG4gICAgICAgICAgICBpZiAoIU51bWJlci5pc0Zpbml0ZShyZXRyeUFmdGVySW5NcykpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4geyBza2lwU3RyYXRlZ3k6IHRydWUgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgcmV0cnlBZnRlckluTXMsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9LFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10aHJvdHRsaW5nUmV0cnlTdHJhdGVneS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/throttlingRetryStrategy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/concat.js":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/concat.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   concat: () => (/* binding */ concat)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var node_stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:stream */ \"node:stream\");\n/* harmony import */ var _typeGuards_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typeGuards.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/typeGuards.js\");\n/* harmony import */ var _file_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./file.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/file.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\nfunction streamAsyncIterator() {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__asyncGenerator)(this, arguments, function* streamAsyncIterator_1() {\n        const reader = this.getReader();\n        try {\n            while (true) {\n                const { done, value } = yield (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__await)(reader.read());\n                if (done) {\n                    return yield (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__await)(void 0);\n                }\n                yield yield (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__await)(value);\n            }\n        }\n        finally {\n            reader.releaseLock();\n        }\n    });\n}\nfunction makeAsyncIterable(webStream) {\n    if (!webStream[Symbol.asyncIterator]) {\n        webStream[Symbol.asyncIterator] = streamAsyncIterator.bind(webStream);\n    }\n    if (!webStream.values) {\n        webStream.values = streamAsyncIterator.bind(webStream);\n    }\n}\nfunction ensureNodeStream(stream) {\n    if (stream instanceof ReadableStream) {\n        makeAsyncIterable(stream);\n        return node_stream__WEBPACK_IMPORTED_MODULE_0__.Readable.fromWeb(stream);\n    }\n    else {\n        return stream;\n    }\n}\nfunction toStream(source) {\n    if (source instanceof Uint8Array) {\n        return node_stream__WEBPACK_IMPORTED_MODULE_0__.Readable.from(Buffer.from(source));\n    }\n    else if ((0,_typeGuards_js__WEBPACK_IMPORTED_MODULE_1__.isBlob)(source)) {\n        return toStream((0,_file_js__WEBPACK_IMPORTED_MODULE_2__.getRawContent)(source));\n    }\n    else {\n        return ensureNodeStream(source);\n    }\n}\n/**\n * Utility function that concatenates a set of binary inputs into one combined output.\n *\n * @param sources - array of sources for the concatenation\n * @returns - in Node, a (() =\\> NodeJS.ReadableStream) which, when read, produces a concatenation of all the inputs.\n *           In browser, returns a `Blob` representing all the concatenated inputs.\n *\n * @internal\n */\nasync function concat(sources) {\n    return function () {\n        const streams = sources.map((x) => (typeof x === \"function\" ? x() : x)).map(toStream);\n        return node_stream__WEBPACK_IMPORTED_MODULE_0__.Readable.from((function () {\n            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__asyncGenerator)(this, arguments, function* () {\n                var _a, e_1, _b, _c;\n                for (const stream of streams) {\n                    try {\n                        for (var _d = true, stream_1 = (e_1 = void 0, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__asyncValues)(stream)), stream_1_1; stream_1_1 = yield (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__await)(stream_1.next()), _a = stream_1_1.done, !_a; _d = true) {\n                            _c = stream_1_1.value;\n                            _d = false;\n                            const chunk = _c;\n                            yield yield (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__await)(chunk);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (!_d && !_a && (_b = stream_1.return)) yield (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__await)(_b.call(stream_1));\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            });\n        })());\n    };\n}\n//# sourceMappingURL=concat.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS91dGlsL2NvbmNhdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDaUU7QUFDMUI7QUFDRTtBQUNDO0FBQzFDO0FBQ0EsV0FBVyx1REFBZ0I7QUFDM0I7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGNBQWMsUUFBUSw4Q0FBTztBQUNyRDtBQUNBLGlDQUFpQyw4Q0FBTztBQUN4QztBQUNBLDRCQUE0Qiw4Q0FBTztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsaURBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGlEQUFRO0FBQ3ZCO0FBQ0EsYUFBYSxzREFBTTtBQUNuQix3QkFBd0IsdURBQWE7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLGVBQWUsaURBQVE7QUFDdkIsbUJBQW1CLHVEQUFnQjtBQUNuQztBQUNBO0FBQ0E7QUFDQSxzRUFBc0Usb0RBQWEsdUJBQXVCLG1CQUFtQiw4Q0FBTyw4Q0FBOEM7QUFDbEw7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLDhDQUFPO0FBQy9DO0FBQ0E7QUFDQSxvQ0FBb0MsUUFBUTtBQUM1QztBQUNBO0FBQ0EsNEVBQTRFLDhDQUFPO0FBQ25GO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxoZWxsby12b2ljZVxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtcmVzdC1waXBlbGluZVxcZGlzdFxcZXNtXFx1dGlsXFxjb25jYXQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBfX2FzeW5jR2VuZXJhdG9yLCBfX2FzeW5jVmFsdWVzLCBfX2F3YWl0IH0gZnJvbSBcInRzbGliXCI7XG5pbXBvcnQgeyBSZWFkYWJsZSB9IGZyb20gXCJub2RlOnN0cmVhbVwiO1xuaW1wb3J0IHsgaXNCbG9iIH0gZnJvbSBcIi4vdHlwZUd1YXJkcy5qc1wiO1xuaW1wb3J0IHsgZ2V0UmF3Q29udGVudCB9IGZyb20gXCIuL2ZpbGUuanNcIjtcbmZ1bmN0aW9uIHN0cmVhbUFzeW5jSXRlcmF0b3IoKSB7XG4gICAgcmV0dXJuIF9fYXN5bmNHZW5lcmF0b3IodGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiogc3RyZWFtQXN5bmNJdGVyYXRvcl8xKCkge1xuICAgICAgICBjb25zdCByZWFkZXIgPSB0aGlzLmdldFJlYWRlcigpO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB7IGRvbmUsIHZhbHVlIH0gPSB5aWVsZCBfX2F3YWl0KHJlYWRlci5yZWFkKCkpO1xuICAgICAgICAgICAgICAgIGlmIChkb25lKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB5aWVsZCBfX2F3YWl0KHZvaWQgMCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHlpZWxkIHlpZWxkIF9fYXdhaXQodmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgcmVhZGVyLnJlbGVhc2VMb2NrKCk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmZ1bmN0aW9uIG1ha2VBc3luY0l0ZXJhYmxlKHdlYlN0cmVhbSkge1xuICAgIGlmICghd2ViU3RyZWFtW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSkge1xuICAgICAgICB3ZWJTdHJlYW1bU3ltYm9sLmFzeW5jSXRlcmF0b3JdID0gc3RyZWFtQXN5bmNJdGVyYXRvci5iaW5kKHdlYlN0cmVhbSk7XG4gICAgfVxuICAgIGlmICghd2ViU3RyZWFtLnZhbHVlcykge1xuICAgICAgICB3ZWJTdHJlYW0udmFsdWVzID0gc3RyZWFtQXN5bmNJdGVyYXRvci5iaW5kKHdlYlN0cmVhbSk7XG4gICAgfVxufVxuZnVuY3Rpb24gZW5zdXJlTm9kZVN0cmVhbShzdHJlYW0pIHtcbiAgICBpZiAoc3RyZWFtIGluc3RhbmNlb2YgUmVhZGFibGVTdHJlYW0pIHtcbiAgICAgICAgbWFrZUFzeW5jSXRlcmFibGUoc3RyZWFtKTtcbiAgICAgICAgcmV0dXJuIFJlYWRhYmxlLmZyb21XZWIoc3RyZWFtKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBzdHJlYW07XG4gICAgfVxufVxuZnVuY3Rpb24gdG9TdHJlYW0oc291cmNlKSB7XG4gICAgaWYgKHNvdXJjZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgcmV0dXJuIFJlYWRhYmxlLmZyb20oQnVmZmVyLmZyb20oc291cmNlKSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzQmxvYihzb3VyY2UpKSB7XG4gICAgICAgIHJldHVybiB0b1N0cmVhbShnZXRSYXdDb250ZW50KHNvdXJjZSkpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGVuc3VyZU5vZGVTdHJlYW0oc291cmNlKTtcbiAgICB9XG59XG4vKipcbiAqIFV0aWxpdHkgZnVuY3Rpb24gdGhhdCBjb25jYXRlbmF0ZXMgYSBzZXQgb2YgYmluYXJ5IGlucHV0cyBpbnRvIG9uZSBjb21iaW5lZCBvdXRwdXQuXG4gKlxuICogQHBhcmFtIHNvdXJjZXMgLSBhcnJheSBvZiBzb3VyY2VzIGZvciB0aGUgY29uY2F0ZW5hdGlvblxuICogQHJldHVybnMgLSBpbiBOb2RlLCBhICgoKSA9XFw+IE5vZGVKUy5SZWFkYWJsZVN0cmVhbSkgd2hpY2gsIHdoZW4gcmVhZCwgcHJvZHVjZXMgYSBjb25jYXRlbmF0aW9uIG9mIGFsbCB0aGUgaW5wdXRzLlxuICogICAgICAgICAgIEluIGJyb3dzZXIsIHJldHVybnMgYSBgQmxvYmAgcmVwcmVzZW50aW5nIGFsbCB0aGUgY29uY2F0ZW5hdGVkIGlucHV0cy5cbiAqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNvbmNhdChzb3VyY2VzKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY29uc3Qgc3RyZWFtcyA9IHNvdXJjZXMubWFwKCh4KSA9PiAodHlwZW9mIHggPT09IFwiZnVuY3Rpb25cIiA/IHgoKSA6IHgpKS5tYXAodG9TdHJlYW0pO1xuICAgICAgICByZXR1cm4gUmVhZGFibGUuZnJvbSgoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9fYXN5bmNHZW5lcmF0b3IodGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgICAgIHZhciBfYSwgZV8xLCBfYiwgX2M7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBzdHJlYW0gb2Ygc3RyZWFtcykge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgX2QgPSB0cnVlLCBzdHJlYW1fMSA9IChlXzEgPSB2b2lkIDAsIF9fYXN5bmNWYWx1ZXMoc3RyZWFtKSksIHN0cmVhbV8xXzE7IHN0cmVhbV8xXzEgPSB5aWVsZCBfX2F3YWl0KHN0cmVhbV8xLm5leHQoKSksIF9hID0gc3RyZWFtXzFfMS5kb25lLCAhX2E7IF9kID0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jID0gc3RyZWFtXzFfMS52YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNodW5rID0gX2M7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeWllbGQgeWllbGQgX19hd2FpdChjaHVuayk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY2F0Y2ggKGVfMV8xKSB7IGVfMSA9IHsgZXJyb3I6IGVfMV8xIH07IH1cbiAgICAgICAgICAgICAgICAgICAgZmluYWxseSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghX2QgJiYgIV9hICYmIChfYiA9IHN0cmVhbV8xLnJldHVybikpIHlpZWxkIF9fYXdhaXQoX2IuY2FsbChzdHJlYW1fMSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZmluYWxseSB7IGlmIChlXzEpIHRocm93IGVfMS5lcnJvcjsgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pKCkpO1xuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25jYXQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/concat.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/file.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/file.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createFile: () => (/* binding */ createFile),\n/* harmony export */   createFileFromStream: () => (/* binding */ createFileFromStream),\n/* harmony export */   getRawContent: () => (/* binding */ getRawContent)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _typeGuards_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typeGuards.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/typeGuards.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\nconst unimplementedMethods = {\n    arrayBuffer: () => {\n        throw new Error(\"Not implemented\");\n    },\n    bytes: () => {\n        throw new Error(\"Not implemented\");\n    },\n    slice: () => {\n        throw new Error(\"Not implemented\");\n    },\n    text: () => {\n        throw new Error(\"Not implemented\");\n    },\n};\n/**\n * Private symbol used as key on objects created using createFile containing the\n * original source of the file object.\n *\n * This is used in Node to access the original Node stream without using Blob#stream, which\n * returns a web stream. This is done to avoid a couple of bugs to do with Blob#stream and\n * Readable#to/fromWeb in Node versions we support:\n * - https://github.com/nodejs/node/issues/42694 (fixed in Node 18.14)\n * - https://github.com/nodejs/node/issues/48916 (fixed in Node 20.6)\n *\n * Once these versions are no longer supported, we may be able to stop doing this.\n *\n * @internal\n */\nconst rawContent = Symbol(\"rawContent\");\nfunction hasRawContent(x) {\n    return typeof x[rawContent] === \"function\";\n}\n/**\n * Extract the raw content from a given blob-like object. If the input was created using createFile\n * or createFileFromStream, the exact content passed into createFile/createFileFromStream will be used.\n * For true instances of Blob and File, returns the blob's content as a Web ReadableStream<Uint8Array>.\n *\n * @internal\n */\nfunction getRawContent(blob) {\n    if (hasRawContent(blob)) {\n        return blob[rawContent]();\n    }\n    else {\n        return blob.stream();\n    }\n}\n/**\n * Create an object that implements the File interface. This object is intended to be\n * passed into RequestBodyType.formData, and is not guaranteed to work as expected in\n * other situations.\n *\n * Use this function to:\n * - Create a File object for use in RequestBodyType.formData in environments where the\n *   global File object is unavailable.\n * - Create a File-like object from a readable stream without reading the stream into memory.\n *\n * @param stream - the content of the file as a callback returning a stream. When a File object made using createFile is\n *                  passed in a request's form data map, the stream will not be read into memory\n *                  and instead will be streamed when the request is made. In the event of a retry, the\n *                  stream needs to be read again, so this callback SHOULD return a fresh stream if possible.\n * @param name - the name of the file.\n * @param options - optional metadata about the file, e.g. file name, file size, MIME type.\n */\nfunction createFileFromStream(stream, name, options = {}) {\n    var _a, _b, _c, _d;\n    return Object.assign(Object.assign({}, unimplementedMethods), { type: (_a = options.type) !== null && _a !== void 0 ? _a : \"\", lastModified: (_b = options.lastModified) !== null && _b !== void 0 ? _b : new Date().getTime(), webkitRelativePath: (_c = options.webkitRelativePath) !== null && _c !== void 0 ? _c : \"\", size: (_d = options.size) !== null && _d !== void 0 ? _d : -1, name, stream: () => {\n            const s = stream();\n            if ((0,_typeGuards_js__WEBPACK_IMPORTED_MODULE_1__.isNodeReadableStream)(s)) {\n                throw new Error(\"Not supported: a Node stream was provided as input to createFileFromStream.\");\n            }\n            return s;\n        }, [rawContent]: stream });\n}\n/**\n * Create an object that implements the File interface. This object is intended to be\n * passed into RequestBodyType.formData, and is not guaranteed to work as expected in\n * other situations.\n *\n * Use this function create a File object for use in RequestBodyType.formData in environments where the global File object is unavailable.\n *\n * @param content - the content of the file as a Uint8Array in memory.\n * @param name - the name of the file.\n * @param options - optional metadata about the file, e.g. file name, file size, MIME type.\n */\nfunction createFile(content, name, options = {}) {\n    var _a, _b, _c;\n    if (_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.isNodeLike) {\n        return Object.assign(Object.assign({}, unimplementedMethods), { type: (_a = options.type) !== null && _a !== void 0 ? _a : \"\", lastModified: (_b = options.lastModified) !== null && _b !== void 0 ? _b : new Date().getTime(), webkitRelativePath: (_c = options.webkitRelativePath) !== null && _c !== void 0 ? _c : \"\", size: content.byteLength, name, arrayBuffer: async () => content.buffer, stream: () => new Blob([content]).stream(), [rawContent]: () => content });\n    }\n    else {\n        return new File([content], name, options);\n    }\n}\n//# sourceMappingURL=file.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS91dGlsL2ZpbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQzhDO0FBQ1M7QUFDdkQ7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHdEQUF3RDtBQUMvRDtBQUNBLHlDQUF5QywyQkFBMkI7QUFDcEU7QUFDQSxnQkFBZ0Isb0VBQW9CO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLFNBQVMsd0JBQXdCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLCtDQUErQztBQUN0RDtBQUNBLFFBQVEsd0RBQVU7QUFDbEIsNkNBQTZDLDJCQUEyQiw2WUFBNlk7QUFDcmQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGhlbGxvLXZvaWNlXFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1yZXN0LXBpcGVsaW5lXFxkaXN0XFxlc21cXHV0aWxcXGZpbGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBpc05vZGVMaWtlIH0gZnJvbSBcIkBhenVyZS9jb3JlLXV0aWxcIjtcbmltcG9ydCB7IGlzTm9kZVJlYWRhYmxlU3RyZWFtIH0gZnJvbSBcIi4vdHlwZUd1YXJkcy5qc1wiO1xuY29uc3QgdW5pbXBsZW1lbnRlZE1ldGhvZHMgPSB7XG4gICAgYXJyYXlCdWZmZXI6ICgpID0+IHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkXCIpO1xuICAgIH0sXG4gICAgYnl0ZXM6ICgpID0+IHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkXCIpO1xuICAgIH0sXG4gICAgc2xpY2U6ICgpID0+IHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkXCIpO1xuICAgIH0sXG4gICAgdGV4dDogKCkgPT4ge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb3QgaW1wbGVtZW50ZWRcIik7XG4gICAgfSxcbn07XG4vKipcbiAqIFByaXZhdGUgc3ltYm9sIHVzZWQgYXMga2V5IG9uIG9iamVjdHMgY3JlYXRlZCB1c2luZyBjcmVhdGVGaWxlIGNvbnRhaW5pbmcgdGhlXG4gKiBvcmlnaW5hbCBzb3VyY2Ugb2YgdGhlIGZpbGUgb2JqZWN0LlxuICpcbiAqIFRoaXMgaXMgdXNlZCBpbiBOb2RlIHRvIGFjY2VzcyB0aGUgb3JpZ2luYWwgTm9kZSBzdHJlYW0gd2l0aG91dCB1c2luZyBCbG9iI3N0cmVhbSwgd2hpY2hcbiAqIHJldHVybnMgYSB3ZWIgc3RyZWFtLiBUaGlzIGlzIGRvbmUgdG8gYXZvaWQgYSBjb3VwbGUgb2YgYnVncyB0byBkbyB3aXRoIEJsb2Ijc3RyZWFtIGFuZFxuICogUmVhZGFibGUjdG8vZnJvbVdlYiBpbiBOb2RlIHZlcnNpb25zIHdlIHN1cHBvcnQ6XG4gKiAtIGh0dHBzOi8vZ2l0aHViLmNvbS9ub2RlanMvbm9kZS9pc3N1ZXMvNDI2OTQgKGZpeGVkIGluIE5vZGUgMTguMTQpXG4gKiAtIGh0dHBzOi8vZ2l0aHViLmNvbS9ub2RlanMvbm9kZS9pc3N1ZXMvNDg5MTYgKGZpeGVkIGluIE5vZGUgMjAuNilcbiAqXG4gKiBPbmNlIHRoZXNlIHZlcnNpb25zIGFyZSBubyBsb25nZXIgc3VwcG9ydGVkLCB3ZSBtYXkgYmUgYWJsZSB0byBzdG9wIGRvaW5nIHRoaXMuXG4gKlxuICogQGludGVybmFsXG4gKi9cbmNvbnN0IHJhd0NvbnRlbnQgPSBTeW1ib2woXCJyYXdDb250ZW50XCIpO1xuZnVuY3Rpb24gaGFzUmF3Q29udGVudCh4KSB7XG4gICAgcmV0dXJuIHR5cGVvZiB4W3Jhd0NvbnRlbnRdID09PSBcImZ1bmN0aW9uXCI7XG59XG4vKipcbiAqIEV4dHJhY3QgdGhlIHJhdyBjb250ZW50IGZyb20gYSBnaXZlbiBibG9iLWxpa2Ugb2JqZWN0LiBJZiB0aGUgaW5wdXQgd2FzIGNyZWF0ZWQgdXNpbmcgY3JlYXRlRmlsZVxuICogb3IgY3JlYXRlRmlsZUZyb21TdHJlYW0sIHRoZSBleGFjdCBjb250ZW50IHBhc3NlZCBpbnRvIGNyZWF0ZUZpbGUvY3JlYXRlRmlsZUZyb21TdHJlYW0gd2lsbCBiZSB1c2VkLlxuICogRm9yIHRydWUgaW5zdGFuY2VzIG9mIEJsb2IgYW5kIEZpbGUsIHJldHVybnMgdGhlIGJsb2IncyBjb250ZW50IGFzIGEgV2ViIFJlYWRhYmxlU3RyZWFtPFVpbnQ4QXJyYXk+LlxuICpcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0UmF3Q29udGVudChibG9iKSB7XG4gICAgaWYgKGhhc1Jhd0NvbnRlbnQoYmxvYikpIHtcbiAgICAgICAgcmV0dXJuIGJsb2JbcmF3Q29udGVudF0oKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBibG9iLnN0cmVhbSgpO1xuICAgIH1cbn1cbi8qKlxuICogQ3JlYXRlIGFuIG9iamVjdCB0aGF0IGltcGxlbWVudHMgdGhlIEZpbGUgaW50ZXJmYWNlLiBUaGlzIG9iamVjdCBpcyBpbnRlbmRlZCB0byBiZVxuICogcGFzc2VkIGludG8gUmVxdWVzdEJvZHlUeXBlLmZvcm1EYXRhLCBhbmQgaXMgbm90IGd1YXJhbnRlZWQgdG8gd29yayBhcyBleHBlY3RlZCBpblxuICogb3RoZXIgc2l0dWF0aW9ucy5cbiAqXG4gKiBVc2UgdGhpcyBmdW5jdGlvbiB0bzpcbiAqIC0gQ3JlYXRlIGEgRmlsZSBvYmplY3QgZm9yIHVzZSBpbiBSZXF1ZXN0Qm9keVR5cGUuZm9ybURhdGEgaW4gZW52aXJvbm1lbnRzIHdoZXJlIHRoZVxuICogICBnbG9iYWwgRmlsZSBvYmplY3QgaXMgdW5hdmFpbGFibGUuXG4gKiAtIENyZWF0ZSBhIEZpbGUtbGlrZSBvYmplY3QgZnJvbSBhIHJlYWRhYmxlIHN0cmVhbSB3aXRob3V0IHJlYWRpbmcgdGhlIHN0cmVhbSBpbnRvIG1lbW9yeS5cbiAqXG4gKiBAcGFyYW0gc3RyZWFtIC0gdGhlIGNvbnRlbnQgb2YgdGhlIGZpbGUgYXMgYSBjYWxsYmFjayByZXR1cm5pbmcgYSBzdHJlYW0uIFdoZW4gYSBGaWxlIG9iamVjdCBtYWRlIHVzaW5nIGNyZWF0ZUZpbGUgaXNcbiAqICAgICAgICAgICAgICAgICAgcGFzc2VkIGluIGEgcmVxdWVzdCdzIGZvcm0gZGF0YSBtYXAsIHRoZSBzdHJlYW0gd2lsbCBub3QgYmUgcmVhZCBpbnRvIG1lbW9yeVxuICogICAgICAgICAgICAgICAgICBhbmQgaW5zdGVhZCB3aWxsIGJlIHN0cmVhbWVkIHdoZW4gdGhlIHJlcXVlc3QgaXMgbWFkZS4gSW4gdGhlIGV2ZW50IG9mIGEgcmV0cnksIHRoZVxuICogICAgICAgICAgICAgICAgICBzdHJlYW0gbmVlZHMgdG8gYmUgcmVhZCBhZ2Fpbiwgc28gdGhpcyBjYWxsYmFjayBTSE9VTEQgcmV0dXJuIGEgZnJlc2ggc3RyZWFtIGlmIHBvc3NpYmxlLlxuICogQHBhcmFtIG5hbWUgLSB0aGUgbmFtZSBvZiB0aGUgZmlsZS5cbiAqIEBwYXJhbSBvcHRpb25zIC0gb3B0aW9uYWwgbWV0YWRhdGEgYWJvdXQgdGhlIGZpbGUsIGUuZy4gZmlsZSBuYW1lLCBmaWxlIHNpemUsIE1JTUUgdHlwZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUZpbGVGcm9tU3RyZWFtKHN0cmVhbSwgbmFtZSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgdmFyIF9hLCBfYiwgX2MsIF9kO1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHVuaW1wbGVtZW50ZWRNZXRob2RzKSwgeyB0eXBlOiAoX2EgPSBvcHRpb25zLnR5cGUpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFwiXCIsIGxhc3RNb2RpZmllZDogKF9iID0gb3B0aW9ucy5sYXN0TW9kaWZpZWQpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IG5ldyBEYXRlKCkuZ2V0VGltZSgpLCB3ZWJraXRSZWxhdGl2ZVBhdGg6IChfYyA9IG9wdGlvbnMud2Via2l0UmVsYXRpdmVQYXRoKSAhPT0gbnVsbCAmJiBfYyAhPT0gdm9pZCAwID8gX2MgOiBcIlwiLCBzaXplOiAoX2QgPSBvcHRpb25zLnNpemUpICE9PSBudWxsICYmIF9kICE9PSB2b2lkIDAgPyBfZCA6IC0xLCBuYW1lLCBzdHJlYW06ICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHMgPSBzdHJlYW0oKTtcbiAgICAgICAgICAgIGlmIChpc05vZGVSZWFkYWJsZVN0cmVhbShzKSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vdCBzdXBwb3J0ZWQ6IGEgTm9kZSBzdHJlYW0gd2FzIHByb3ZpZGVkIGFzIGlucHV0IHRvIGNyZWF0ZUZpbGVGcm9tU3RyZWFtLlwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBzO1xuICAgICAgICB9LCBbcmF3Q29udGVudF06IHN0cmVhbSB9KTtcbn1cbi8qKlxuICogQ3JlYXRlIGFuIG9iamVjdCB0aGF0IGltcGxlbWVudHMgdGhlIEZpbGUgaW50ZXJmYWNlLiBUaGlzIG9iamVjdCBpcyBpbnRlbmRlZCB0byBiZVxuICogcGFzc2VkIGludG8gUmVxdWVzdEJvZHlUeXBlLmZvcm1EYXRhLCBhbmQgaXMgbm90IGd1YXJhbnRlZWQgdG8gd29yayBhcyBleHBlY3RlZCBpblxuICogb3RoZXIgc2l0dWF0aW9ucy5cbiAqXG4gKiBVc2UgdGhpcyBmdW5jdGlvbiBjcmVhdGUgYSBGaWxlIG9iamVjdCBmb3IgdXNlIGluIFJlcXVlc3RCb2R5VHlwZS5mb3JtRGF0YSBpbiBlbnZpcm9ubWVudHMgd2hlcmUgdGhlIGdsb2JhbCBGaWxlIG9iamVjdCBpcyB1bmF2YWlsYWJsZS5cbiAqXG4gKiBAcGFyYW0gY29udGVudCAtIHRoZSBjb250ZW50IG9mIHRoZSBmaWxlIGFzIGEgVWludDhBcnJheSBpbiBtZW1vcnkuXG4gKiBAcGFyYW0gbmFtZSAtIHRoZSBuYW1lIG9mIHRoZSBmaWxlLlxuICogQHBhcmFtIG9wdGlvbnMgLSBvcHRpb25hbCBtZXRhZGF0YSBhYm91dCB0aGUgZmlsZSwgZS5nLiBmaWxlIG5hbWUsIGZpbGUgc2l6ZSwgTUlNRSB0eXBlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRmlsZShjb250ZW50LCBuYW1lLCBvcHRpb25zID0ge30pIHtcbiAgICB2YXIgX2EsIF9iLCBfYztcbiAgICBpZiAoaXNOb2RlTGlrZSkge1xuICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCB1bmltcGxlbWVudGVkTWV0aG9kcyksIHsgdHlwZTogKF9hID0gb3B0aW9ucy50eXBlKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBcIlwiLCBsYXN0TW9kaWZpZWQ6IChfYiA9IG9wdGlvbnMubGFzdE1vZGlmaWVkKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBuZXcgRGF0ZSgpLmdldFRpbWUoKSwgd2Via2l0UmVsYXRpdmVQYXRoOiAoX2MgPSBvcHRpb25zLndlYmtpdFJlbGF0aXZlUGF0aCkgIT09IG51bGwgJiYgX2MgIT09IHZvaWQgMCA/IF9jIDogXCJcIiwgc2l6ZTogY29udGVudC5ieXRlTGVuZ3RoLCBuYW1lLCBhcnJheUJ1ZmZlcjogYXN5bmMgKCkgPT4gY29udGVudC5idWZmZXIsIHN0cmVhbTogKCkgPT4gbmV3IEJsb2IoW2NvbnRlbnRdKS5zdHJlYW0oKSwgW3Jhd0NvbnRlbnRdOiAoKSA9PiBjb250ZW50IH0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIG5ldyBGaWxlKFtjb250ZW50XSwgbmFtZSwgb3B0aW9ucyk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmlsZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/file.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/helpers.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/helpers.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   delay: () => (/* binding */ delay),\n/* harmony export */   parseHeaderValueAsNumber: () => (/* binding */ parseHeaderValueAsNumber)\n/* harmony export */ });\n/* harmony import */ var _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/abort-controller */ \"(ssr)/./node_modules/@azure/abort-controller/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nconst StandardAbortMessage = \"The operation was aborted.\";\n/**\n * A wrapper for setTimeout that resolves a promise after delayInMs milliseconds.\n * @param delayInMs - The number of milliseconds to be delayed.\n * @param value - The value to be resolved with after a timeout of t milliseconds.\n * @param options - The options for delay - currently abort options\n *                  - abortSignal - The abortSignal associated with containing operation.\n *                  - abortErrorMsg - The abort error message associated with containing operation.\n * @returns Resolved promise\n */\nfunction delay(delayInMs, value, options) {\n    return new Promise((resolve, reject) => {\n        let timer = undefined;\n        let onAborted = undefined;\n        const rejectOnAbort = () => {\n            return reject(new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__.AbortError((options === null || options === void 0 ? void 0 : options.abortErrorMsg) ? options === null || options === void 0 ? void 0 : options.abortErrorMsg : StandardAbortMessage));\n        };\n        const removeListeners = () => {\n            if ((options === null || options === void 0 ? void 0 : options.abortSignal) && onAborted) {\n                options.abortSignal.removeEventListener(\"abort\", onAborted);\n            }\n        };\n        onAborted = () => {\n            if (timer) {\n                clearTimeout(timer);\n            }\n            removeListeners();\n            return rejectOnAbort();\n        };\n        if ((options === null || options === void 0 ? void 0 : options.abortSignal) && options.abortSignal.aborted) {\n            return rejectOnAbort();\n        }\n        timer = setTimeout(() => {\n            removeListeners();\n            resolve(value);\n        }, delayInMs);\n        if (options === null || options === void 0 ? void 0 : options.abortSignal) {\n            options.abortSignal.addEventListener(\"abort\", onAborted);\n        }\n    });\n}\n/**\n * @internal\n * @returns the parsed value or undefined if the parsed value is invalid.\n */\nfunction parseHeaderValueAsNumber(response, headerName) {\n    const value = response.headers.get(headerName);\n    if (!value)\n        return;\n    const valueAsNum = Number(value);\n    if (Number.isNaN(valueAsNum))\n        return;\n    return valueAsNum;\n}\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS91dGlsL2hlbHBlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNxRDtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsK0RBQVU7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxoZWxsby12b2ljZVxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtcmVzdC1waXBlbGluZVxcZGlzdFxcZXNtXFx1dGlsXFxoZWxwZXJzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgQWJvcnRFcnJvciB9IGZyb20gXCJAYXp1cmUvYWJvcnQtY29udHJvbGxlclwiO1xuY29uc3QgU3RhbmRhcmRBYm9ydE1lc3NhZ2UgPSBcIlRoZSBvcGVyYXRpb24gd2FzIGFib3J0ZWQuXCI7XG4vKipcbiAqIEEgd3JhcHBlciBmb3Igc2V0VGltZW91dCB0aGF0IHJlc29sdmVzIGEgcHJvbWlzZSBhZnRlciBkZWxheUluTXMgbWlsbGlzZWNvbmRzLlxuICogQHBhcmFtIGRlbGF5SW5NcyAtIFRoZSBudW1iZXIgb2YgbWlsbGlzZWNvbmRzIHRvIGJlIGRlbGF5ZWQuXG4gKiBAcGFyYW0gdmFsdWUgLSBUaGUgdmFsdWUgdG8gYmUgcmVzb2x2ZWQgd2l0aCBhZnRlciBhIHRpbWVvdXQgb2YgdCBtaWxsaXNlY29uZHMuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIFRoZSBvcHRpb25zIGZvciBkZWxheSAtIGN1cnJlbnRseSBhYm9ydCBvcHRpb25zXG4gKiAgICAgICAgICAgICAgICAgIC0gYWJvcnRTaWduYWwgLSBUaGUgYWJvcnRTaWduYWwgYXNzb2NpYXRlZCB3aXRoIGNvbnRhaW5pbmcgb3BlcmF0aW9uLlxuICogICAgICAgICAgICAgICAgICAtIGFib3J0RXJyb3JNc2cgLSBUaGUgYWJvcnQgZXJyb3IgbWVzc2FnZSBhc3NvY2lhdGVkIHdpdGggY29udGFpbmluZyBvcGVyYXRpb24uXG4gKiBAcmV0dXJucyBSZXNvbHZlZCBwcm9taXNlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWxheShkZWxheUluTXMsIHZhbHVlLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgbGV0IHRpbWVyID0gdW5kZWZpbmVkO1xuICAgICAgICBsZXQgb25BYm9ydGVkID0gdW5kZWZpbmVkO1xuICAgICAgICBjb25zdCByZWplY3RPbkFib3J0ID0gKCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHJlamVjdChuZXcgQWJvcnRFcnJvcigob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmFib3J0RXJyb3JNc2cpID8gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmFib3J0RXJyb3JNc2cgOiBTdGFuZGFyZEFib3J0TWVzc2FnZSkpO1xuICAgICAgICB9O1xuICAgICAgICBjb25zdCByZW1vdmVMaXN0ZW5lcnMgPSAoKSA9PiB7XG4gICAgICAgICAgICBpZiAoKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5hYm9ydFNpZ25hbCkgJiYgb25BYm9ydGVkKSB7XG4gICAgICAgICAgICAgICAgb3B0aW9ucy5hYm9ydFNpZ25hbC5yZW1vdmVFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgb25BYm9ydGVkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgb25BYm9ydGVkID0gKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHRpbWVyKSB7XG4gICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlbW92ZUxpc3RlbmVycygpO1xuICAgICAgICAgICAgcmV0dXJuIHJlamVjdE9uQWJvcnQoKTtcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuYWJvcnRTaWduYWwpICYmIG9wdGlvbnMuYWJvcnRTaWduYWwuYWJvcnRlZCkge1xuICAgICAgICAgICAgcmV0dXJuIHJlamVjdE9uQWJvcnQoKTtcbiAgICAgICAgfVxuICAgICAgICB0aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgcmVtb3ZlTGlzdGVuZXJzKCk7XG4gICAgICAgICAgICByZXNvbHZlKHZhbHVlKTtcbiAgICAgICAgfSwgZGVsYXlJbk1zKTtcbiAgICAgICAgaWYgKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5hYm9ydFNpZ25hbCkge1xuICAgICAgICAgICAgb3B0aW9ucy5hYm9ydFNpZ25hbC5hZGRFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgb25BYm9ydGVkKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqIEByZXR1cm5zIHRoZSBwYXJzZWQgdmFsdWUgb3IgdW5kZWZpbmVkIGlmIHRoZSBwYXJzZWQgdmFsdWUgaXMgaW52YWxpZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlSGVhZGVyVmFsdWVBc051bWJlcihyZXNwb25zZSwgaGVhZGVyTmFtZSkge1xuICAgIGNvbnN0IHZhbHVlID0gcmVzcG9uc2UuaGVhZGVycy5nZXQoaGVhZGVyTmFtZSk7XG4gICAgaWYgKCF2YWx1ZSlcbiAgICAgICAgcmV0dXJuO1xuICAgIGNvbnN0IHZhbHVlQXNOdW0gPSBOdW1iZXIodmFsdWUpO1xuICAgIGlmIChOdW1iZXIuaXNOYU4odmFsdWVBc051bSkpXG4gICAgICAgIHJldHVybjtcbiAgICByZXR1cm4gdmFsdWVBc051bTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhlbHBlcnMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/helpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/inspect.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/inspect.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   custom: () => (/* binding */ custom)\n/* harmony export */ });\n/* harmony import */ var node_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:util */ \"node:util\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nconst custom = node_util__WEBPACK_IMPORTED_MODULE_0__.inspect.custom;\n//# sourceMappingURL=inspect.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS91dGlsL2luc3BlY3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ29DO0FBQzdCLGVBQWUsOENBQU87QUFDN0IiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXJlc3QtcGlwZWxpbmVcXGRpc3RcXGVzbVxcdXRpbFxcaW5zcGVjdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGluc3BlY3QgfSBmcm9tIFwibm9kZTp1dGlsXCI7XG5leHBvcnQgY29uc3QgY3VzdG9tID0gaW5zcGVjdC5jdXN0b207XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnNwZWN0LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/inspect.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/sanitizer.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/sanitizer.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Sanitizer: () => (/* binding */ Sanitizer)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nconst RedactedString = \"REDACTED\";\n// Make sure this list is up-to-date with the one under core/logger/Readme#Keyconcepts\nconst defaultAllowedHeaderNames = [\n    \"x-ms-client-request-id\",\n    \"x-ms-return-client-request-id\",\n    \"x-ms-useragent\",\n    \"x-ms-correlation-request-id\",\n    \"x-ms-request-id\",\n    \"client-request-id\",\n    \"ms-cv\",\n    \"return-client-request-id\",\n    \"traceparent\",\n    \"Access-Control-Allow-Credentials\",\n    \"Access-Control-Allow-Headers\",\n    \"Access-Control-Allow-Methods\",\n    \"Access-Control-Allow-Origin\",\n    \"Access-Control-Expose-Headers\",\n    \"Access-Control-Max-Age\",\n    \"Access-Control-Request-Headers\",\n    \"Access-Control-Request-Method\",\n    \"Origin\",\n    \"Accept\",\n    \"Accept-Encoding\",\n    \"Cache-Control\",\n    \"Connection\",\n    \"Content-Length\",\n    \"Content-Type\",\n    \"Date\",\n    \"ETag\",\n    \"Expires\",\n    \"If-Match\",\n    \"If-Modified-Since\",\n    \"If-None-Match\",\n    \"If-Unmodified-Since\",\n    \"Last-Modified\",\n    \"Pragma\",\n    \"Request-Id\",\n    \"Retry-After\",\n    \"Server\",\n    \"Transfer-Encoding\",\n    \"User-Agent\",\n    \"WWW-Authenticate\",\n];\nconst defaultAllowedQueryParameters = [\"api-version\"];\n/**\n * @internal\n */\nclass Sanitizer {\n    constructor({ additionalAllowedHeaderNames: allowedHeaderNames = [], additionalAllowedQueryParameters: allowedQueryParameters = [], } = {}) {\n        allowedHeaderNames = defaultAllowedHeaderNames.concat(allowedHeaderNames);\n        allowedQueryParameters = defaultAllowedQueryParameters.concat(allowedQueryParameters);\n        this.allowedHeaderNames = new Set(allowedHeaderNames.map((n) => n.toLowerCase()));\n        this.allowedQueryParameters = new Set(allowedQueryParameters.map((p) => p.toLowerCase()));\n    }\n    sanitize(obj) {\n        const seen = new Set();\n        return JSON.stringify(obj, (key, value) => {\n            // Ensure Errors include their interesting non-enumerable members\n            if (value instanceof Error) {\n                return Object.assign(Object.assign({}, value), { name: value.name, message: value.message });\n            }\n            if (key === \"headers\") {\n                return this.sanitizeHeaders(value);\n            }\n            else if (key === \"url\") {\n                return this.sanitizeUrl(value);\n            }\n            else if (key === \"query\") {\n                return this.sanitizeQuery(value);\n            }\n            else if (key === \"body\") {\n                // Don't log the request body\n                return undefined;\n            }\n            else if (key === \"response\") {\n                // Don't log response again\n                return undefined;\n            }\n            else if (key === \"operationSpec\") {\n                // When using sendOperationRequest, the request carries a massive\n                // field with the autorest spec. No need to log it.\n                return undefined;\n            }\n            else if (Array.isArray(value) || (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.isObject)(value)) {\n                if (seen.has(value)) {\n                    return \"[Circular]\";\n                }\n                seen.add(value);\n            }\n            return value;\n        }, 2);\n    }\n    sanitizeUrl(value) {\n        if (typeof value !== \"string\" || value === null || value === \"\") {\n            return value;\n        }\n        const url = new URL(value);\n        if (!url.search) {\n            return value;\n        }\n        for (const [key] of url.searchParams) {\n            if (!this.allowedQueryParameters.has(key.toLowerCase())) {\n                url.searchParams.set(key, RedactedString);\n            }\n        }\n        return url.toString();\n    }\n    sanitizeHeaders(obj) {\n        const sanitized = {};\n        for (const key of Object.keys(obj)) {\n            if (this.allowedHeaderNames.has(key.toLowerCase())) {\n                sanitized[key] = obj[key];\n            }\n            else {\n                sanitized[key] = RedactedString;\n            }\n        }\n        return sanitized;\n    }\n    sanitizeQuery(value) {\n        if (typeof value !== \"object\" || value === null) {\n            return value;\n        }\n        const sanitized = {};\n        for (const k of Object.keys(value)) {\n            if (this.allowedQueryParameters.has(k.toLowerCase())) {\n                sanitized[k] = value[k];\n            }\n            else {\n                sanitized[k] = RedactedString;\n            }\n        }\n        return sanitized;\n    }\n}\n//# sourceMappingURL=sanitizer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS91dGlsL3Nhbml0aXplci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDNEM7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1Asa0JBQWtCLHdIQUF3SCxJQUFJO0FBQzlJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELFlBQVksMENBQTBDO0FBQzNHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsMERBQVE7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxoZWxsby12b2ljZVxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtcmVzdC1waXBlbGluZVxcZGlzdFxcZXNtXFx1dGlsXFxzYW5pdGl6ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBpc09iamVjdCB9IGZyb20gXCJAYXp1cmUvY29yZS11dGlsXCI7XG5jb25zdCBSZWRhY3RlZFN0cmluZyA9IFwiUkVEQUNURURcIjtcbi8vIE1ha2Ugc3VyZSB0aGlzIGxpc3QgaXMgdXAtdG8tZGF0ZSB3aXRoIHRoZSBvbmUgdW5kZXIgY29yZS9sb2dnZXIvUmVhZG1lI0tleWNvbmNlcHRzXG5jb25zdCBkZWZhdWx0QWxsb3dlZEhlYWRlck5hbWVzID0gW1xuICAgIFwieC1tcy1jbGllbnQtcmVxdWVzdC1pZFwiLFxuICAgIFwieC1tcy1yZXR1cm4tY2xpZW50LXJlcXVlc3QtaWRcIixcbiAgICBcIngtbXMtdXNlcmFnZW50XCIsXG4gICAgXCJ4LW1zLWNvcnJlbGF0aW9uLXJlcXVlc3QtaWRcIixcbiAgICBcIngtbXMtcmVxdWVzdC1pZFwiLFxuICAgIFwiY2xpZW50LXJlcXVlc3QtaWRcIixcbiAgICBcIm1zLWN2XCIsXG4gICAgXCJyZXR1cm4tY2xpZW50LXJlcXVlc3QtaWRcIixcbiAgICBcInRyYWNlcGFyZW50XCIsXG4gICAgXCJBY2Nlc3MtQ29udHJvbC1BbGxvdy1DcmVkZW50aWFsc1wiLFxuICAgIFwiQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVyc1wiLFxuICAgIFwiQWNjZXNzLUNvbnRyb2wtQWxsb3ctTWV0aG9kc1wiLFxuICAgIFwiQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luXCIsXG4gICAgXCJBY2Nlc3MtQ29udHJvbC1FeHBvc2UtSGVhZGVyc1wiLFxuICAgIFwiQWNjZXNzLUNvbnRyb2wtTWF4LUFnZVwiLFxuICAgIFwiQWNjZXNzLUNvbnRyb2wtUmVxdWVzdC1IZWFkZXJzXCIsXG4gICAgXCJBY2Nlc3MtQ29udHJvbC1SZXF1ZXN0LU1ldGhvZFwiLFxuICAgIFwiT3JpZ2luXCIsXG4gICAgXCJBY2NlcHRcIixcbiAgICBcIkFjY2VwdC1FbmNvZGluZ1wiLFxuICAgIFwiQ2FjaGUtQ29udHJvbFwiLFxuICAgIFwiQ29ubmVjdGlvblwiLFxuICAgIFwiQ29udGVudC1MZW5ndGhcIixcbiAgICBcIkNvbnRlbnQtVHlwZVwiLFxuICAgIFwiRGF0ZVwiLFxuICAgIFwiRVRhZ1wiLFxuICAgIFwiRXhwaXJlc1wiLFxuICAgIFwiSWYtTWF0Y2hcIixcbiAgICBcIklmLU1vZGlmaWVkLVNpbmNlXCIsXG4gICAgXCJJZi1Ob25lLU1hdGNoXCIsXG4gICAgXCJJZi1Vbm1vZGlmaWVkLVNpbmNlXCIsXG4gICAgXCJMYXN0LU1vZGlmaWVkXCIsXG4gICAgXCJQcmFnbWFcIixcbiAgICBcIlJlcXVlc3QtSWRcIixcbiAgICBcIlJldHJ5LUFmdGVyXCIsXG4gICAgXCJTZXJ2ZXJcIixcbiAgICBcIlRyYW5zZmVyLUVuY29kaW5nXCIsXG4gICAgXCJVc2VyLUFnZW50XCIsXG4gICAgXCJXV1ctQXV0aGVudGljYXRlXCIsXG5dO1xuY29uc3QgZGVmYXVsdEFsbG93ZWRRdWVyeVBhcmFtZXRlcnMgPSBbXCJhcGktdmVyc2lvblwiXTtcbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBjbGFzcyBTYW5pdGl6ZXIge1xuICAgIGNvbnN0cnVjdG9yKHsgYWRkaXRpb25hbEFsbG93ZWRIZWFkZXJOYW1lczogYWxsb3dlZEhlYWRlck5hbWVzID0gW10sIGFkZGl0aW9uYWxBbGxvd2VkUXVlcnlQYXJhbWV0ZXJzOiBhbGxvd2VkUXVlcnlQYXJhbWV0ZXJzID0gW10sIH0gPSB7fSkge1xuICAgICAgICBhbGxvd2VkSGVhZGVyTmFtZXMgPSBkZWZhdWx0QWxsb3dlZEhlYWRlck5hbWVzLmNvbmNhdChhbGxvd2VkSGVhZGVyTmFtZXMpO1xuICAgICAgICBhbGxvd2VkUXVlcnlQYXJhbWV0ZXJzID0gZGVmYXVsdEFsbG93ZWRRdWVyeVBhcmFtZXRlcnMuY29uY2F0KGFsbG93ZWRRdWVyeVBhcmFtZXRlcnMpO1xuICAgICAgICB0aGlzLmFsbG93ZWRIZWFkZXJOYW1lcyA9IG5ldyBTZXQoYWxsb3dlZEhlYWRlck5hbWVzLm1hcCgobikgPT4gbi50b0xvd2VyQ2FzZSgpKSk7XG4gICAgICAgIHRoaXMuYWxsb3dlZFF1ZXJ5UGFyYW1ldGVycyA9IG5ldyBTZXQoYWxsb3dlZFF1ZXJ5UGFyYW1ldGVycy5tYXAoKHApID0+IHAudG9Mb3dlckNhc2UoKSkpO1xuICAgIH1cbiAgICBzYW5pdGl6ZShvYmopIHtcbiAgICAgICAgY29uc3Qgc2VlbiA9IG5ldyBTZXQoKTtcbiAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KG9iaiwgKGtleSwgdmFsdWUpID0+IHtcbiAgICAgICAgICAgIC8vIEVuc3VyZSBFcnJvcnMgaW5jbHVkZSB0aGVpciBpbnRlcmVzdGluZyBub24tZW51bWVyYWJsZSBtZW1iZXJzXG4gICAgICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHZhbHVlKSwgeyBuYW1lOiB2YWx1ZS5uYW1lLCBtZXNzYWdlOiB2YWx1ZS5tZXNzYWdlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGtleSA9PT0gXCJoZWFkZXJzXCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5zYW5pdGl6ZUhlYWRlcnModmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoa2V5ID09PSBcInVybFwiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuc2FuaXRpemVVcmwodmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoa2V5ID09PSBcInF1ZXJ5XCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5zYW5pdGl6ZVF1ZXJ5KHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGtleSA9PT0gXCJib2R5XCIpIHtcbiAgICAgICAgICAgICAgICAvLyBEb24ndCBsb2cgdGhlIHJlcXVlc3QgYm9keVxuICAgICAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChrZXkgPT09IFwicmVzcG9uc2VcIikge1xuICAgICAgICAgICAgICAgIC8vIERvbid0IGxvZyByZXNwb25zZSBhZ2FpblxuICAgICAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChrZXkgPT09IFwib3BlcmF0aW9uU3BlY1wiKSB7XG4gICAgICAgICAgICAgICAgLy8gV2hlbiB1c2luZyBzZW5kT3BlcmF0aW9uUmVxdWVzdCwgdGhlIHJlcXVlc3QgY2FycmllcyBhIG1hc3NpdmVcbiAgICAgICAgICAgICAgICAvLyBmaWVsZCB3aXRoIHRoZSBhdXRvcmVzdCBzcGVjLiBObyBuZWVkIHRvIGxvZyBpdC5cbiAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkgfHwgaXNPYmplY3QodmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgaWYgKHNlZW4uaGFzKHZhbHVlKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gXCJbQ2lyY3VsYXJdXCI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHNlZW4uYWRkKHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfSwgMik7XG4gICAgfVxuICAgIHNhbml0aXplVXJsKHZhbHVlKSB7XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgIT09IFwic3RyaW5nXCIgfHwgdmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IFwiXCIpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB1cmwgPSBuZXcgVVJMKHZhbHVlKTtcbiAgICAgICAgaWYgKCF1cmwuc2VhcmNoKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChjb25zdCBba2V5XSBvZiB1cmwuc2VhcmNoUGFyYW1zKSB7XG4gICAgICAgICAgICBpZiAoIXRoaXMuYWxsb3dlZFF1ZXJ5UGFyYW1ldGVycy5oYXMoa2V5LnRvTG93ZXJDYXNlKCkpKSB7XG4gICAgICAgICAgICAgICAgdXJsLnNlYXJjaFBhcmFtcy5zZXQoa2V5LCBSZWRhY3RlZFN0cmluZyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHVybC50b1N0cmluZygpO1xuICAgIH1cbiAgICBzYW5pdGl6ZUhlYWRlcnMob2JqKSB7XG4gICAgICAgIGNvbnN0IHNhbml0aXplZCA9IHt9O1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyhvYmopKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5hbGxvd2VkSGVhZGVyTmFtZXMuaGFzKGtleS50b0xvd2VyQ2FzZSgpKSkge1xuICAgICAgICAgICAgICAgIHNhbml0aXplZFtrZXldID0gb2JqW2tleV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBzYW5pdGl6ZWRba2V5XSA9IFJlZGFjdGVkU3RyaW5nO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzYW5pdGl6ZWQ7XG4gICAgfVxuICAgIHNhbml0aXplUXVlcnkodmFsdWUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJvYmplY3RcIiB8fCB2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHNhbml0aXplZCA9IHt9O1xuICAgICAgICBmb3IgKGNvbnN0IGsgb2YgT2JqZWN0LmtleXModmFsdWUpKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5hbGxvd2VkUXVlcnlQYXJhbWV0ZXJzLmhhcyhrLnRvTG93ZXJDYXNlKCkpKSB7XG4gICAgICAgICAgICAgICAgc2FuaXRpemVkW2tdID0gdmFsdWVba107XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBzYW5pdGl6ZWRba10gPSBSZWRhY3RlZFN0cmluZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc2FuaXRpemVkO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNhbml0aXplci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/sanitizer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/tokenCycler.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/tokenCycler.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_CYCLER_OPTIONS: () => (/* binding */ DEFAULT_CYCLER_OPTIONS),\n/* harmony export */   createTokenCycler: () => (/* binding */ createTokenCycler)\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/helpers.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// Default options for the cycler if none are provided\nconst DEFAULT_CYCLER_OPTIONS = {\n    forcedRefreshWindowInMs: 1000, // Force waiting for a refresh 1s before the token expires\n    retryIntervalInMs: 3000, // Allow refresh attempts every 3s\n    refreshWindowInMs: 1000 * 60 * 2, // Start refreshing 2m before expiry\n};\n/**\n * Converts an an unreliable access token getter (which may resolve with null)\n * into an AccessTokenGetter by retrying the unreliable getter in a regular\n * interval.\n *\n * @param getAccessToken - A function that produces a promise of an access token that may fail by returning null.\n * @param retryIntervalInMs - The time (in milliseconds) to wait between retry attempts.\n * @param refreshTimeout - The timestamp after which the refresh attempt will fail, throwing an exception.\n * @returns - A promise that, if it resolves, will resolve with an access token.\n */\nasync function beginRefresh(getAccessToken, retryIntervalInMs, refreshTimeout) {\n    // This wrapper handles exceptions gracefully as long as we haven't exceeded\n    // the timeout.\n    async function tryGetAccessToken() {\n        if (Date.now() < refreshTimeout) {\n            try {\n                return await getAccessToken();\n            }\n            catch (_a) {\n                return null;\n            }\n        }\n        else {\n            const finalToken = await getAccessToken();\n            // Timeout is up, so throw if it's still null\n            if (finalToken === null) {\n                throw new Error(\"Failed to refresh access token.\");\n            }\n            return finalToken;\n        }\n    }\n    let token = await tryGetAccessToken();\n    while (token === null) {\n        await (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.delay)(retryIntervalInMs);\n        token = await tryGetAccessToken();\n    }\n    return token;\n}\n/**\n * Creates a token cycler from a credential, scopes, and optional settings.\n *\n * A token cycler represents a way to reliably retrieve a valid access token\n * from a TokenCredential. It will handle initializing the token, refreshing it\n * when it nears expiration, and synchronizes refresh attempts to avoid\n * concurrency hazards.\n *\n * @param credential - the underlying TokenCredential that provides the access\n * token\n * @param tokenCyclerOptions - optionally override default settings for the cycler\n *\n * @returns - a function that reliably produces a valid access token\n */\nfunction createTokenCycler(credential, tokenCyclerOptions) {\n    let refreshWorker = null;\n    let token = null;\n    let tenantId;\n    const options = Object.assign(Object.assign({}, DEFAULT_CYCLER_OPTIONS), tokenCyclerOptions);\n    /**\n     * This little holder defines several predicates that we use to construct\n     * the rules of refreshing the token.\n     */\n    const cycler = {\n        /**\n         * Produces true if a refresh job is currently in progress.\n         */\n        get isRefreshing() {\n            return refreshWorker !== null;\n        },\n        /**\n         * Produces true if the cycler SHOULD refresh (we are within the refresh\n         * window and not already refreshing)\n         */\n        get shouldRefresh() {\n            var _a;\n            if (cycler.isRefreshing) {\n                return false;\n            }\n            if ((token === null || token === void 0 ? void 0 : token.refreshAfterTimestamp) && token.refreshAfterTimestamp < Date.now()) {\n                return true;\n            }\n            return ((_a = token === null || token === void 0 ? void 0 : token.expiresOnTimestamp) !== null && _a !== void 0 ? _a : 0) - options.refreshWindowInMs < Date.now();\n        },\n        /**\n         * Produces true if the cycler MUST refresh (null or nearly-expired\n         * token).\n         */\n        get mustRefresh() {\n            return (token === null || token.expiresOnTimestamp - options.forcedRefreshWindowInMs < Date.now());\n        },\n    };\n    /**\n     * Starts a refresh job or returns the existing job if one is already\n     * running.\n     */\n    function refresh(scopes, getTokenOptions) {\n        var _a;\n        if (!cycler.isRefreshing) {\n            // We bind `scopes` here to avoid passing it around a lot\n            const tryGetAccessToken = () => credential.getToken(scopes, getTokenOptions);\n            // Take advantage of promise chaining to insert an assignment to `token`\n            // before the refresh can be considered done.\n            refreshWorker = beginRefresh(tryGetAccessToken, options.retryIntervalInMs, \n            // If we don't have a token, then we should timeout immediately\n            (_a = token === null || token === void 0 ? void 0 : token.expiresOnTimestamp) !== null && _a !== void 0 ? _a : Date.now())\n                .then((_token) => {\n                refreshWorker = null;\n                token = _token;\n                tenantId = getTokenOptions.tenantId;\n                return token;\n            })\n                .catch((reason) => {\n                // We also should reset the refresher if we enter a failed state.  All\n                // existing awaiters will throw, but subsequent requests will start a\n                // new retry chain.\n                refreshWorker = null;\n                token = null;\n                tenantId = undefined;\n                throw reason;\n            });\n        }\n        return refreshWorker;\n    }\n    return async (scopes, tokenOptions) => {\n        //\n        // Simple rules:\n        // - If we MUST refresh, then return the refresh task, blocking\n        //   the pipeline until a token is available.\n        // - If we SHOULD refresh, then run refresh but don't return it\n        //   (we can still use the cached token).\n        // - Return the token, since it's fine if we didn't return in\n        //   step 1.\n        //\n        const hasClaimChallenge = Boolean(tokenOptions.claims);\n        const tenantIdChanged = tenantId !== tokenOptions.tenantId;\n        if (hasClaimChallenge) {\n            // If we've received a claim, we know the existing token isn't valid\n            // We want to clear it so that that refresh worker won't use the old expiration time as a timeout\n            token = null;\n        }\n        // If the tenantId passed in token options is different to the one we have\n        // Or if we are in claim challenge and the token was rejected and a new access token need to be issued, we need to\n        // refresh the token with the new tenantId or token.\n        const mustRefresh = tenantIdChanged || hasClaimChallenge || cycler.mustRefresh;\n        if (mustRefresh) {\n            return refresh(scopes, tokenOptions);\n        }\n        if (cycler.shouldRefresh) {\n            refresh(scopes, tokenOptions);\n        }\n        return token;\n    };\n}\n//# sourceMappingURL=tokenCycler.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/tokenCycler.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/typeGuards.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/typeGuards.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isBlob: () => (/* binding */ isBlob),\n/* harmony export */   isNodeReadableStream: () => (/* binding */ isNodeReadableStream),\n/* harmony export */   isReadableStream: () => (/* binding */ isReadableStream),\n/* harmony export */   isWebReadableStream: () => (/* binding */ isWebReadableStream)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nfunction isNodeReadableStream(x) {\n    return Boolean(x && typeof x[\"pipe\"] === \"function\");\n}\nfunction isWebReadableStream(x) {\n    return Boolean(x &&\n        typeof x.getReader === \"function\" &&\n        typeof x.tee === \"function\");\n}\nfunction isReadableStream(x) {\n    return isNodeReadableStream(x) || isWebReadableStream(x);\n}\nfunction isBlob(x) {\n    return typeof x.stream === \"function\";\n}\n//# sourceMappingURL=typeGuards.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS91dGlsL3R5cGVHdWFyZHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXJlc3QtcGlwZWxpbmVcXGRpc3RcXGVzbVxcdXRpbFxcdHlwZUd1YXJkcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCBmdW5jdGlvbiBpc05vZGVSZWFkYWJsZVN0cmVhbSh4KSB7XG4gICAgcmV0dXJuIEJvb2xlYW4oeCAmJiB0eXBlb2YgeFtcInBpcGVcIl0gPT09IFwiZnVuY3Rpb25cIik7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNXZWJSZWFkYWJsZVN0cmVhbSh4KSB7XG4gICAgcmV0dXJuIEJvb2xlYW4oeCAmJlxuICAgICAgICB0eXBlb2YgeC5nZXRSZWFkZXIgPT09IFwiZnVuY3Rpb25cIiAmJlxuICAgICAgICB0eXBlb2YgeC50ZWUgPT09IFwiZnVuY3Rpb25cIik7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNSZWFkYWJsZVN0cmVhbSh4KSB7XG4gICAgcmV0dXJuIGlzTm9kZVJlYWRhYmxlU3RyZWFtKHgpIHx8IGlzV2ViUmVhZGFibGVTdHJlYW0oeCk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNCbG9iKHgpIHtcbiAgICByZXR1cm4gdHlwZW9mIHguc3RyZWFtID09PSBcImZ1bmN0aW9uXCI7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlR3VhcmRzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/typeGuards.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgent.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgent.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getUserAgentHeaderName: () => (/* binding */ getUserAgentHeaderName),\n/* harmony export */   getUserAgentValue: () => (/* binding */ getUserAgentValue)\n/* harmony export */ });\n/* harmony import */ var _userAgentPlatform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./userAgentPlatform.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgentPlatform.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\nfunction getUserAgentString(telemetryInfo) {\n    const parts = [];\n    for (const [key, value] of telemetryInfo) {\n        const token = value ? `${key}/${value}` : key;\n        parts.push(token);\n    }\n    return parts.join(\" \");\n}\n/**\n * @internal\n */\nfunction getUserAgentHeaderName() {\n    return (0,_userAgentPlatform_js__WEBPACK_IMPORTED_MODULE_0__.getHeaderName)();\n}\n/**\n * @internal\n */\nasync function getUserAgentValue(prefix) {\n    const runtimeInfo = new Map();\n    runtimeInfo.set(\"core-rest-pipeline\", _constants_js__WEBPACK_IMPORTED_MODULE_1__.SDK_VERSION);\n    await (0,_userAgentPlatform_js__WEBPACK_IMPORTED_MODULE_0__.setPlatformSpecificData)(runtimeInfo);\n    const defaultAgent = getUserAgentString(runtimeInfo);\n    const userAgentValue = prefix ? `${prefix} ${defaultAgent}` : defaultAgent;\n    return userAgentValue;\n}\n//# sourceMappingURL=userAgent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS91dGlsL3VzZXJBZ2VudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNnRjtBQUNsQztBQUM5QztBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsSUFBSSxHQUFHLE1BQU07QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsb0VBQWE7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsMENBQTBDLHNEQUFXO0FBQ3JELFVBQVUsOEVBQXVCO0FBQ2pDO0FBQ0EsdUNBQXVDLFFBQVEsRUFBRSxhQUFhO0FBQzlEO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxoZWxsby12b2ljZVxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtcmVzdC1waXBlbGluZVxcZGlzdFxcZXNtXFx1dGlsXFx1c2VyQWdlbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBnZXRIZWFkZXJOYW1lLCBzZXRQbGF0Zm9ybVNwZWNpZmljRGF0YSB9IGZyb20gXCIuL3VzZXJBZ2VudFBsYXRmb3JtLmpzXCI7XG5pbXBvcnQgeyBTREtfVkVSU0lPTiB9IGZyb20gXCIuLi9jb25zdGFudHMuanNcIjtcbmZ1bmN0aW9uIGdldFVzZXJBZ2VudFN0cmluZyh0ZWxlbWV0cnlJbmZvKSB7XG4gICAgY29uc3QgcGFydHMgPSBbXTtcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiB0ZWxlbWV0cnlJbmZvKSB7XG4gICAgICAgIGNvbnN0IHRva2VuID0gdmFsdWUgPyBgJHtrZXl9LyR7dmFsdWV9YCA6IGtleTtcbiAgICAgICAgcGFydHMucHVzaCh0b2tlbik7XG4gICAgfVxuICAgIHJldHVybiBwYXJ0cy5qb2luKFwiIFwiKTtcbn1cbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRVc2VyQWdlbnRIZWFkZXJOYW1lKCkge1xuICAgIHJldHVybiBnZXRIZWFkZXJOYW1lKCk7XG59XG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0VXNlckFnZW50VmFsdWUocHJlZml4KSB7XG4gICAgY29uc3QgcnVudGltZUluZm8gPSBuZXcgTWFwKCk7XG4gICAgcnVudGltZUluZm8uc2V0KFwiY29yZS1yZXN0LXBpcGVsaW5lXCIsIFNES19WRVJTSU9OKTtcbiAgICBhd2FpdCBzZXRQbGF0Zm9ybVNwZWNpZmljRGF0YShydW50aW1lSW5mbyk7XG4gICAgY29uc3QgZGVmYXVsdEFnZW50ID0gZ2V0VXNlckFnZW50U3RyaW5nKHJ1bnRpbWVJbmZvKTtcbiAgICBjb25zdCB1c2VyQWdlbnRWYWx1ZSA9IHByZWZpeCA/IGAke3ByZWZpeH0gJHtkZWZhdWx0QWdlbnR9YCA6IGRlZmF1bHRBZ2VudDtcbiAgICByZXR1cm4gdXNlckFnZW50VmFsdWU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2VyQWdlbnQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgent.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgentPlatform.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgentPlatform.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("var node_process__WEBPACK_IMPORTED_MODULE_1___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getHeaderName: () => (/* binding */ getHeaderName),\n/* harmony export */   setPlatformSpecificData: () => (/* binding */ setPlatformSpecificData)\n/* harmony export */ });\n/* harmony import */ var node_os__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:os */ \"node:os\");\n/* harmony import */ var node_process__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node:process */ \"node:process\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * @internal\n */\nfunction getHeaderName() {\n    return \"User-Agent\";\n}\n/**\n * @internal\n */\nasync function setPlatformSpecificData(map) {\n    if (/*#__PURE__*/ (node_process__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (node_process__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(node_process__WEBPACK_IMPORTED_MODULE_1__, 2))) && node_process__WEBPACK_IMPORTED_MODULE_1__.versions) {\n        const versions = node_process__WEBPACK_IMPORTED_MODULE_1__.versions;\n        if (versions.bun) {\n            map.set(\"Bun\", versions.bun);\n        }\n        else if (versions.deno) {\n            map.set(\"Deno\", versions.deno);\n        }\n        else if (versions.node) {\n            map.set(\"Node\", versions.node);\n        }\n    }\n    map.set(\"OS\", `(${node_os__WEBPACK_IMPORTED_MODULE_0__.arch()}-${node_os__WEBPACK_IMPORTED_MODULE_0__.type()}-${node_os__WEBPACK_IMPORTED_MODULE_0__.release()})`);\n}\n//# sourceMappingURL=userAgentPlatform.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS91dGlsL3VzZXJBZ2VudFBsYXRmb3JtLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUM4QjtBQUNVO0FBQ3hDO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsUUFBUSw4TUFBTyxJQUFJLGtEQUFnQjtBQUNuQyx5QkFBeUIsa0RBQWdCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHlDQUFPLEdBQUcsR0FBRyx5Q0FBTyxHQUFHLEdBQUcsNENBQVUsR0FBRztBQUM3RDtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGhlbGxvLXZvaWNlXFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS1yZXN0LXBpcGVsaW5lXFxkaXN0XFxlc21cXHV0aWxcXHVzZXJBZ2VudFBsYXRmb3JtLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0ICogYXMgb3MgZnJvbSBcIm5vZGU6b3NcIjtcbmltcG9ydCAqIGFzIHByb2Nlc3MgZnJvbSBcIm5vZGU6cHJvY2Vzc1wiO1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEhlYWRlck5hbWUoKSB7XG4gICAgcmV0dXJuIFwiVXNlci1BZ2VudFwiO1xufVxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNldFBsYXRmb3JtU3BlY2lmaWNEYXRhKG1hcCkge1xuICAgIGlmIChwcm9jZXNzICYmIHByb2Nlc3MudmVyc2lvbnMpIHtcbiAgICAgICAgY29uc3QgdmVyc2lvbnMgPSBwcm9jZXNzLnZlcnNpb25zO1xuICAgICAgICBpZiAodmVyc2lvbnMuYnVuKSB7XG4gICAgICAgICAgICBtYXAuc2V0KFwiQnVuXCIsIHZlcnNpb25zLmJ1bik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodmVyc2lvbnMuZGVubykge1xuICAgICAgICAgICAgbWFwLnNldChcIkRlbm9cIiwgdmVyc2lvbnMuZGVubyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodmVyc2lvbnMubm9kZSkge1xuICAgICAgICAgICAgbWFwLnNldChcIk5vZGVcIiwgdmVyc2lvbnMubm9kZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgbWFwLnNldChcIk9TXCIsIGAoJHtvcy5hcmNoKCl9LSR7b3MudHlwZSgpfS0ke29zLnJlbGVhc2UoKX0pYCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2VyQWdlbnRQbGF0Zm9ybS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgentPlatform.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-tracing/dist/commonjs/state.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist/commonjs/state.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.state = void 0;\n/**\n * @internal\n *\n * Holds the singleton instrumenter, to be shared across CJS and ESM imports.\n */\nexports.state = {\n    instrumenterImplementation: undefined,\n};\n//# sourceMappingURL=state-cjs.cjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdHJhY2luZy9kaXN0L2NvbW1vbmpzL3N0YXRlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXRyYWNpbmdcXGRpc3RcXGNvbW1vbmpzXFxzdGF0ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zdGF0ZSA9IHZvaWQgMDtcbi8qKlxuICogQGludGVybmFsXG4gKlxuICogSG9sZHMgdGhlIHNpbmdsZXRvbiBpbnN0cnVtZW50ZXIsIHRvIGJlIHNoYXJlZCBhY3Jvc3MgQ0pTIGFuZCBFU00gaW1wb3J0cy5cbiAqL1xuZXhwb3J0cy5zdGF0ZSA9IHtcbiAgICBpbnN0cnVtZW50ZXJJbXBsZW1lbnRhdGlvbjogdW5kZWZpbmVkLFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0YXRlLWNqcy5janMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-tracing/dist/commonjs/state.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-tracing/dist/esm/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist/esm/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTracingClient: () => (/* reexport safe */ _tracingClient_js__WEBPACK_IMPORTED_MODULE_1__.createTracingClient),\n/* harmony export */   useInstrumenter: () => (/* reexport safe */ _instrumenter_js__WEBPACK_IMPORTED_MODULE_0__.useInstrumenter)\n/* harmony export */ });\n/* harmony import */ var _instrumenter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instrumenter.js */ \"(ssr)/./node_modules/@azure/core-tracing/dist/esm/instrumenter.js\");\n/* harmony import */ var _tracingClient_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tracingClient.js */ \"(ssr)/./node_modules/@azure/core-tracing/dist/esm/tracingClient.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdHJhY2luZy9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNvRDtBQUNLO0FBQ3pEIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGhlbGxvLXZvaWNlXFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS10cmFjaW5nXFxkaXN0XFxlc21cXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuZXhwb3J0IHsgdXNlSW5zdHJ1bWVudGVyIH0gZnJvbSBcIi4vaW5zdHJ1bWVudGVyLmpzXCI7XG5leHBvcnQgeyBjcmVhdGVUcmFjaW5nQ2xpZW50IH0gZnJvbSBcIi4vdHJhY2luZ0NsaWVudC5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-tracing/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-tracing/dist/esm/instrumenter.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist/esm/instrumenter.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDefaultInstrumenter: () => (/* binding */ createDefaultInstrumenter),\n/* harmony export */   createDefaultTracingSpan: () => (/* binding */ createDefaultTracingSpan),\n/* harmony export */   getInstrumenter: () => (/* binding */ getInstrumenter),\n/* harmony export */   useInstrumenter: () => (/* binding */ useInstrumenter)\n/* harmony export */ });\n/* harmony import */ var _tracingContext_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tracingContext.js */ \"(ssr)/./node_modules/@azure/core-tracing/dist/esm/tracingContext.js\");\n/* harmony import */ var _state_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./state.js */ \"(ssr)/./node_modules/@azure/core-tracing/dist/esm/state.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\nfunction createDefaultTracingSpan() {\n    return {\n        end: () => {\n            // noop\n        },\n        isRecording: () => false,\n        recordException: () => {\n            // noop\n        },\n        setAttribute: () => {\n            // noop\n        },\n        setStatus: () => {\n            // noop\n        },\n        addEvent: () => {\n            // noop\n        },\n    };\n}\nfunction createDefaultInstrumenter() {\n    return {\n        createRequestHeaders: () => {\n            return {};\n        },\n        parseTraceparentHeader: () => {\n            return undefined;\n        },\n        startSpan: (_name, spanOptions) => {\n            return {\n                span: createDefaultTracingSpan(),\n                tracingContext: (0,_tracingContext_js__WEBPACK_IMPORTED_MODULE_0__.createTracingContext)({ parentContext: spanOptions.tracingContext }),\n            };\n        },\n        withContext(_context, callback, ...callbackArgs) {\n            return callback(...callbackArgs);\n        },\n    };\n}\n/**\n * Extends the Azure SDK with support for a given instrumenter implementation.\n *\n * @param instrumenter - The instrumenter implementation to use.\n */\nfunction useInstrumenter(instrumenter) {\n    _state_js__WEBPACK_IMPORTED_MODULE_1__.state.instrumenterImplementation = instrumenter;\n}\n/**\n * Gets the currently set instrumenter, a No-Op instrumenter by default.\n *\n * @returns The currently set instrumenter\n */\nfunction getInstrumenter() {\n    if (!_state_js__WEBPACK_IMPORTED_MODULE_1__.state.instrumenterImplementation) {\n        _state_js__WEBPACK_IMPORTED_MODULE_1__.state.instrumenterImplementation = createDefaultInstrumenter();\n    }\n    return _state_js__WEBPACK_IMPORTED_MODULE_1__.state.instrumenterImplementation;\n}\n//# sourceMappingURL=instrumenter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdHJhY2luZy9kaXN0L2VzbS9pbnN0cnVtZW50ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUMyRDtBQUN4QjtBQUM1QjtBQUNQO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLHdFQUFvQixHQUFHLDJDQUEyQztBQUNsRztBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxJQUFJLDRDQUFLO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxTQUFTLDRDQUFLO0FBQ2QsUUFBUSw0Q0FBSztBQUNiO0FBQ0EsV0FBVyw0Q0FBSztBQUNoQjtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGhlbGxvLXZvaWNlXFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS10cmFjaW5nXFxkaXN0XFxlc21cXGluc3RydW1lbnRlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGNyZWF0ZVRyYWNpbmdDb250ZXh0IH0gZnJvbSBcIi4vdHJhY2luZ0NvbnRleHQuanNcIjtcbmltcG9ydCB7IHN0YXRlIH0gZnJvbSBcIi4vc3RhdGUuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVEZWZhdWx0VHJhY2luZ1NwYW4oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZW5kOiAoKSA9PiB7XG4gICAgICAgICAgICAvLyBub29wXG4gICAgICAgIH0sXG4gICAgICAgIGlzUmVjb3JkaW5nOiAoKSA9PiBmYWxzZSxcbiAgICAgICAgcmVjb3JkRXhjZXB0aW9uOiAoKSA9PiB7XG4gICAgICAgICAgICAvLyBub29wXG4gICAgICAgIH0sXG4gICAgICAgIHNldEF0dHJpYnV0ZTogKCkgPT4ge1xuICAgICAgICAgICAgLy8gbm9vcFxuICAgICAgICB9LFxuICAgICAgICBzZXRTdGF0dXM6ICgpID0+IHtcbiAgICAgICAgICAgIC8vIG5vb3BcbiAgICAgICAgfSxcbiAgICAgICAgYWRkRXZlbnQ6ICgpID0+IHtcbiAgICAgICAgICAgIC8vIG5vb3BcbiAgICAgICAgfSxcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZURlZmF1bHRJbnN0cnVtZW50ZXIoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgY3JlYXRlUmVxdWVzdEhlYWRlcnM6ICgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiB7fTtcbiAgICAgICAgfSxcbiAgICAgICAgcGFyc2VUcmFjZXBhcmVudEhlYWRlcjogKCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgfSxcbiAgICAgICAgc3RhcnRTcGFuOiAoX25hbWUsIHNwYW5PcHRpb25zKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHNwYW46IGNyZWF0ZURlZmF1bHRUcmFjaW5nU3BhbigpLFxuICAgICAgICAgICAgICAgIHRyYWNpbmdDb250ZXh0OiBjcmVhdGVUcmFjaW5nQ29udGV4dCh7IHBhcmVudENvbnRleHQ6IHNwYW5PcHRpb25zLnRyYWNpbmdDb250ZXh0IH0pLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICAgICAgd2l0aENvbnRleHQoX2NvbnRleHQsIGNhbGxiYWNrLCAuLi5jYWxsYmFja0FyZ3MpIHtcbiAgICAgICAgICAgIHJldHVybiBjYWxsYmFjayguLi5jYWxsYmFja0FyZ3MpO1xuICAgICAgICB9LFxuICAgIH07XG59XG4vKipcbiAqIEV4dGVuZHMgdGhlIEF6dXJlIFNESyB3aXRoIHN1cHBvcnQgZm9yIGEgZ2l2ZW4gaW5zdHJ1bWVudGVyIGltcGxlbWVudGF0aW9uLlxuICpcbiAqIEBwYXJhbSBpbnN0cnVtZW50ZXIgLSBUaGUgaW5zdHJ1bWVudGVyIGltcGxlbWVudGF0aW9uIHRvIHVzZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVzZUluc3RydW1lbnRlcihpbnN0cnVtZW50ZXIpIHtcbiAgICBzdGF0ZS5pbnN0cnVtZW50ZXJJbXBsZW1lbnRhdGlvbiA9IGluc3RydW1lbnRlcjtcbn1cbi8qKlxuICogR2V0cyB0aGUgY3VycmVudGx5IHNldCBpbnN0cnVtZW50ZXIsIGEgTm8tT3AgaW5zdHJ1bWVudGVyIGJ5IGRlZmF1bHQuXG4gKlxuICogQHJldHVybnMgVGhlIGN1cnJlbnRseSBzZXQgaW5zdHJ1bWVudGVyXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRJbnN0cnVtZW50ZXIoKSB7XG4gICAgaWYgKCFzdGF0ZS5pbnN0cnVtZW50ZXJJbXBsZW1lbnRhdGlvbikge1xuICAgICAgICBzdGF0ZS5pbnN0cnVtZW50ZXJJbXBsZW1lbnRhdGlvbiA9IGNyZWF0ZURlZmF1bHRJbnN0cnVtZW50ZXIoKTtcbiAgICB9XG4gICAgcmV0dXJuIHN0YXRlLmluc3RydW1lbnRlckltcGxlbWVudGF0aW9uO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5zdHJ1bWVudGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-tracing/dist/esm/instrumenter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-tracing/dist/esm/state.js":
/*!************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist/esm/state.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   state: () => (/* binding */ state)\n/* harmony export */ });\n/* harmony import */ var _commonjs_state_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../commonjs/state.js */ \"(ssr)/./node_modules/@azure/core-tracing/dist/commonjs/state.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n// @ts-expect-error The recommended approach to sharing module state between ESM and CJS.\n// See https://github.com/isaacs/tshy/blob/main/README.md#module-local-state for additional information.\n\n/**\n * Defines the shared state between CJS and ESM by re-exporting the CJS state.\n */\nconst state = _commonjs_state_js__WEBPACK_IMPORTED_MODULE_0__.state;\n//# sourceMappingURL=state.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdHJhY2luZy9kaXN0L2VzbS9zdGF0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ3lEO0FBQ3pEO0FBQ0E7QUFDQTtBQUNPLGNBQWMscURBQVE7QUFDN0IiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXRyYWNpbmdcXGRpc3RcXGVzbVxcc3RhdGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vLyBAdHMtZXhwZWN0LWVycm9yIFRoZSByZWNvbW1lbmRlZCBhcHByb2FjaCB0byBzaGFyaW5nIG1vZHVsZSBzdGF0ZSBiZXR3ZWVuIEVTTSBhbmQgQ0pTLlxuLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9pc2FhY3MvdHNoeS9ibG9iL21haW4vUkVBRE1FLm1kI21vZHVsZS1sb2NhbC1zdGF0ZSBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbi5cbmltcG9ydCB7IHN0YXRlIGFzIGNqc1N0YXRlIH0gZnJvbSBcIi4uL2NvbW1vbmpzL3N0YXRlLmpzXCI7XG4vKipcbiAqIERlZmluZXMgdGhlIHNoYXJlZCBzdGF0ZSBiZXR3ZWVuIENKUyBhbmQgRVNNIGJ5IHJlLWV4cG9ydGluZyB0aGUgQ0pTIHN0YXRlLlxuICovXG5leHBvcnQgY29uc3Qgc3RhdGUgPSBjanNTdGF0ZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0YXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-tracing/dist/esm/state.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-tracing/dist/esm/tracingClient.js":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist/esm/tracingClient.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTracingClient: () => (/* binding */ createTracingClient)\n/* harmony export */ });\n/* harmony import */ var _instrumenter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instrumenter.js */ \"(ssr)/./node_modules/@azure/core-tracing/dist/esm/instrumenter.js\");\n/* harmony import */ var _tracingContext_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tracingContext.js */ \"(ssr)/./node_modules/@azure/core-tracing/dist/esm/tracingContext.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * Creates a new tracing client.\n *\n * @param options - Options used to configure the tracing client.\n * @returns - An instance of {@link TracingClient}.\n */\nfunction createTracingClient(options) {\n    const { namespace, packageName, packageVersion } = options;\n    function startSpan(name, operationOptions, spanOptions) {\n        var _a;\n        const startSpanResult = (0,_instrumenter_js__WEBPACK_IMPORTED_MODULE_0__.getInstrumenter)().startSpan(name, Object.assign(Object.assign({}, spanOptions), { packageName: packageName, packageVersion: packageVersion, tracingContext: (_a = operationOptions === null || operationOptions === void 0 ? void 0 : operationOptions.tracingOptions) === null || _a === void 0 ? void 0 : _a.tracingContext }));\n        let tracingContext = startSpanResult.tracingContext;\n        const span = startSpanResult.span;\n        if (!tracingContext.getValue(_tracingContext_js__WEBPACK_IMPORTED_MODULE_1__.knownContextKeys.namespace)) {\n            tracingContext = tracingContext.setValue(_tracingContext_js__WEBPACK_IMPORTED_MODULE_1__.knownContextKeys.namespace, namespace);\n        }\n        span.setAttribute(\"az.namespace\", tracingContext.getValue(_tracingContext_js__WEBPACK_IMPORTED_MODULE_1__.knownContextKeys.namespace));\n        const updatedOptions = Object.assign({}, operationOptions, {\n            tracingOptions: Object.assign(Object.assign({}, operationOptions === null || operationOptions === void 0 ? void 0 : operationOptions.tracingOptions), { tracingContext }),\n        });\n        return {\n            span,\n            updatedOptions,\n        };\n    }\n    async function withSpan(name, operationOptions, callback, spanOptions) {\n        const { span, updatedOptions } = startSpan(name, operationOptions, spanOptions);\n        try {\n            const result = await withContext(updatedOptions.tracingOptions.tracingContext, () => Promise.resolve(callback(updatedOptions, span)));\n            span.setStatus({ status: \"success\" });\n            return result;\n        }\n        catch (err) {\n            span.setStatus({ status: \"error\", error: err });\n            throw err;\n        }\n        finally {\n            span.end();\n        }\n    }\n    function withContext(context, callback, ...callbackArgs) {\n        return (0,_instrumenter_js__WEBPACK_IMPORTED_MODULE_0__.getInstrumenter)().withContext(context, callback, ...callbackArgs);\n    }\n    /**\n     * Parses a traceparent header value into a span identifier.\n     *\n     * @param traceparentHeader - The traceparent header to parse.\n     * @returns An implementation-specific identifier for the span.\n     */\n    function parseTraceparentHeader(traceparentHeader) {\n        return (0,_instrumenter_js__WEBPACK_IMPORTED_MODULE_0__.getInstrumenter)().parseTraceparentHeader(traceparentHeader);\n    }\n    /**\n     * Creates a set of request headers to propagate tracing information to a backend.\n     *\n     * @param tracingContext - The context containing the span to serialize.\n     * @returns The set of headers to add to a request.\n     */\n    function createRequestHeaders(tracingContext) {\n        return (0,_instrumenter_js__WEBPACK_IMPORTED_MODULE_0__.getInstrumenter)().createRequestHeaders(tracingContext);\n    }\n    return {\n        startSpan,\n        withSpan,\n        withContext,\n        parseTraceparentHeader,\n        createRequestHeaders,\n    };\n}\n//# sourceMappingURL=tracingClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdHJhY2luZy9kaXN0L2VzbS90cmFjaW5nQ2xpZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDb0Q7QUFDRztBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixvQkFBb0I7QUFDbEQ7QUFDTztBQUNQLFlBQVkseUNBQXlDO0FBQ3JEO0FBQ0E7QUFDQSxnQ0FBZ0MsaUVBQWUsaURBQWlELGtCQUFrQiw2T0FBNk87QUFDL1Y7QUFDQTtBQUNBLHFDQUFxQyxnRUFBZ0I7QUFDckQscURBQXFELGdFQUFnQjtBQUNyRTtBQUNBLGtFQUFrRSxnRUFBZ0I7QUFDbEYsK0NBQStDO0FBQy9DLDBEQUEwRCwwR0FBMEcsZ0JBQWdCO0FBQ3BMLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsdUJBQXVCO0FBQ3ZDO0FBQ0E7QUFDQSw2QkFBNkIsbUJBQW1CO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qiw2QkFBNkI7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGlFQUFlO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGlFQUFlO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGlFQUFlO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGhlbGxvLXZvaWNlXFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS10cmFjaW5nXFxkaXN0XFxlc21cXHRyYWNpbmdDbGllbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBnZXRJbnN0cnVtZW50ZXIgfSBmcm9tIFwiLi9pbnN0cnVtZW50ZXIuanNcIjtcbmltcG9ydCB7IGtub3duQ29udGV4dEtleXMgfSBmcm9tIFwiLi90cmFjaW5nQ29udGV4dC5qc1wiO1xuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IHRyYWNpbmcgY2xpZW50LlxuICpcbiAqIEBwYXJhbSBvcHRpb25zIC0gT3B0aW9ucyB1c2VkIHRvIGNvbmZpZ3VyZSB0aGUgdHJhY2luZyBjbGllbnQuXG4gKiBAcmV0dXJucyAtIEFuIGluc3RhbmNlIG9mIHtAbGluayBUcmFjaW5nQ2xpZW50fS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVRyYWNpbmdDbGllbnQob3B0aW9ucykge1xuICAgIGNvbnN0IHsgbmFtZXNwYWNlLCBwYWNrYWdlTmFtZSwgcGFja2FnZVZlcnNpb24gfSA9IG9wdGlvbnM7XG4gICAgZnVuY3Rpb24gc3RhcnRTcGFuKG5hbWUsIG9wZXJhdGlvbk9wdGlvbnMsIHNwYW5PcHRpb25zKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgY29uc3Qgc3RhcnRTcGFuUmVzdWx0ID0gZ2V0SW5zdHJ1bWVudGVyKCkuc3RhcnRTcGFuKG5hbWUsIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgc3Bhbk9wdGlvbnMpLCB7IHBhY2thZ2VOYW1lOiBwYWNrYWdlTmFtZSwgcGFja2FnZVZlcnNpb246IHBhY2thZ2VWZXJzaW9uLCB0cmFjaW5nQ29udGV4dDogKF9hID0gb3BlcmF0aW9uT3B0aW9ucyA9PT0gbnVsbCB8fCBvcGVyYXRpb25PcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcGVyYXRpb25PcHRpb25zLnRyYWNpbmdPcHRpb25zKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EudHJhY2luZ0NvbnRleHQgfSkpO1xuICAgICAgICBsZXQgdHJhY2luZ0NvbnRleHQgPSBzdGFydFNwYW5SZXN1bHQudHJhY2luZ0NvbnRleHQ7XG4gICAgICAgIGNvbnN0IHNwYW4gPSBzdGFydFNwYW5SZXN1bHQuc3BhbjtcbiAgICAgICAgaWYgKCF0cmFjaW5nQ29udGV4dC5nZXRWYWx1ZShrbm93bkNvbnRleHRLZXlzLm5hbWVzcGFjZSkpIHtcbiAgICAgICAgICAgIHRyYWNpbmdDb250ZXh0ID0gdHJhY2luZ0NvbnRleHQuc2V0VmFsdWUoa25vd25Db250ZXh0S2V5cy5uYW1lc3BhY2UsIG5hbWVzcGFjZSk7XG4gICAgICAgIH1cbiAgICAgICAgc3Bhbi5zZXRBdHRyaWJ1dGUoXCJhei5uYW1lc3BhY2VcIiwgdHJhY2luZ0NvbnRleHQuZ2V0VmFsdWUoa25vd25Db250ZXh0S2V5cy5uYW1lc3BhY2UpKTtcbiAgICAgICAgY29uc3QgdXBkYXRlZE9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHt9LCBvcGVyYXRpb25PcHRpb25zLCB7XG4gICAgICAgICAgICB0cmFjaW5nT3B0aW9uczogT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBvcGVyYXRpb25PcHRpb25zID09PSBudWxsIHx8IG9wZXJhdGlvbk9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wZXJhdGlvbk9wdGlvbnMudHJhY2luZ09wdGlvbnMpLCB7IHRyYWNpbmdDb250ZXh0IH0pLFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHNwYW4sXG4gICAgICAgICAgICB1cGRhdGVkT3B0aW9ucyxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgYXN5bmMgZnVuY3Rpb24gd2l0aFNwYW4obmFtZSwgb3BlcmF0aW9uT3B0aW9ucywgY2FsbGJhY2ssIHNwYW5PcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHsgc3BhbiwgdXBkYXRlZE9wdGlvbnMgfSA9IHN0YXJ0U3BhbihuYW1lLCBvcGVyYXRpb25PcHRpb25zLCBzcGFuT3B0aW9ucyk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB3aXRoQ29udGV4dCh1cGRhdGVkT3B0aW9ucy50cmFjaW5nT3B0aW9ucy50cmFjaW5nQ29udGV4dCwgKCkgPT4gUHJvbWlzZS5yZXNvbHZlKGNhbGxiYWNrKHVwZGF0ZWRPcHRpb25zLCBzcGFuKSkpO1xuICAgICAgICAgICAgc3Bhbi5zZXRTdGF0dXMoeyBzdGF0dXM6IFwic3VjY2Vzc1wiIH0pO1xuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICBzcGFuLnNldFN0YXR1cyh7IHN0YXR1czogXCJlcnJvclwiLCBlcnJvcjogZXJyIH0pO1xuICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgc3Bhbi5lbmQoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiB3aXRoQ29udGV4dChjb250ZXh0LCBjYWxsYmFjaywgLi4uY2FsbGJhY2tBcmdzKSB7XG4gICAgICAgIHJldHVybiBnZXRJbnN0cnVtZW50ZXIoKS53aXRoQ29udGV4dChjb250ZXh0LCBjYWxsYmFjaywgLi4uY2FsbGJhY2tBcmdzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUGFyc2VzIGEgdHJhY2VwYXJlbnQgaGVhZGVyIHZhbHVlIGludG8gYSBzcGFuIGlkZW50aWZpZXIuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdHJhY2VwYXJlbnRIZWFkZXIgLSBUaGUgdHJhY2VwYXJlbnQgaGVhZGVyIHRvIHBhcnNlLlxuICAgICAqIEByZXR1cm5zIEFuIGltcGxlbWVudGF0aW9uLXNwZWNpZmljIGlkZW50aWZpZXIgZm9yIHRoZSBzcGFuLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHBhcnNlVHJhY2VwYXJlbnRIZWFkZXIodHJhY2VwYXJlbnRIZWFkZXIpIHtcbiAgICAgICAgcmV0dXJuIGdldEluc3RydW1lbnRlcigpLnBhcnNlVHJhY2VwYXJlbnRIZWFkZXIodHJhY2VwYXJlbnRIZWFkZXIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgc2V0IG9mIHJlcXVlc3QgaGVhZGVycyB0byBwcm9wYWdhdGUgdHJhY2luZyBpbmZvcm1hdGlvbiB0byBhIGJhY2tlbmQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdHJhY2luZ0NvbnRleHQgLSBUaGUgY29udGV4dCBjb250YWluaW5nIHRoZSBzcGFuIHRvIHNlcmlhbGl6ZS5cbiAgICAgKiBAcmV0dXJucyBUaGUgc2V0IG9mIGhlYWRlcnMgdG8gYWRkIHRvIGEgcmVxdWVzdC5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBjcmVhdGVSZXF1ZXN0SGVhZGVycyh0cmFjaW5nQ29udGV4dCkge1xuICAgICAgICByZXR1cm4gZ2V0SW5zdHJ1bWVudGVyKCkuY3JlYXRlUmVxdWVzdEhlYWRlcnModHJhY2luZ0NvbnRleHQpO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBzdGFydFNwYW4sXG4gICAgICAgIHdpdGhTcGFuLFxuICAgICAgICB3aXRoQ29udGV4dCxcbiAgICAgICAgcGFyc2VUcmFjZXBhcmVudEhlYWRlcixcbiAgICAgICAgY3JlYXRlUmVxdWVzdEhlYWRlcnMsXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRyYWNpbmdDbGllbnQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-tracing/dist/esm/tracingClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-tracing/dist/esm/tracingContext.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist/esm/tracingContext.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TracingContextImpl: () => (/* binding */ TracingContextImpl),\n/* harmony export */   createTracingContext: () => (/* binding */ createTracingContext),\n/* harmony export */   knownContextKeys: () => (/* binding */ knownContextKeys)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/** @internal */\nconst knownContextKeys = {\n    span: Symbol.for(\"@azure/core-tracing span\"),\n    namespace: Symbol.for(\"@azure/core-tracing namespace\"),\n};\n/**\n * Creates a new {@link TracingContext} with the given options.\n * @param options - A set of known keys that may be set on the context.\n * @returns A new {@link TracingContext} with the given options.\n *\n * @internal\n */\nfunction createTracingContext(options = {}) {\n    let context = new TracingContextImpl(options.parentContext);\n    if (options.span) {\n        context = context.setValue(knownContextKeys.span, options.span);\n    }\n    if (options.namespace) {\n        context = context.setValue(knownContextKeys.namespace, options.namespace);\n    }\n    return context;\n}\n/** @internal */\nclass TracingContextImpl {\n    constructor(initialContext) {\n        this._contextMap =\n            initialContext instanceof TracingContextImpl\n                ? new Map(initialContext._contextMap)\n                : new Map();\n    }\n    setValue(key, value) {\n        const newContext = new TracingContextImpl(this);\n        newContext._contextMap.set(key, value);\n        return newContext;\n    }\n    getValue(key) {\n        return this._contextMap.get(key);\n    }\n    deleteValue(key) {\n        const newContext = new TracingContextImpl(this);\n        newContext._contextMap.delete(key);\n        return newContext;\n    }\n}\n//# sourceMappingURL=tracingContext.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdHJhY2luZy9kaXN0L2VzbS90cmFjaW5nQ29udGV4dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHNCQUFzQjtBQUN4QztBQUNBLG1CQUFtQixzQkFBc0I7QUFDekM7QUFDQTtBQUNBO0FBQ08sMENBQTBDO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXRyYWNpbmdcXGRpc3RcXGVzbVxcdHJhY2luZ0NvbnRleHQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vKiogQGludGVybmFsICovXG5leHBvcnQgY29uc3Qga25vd25Db250ZXh0S2V5cyA9IHtcbiAgICBzcGFuOiBTeW1ib2wuZm9yKFwiQGF6dXJlL2NvcmUtdHJhY2luZyBzcGFuXCIpLFxuICAgIG5hbWVzcGFjZTogU3ltYm9sLmZvcihcIkBhenVyZS9jb3JlLXRyYWNpbmcgbmFtZXNwYWNlXCIpLFxufTtcbi8qKlxuICogQ3JlYXRlcyBhIG5ldyB7QGxpbmsgVHJhY2luZ0NvbnRleHR9IHdpdGggdGhlIGdpdmVuIG9wdGlvbnMuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIEEgc2V0IG9mIGtub3duIGtleXMgdGhhdCBtYXkgYmUgc2V0IG9uIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMgQSBuZXcge0BsaW5rIFRyYWNpbmdDb250ZXh0fSB3aXRoIHRoZSBnaXZlbiBvcHRpb25zLlxuICpcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlVHJhY2luZ0NvbnRleHQob3B0aW9ucyA9IHt9KSB7XG4gICAgbGV0IGNvbnRleHQgPSBuZXcgVHJhY2luZ0NvbnRleHRJbXBsKG9wdGlvbnMucGFyZW50Q29udGV4dCk7XG4gICAgaWYgKG9wdGlvbnMuc3Bhbikge1xuICAgICAgICBjb250ZXh0ID0gY29udGV4dC5zZXRWYWx1ZShrbm93bkNvbnRleHRLZXlzLnNwYW4sIG9wdGlvbnMuc3Bhbik7XG4gICAgfVxuICAgIGlmIChvcHRpb25zLm5hbWVzcGFjZSkge1xuICAgICAgICBjb250ZXh0ID0gY29udGV4dC5zZXRWYWx1ZShrbm93bkNvbnRleHRLZXlzLm5hbWVzcGFjZSwgb3B0aW9ucy5uYW1lc3BhY2UpO1xuICAgIH1cbiAgICByZXR1cm4gY29udGV4dDtcbn1cbi8qKiBAaW50ZXJuYWwgKi9cbmV4cG9ydCBjbGFzcyBUcmFjaW5nQ29udGV4dEltcGwge1xuICAgIGNvbnN0cnVjdG9yKGluaXRpYWxDb250ZXh0KSB7XG4gICAgICAgIHRoaXMuX2NvbnRleHRNYXAgPVxuICAgICAgICAgICAgaW5pdGlhbENvbnRleHQgaW5zdGFuY2VvZiBUcmFjaW5nQ29udGV4dEltcGxcbiAgICAgICAgICAgICAgICA/IG5ldyBNYXAoaW5pdGlhbENvbnRleHQuX2NvbnRleHRNYXApXG4gICAgICAgICAgICAgICAgOiBuZXcgTWFwKCk7XG4gICAgfVxuICAgIHNldFZhbHVlKGtleSwgdmFsdWUpIHtcbiAgICAgICAgY29uc3QgbmV3Q29udGV4dCA9IG5ldyBUcmFjaW5nQ29udGV4dEltcGwodGhpcyk7XG4gICAgICAgIG5ld0NvbnRleHQuX2NvbnRleHRNYXAuc2V0KGtleSwgdmFsdWUpO1xuICAgICAgICByZXR1cm4gbmV3Q29udGV4dDtcbiAgICB9XG4gICAgZ2V0VmFsdWUoa2V5KSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jb250ZXh0TWFwLmdldChrZXkpO1xuICAgIH1cbiAgICBkZWxldGVWYWx1ZShrZXkpIHtcbiAgICAgICAgY29uc3QgbmV3Q29udGV4dCA9IG5ldyBUcmFjaW5nQ29udGV4dEltcGwodGhpcyk7XG4gICAgICAgIG5ld0NvbnRleHQuX2NvbnRleHRNYXAuZGVsZXRlKGtleSk7XG4gICAgICAgIHJldHVybiBuZXdDb250ZXh0O1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRyYWNpbmdDb250ZXh0LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-tracing/dist/esm/tracingContext.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-util/dist/esm/aborterUtils.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/aborterUtils.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cancelablePromiseRace: () => (/* binding */ cancelablePromiseRace)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * promise.race() wrapper that aborts rest of promises as soon as the first promise settles.\n */\nasync function cancelablePromiseRace(abortablePromiseBuilders, options) {\n    var _a, _b;\n    const aborter = new AbortController();\n    function abortHandler() {\n        aborter.abort();\n    }\n    (_a = options === null || options === void 0 ? void 0 : options.abortSignal) === null || _a === void 0 ? void 0 : _a.addEventListener(\"abort\", abortHandler);\n    try {\n        return await Promise.race(abortablePromiseBuilders.map((p) => p({ abortSignal: aborter.signal })));\n    }\n    finally {\n        aborter.abort();\n        (_b = options === null || options === void 0 ? void 0 : options.abortSignal) === null || _b === void 0 ? void 0 : _b.removeEventListener(\"abort\", abortHandler);\n    }\n}\n//# sourceMappingURL=aborterUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9hYm9ydGVyVXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEVBQTBFLDZCQUE2QjtBQUN2RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxoZWxsby12b2ljZVxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtdXRpbFxcZGlzdFxcZXNtXFxhYm9ydGVyVXRpbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vKipcbiAqIHByb21pc2UucmFjZSgpIHdyYXBwZXIgdGhhdCBhYm9ydHMgcmVzdCBvZiBwcm9taXNlcyBhcyBzb29uIGFzIHRoZSBmaXJzdCBwcm9taXNlIHNldHRsZXMuXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjYW5jZWxhYmxlUHJvbWlzZVJhY2UoYWJvcnRhYmxlUHJvbWlzZUJ1aWxkZXJzLCBvcHRpb25zKSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBjb25zdCBhYm9ydGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICAgIGZ1bmN0aW9uIGFib3J0SGFuZGxlcigpIHtcbiAgICAgICAgYWJvcnRlci5hYm9ydCgpO1xuICAgIH1cbiAgICAoX2EgPSBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuYWJvcnRTaWduYWwpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5hZGRFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgYWJvcnRIYW5kbGVyKTtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gYXdhaXQgUHJvbWlzZS5yYWNlKGFib3J0YWJsZVByb21pc2VCdWlsZGVycy5tYXAoKHApID0+IHAoeyBhYm9ydFNpZ25hbDogYWJvcnRlci5zaWduYWwgfSkpKTtcbiAgICB9XG4gICAgZmluYWxseSB7XG4gICAgICAgIGFib3J0ZXIuYWJvcnQoKTtcbiAgICAgICAgKF9iID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmFib3J0U2lnbmFsKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsIGFib3J0SGFuZGxlcik7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWJvcnRlclV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-util/dist/esm/aborterUtils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-util/dist/esm/bytesEncoding.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/bytesEncoding.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stringToUint8Array: () => (/* binding */ stringToUint8Array),\n/* harmony export */   uint8ArrayToString: () => (/* binding */ uint8ArrayToString)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * The helper that transforms bytes with specific character encoding into string\n * @param bytes - the uint8array bytes\n * @param format - the format we use to encode the byte\n * @returns a string of the encoded string\n */\nfunction uint8ArrayToString(bytes, format) {\n    return Buffer.from(bytes).toString(format);\n}\n/**\n * The helper that transforms string to specific character encoded bytes array.\n * @param value - the string to be converted\n * @param format - the format we use to decode the value\n * @returns a uint8array\n */\nfunction stringToUint8Array(value, format) {\n    return Buffer.from(value, format);\n}\n//# sourceMappingURL=bytesEncoding.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9ieXRlc0VuY29kaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGhlbGxvLXZvaWNlXFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS11dGlsXFxkaXN0XFxlc21cXGJ5dGVzRW5jb2RpbmcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vKipcbiAqIFRoZSBoZWxwZXIgdGhhdCB0cmFuc2Zvcm1zIGJ5dGVzIHdpdGggc3BlY2lmaWMgY2hhcmFjdGVyIGVuY29kaW5nIGludG8gc3RyaW5nXG4gKiBAcGFyYW0gYnl0ZXMgLSB0aGUgdWludDhhcnJheSBieXRlc1xuICogQHBhcmFtIGZvcm1hdCAtIHRoZSBmb3JtYXQgd2UgdXNlIHRvIGVuY29kZSB0aGUgYnl0ZVxuICogQHJldHVybnMgYSBzdHJpbmcgb2YgdGhlIGVuY29kZWQgc3RyaW5nXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1aW50OEFycmF5VG9TdHJpbmcoYnl0ZXMsIGZvcm1hdCkge1xuICAgIHJldHVybiBCdWZmZXIuZnJvbShieXRlcykudG9TdHJpbmcoZm9ybWF0KTtcbn1cbi8qKlxuICogVGhlIGhlbHBlciB0aGF0IHRyYW5zZm9ybXMgc3RyaW5nIHRvIHNwZWNpZmljIGNoYXJhY3RlciBlbmNvZGVkIGJ5dGVzIGFycmF5LlxuICogQHBhcmFtIHZhbHVlIC0gdGhlIHN0cmluZyB0byBiZSBjb252ZXJ0ZWRcbiAqIEBwYXJhbSBmb3JtYXQgLSB0aGUgZm9ybWF0IHdlIHVzZSB0byBkZWNvZGUgdGhlIHZhbHVlXG4gKiBAcmV0dXJucyBhIHVpbnQ4YXJyYXlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHN0cmluZ1RvVWludDhBcnJheSh2YWx1ZSwgZm9ybWF0KSB7XG4gICAgcmV0dXJuIEJ1ZmZlci5mcm9tKHZhbHVlLCBmb3JtYXQpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Ynl0ZXNFbmNvZGluZy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-util/dist/esm/bytesEncoding.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-util/dist/esm/checkEnvironment.js":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/checkEnvironment.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isBrowser: () => (/* binding */ isBrowser),\n/* harmony export */   isBun: () => (/* binding */ isBun),\n/* harmony export */   isDeno: () => (/* binding */ isDeno),\n/* harmony export */   isNode: () => (/* binding */ isNode),\n/* harmony export */   isNodeLike: () => (/* binding */ isNodeLike),\n/* harmony export */   isNodeRuntime: () => (/* binding */ isNodeRuntime),\n/* harmony export */   isReactNative: () => (/* binding */ isReactNative),\n/* harmony export */   isWebWorker: () => (/* binding */ isWebWorker)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nvar _a, _b, _c, _d;\n/**\n * A constant that indicates whether the environment the code is running is a Web Browser.\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-no-window\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n/**\n * A constant that indicates whether the environment the code is running is a Web Worker.\n */\nconst isWebWorker = typeof self === \"object\" &&\n    typeof (self === null || self === void 0 ? void 0 : self.importScripts) === \"function\" &&\n    (((_a = self.constructor) === null || _a === void 0 ? void 0 : _a.name) === \"DedicatedWorkerGlobalScope\" ||\n        ((_b = self.constructor) === null || _b === void 0 ? void 0 : _b.name) === \"ServiceWorkerGlobalScope\" ||\n        ((_c = self.constructor) === null || _c === void 0 ? void 0 : _c.name) === \"SharedWorkerGlobalScope\");\n/**\n * A constant that indicates whether the environment the code is running is Deno.\n */\nconst isDeno = typeof Deno !== \"undefined\" &&\n    typeof Deno.version !== \"undefined\" &&\n    typeof Deno.version.deno !== \"undefined\";\n/**\n * A constant that indicates whether the environment the code is running is Bun.sh.\n */\nconst isBun = typeof Bun !== \"undefined\" && typeof Bun.version !== \"undefined\";\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n */\nconst isNodeLike = typeof globalThis.process !== \"undefined\" &&\n    Boolean(globalThis.process.version) &&\n    Boolean((_d = globalThis.process.versions) === null || _d === void 0 ? void 0 : _d.node);\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n * @deprecated Use `isNodeLike` instead.\n */\nconst isNode = isNodeLike;\n/**\n * A constant that indicates whether the environment the code is running is Node.JS.\n */\nconst isNodeRuntime = isNodeLike && !isBun && !isDeno;\n/**\n * A constant that indicates whether the environment the code is running is in React-Native.\n */\n// https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/Core/setUpNavigator.js\nconst isReactNative = typeof navigator !== \"undefined\" && (navigator === null || navigator === void 0 ? void 0 : navigator.product) === \"ReactNative\";\n//# sourceMappingURL=checkEnvironment.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9jaGVja0Vudmlyb25tZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxoZWxsby12b2ljZVxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtdXRpbFxcZGlzdFxcZXNtXFxjaGVja0Vudmlyb25tZW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxudmFyIF9hLCBfYiwgX2MsIF9kO1xuLyoqXG4gKiBBIGNvbnN0YW50IHRoYXQgaW5kaWNhdGVzIHdoZXRoZXIgdGhlIGVudmlyb25tZW50IHRoZSBjb2RlIGlzIHJ1bm5pbmcgaXMgYSBXZWIgQnJvd3Nlci5cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEBhenVyZS9henVyZS1zZGsvdHMtbm8td2luZG93XG5leHBvcnQgY29uc3QgaXNCcm93c2VyID0gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB0eXBlb2Ygd2luZG93LmRvY3VtZW50ICE9PSBcInVuZGVmaW5lZFwiO1xuLyoqXG4gKiBBIGNvbnN0YW50IHRoYXQgaW5kaWNhdGVzIHdoZXRoZXIgdGhlIGVudmlyb25tZW50IHRoZSBjb2RlIGlzIHJ1bm5pbmcgaXMgYSBXZWIgV29ya2VyLlxuICovXG5leHBvcnQgY29uc3QgaXNXZWJXb3JrZXIgPSB0eXBlb2Ygc2VsZiA9PT0gXCJvYmplY3RcIiAmJlxuICAgIHR5cGVvZiAoc2VsZiA9PT0gbnVsbCB8fCBzZWxmID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzZWxmLmltcG9ydFNjcmlwdHMpID09PSBcImZ1bmN0aW9uXCIgJiZcbiAgICAoKChfYSA9IHNlbGYuY29uc3RydWN0b3IpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5uYW1lKSA9PT0gXCJEZWRpY2F0ZWRXb3JrZXJHbG9iYWxTY29wZVwiIHx8XG4gICAgICAgICgoX2IgPSBzZWxmLmNvbnN0cnVjdG9yKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IubmFtZSkgPT09IFwiU2VydmljZVdvcmtlckdsb2JhbFNjb3BlXCIgfHxcbiAgICAgICAgKChfYyA9IHNlbGYuY29uc3RydWN0b3IpID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy5uYW1lKSA9PT0gXCJTaGFyZWRXb3JrZXJHbG9iYWxTY29wZVwiKTtcbi8qKlxuICogQSBjb25zdGFudCB0aGF0IGluZGljYXRlcyB3aGV0aGVyIHRoZSBlbnZpcm9ubWVudCB0aGUgY29kZSBpcyBydW5uaW5nIGlzIERlbm8uXG4gKi9cbmV4cG9ydCBjb25zdCBpc0Rlbm8gPSB0eXBlb2YgRGVubyAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuICAgIHR5cGVvZiBEZW5vLnZlcnNpb24gIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICB0eXBlb2YgRGVuby52ZXJzaW9uLmRlbm8gIT09IFwidW5kZWZpbmVkXCI7XG4vKipcbiAqIEEgY29uc3RhbnQgdGhhdCBpbmRpY2F0ZXMgd2hldGhlciB0aGUgZW52aXJvbm1lbnQgdGhlIGNvZGUgaXMgcnVubmluZyBpcyBCdW4uc2guXG4gKi9cbmV4cG9ydCBjb25zdCBpc0J1biA9IHR5cGVvZiBCdW4gIT09IFwidW5kZWZpbmVkXCIgJiYgdHlwZW9mIEJ1bi52ZXJzaW9uICE9PSBcInVuZGVmaW5lZFwiO1xuLyoqXG4gKiBBIGNvbnN0YW50IHRoYXQgaW5kaWNhdGVzIHdoZXRoZXIgdGhlIGVudmlyb25tZW50IHRoZSBjb2RlIGlzIHJ1bm5pbmcgaXMgYSBOb2RlLmpzIGNvbXBhdGlibGUgZW52aXJvbm1lbnQuXG4gKi9cbmV4cG9ydCBjb25zdCBpc05vZGVMaWtlID0gdHlwZW9mIGdsb2JhbFRoaXMucHJvY2VzcyAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuICAgIEJvb2xlYW4oZ2xvYmFsVGhpcy5wcm9jZXNzLnZlcnNpb24pICYmXG4gICAgQm9vbGVhbigoX2QgPSBnbG9iYWxUaGlzLnByb2Nlc3MudmVyc2lvbnMpID09PSBudWxsIHx8IF9kID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZC5ub2RlKTtcbi8qKlxuICogQSBjb25zdGFudCB0aGF0IGluZGljYXRlcyB3aGV0aGVyIHRoZSBlbnZpcm9ubWVudCB0aGUgY29kZSBpcyBydW5uaW5nIGlzIGEgTm9kZS5qcyBjb21wYXRpYmxlIGVudmlyb25tZW50LlxuICogQGRlcHJlY2F0ZWQgVXNlIGBpc05vZGVMaWtlYCBpbnN0ZWFkLlxuICovXG5leHBvcnQgY29uc3QgaXNOb2RlID0gaXNOb2RlTGlrZTtcbi8qKlxuICogQSBjb25zdGFudCB0aGF0IGluZGljYXRlcyB3aGV0aGVyIHRoZSBlbnZpcm9ubWVudCB0aGUgY29kZSBpcyBydW5uaW5nIGlzIE5vZGUuSlMuXG4gKi9cbmV4cG9ydCBjb25zdCBpc05vZGVSdW50aW1lID0gaXNOb2RlTGlrZSAmJiAhaXNCdW4gJiYgIWlzRGVubztcbi8qKlxuICogQSBjb25zdGFudCB0aGF0IGluZGljYXRlcyB3aGV0aGVyIHRoZSBlbnZpcm9ubWVudCB0aGUgY29kZSBpcyBydW5uaW5nIGlzIGluIFJlYWN0LU5hdGl2ZS5cbiAqL1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0LW5hdGl2ZS9ibG9iL21haW4vcGFja2FnZXMvcmVhY3QtbmF0aXZlL0xpYnJhcmllcy9Db3JlL3NldFVwTmF2aWdhdG9yLmpzXG5leHBvcnQgY29uc3QgaXNSZWFjdE5hdGl2ZSA9IHR5cGVvZiBuYXZpZ2F0b3IgIT09IFwidW5kZWZpbmVkXCIgJiYgKG5hdmlnYXRvciA9PT0gbnVsbCB8fCBuYXZpZ2F0b3IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG5hdmlnYXRvci5wcm9kdWN0KSA9PT0gXCJSZWFjdE5hdGl2ZVwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2hlY2tFbnZpcm9ubWVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-util/dist/esm/checkEnvironment.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-util/dist/esm/createAbortablePromise.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/createAbortablePromise.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAbortablePromise: () => (/* binding */ createAbortablePromise)\n/* harmony export */ });\n/* harmony import */ var _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/abort-controller */ \"(ssr)/./node_modules/@azure/abort-controller/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Creates an abortable promise.\n * @param buildPromise - A function that takes the resolve and reject functions as parameters.\n * @param options - The options for the abortable promise.\n * @returns A promise that can be aborted.\n */\nfunction createAbortablePromise(buildPromise, options) {\n    const { cleanupBeforeAbort, abortSignal, abortErrorMsg } = options !== null && options !== void 0 ? options : {};\n    return new Promise((resolve, reject) => {\n        function rejectOnAbort() {\n            reject(new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__.AbortError(abortErrorMsg !== null && abortErrorMsg !== void 0 ? abortErrorMsg : \"The operation was aborted.\"));\n        }\n        function removeListeners() {\n            abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.removeEventListener(\"abort\", onAbort);\n        }\n        function onAbort() {\n            cleanupBeforeAbort === null || cleanupBeforeAbort === void 0 ? void 0 : cleanupBeforeAbort();\n            removeListeners();\n            rejectOnAbort();\n        }\n        if (abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.aborted) {\n            return rejectOnAbort();\n        }\n        try {\n            buildPromise((x) => {\n                removeListeners();\n                resolve(x);\n            }, (x) => {\n                removeListeners();\n                reject(x);\n            });\n        }\n        catch (err) {\n            reject(err);\n        }\n        abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.addEventListener(\"abort\", onAbort);\n    });\n}\n//# sourceMappingURL=createAbortablePromise.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9jcmVhdGVBYm9ydGFibGVQcm9taXNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNxRDtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFlBQVksaURBQWlEO0FBQzdEO0FBQ0E7QUFDQSx1QkFBdUIsK0RBQVU7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXV0aWxcXGRpc3RcXGVzbVxcY3JlYXRlQWJvcnRhYmxlUHJvbWlzZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IEFib3J0RXJyb3IgfSBmcm9tIFwiQGF6dXJlL2Fib3J0LWNvbnRyb2xsZXJcIjtcbi8qKlxuICogQ3JlYXRlcyBhbiBhYm9ydGFibGUgcHJvbWlzZS5cbiAqIEBwYXJhbSBidWlsZFByb21pc2UgLSBBIGZ1bmN0aW9uIHRoYXQgdGFrZXMgdGhlIHJlc29sdmUgYW5kIHJlamVjdCBmdW5jdGlvbnMgYXMgcGFyYW1ldGVycy5cbiAqIEBwYXJhbSBvcHRpb25zIC0gVGhlIG9wdGlvbnMgZm9yIHRoZSBhYm9ydGFibGUgcHJvbWlzZS5cbiAqIEByZXR1cm5zIEEgcHJvbWlzZSB0aGF0IGNhbiBiZSBhYm9ydGVkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQWJvcnRhYmxlUHJvbWlzZShidWlsZFByb21pc2UsIG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IGNsZWFudXBCZWZvcmVBYm9ydCwgYWJvcnRTaWduYWwsIGFib3J0RXJyb3JNc2cgfSA9IG9wdGlvbnMgIT09IG51bGwgJiYgb3B0aW9ucyAhPT0gdm9pZCAwID8gb3B0aW9ucyA6IHt9O1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdE9uQWJvcnQoKSB7XG4gICAgICAgICAgICByZWplY3QobmV3IEFib3J0RXJyb3IoYWJvcnRFcnJvck1zZyAhPT0gbnVsbCAmJiBhYm9ydEVycm9yTXNnICE9PSB2b2lkIDAgPyBhYm9ydEVycm9yTXNnIDogXCJUaGUgb3BlcmF0aW9uIHdhcyBhYm9ydGVkLlwiKSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gcmVtb3ZlTGlzdGVuZXJzKCkge1xuICAgICAgICAgICAgYWJvcnRTaWduYWwgPT09IG51bGwgfHwgYWJvcnRTaWduYWwgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGFib3J0U2lnbmFsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLCBvbkFib3J0KTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBvbkFib3J0KCkge1xuICAgICAgICAgICAgY2xlYW51cEJlZm9yZUFib3J0ID09PSBudWxsIHx8IGNsZWFudXBCZWZvcmVBYm9ydCA9PT0gdm9pZCAwID8gdm9pZCAwIDogY2xlYW51cEJlZm9yZUFib3J0KCk7XG4gICAgICAgICAgICByZW1vdmVMaXN0ZW5lcnMoKTtcbiAgICAgICAgICAgIHJlamVjdE9uQWJvcnQoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYWJvcnRTaWduYWwgPT09IG51bGwgfHwgYWJvcnRTaWduYWwgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGFib3J0U2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgICAgICAgIHJldHVybiByZWplY3RPbkFib3J0KCk7XG4gICAgICAgIH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGJ1aWxkUHJvbWlzZSgoeCkgPT4ge1xuICAgICAgICAgICAgICAgIHJlbW92ZUxpc3RlbmVycygpO1xuICAgICAgICAgICAgICAgIHJlc29sdmUoeCk7XG4gICAgICAgICAgICB9LCAoeCkgPT4ge1xuICAgICAgICAgICAgICAgIHJlbW92ZUxpc3RlbmVycygpO1xuICAgICAgICAgICAgICAgIHJlamVjdCh4KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIHJlamVjdChlcnIpO1xuICAgICAgICB9XG4gICAgICAgIGFib3J0U2lnbmFsID09PSBudWxsIHx8IGFib3J0U2lnbmFsID09PSB2b2lkIDAgPyB2b2lkIDAgOiBhYm9ydFNpZ25hbC5hZGRFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgb25BYm9ydCk7XG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcmVhdGVBYm9ydGFibGVQcm9taXNlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-util/dist/esm/createAbortablePromise.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-util/dist/esm/delay.js":
/*!*********************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/delay.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateRetryDelay: () => (/* binding */ calculateRetryDelay),\n/* harmony export */   delay: () => (/* binding */ delay)\n/* harmony export */ });\n/* harmony import */ var _createAbortablePromise_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createAbortablePromise.js */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/createAbortablePromise.js\");\n/* harmony import */ var _random_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./random.js */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/random.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\nconst StandardAbortMessage = \"The delay was aborted.\";\n/**\n * A wrapper for setTimeout that resolves a promise after timeInMs milliseconds.\n * @param timeInMs - The number of milliseconds to be delayed.\n * @param options - The options for delay - currently abort options\n * @returns Promise that is resolved after timeInMs\n */\nfunction delay(timeInMs, options) {\n    let token;\n    const { abortSignal, abortErrorMsg } = options !== null && options !== void 0 ? options : {};\n    return (0,_createAbortablePromise_js__WEBPACK_IMPORTED_MODULE_0__.createAbortablePromise)((resolve) => {\n        token = setTimeout(resolve, timeInMs);\n    }, {\n        cleanupBeforeAbort: () => clearTimeout(token),\n        abortSignal,\n        abortErrorMsg: abortErrorMsg !== null && abortErrorMsg !== void 0 ? abortErrorMsg : StandardAbortMessage,\n    });\n}\n/**\n * Calculates the delay interval for retry attempts using exponential delay with jitter.\n * @param retryAttempt - The current retry attempt number.\n * @param config - The exponential retry configuration.\n * @returns An object containing the calculated retry delay.\n */\nfunction calculateRetryDelay(retryAttempt, config) {\n    // Exponentially increase the delay each time\n    const exponentialDelay = config.retryDelayInMs * Math.pow(2, retryAttempt);\n    // Don't let the delay exceed the maximum\n    const clampedDelay = Math.min(config.maxRetryDelayInMs, exponentialDelay);\n    // Allow the final value to have some \"jitter\" (within 50% of the delay size) so\n    // that retries across multiple clients don't occur simultaneously.\n    const retryAfterInMs = clampedDelay / 2 + (0,_random_js__WEBPACK_IMPORTED_MODULE_1__.getRandomIntegerInclusive)(0, clampedDelay / 2);\n    return { retryAfterInMs };\n}\n//# sourceMappingURL=delay.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9kZWxheS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNxRTtBQUNiO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLFlBQVksNkJBQTZCO0FBQ3pDLFdBQVcsa0ZBQXNCO0FBQ2pDO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLHFFQUF5QjtBQUN2RSxhQUFhO0FBQ2I7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxoZWxsby12b2ljZVxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtdXRpbFxcZGlzdFxcZXNtXFxkZWxheS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGNyZWF0ZUFib3J0YWJsZVByb21pc2UgfSBmcm9tIFwiLi9jcmVhdGVBYm9ydGFibGVQcm9taXNlLmpzXCI7XG5pbXBvcnQgeyBnZXRSYW5kb21JbnRlZ2VySW5jbHVzaXZlIH0gZnJvbSBcIi4vcmFuZG9tLmpzXCI7XG5jb25zdCBTdGFuZGFyZEFib3J0TWVzc2FnZSA9IFwiVGhlIGRlbGF5IHdhcyBhYm9ydGVkLlwiO1xuLyoqXG4gKiBBIHdyYXBwZXIgZm9yIHNldFRpbWVvdXQgdGhhdCByZXNvbHZlcyBhIHByb21pc2UgYWZ0ZXIgdGltZUluTXMgbWlsbGlzZWNvbmRzLlxuICogQHBhcmFtIHRpbWVJbk1zIC0gVGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgdG8gYmUgZGVsYXllZC5cbiAqIEBwYXJhbSBvcHRpb25zIC0gVGhlIG9wdGlvbnMgZm9yIGRlbGF5IC0gY3VycmVudGx5IGFib3J0IG9wdGlvbnNcbiAqIEByZXR1cm5zIFByb21pc2UgdGhhdCBpcyByZXNvbHZlZCBhZnRlciB0aW1lSW5Nc1xuICovXG5leHBvcnQgZnVuY3Rpb24gZGVsYXkodGltZUluTXMsIG9wdGlvbnMpIHtcbiAgICBsZXQgdG9rZW47XG4gICAgY29uc3QgeyBhYm9ydFNpZ25hbCwgYWJvcnRFcnJvck1zZyB9ID0gb3B0aW9ucyAhPT0gbnVsbCAmJiBvcHRpb25zICE9PSB2b2lkIDAgPyBvcHRpb25zIDoge307XG4gICAgcmV0dXJuIGNyZWF0ZUFib3J0YWJsZVByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgdG9rZW4gPSBzZXRUaW1lb3V0KHJlc29sdmUsIHRpbWVJbk1zKTtcbiAgICB9LCB7XG4gICAgICAgIGNsZWFudXBCZWZvcmVBYm9ydDogKCkgPT4gY2xlYXJUaW1lb3V0KHRva2VuKSxcbiAgICAgICAgYWJvcnRTaWduYWwsXG4gICAgICAgIGFib3J0RXJyb3JNc2c6IGFib3J0RXJyb3JNc2cgIT09IG51bGwgJiYgYWJvcnRFcnJvck1zZyAhPT0gdm9pZCAwID8gYWJvcnRFcnJvck1zZyA6IFN0YW5kYXJkQWJvcnRNZXNzYWdlLFxuICAgIH0pO1xufVxuLyoqXG4gKiBDYWxjdWxhdGVzIHRoZSBkZWxheSBpbnRlcnZhbCBmb3IgcmV0cnkgYXR0ZW1wdHMgdXNpbmcgZXhwb25lbnRpYWwgZGVsYXkgd2l0aCBqaXR0ZXIuXG4gKiBAcGFyYW0gcmV0cnlBdHRlbXB0IC0gVGhlIGN1cnJlbnQgcmV0cnkgYXR0ZW1wdCBudW1iZXIuXG4gKiBAcGFyYW0gY29uZmlnIC0gVGhlIGV4cG9uZW50aWFsIHJldHJ5IGNvbmZpZ3VyYXRpb24uXG4gKiBAcmV0dXJucyBBbiBvYmplY3QgY29udGFpbmluZyB0aGUgY2FsY3VsYXRlZCByZXRyeSBkZWxheS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNhbGN1bGF0ZVJldHJ5RGVsYXkocmV0cnlBdHRlbXB0LCBjb25maWcpIHtcbiAgICAvLyBFeHBvbmVudGlhbGx5IGluY3JlYXNlIHRoZSBkZWxheSBlYWNoIHRpbWVcbiAgICBjb25zdCBleHBvbmVudGlhbERlbGF5ID0gY29uZmlnLnJldHJ5RGVsYXlJbk1zICogTWF0aC5wb3coMiwgcmV0cnlBdHRlbXB0KTtcbiAgICAvLyBEb24ndCBsZXQgdGhlIGRlbGF5IGV4Y2VlZCB0aGUgbWF4aW11bVxuICAgIGNvbnN0IGNsYW1wZWREZWxheSA9IE1hdGgubWluKGNvbmZpZy5tYXhSZXRyeURlbGF5SW5NcywgZXhwb25lbnRpYWxEZWxheSk7XG4gICAgLy8gQWxsb3cgdGhlIGZpbmFsIHZhbHVlIHRvIGhhdmUgc29tZSBcImppdHRlclwiICh3aXRoaW4gNTAlIG9mIHRoZSBkZWxheSBzaXplKSBzb1xuICAgIC8vIHRoYXQgcmV0cmllcyBhY3Jvc3MgbXVsdGlwbGUgY2xpZW50cyBkb24ndCBvY2N1ciBzaW11bHRhbmVvdXNseS5cbiAgICBjb25zdCByZXRyeUFmdGVySW5NcyA9IGNsYW1wZWREZWxheSAvIDIgKyBnZXRSYW5kb21JbnRlZ2VySW5jbHVzaXZlKDAsIGNsYW1wZWREZWxheSAvIDIpO1xuICAgIHJldHVybiB7IHJldHJ5QWZ0ZXJJbk1zIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWxheS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-util/dist/esm/delay.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-util/dist/esm/error.js":
/*!*********************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/error.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getErrorMessage: () => (/* binding */ getErrorMessage),\n/* harmony export */   isError: () => (/* binding */ isError)\n/* harmony export */ });\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./object.js */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/object.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Typeguard for an error object shape (has name and message)\n * @param e - Something caught by a catch clause.\n */\nfunction isError(e) {\n    if ((0,_object_js__WEBPACK_IMPORTED_MODULE_0__.isObject)(e)) {\n        const hasName = typeof e.name === \"string\";\n        const hasMessage = typeof e.message === \"string\";\n        return hasName && hasMessage;\n    }\n    return false;\n}\n/**\n * Given what is thought to be an error object, return the message if possible.\n * If the message is missing, returns a stringified version of the input.\n * @param e - Something thrown from a try block\n * @returns The error message or a string of the input\n */\nfunction getErrorMessage(e) {\n    if (isError(e)) {\n        return e.message;\n    }\n    else {\n        let stringified;\n        try {\n            if (typeof e === \"object\" && e) {\n                stringified = JSON.stringify(e);\n            }\n            else {\n                stringified = String(e);\n            }\n        }\n        catch (err) {\n            stringified = \"[unable to stringify input]\";\n        }\n        return `Unknown error ${stringified}`;\n    }\n}\n//# sourceMappingURL=error.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9lcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ3VDO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxRQUFRLG9EQUFRO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsWUFBWTtBQUM1QztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXV0aWxcXGRpc3RcXGVzbVxcZXJyb3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBpc09iamVjdCB9IGZyb20gXCIuL29iamVjdC5qc1wiO1xuLyoqXG4gKiBUeXBlZ3VhcmQgZm9yIGFuIGVycm9yIG9iamVjdCBzaGFwZSAoaGFzIG5hbWUgYW5kIG1lc3NhZ2UpXG4gKiBAcGFyYW0gZSAtIFNvbWV0aGluZyBjYXVnaHQgYnkgYSBjYXRjaCBjbGF1c2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0Vycm9yKGUpIHtcbiAgICBpZiAoaXNPYmplY3QoZSkpIHtcbiAgICAgICAgY29uc3QgaGFzTmFtZSA9IHR5cGVvZiBlLm5hbWUgPT09IFwic3RyaW5nXCI7XG4gICAgICAgIGNvbnN0IGhhc01lc3NhZ2UgPSB0eXBlb2YgZS5tZXNzYWdlID09PSBcInN0cmluZ1wiO1xuICAgICAgICByZXR1cm4gaGFzTmFtZSAmJiBoYXNNZXNzYWdlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG4vKipcbiAqIEdpdmVuIHdoYXQgaXMgdGhvdWdodCB0byBiZSBhbiBlcnJvciBvYmplY3QsIHJldHVybiB0aGUgbWVzc2FnZSBpZiBwb3NzaWJsZS5cbiAqIElmIHRoZSBtZXNzYWdlIGlzIG1pc3NpbmcsIHJldHVybnMgYSBzdHJpbmdpZmllZCB2ZXJzaW9uIG9mIHRoZSBpbnB1dC5cbiAqIEBwYXJhbSBlIC0gU29tZXRoaW5nIHRocm93biBmcm9tIGEgdHJ5IGJsb2NrXG4gKiBAcmV0dXJucyBUaGUgZXJyb3IgbWVzc2FnZSBvciBhIHN0cmluZyBvZiB0aGUgaW5wdXRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEVycm9yTWVzc2FnZShlKSB7XG4gICAgaWYgKGlzRXJyb3IoZSkpIHtcbiAgICAgICAgcmV0dXJuIGUubWVzc2FnZTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGxldCBzdHJpbmdpZmllZDtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgZSA9PT0gXCJvYmplY3RcIiAmJiBlKSB7XG4gICAgICAgICAgICAgICAgc3RyaW5naWZpZWQgPSBKU09OLnN0cmluZ2lmeShlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHN0cmluZ2lmaWVkID0gU3RyaW5nKGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIHN0cmluZ2lmaWVkID0gXCJbdW5hYmxlIHRvIHN0cmluZ2lmeSBpbnB1dF1cIjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYFVua25vd24gZXJyb3IgJHtzdHJpbmdpZmllZH1gO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9yLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-util/dist/esm/error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-util/dist/esm/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateRetryDelay: () => (/* reexport safe */ _delay_js__WEBPACK_IMPORTED_MODULE_0__.calculateRetryDelay),\n/* harmony export */   cancelablePromiseRace: () => (/* reexport safe */ _aborterUtils_js__WEBPACK_IMPORTED_MODULE_1__.cancelablePromiseRace),\n/* harmony export */   computeSha256Hash: () => (/* reexport safe */ _sha256_js__WEBPACK_IMPORTED_MODULE_6__.computeSha256Hash),\n/* harmony export */   computeSha256Hmac: () => (/* reexport safe */ _sha256_js__WEBPACK_IMPORTED_MODULE_6__.computeSha256Hmac),\n/* harmony export */   createAbortablePromise: () => (/* reexport safe */ _createAbortablePromise_js__WEBPACK_IMPORTED_MODULE_2__.createAbortablePromise),\n/* harmony export */   delay: () => (/* reexport safe */ _delay_js__WEBPACK_IMPORTED_MODULE_0__.delay),\n/* harmony export */   getErrorMessage: () => (/* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_5__.getErrorMessage),\n/* harmony export */   getRandomIntegerInclusive: () => (/* reexport safe */ _random_js__WEBPACK_IMPORTED_MODULE_3__.getRandomIntegerInclusive),\n/* harmony export */   isBrowser: () => (/* reexport safe */ _checkEnvironment_js__WEBPACK_IMPORTED_MODULE_9__.isBrowser),\n/* harmony export */   isBun: () => (/* reexport safe */ _checkEnvironment_js__WEBPACK_IMPORTED_MODULE_9__.isBun),\n/* harmony export */   isDefined: () => (/* reexport safe */ _typeGuards_js__WEBPACK_IMPORTED_MODULE_7__.isDefined),\n/* harmony export */   isDeno: () => (/* reexport safe */ _checkEnvironment_js__WEBPACK_IMPORTED_MODULE_9__.isDeno),\n/* harmony export */   isError: () => (/* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_5__.isError),\n/* harmony export */   isNode: () => (/* reexport safe */ _checkEnvironment_js__WEBPACK_IMPORTED_MODULE_9__.isNode),\n/* harmony export */   isNodeLike: () => (/* reexport safe */ _checkEnvironment_js__WEBPACK_IMPORTED_MODULE_9__.isNodeLike),\n/* harmony export */   isNodeRuntime: () => (/* reexport safe */ _checkEnvironment_js__WEBPACK_IMPORTED_MODULE_9__.isNodeRuntime),\n/* harmony export */   isObject: () => (/* reexport safe */ _object_js__WEBPACK_IMPORTED_MODULE_4__.isObject),\n/* harmony export */   isObjectWithProperties: () => (/* reexport safe */ _typeGuards_js__WEBPACK_IMPORTED_MODULE_7__.isObjectWithProperties),\n/* harmony export */   isReactNative: () => (/* reexport safe */ _checkEnvironment_js__WEBPACK_IMPORTED_MODULE_9__.isReactNative),\n/* harmony export */   isWebWorker: () => (/* reexport safe */ _checkEnvironment_js__WEBPACK_IMPORTED_MODULE_9__.isWebWorker),\n/* harmony export */   objectHasProperty: () => (/* reexport safe */ _typeGuards_js__WEBPACK_IMPORTED_MODULE_7__.objectHasProperty),\n/* harmony export */   randomUUID: () => (/* reexport safe */ _uuidUtils_js__WEBPACK_IMPORTED_MODULE_8__.randomUUID),\n/* harmony export */   stringToUint8Array: () => (/* reexport safe */ _bytesEncoding_js__WEBPACK_IMPORTED_MODULE_10__.stringToUint8Array),\n/* harmony export */   uint8ArrayToString: () => (/* reexport safe */ _bytesEncoding_js__WEBPACK_IMPORTED_MODULE_10__.uint8ArrayToString)\n/* harmony export */ });\n/* harmony import */ var _delay_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./delay.js */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/delay.js\");\n/* harmony import */ var _aborterUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./aborterUtils.js */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/aborterUtils.js\");\n/* harmony import */ var _createAbortablePromise_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./createAbortablePromise.js */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/createAbortablePromise.js\");\n/* harmony import */ var _random_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./random.js */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/random.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./object.js */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/object.js\");\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./error.js */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/error.js\");\n/* harmony import */ var _sha256_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./sha256.js */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/sha256.js\");\n/* harmony import */ var _typeGuards_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./typeGuards.js */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/typeGuards.js\");\n/* harmony import */ var _uuidUtils_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./uuidUtils.js */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/uuidUtils.js\");\n/* harmony import */ var _checkEnvironment_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./checkEnvironment.js */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/checkEnvironment.js\");\n/* harmony import */ var _bytesEncoding_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./bytesEncoding.js */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/bytesEncoding.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDd0Q7QUFDRztBQUNXO0FBQ2Q7QUFDakI7QUFDZTtBQUNhO0FBQ29CO0FBQzNDO0FBQ3FGO0FBQ3JEO0FBQzVFIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGhlbGxvLXZvaWNlXFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS11dGlsXFxkaXN0XFxlc21cXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuZXhwb3J0IHsgZGVsYXksIGNhbGN1bGF0ZVJldHJ5RGVsYXkgfSBmcm9tIFwiLi9kZWxheS5qc1wiO1xuZXhwb3J0IHsgY2FuY2VsYWJsZVByb21pc2VSYWNlLCB9IGZyb20gXCIuL2Fib3J0ZXJVdGlscy5qc1wiO1xuZXhwb3J0IHsgY3JlYXRlQWJvcnRhYmxlUHJvbWlzZSwgfSBmcm9tIFwiLi9jcmVhdGVBYm9ydGFibGVQcm9taXNlLmpzXCI7XG5leHBvcnQgeyBnZXRSYW5kb21JbnRlZ2VySW5jbHVzaXZlIH0gZnJvbSBcIi4vcmFuZG9tLmpzXCI7XG5leHBvcnQgeyBpc09iamVjdCB9IGZyb20gXCIuL29iamVjdC5qc1wiO1xuZXhwb3J0IHsgaXNFcnJvciwgZ2V0RXJyb3JNZXNzYWdlIH0gZnJvbSBcIi4vZXJyb3IuanNcIjtcbmV4cG9ydCB7IGNvbXB1dGVTaGEyNTZIYXNoLCBjb21wdXRlU2hhMjU2SG1hYyB9IGZyb20gXCIuL3NoYTI1Ni5qc1wiO1xuZXhwb3J0IHsgaXNEZWZpbmVkLCBpc09iamVjdFdpdGhQcm9wZXJ0aWVzLCBvYmplY3RIYXNQcm9wZXJ0eSB9IGZyb20gXCIuL3R5cGVHdWFyZHMuanNcIjtcbmV4cG9ydCB7IHJhbmRvbVVVSUQgfSBmcm9tIFwiLi91dWlkVXRpbHMuanNcIjtcbmV4cG9ydCB7IGlzQnJvd3NlciwgaXNCdW4sIGlzTm9kZSwgaXNOb2RlTGlrZSwgaXNOb2RlUnVudGltZSwgaXNEZW5vLCBpc1JlYWN0TmF0aXZlLCBpc1dlYldvcmtlciwgfSBmcm9tIFwiLi9jaGVja0Vudmlyb25tZW50LmpzXCI7XG5leHBvcnQgeyB1aW50OEFycmF5VG9TdHJpbmcsIHN0cmluZ1RvVWludDhBcnJheSB9IGZyb20gXCIuL2J5dGVzRW5jb2RpbmcuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-util/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-util/dist/esm/object.js":
/*!**********************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/object.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isObject: () => (/* binding */ isObject)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Helper to determine when an input is a generic JS object.\n * @returns true when input is an object type that is not null, Array, RegExp, or Date.\n */\nfunction isObject(input) {\n    return (typeof input === \"object\" &&\n        input !== null &&\n        !Array.isArray(input) &&\n        !(input instanceof RegExp) &&\n        !(input instanceof Date));\n}\n//# sourceMappingURL=object.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9vYmplY3QuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXV0aWxcXGRpc3RcXGVzbVxcb2JqZWN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqXG4gKiBIZWxwZXIgdG8gZGV0ZXJtaW5lIHdoZW4gYW4gaW5wdXQgaXMgYSBnZW5lcmljIEpTIG9iamVjdC5cbiAqIEByZXR1cm5zIHRydWUgd2hlbiBpbnB1dCBpcyBhbiBvYmplY3QgdHlwZSB0aGF0IGlzIG5vdCBudWxsLCBBcnJheSwgUmVnRXhwLCBvciBEYXRlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNPYmplY3QoaW5wdXQpIHtcbiAgICByZXR1cm4gKHR5cGVvZiBpbnB1dCA9PT0gXCJvYmplY3RcIiAmJlxuICAgICAgICBpbnB1dCAhPT0gbnVsbCAmJlxuICAgICAgICAhQXJyYXkuaXNBcnJheShpbnB1dCkgJiZcbiAgICAgICAgIShpbnB1dCBpbnN0YW5jZW9mIFJlZ0V4cCkgJiZcbiAgICAgICAgIShpbnB1dCBpbnN0YW5jZW9mIERhdGUpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9iamVjdC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-util/dist/esm/object.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-util/dist/esm/random.js":
/*!**********************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/random.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRandomIntegerInclusive: () => (/* binding */ getRandomIntegerInclusive)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Returns a random integer value between a lower and upper bound,\n * inclusive of both bounds.\n * Note that this uses Math.random and isn't secure. If you need to use\n * this for any kind of security purpose, find a better source of random.\n * @param min - The smallest integer value allowed.\n * @param max - The largest integer value allowed.\n */\nfunction getRandomIntegerInclusive(min, max) {\n    // Make sure inputs are integers.\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    // Pick a random offset from zero to the size of the range.\n    // Since Math.random() can never return 1, we have to make the range one larger\n    // in order to be inclusive of the maximum value after we take the floor.\n    const offset = Math.floor(Math.random() * (max - min + 1));\n    return offset + min;\n}\n//# sourceMappingURL=random.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9yYW5kb20uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxoZWxsby12b2ljZVxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtdXRpbFxcZGlzdFxcZXNtXFxyYW5kb20uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vKipcbiAqIFJldHVybnMgYSByYW5kb20gaW50ZWdlciB2YWx1ZSBiZXR3ZWVuIGEgbG93ZXIgYW5kIHVwcGVyIGJvdW5kLFxuICogaW5jbHVzaXZlIG9mIGJvdGggYm91bmRzLlxuICogTm90ZSB0aGF0IHRoaXMgdXNlcyBNYXRoLnJhbmRvbSBhbmQgaXNuJ3Qgc2VjdXJlLiBJZiB5b3UgbmVlZCB0byB1c2VcbiAqIHRoaXMgZm9yIGFueSBraW5kIG9mIHNlY3VyaXR5IHB1cnBvc2UsIGZpbmQgYSBiZXR0ZXIgc291cmNlIG9mIHJhbmRvbS5cbiAqIEBwYXJhbSBtaW4gLSBUaGUgc21hbGxlc3QgaW50ZWdlciB2YWx1ZSBhbGxvd2VkLlxuICogQHBhcmFtIG1heCAtIFRoZSBsYXJnZXN0IGludGVnZXIgdmFsdWUgYWxsb3dlZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFJhbmRvbUludGVnZXJJbmNsdXNpdmUobWluLCBtYXgpIHtcbiAgICAvLyBNYWtlIHN1cmUgaW5wdXRzIGFyZSBpbnRlZ2Vycy5cbiAgICBtaW4gPSBNYXRoLmNlaWwobWluKTtcbiAgICBtYXggPSBNYXRoLmZsb29yKG1heCk7XG4gICAgLy8gUGljayBhIHJhbmRvbSBvZmZzZXQgZnJvbSB6ZXJvIHRvIHRoZSBzaXplIG9mIHRoZSByYW5nZS5cbiAgICAvLyBTaW5jZSBNYXRoLnJhbmRvbSgpIGNhbiBuZXZlciByZXR1cm4gMSwgd2UgaGF2ZSB0byBtYWtlIHRoZSByYW5nZSBvbmUgbGFyZ2VyXG4gICAgLy8gaW4gb3JkZXIgdG8gYmUgaW5jbHVzaXZlIG9mIHRoZSBtYXhpbXVtIHZhbHVlIGFmdGVyIHdlIHRha2UgdGhlIGZsb29yLlxuICAgIGNvbnN0IG9mZnNldCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4gKyAxKSk7XG4gICAgcmV0dXJuIG9mZnNldCArIG1pbjtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJhbmRvbS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-util/dist/esm/random.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-util/dist/esm/sha256.js":
/*!**********************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/sha256.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   computeSha256Hash: () => (/* binding */ computeSha256Hash),\n/* harmony export */   computeSha256Hmac: () => (/* binding */ computeSha256Hmac)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Generates a SHA-256 HMAC signature.\n * @param key - The HMAC key represented as a base64 string, used to generate the cryptographic HMAC hash.\n * @param stringToSign - The data to be signed.\n * @param encoding - The textual encoding to use for the returned HMAC digest.\n */\nasync function computeSha256Hmac(key, stringToSign, encoding) {\n    const decodedKey = Buffer.from(key, \"base64\");\n    return (0,crypto__WEBPACK_IMPORTED_MODULE_0__.createHmac)(\"sha256\", decodedKey).update(stringToSign).digest(encoding);\n}\n/**\n * Generates a SHA-256 hash.\n * @param content - The data to be included in the hash.\n * @param encoding - The textual encoding to use for the returned hash.\n */\nasync function computeSha256Hash(content, encoding) {\n    return (0,crypto__WEBPACK_IMPORTED_MODULE_0__.createHash)(\"sha256\").update(content).digest(encoding);\n}\n//# sourceMappingURL=sha256.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9zaGEyNTYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNnRDtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsV0FBVyxrREFBVTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsa0RBQVU7QUFDckI7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxoZWxsby12b2ljZVxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGNvcmUtdXRpbFxcZGlzdFxcZXNtXFxzaGEyNTYuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBjcmVhdGVIYXNoLCBjcmVhdGVIbWFjIH0gZnJvbSBcImNyeXB0b1wiO1xuLyoqXG4gKiBHZW5lcmF0ZXMgYSBTSEEtMjU2IEhNQUMgc2lnbmF0dXJlLlxuICogQHBhcmFtIGtleSAtIFRoZSBITUFDIGtleSByZXByZXNlbnRlZCBhcyBhIGJhc2U2NCBzdHJpbmcsIHVzZWQgdG8gZ2VuZXJhdGUgdGhlIGNyeXB0b2dyYXBoaWMgSE1BQyBoYXNoLlxuICogQHBhcmFtIHN0cmluZ1RvU2lnbiAtIFRoZSBkYXRhIHRvIGJlIHNpZ25lZC5cbiAqIEBwYXJhbSBlbmNvZGluZyAtIFRoZSB0ZXh0dWFsIGVuY29kaW5nIHRvIHVzZSBmb3IgdGhlIHJldHVybmVkIEhNQUMgZGlnZXN0LlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY29tcHV0ZVNoYTI1NkhtYWMoa2V5LCBzdHJpbmdUb1NpZ24sIGVuY29kaW5nKSB7XG4gICAgY29uc3QgZGVjb2RlZEtleSA9IEJ1ZmZlci5mcm9tKGtleSwgXCJiYXNlNjRcIik7XG4gICAgcmV0dXJuIGNyZWF0ZUhtYWMoXCJzaGEyNTZcIiwgZGVjb2RlZEtleSkudXBkYXRlKHN0cmluZ1RvU2lnbikuZGlnZXN0KGVuY29kaW5nKTtcbn1cbi8qKlxuICogR2VuZXJhdGVzIGEgU0hBLTI1NiBoYXNoLlxuICogQHBhcmFtIGNvbnRlbnQgLSBUaGUgZGF0YSB0byBiZSBpbmNsdWRlZCBpbiB0aGUgaGFzaC5cbiAqIEBwYXJhbSBlbmNvZGluZyAtIFRoZSB0ZXh0dWFsIGVuY29kaW5nIHRvIHVzZSBmb3IgdGhlIHJldHVybmVkIGhhc2guXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjb21wdXRlU2hhMjU2SGFzaChjb250ZW50LCBlbmNvZGluZykge1xuICAgIHJldHVybiBjcmVhdGVIYXNoKFwic2hhMjU2XCIpLnVwZGF0ZShjb250ZW50KS5kaWdlc3QoZW5jb2RpbmcpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2hhMjU2LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-util/dist/esm/sha256.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-util/dist/esm/typeGuards.js":
/*!**************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/typeGuards.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isDefined: () => (/* binding */ isDefined),\n/* harmony export */   isObjectWithProperties: () => (/* binding */ isObjectWithProperties),\n/* harmony export */   objectHasProperty: () => (/* binding */ objectHasProperty)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Helper TypeGuard that checks if something is defined or not.\n * @param thing - Anything\n */\nfunction isDefined(thing) {\n    return typeof thing !== \"undefined\" && thing !== null;\n}\n/**\n * Helper TypeGuard that checks if the input is an object with the specified properties.\n * @param thing - Anything.\n * @param properties - The name of the properties that should appear in the object.\n */\nfunction isObjectWithProperties(thing, properties) {\n    if (!isDefined(thing) || typeof thing !== \"object\") {\n        return false;\n    }\n    for (const property of properties) {\n        if (!objectHasProperty(thing, property)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Helper TypeGuard that checks if the input is an object with the specified property.\n * @param thing - Any object.\n * @param property - The name of the property that should appear in the object.\n */\nfunction objectHasProperty(thing, property) {\n    return (isDefined(thing) && typeof thing === \"object\" && property in thing);\n}\n//# sourceMappingURL=typeGuards.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS90eXBlR3VhcmRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGhlbGxvLXZvaWNlXFxub2RlX21vZHVsZXNcXEBhenVyZVxcY29yZS11dGlsXFxkaXN0XFxlc21cXHR5cGVHdWFyZHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vKipcbiAqIEhlbHBlciBUeXBlR3VhcmQgdGhhdCBjaGVja3MgaWYgc29tZXRoaW5nIGlzIGRlZmluZWQgb3Igbm90LlxuICogQHBhcmFtIHRoaW5nIC0gQW55dGhpbmdcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzRGVmaW5lZCh0aGluZykge1xuICAgIHJldHVybiB0eXBlb2YgdGhpbmcgIT09IFwidW5kZWZpbmVkXCIgJiYgdGhpbmcgIT09IG51bGw7XG59XG4vKipcbiAqIEhlbHBlciBUeXBlR3VhcmQgdGhhdCBjaGVja3MgaWYgdGhlIGlucHV0IGlzIGFuIG9iamVjdCB3aXRoIHRoZSBzcGVjaWZpZWQgcHJvcGVydGllcy5cbiAqIEBwYXJhbSB0aGluZyAtIEFueXRoaW5nLlxuICogQHBhcmFtIHByb3BlcnRpZXMgLSBUaGUgbmFtZSBvZiB0aGUgcHJvcGVydGllcyB0aGF0IHNob3VsZCBhcHBlYXIgaW4gdGhlIG9iamVjdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzT2JqZWN0V2l0aFByb3BlcnRpZXModGhpbmcsIHByb3BlcnRpZXMpIHtcbiAgICBpZiAoIWlzRGVmaW5lZCh0aGluZykgfHwgdHlwZW9mIHRoaW5nICE9PSBcIm9iamVjdFwiKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBwcm9wZXJ0eSBvZiBwcm9wZXJ0aWVzKSB7XG4gICAgICAgIGlmICghb2JqZWN0SGFzUHJvcGVydHkodGhpbmcsIHByb3BlcnR5KSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuLyoqXG4gKiBIZWxwZXIgVHlwZUd1YXJkIHRoYXQgY2hlY2tzIGlmIHRoZSBpbnB1dCBpcyBhbiBvYmplY3Qgd2l0aCB0aGUgc3BlY2lmaWVkIHByb3BlcnR5LlxuICogQHBhcmFtIHRoaW5nIC0gQW55IG9iamVjdC5cbiAqIEBwYXJhbSBwcm9wZXJ0eSAtIFRoZSBuYW1lIG9mIHRoZSBwcm9wZXJ0eSB0aGF0IHNob3VsZCBhcHBlYXIgaW4gdGhlIG9iamVjdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG9iamVjdEhhc1Byb3BlcnR5KHRoaW5nLCBwcm9wZXJ0eSkge1xuICAgIHJldHVybiAoaXNEZWZpbmVkKHRoaW5nKSAmJiB0eXBlb2YgdGhpbmcgPT09IFwib2JqZWN0XCIgJiYgcHJvcGVydHkgaW4gdGhpbmcpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZUd1YXJkcy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-util/dist/esm/typeGuards.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/core-util/dist/esm/uuidUtils.js":
/*!*************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/uuidUtils.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   randomUUID: () => (/* binding */ randomUUID)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nvar _a;\n\n// NOTE: This is a workaround until we can use `globalThis.crypto.randomUUID` in Node.js 19+.\nconst uuidFunction = typeof ((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.crypto) === null || _a === void 0 ? void 0 : _a.randomUUID) === \"function\"\n    ? globalThis.crypto.randomUUID.bind(globalThis.crypto)\n    : crypto__WEBPACK_IMPORTED_MODULE_0__.randomUUID;\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nfunction randomUUID() {\n    return uuidFunction();\n}\n//# sourceMappingURL=uuidUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS91dWlkVXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDb0Q7QUFDcEQ7QUFDQTtBQUNBO0FBQ0EsTUFBTSw4Q0FBWTtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxjb3JlLXV0aWxcXGRpc3RcXGVzbVxcdXVpZFV0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxudmFyIF9hO1xuaW1wb3J0IHsgcmFuZG9tVVVJRCBhcyB2NFJhbmRvbVVVSUQgfSBmcm9tIFwiY3J5cHRvXCI7XG4vLyBOT1RFOiBUaGlzIGlzIGEgd29ya2Fyb3VuZCB1bnRpbCB3ZSBjYW4gdXNlIGBnbG9iYWxUaGlzLmNyeXB0by5yYW5kb21VVUlEYCBpbiBOb2RlLmpzIDE5Ky5cbmNvbnN0IHV1aWRGdW5jdGlvbiA9IHR5cGVvZiAoKF9hID0gZ2xvYmFsVGhpcyA9PT0gbnVsbCB8fCBnbG9iYWxUaGlzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBnbG9iYWxUaGlzLmNyeXB0bykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnJhbmRvbVVVSUQpID09PSBcImZ1bmN0aW9uXCJcbiAgICA/IGdsb2JhbFRoaXMuY3J5cHRvLnJhbmRvbVVVSUQuYmluZChnbG9iYWxUaGlzLmNyeXB0bylcbiAgICA6IHY0UmFuZG9tVVVJRDtcbi8qKlxuICogR2VuZXJhdGVkIFVuaXZlcnNhbGx5IFVuaXF1ZSBJZGVudGlmaWVyXG4gKlxuICogQHJldHVybnMgUkZDNDEyMiB2NCBVVUlELlxuICovXG5leHBvcnQgZnVuY3Rpb24gcmFuZG9tVVVJRCgpIHtcbiAgICByZXR1cm4gdXVpZEZ1bmN0aW9uKCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dWlkVXRpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/core-util/dist/esm/uuidUtils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/logger/dist/esm/debug.js":
/*!******************************************************!*\
  !*** ./node_modules/@azure/logger/dist/esm/debug.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./log.js */ \"(ssr)/./node_modules/@azure/logger/dist/esm/log.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst debugEnvVariable = (typeof process !== \"undefined\" && process.env && process.env.DEBUG) || undefined;\nlet enabledString;\nlet enabledNamespaces = [];\nlet skippedNamespaces = [];\nconst debuggers = [];\nif (debugEnvVariable) {\n    enable(debugEnvVariable);\n}\nconst debugObj = Object.assign((namespace) => {\n    return createDebugger(namespace);\n}, {\n    enable,\n    enabled,\n    disable,\n    log: _log_js__WEBPACK_IMPORTED_MODULE_0__.log,\n});\nfunction enable(namespaces) {\n    enabledString = namespaces;\n    enabledNamespaces = [];\n    skippedNamespaces = [];\n    const wildcard = /\\*/g;\n    const namespaceList = namespaces.split(\",\").map((ns) => ns.trim().replace(wildcard, \".*?\"));\n    for (const ns of namespaceList) {\n        if (ns.startsWith(\"-\")) {\n            skippedNamespaces.push(new RegExp(`^${ns.substr(1)}$`));\n        }\n        else {\n            enabledNamespaces.push(new RegExp(`^${ns}$`));\n        }\n    }\n    for (const instance of debuggers) {\n        instance.enabled = enabled(instance.namespace);\n    }\n}\nfunction enabled(namespace) {\n    if (namespace.endsWith(\"*\")) {\n        return true;\n    }\n    for (const skipped of skippedNamespaces) {\n        if (skipped.test(namespace)) {\n            return false;\n        }\n    }\n    for (const enabledNamespace of enabledNamespaces) {\n        if (enabledNamespace.test(namespace)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction disable() {\n    const result = enabledString || \"\";\n    enable(\"\");\n    return result;\n}\nfunction createDebugger(namespace) {\n    const newDebugger = Object.assign(debug, {\n        enabled: enabled(namespace),\n        destroy,\n        log: debugObj.log,\n        namespace,\n        extend,\n    });\n    function debug(...args) {\n        if (!newDebugger.enabled) {\n            return;\n        }\n        if (args.length > 0) {\n            args[0] = `${namespace} ${args[0]}`;\n        }\n        newDebugger.log(...args);\n    }\n    debuggers.push(newDebugger);\n    return newDebugger;\n}\nfunction destroy() {\n    const index = debuggers.indexOf(this);\n    if (index >= 0) {\n        debuggers.splice(index, 1);\n        return true;\n    }\n    return false;\n}\nfunction extend(namespace) {\n    const newDebugger = createDebugger(`${this.namespace}:${namespace}`);\n    newDebugger.log = this.log;\n    return newDebugger;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (debugObj);\n//# sourceMappingURL=debug.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2xvZ2dlci9kaXN0L2VzbS9kZWJ1Zy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELGFBQWE7QUFDL0Q7QUFDQTtBQUNBLGtEQUFrRCxHQUFHO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsV0FBVyxFQUFFLFFBQVE7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLGVBQWUsR0FBRyxVQUFVO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBLGlFQUFlLFFBQVEsRUFBQztBQUN4QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxoZWxsby12b2ljZVxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGxvZ2dlclxcZGlzdFxcZXNtXFxkZWJ1Zy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmltcG9ydCB7IGxvZyB9IGZyb20gXCIuL2xvZy5qc1wiO1xuY29uc3QgZGVidWdFbnZWYXJpYWJsZSA9ICh0eXBlb2YgcHJvY2VzcyAhPT0gXCJ1bmRlZmluZWRcIiAmJiBwcm9jZXNzLmVudiAmJiBwcm9jZXNzLmVudi5ERUJVRykgfHwgdW5kZWZpbmVkO1xubGV0IGVuYWJsZWRTdHJpbmc7XG5sZXQgZW5hYmxlZE5hbWVzcGFjZXMgPSBbXTtcbmxldCBza2lwcGVkTmFtZXNwYWNlcyA9IFtdO1xuY29uc3QgZGVidWdnZXJzID0gW107XG5pZiAoZGVidWdFbnZWYXJpYWJsZSkge1xuICAgIGVuYWJsZShkZWJ1Z0VudlZhcmlhYmxlKTtcbn1cbmNvbnN0IGRlYnVnT2JqID0gT2JqZWN0LmFzc2lnbigobmFtZXNwYWNlKSA9PiB7XG4gICAgcmV0dXJuIGNyZWF0ZURlYnVnZ2VyKG5hbWVzcGFjZSk7XG59LCB7XG4gICAgZW5hYmxlLFxuICAgIGVuYWJsZWQsXG4gICAgZGlzYWJsZSxcbiAgICBsb2csXG59KTtcbmZ1bmN0aW9uIGVuYWJsZShuYW1lc3BhY2VzKSB7XG4gICAgZW5hYmxlZFN0cmluZyA9IG5hbWVzcGFjZXM7XG4gICAgZW5hYmxlZE5hbWVzcGFjZXMgPSBbXTtcbiAgICBza2lwcGVkTmFtZXNwYWNlcyA9IFtdO1xuICAgIGNvbnN0IHdpbGRjYXJkID0gL1xcKi9nO1xuICAgIGNvbnN0IG5hbWVzcGFjZUxpc3QgPSBuYW1lc3BhY2VzLnNwbGl0KFwiLFwiKS5tYXAoKG5zKSA9PiBucy50cmltKCkucmVwbGFjZSh3aWxkY2FyZCwgXCIuKj9cIikpO1xuICAgIGZvciAoY29uc3QgbnMgb2YgbmFtZXNwYWNlTGlzdCkge1xuICAgICAgICBpZiAobnMuc3RhcnRzV2l0aChcIi1cIikpIHtcbiAgICAgICAgICAgIHNraXBwZWROYW1lc3BhY2VzLnB1c2gobmV3IFJlZ0V4cChgXiR7bnMuc3Vic3RyKDEpfSRgKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBlbmFibGVkTmFtZXNwYWNlcy5wdXNoKG5ldyBSZWdFeHAoYF4ke25zfSRgKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yIChjb25zdCBpbnN0YW5jZSBvZiBkZWJ1Z2dlcnMpIHtcbiAgICAgICAgaW5zdGFuY2UuZW5hYmxlZCA9IGVuYWJsZWQoaW5zdGFuY2UubmFtZXNwYWNlKTtcbiAgICB9XG59XG5mdW5jdGlvbiBlbmFibGVkKG5hbWVzcGFjZSkge1xuICAgIGlmIChuYW1lc3BhY2UuZW5kc1dpdGgoXCIqXCIpKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IHNraXBwZWQgb2Ygc2tpcHBlZE5hbWVzcGFjZXMpIHtcbiAgICAgICAgaWYgKHNraXBwZWQudGVzdChuYW1lc3BhY2UpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yIChjb25zdCBlbmFibGVkTmFtZXNwYWNlIG9mIGVuYWJsZWROYW1lc3BhY2VzKSB7XG4gICAgICAgIGlmIChlbmFibGVkTmFtZXNwYWNlLnRlc3QobmFtZXNwYWNlKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuZnVuY3Rpb24gZGlzYWJsZSgpIHtcbiAgICBjb25zdCByZXN1bHQgPSBlbmFibGVkU3RyaW5nIHx8IFwiXCI7XG4gICAgZW5hYmxlKFwiXCIpO1xuICAgIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBjcmVhdGVEZWJ1Z2dlcihuYW1lc3BhY2UpIHtcbiAgICBjb25zdCBuZXdEZWJ1Z2dlciA9IE9iamVjdC5hc3NpZ24oZGVidWcsIHtcbiAgICAgICAgZW5hYmxlZDogZW5hYmxlZChuYW1lc3BhY2UpLFxuICAgICAgICBkZXN0cm95LFxuICAgICAgICBsb2c6IGRlYnVnT2JqLmxvZyxcbiAgICAgICAgbmFtZXNwYWNlLFxuICAgICAgICBleHRlbmQsXG4gICAgfSk7XG4gICAgZnVuY3Rpb24gZGVidWcoLi4uYXJncykge1xuICAgICAgICBpZiAoIW5ld0RlYnVnZ2VyLmVuYWJsZWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYXJncy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBhcmdzWzBdID0gYCR7bmFtZXNwYWNlfSAke2FyZ3NbMF19YDtcbiAgICAgICAgfVxuICAgICAgICBuZXdEZWJ1Z2dlci5sb2coLi4uYXJncyk7XG4gICAgfVxuICAgIGRlYnVnZ2Vycy5wdXNoKG5ld0RlYnVnZ2VyKTtcbiAgICByZXR1cm4gbmV3RGVidWdnZXI7XG59XG5mdW5jdGlvbiBkZXN0cm95KCkge1xuICAgIGNvbnN0IGluZGV4ID0gZGVidWdnZXJzLmluZGV4T2YodGhpcyk7XG4gICAgaWYgKGluZGV4ID49IDApIHtcbiAgICAgICAgZGVidWdnZXJzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG5mdW5jdGlvbiBleHRlbmQobmFtZXNwYWNlKSB7XG4gICAgY29uc3QgbmV3RGVidWdnZXIgPSBjcmVhdGVEZWJ1Z2dlcihgJHt0aGlzLm5hbWVzcGFjZX06JHtuYW1lc3BhY2V9YCk7XG4gICAgbmV3RGVidWdnZXIubG9nID0gdGhpcy5sb2c7XG4gICAgcmV0dXJuIG5ld0RlYnVnZ2VyO1xufVxuZXhwb3J0IGRlZmF1bHQgZGVidWdPYmo7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWJ1Zy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/logger/dist/esm/debug.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/logger/dist/esm/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@azure/logger/dist/esm/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzureLogger: () => (/* binding */ AzureLogger),\n/* harmony export */   createClientLogger: () => (/* binding */ createClientLogger),\n/* harmony export */   getLogLevel: () => (/* binding */ getLogLevel),\n/* harmony export */   setLogLevel: () => (/* binding */ setLogLevel)\n/* harmony export */ });\n/* harmony import */ var _debug_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./debug.js */ \"(ssr)/./node_modules/@azure/logger/dist/esm/debug.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst registeredLoggers = new Set();\nconst logLevelFromEnv = (typeof process !== \"undefined\" && process.env && process.env.AZURE_LOG_LEVEL) || undefined;\nlet azureLogLevel;\n/**\n * The AzureLogger provides a mechanism for overriding where logs are output to.\n * By default, logs are sent to stderr.\n * Override the `log` method to redirect logs to another location.\n */\nconst AzureLogger = (0,_debug_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"azure\");\nAzureLogger.log = (...args) => {\n    _debug_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].log(...args);\n};\nconst AZURE_LOG_LEVELS = [\"verbose\", \"info\", \"warning\", \"error\"];\nif (logLevelFromEnv) {\n    // avoid calling setLogLevel because we don't want a mis-set environment variable to crash\n    if (isAzureLogLevel(logLevelFromEnv)) {\n        setLogLevel(logLevelFromEnv);\n    }\n    else {\n        console.error(`AZURE_LOG_LEVEL set to unknown log level '${logLevelFromEnv}'; logging is not enabled. Acceptable values: ${AZURE_LOG_LEVELS.join(\", \")}.`);\n    }\n}\n/**\n * Immediately enables logging at the specified log level. If no level is specified, logging is disabled.\n * @param level - The log level to enable for logging.\n * Options from most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nfunction setLogLevel(level) {\n    if (level && !isAzureLogLevel(level)) {\n        throw new Error(`Unknown log level '${level}'. Acceptable values: ${AZURE_LOG_LEVELS.join(\",\")}`);\n    }\n    azureLogLevel = level;\n    const enabledNamespaces = [];\n    for (const logger of registeredLoggers) {\n        if (shouldEnable(logger)) {\n            enabledNamespaces.push(logger.namespace);\n        }\n    }\n    _debug_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].enable(enabledNamespaces.join(\",\"));\n}\n/**\n * Retrieves the currently specified log level.\n */\nfunction getLogLevel() {\n    return azureLogLevel;\n}\nconst levelMap = {\n    verbose: 400,\n    info: 300,\n    warning: 200,\n    error: 100,\n};\n/**\n * Creates a logger for use by the Azure SDKs that inherits from `AzureLogger`.\n * @param namespace - The name of the SDK package.\n * @hidden\n */\nfunction createClientLogger(namespace) {\n    const clientRootLogger = AzureLogger.extend(namespace);\n    patchLogMethod(AzureLogger, clientRootLogger);\n    return {\n        error: createLogger(clientRootLogger, \"error\"),\n        warning: createLogger(clientRootLogger, \"warning\"),\n        info: createLogger(clientRootLogger, \"info\"),\n        verbose: createLogger(clientRootLogger, \"verbose\"),\n    };\n}\nfunction patchLogMethod(parent, child) {\n    child.log = (...args) => {\n        parent.log(...args);\n    };\n}\nfunction createLogger(parent, level) {\n    const logger = Object.assign(parent.extend(level), {\n        level,\n    });\n    patchLogMethod(parent, logger);\n    if (shouldEnable(logger)) {\n        const enabledNamespaces = _debug_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].disable();\n        _debug_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].enable(enabledNamespaces + \",\" + logger.namespace);\n    }\n    registeredLoggers.add(logger);\n    return logger;\n}\nfunction shouldEnable(logger) {\n    return Boolean(azureLogLevel && levelMap[logger.level] <= levelMap[azureLogLevel]);\n}\nfunction isAzureLogLevel(logLevel) {\n    return AZURE_LOG_LEVELS.includes(logLevel);\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2xvZ2dlci9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLG9CQUFvQixxREFBSztBQUNoQztBQUNBLElBQUksaURBQUs7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FLGdCQUFnQixHQUFHLDZDQUE2Qyw0QkFBNEI7QUFDL0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSw4Q0FBOEMsTUFBTSx3QkFBd0IsMkJBQTJCO0FBQ3ZHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLGlEQUFLO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxrQ0FBa0MsaURBQUs7QUFDdkMsUUFBUSxpREFBSztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxsb2dnZXJcXGRpc3RcXGVzbVxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgZGVidWcgZnJvbSBcIi4vZGVidWcuanNcIjtcbmNvbnN0IHJlZ2lzdGVyZWRMb2dnZXJzID0gbmV3IFNldCgpO1xuY29uc3QgbG9nTGV2ZWxGcm9tRW52ID0gKHR5cGVvZiBwcm9jZXNzICE9PSBcInVuZGVmaW5lZFwiICYmIHByb2Nlc3MuZW52ICYmIHByb2Nlc3MuZW52LkFaVVJFX0xPR19MRVZFTCkgfHwgdW5kZWZpbmVkO1xubGV0IGF6dXJlTG9nTGV2ZWw7XG4vKipcbiAqIFRoZSBBenVyZUxvZ2dlciBwcm92aWRlcyBhIG1lY2hhbmlzbSBmb3Igb3ZlcnJpZGluZyB3aGVyZSBsb2dzIGFyZSBvdXRwdXQgdG8uXG4gKiBCeSBkZWZhdWx0LCBsb2dzIGFyZSBzZW50IHRvIHN0ZGVyci5cbiAqIE92ZXJyaWRlIHRoZSBgbG9nYCBtZXRob2QgdG8gcmVkaXJlY3QgbG9ncyB0byBhbm90aGVyIGxvY2F0aW9uLlxuICovXG5leHBvcnQgY29uc3QgQXp1cmVMb2dnZXIgPSBkZWJ1ZyhcImF6dXJlXCIpO1xuQXp1cmVMb2dnZXIubG9nID0gKC4uLmFyZ3MpID0+IHtcbiAgICBkZWJ1Zy5sb2coLi4uYXJncyk7XG59O1xuY29uc3QgQVpVUkVfTE9HX0xFVkVMUyA9IFtcInZlcmJvc2VcIiwgXCJpbmZvXCIsIFwid2FybmluZ1wiLCBcImVycm9yXCJdO1xuaWYgKGxvZ0xldmVsRnJvbUVudikge1xuICAgIC8vIGF2b2lkIGNhbGxpbmcgc2V0TG9nTGV2ZWwgYmVjYXVzZSB3ZSBkb24ndCB3YW50IGEgbWlzLXNldCBlbnZpcm9ubWVudCB2YXJpYWJsZSB0byBjcmFzaFxuICAgIGlmIChpc0F6dXJlTG9nTGV2ZWwobG9nTGV2ZWxGcm9tRW52KSkge1xuICAgICAgICBzZXRMb2dMZXZlbChsb2dMZXZlbEZyb21FbnYpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihgQVpVUkVfTE9HX0xFVkVMIHNldCB0byB1bmtub3duIGxvZyBsZXZlbCAnJHtsb2dMZXZlbEZyb21FbnZ9JzsgbG9nZ2luZyBpcyBub3QgZW5hYmxlZC4gQWNjZXB0YWJsZSB2YWx1ZXM6ICR7QVpVUkVfTE9HX0xFVkVMUy5qb2luKFwiLCBcIil9LmApO1xuICAgIH1cbn1cbi8qKlxuICogSW1tZWRpYXRlbHkgZW5hYmxlcyBsb2dnaW5nIGF0IHRoZSBzcGVjaWZpZWQgbG9nIGxldmVsLiBJZiBubyBsZXZlbCBpcyBzcGVjaWZpZWQsIGxvZ2dpbmcgaXMgZGlzYWJsZWQuXG4gKiBAcGFyYW0gbGV2ZWwgLSBUaGUgbG9nIGxldmVsIHRvIGVuYWJsZSBmb3IgbG9nZ2luZy5cbiAqIE9wdGlvbnMgZnJvbSBtb3N0IHZlcmJvc2UgdG8gbGVhc3QgdmVyYm9zZSBhcmU6XG4gKiAtIHZlcmJvc2VcbiAqIC0gaW5mb1xuICogLSB3YXJuaW5nXG4gKiAtIGVycm9yXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRMb2dMZXZlbChsZXZlbCkge1xuICAgIGlmIChsZXZlbCAmJiAhaXNBenVyZUxvZ0xldmVsKGxldmVsKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gbG9nIGxldmVsICcke2xldmVsfScuIEFjY2VwdGFibGUgdmFsdWVzOiAke0FaVVJFX0xPR19MRVZFTFMuam9pbihcIixcIil9YCk7XG4gICAgfVxuICAgIGF6dXJlTG9nTGV2ZWwgPSBsZXZlbDtcbiAgICBjb25zdCBlbmFibGVkTmFtZXNwYWNlcyA9IFtdO1xuICAgIGZvciAoY29uc3QgbG9nZ2VyIG9mIHJlZ2lzdGVyZWRMb2dnZXJzKSB7XG4gICAgICAgIGlmIChzaG91bGRFbmFibGUobG9nZ2VyKSkge1xuICAgICAgICAgICAgZW5hYmxlZE5hbWVzcGFjZXMucHVzaChsb2dnZXIubmFtZXNwYWNlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBkZWJ1Zy5lbmFibGUoZW5hYmxlZE5hbWVzcGFjZXMuam9pbihcIixcIikpO1xufVxuLyoqXG4gKiBSZXRyaWV2ZXMgdGhlIGN1cnJlbnRseSBzcGVjaWZpZWQgbG9nIGxldmVsLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0TG9nTGV2ZWwoKSB7XG4gICAgcmV0dXJuIGF6dXJlTG9nTGV2ZWw7XG59XG5jb25zdCBsZXZlbE1hcCA9IHtcbiAgICB2ZXJib3NlOiA0MDAsXG4gICAgaW5mbzogMzAwLFxuICAgIHdhcm5pbmc6IDIwMCxcbiAgICBlcnJvcjogMTAwLFxufTtcbi8qKlxuICogQ3JlYXRlcyBhIGxvZ2dlciBmb3IgdXNlIGJ5IHRoZSBBenVyZSBTREtzIHRoYXQgaW5oZXJpdHMgZnJvbSBgQXp1cmVMb2dnZXJgLlxuICogQHBhcmFtIG5hbWVzcGFjZSAtIFRoZSBuYW1lIG9mIHRoZSBTREsgcGFja2FnZS5cbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNsaWVudExvZ2dlcihuYW1lc3BhY2UpIHtcbiAgICBjb25zdCBjbGllbnRSb290TG9nZ2VyID0gQXp1cmVMb2dnZXIuZXh0ZW5kKG5hbWVzcGFjZSk7XG4gICAgcGF0Y2hMb2dNZXRob2QoQXp1cmVMb2dnZXIsIGNsaWVudFJvb3RMb2dnZXIpO1xuICAgIHJldHVybiB7XG4gICAgICAgIGVycm9yOiBjcmVhdGVMb2dnZXIoY2xpZW50Um9vdExvZ2dlciwgXCJlcnJvclwiKSxcbiAgICAgICAgd2FybmluZzogY3JlYXRlTG9nZ2VyKGNsaWVudFJvb3RMb2dnZXIsIFwid2FybmluZ1wiKSxcbiAgICAgICAgaW5mbzogY3JlYXRlTG9nZ2VyKGNsaWVudFJvb3RMb2dnZXIsIFwiaW5mb1wiKSxcbiAgICAgICAgdmVyYm9zZTogY3JlYXRlTG9nZ2VyKGNsaWVudFJvb3RMb2dnZXIsIFwidmVyYm9zZVwiKSxcbiAgICB9O1xufVxuZnVuY3Rpb24gcGF0Y2hMb2dNZXRob2QocGFyZW50LCBjaGlsZCkge1xuICAgIGNoaWxkLmxvZyA9ICguLi5hcmdzKSA9PiB7XG4gICAgICAgIHBhcmVudC5sb2coLi4uYXJncyk7XG4gICAgfTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZUxvZ2dlcihwYXJlbnQsIGxldmVsKSB7XG4gICAgY29uc3QgbG9nZ2VyID0gT2JqZWN0LmFzc2lnbihwYXJlbnQuZXh0ZW5kKGxldmVsKSwge1xuICAgICAgICBsZXZlbCxcbiAgICB9KTtcbiAgICBwYXRjaExvZ01ldGhvZChwYXJlbnQsIGxvZ2dlcik7XG4gICAgaWYgKHNob3VsZEVuYWJsZShsb2dnZXIpKSB7XG4gICAgICAgIGNvbnN0IGVuYWJsZWROYW1lc3BhY2VzID0gZGVidWcuZGlzYWJsZSgpO1xuICAgICAgICBkZWJ1Zy5lbmFibGUoZW5hYmxlZE5hbWVzcGFjZXMgKyBcIixcIiArIGxvZ2dlci5uYW1lc3BhY2UpO1xuICAgIH1cbiAgICByZWdpc3RlcmVkTG9nZ2Vycy5hZGQobG9nZ2VyKTtcbiAgICByZXR1cm4gbG9nZ2VyO1xufVxuZnVuY3Rpb24gc2hvdWxkRW5hYmxlKGxvZ2dlcikge1xuICAgIHJldHVybiBCb29sZWFuKGF6dXJlTG9nTGV2ZWwgJiYgbGV2ZWxNYXBbbG9nZ2VyLmxldmVsXSA8PSBsZXZlbE1hcFthenVyZUxvZ0xldmVsXSk7XG59XG5mdW5jdGlvbiBpc0F6dXJlTG9nTGV2ZWwobG9nTGV2ZWwpIHtcbiAgICByZXR1cm4gQVpVUkVfTE9HX0xFVkVMUy5pbmNsdWRlcyhsb2dMZXZlbCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/logger/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/logger/dist/esm/log.js":
/*!****************************************************!*\
  !*** ./node_modules/@azure/logger/dist/esm/log.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   log: () => (/* binding */ log)\n/* harmony export */ });\n/* harmony import */ var node_os__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:os */ \"node:os\");\n/* harmony import */ var node_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node:util */ \"node:util\");\n/* harmony import */ var node_process__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! node:process */ \"node:process\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\nfunction log(message, ...args) {\n    node_process__WEBPACK_IMPORTED_MODULE_2__.stderr.write(`${node_util__WEBPACK_IMPORTED_MODULE_1__.format(message, ...args)}${node_os__WEBPACK_IMPORTED_MODULE_0__.EOL}`);\n}\n//# sourceMappingURL=log.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2xvZ2dlci9kaXN0L2VzbS9sb2cuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDOEI7QUFDRDtBQUNXO0FBQ2pDO0FBQ1AsSUFBSSxnREFBYyxVQUFVLDZDQUFXLG1CQUFtQixFQUFFLHdDQUFHLENBQUM7QUFDaEU7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxoZWxsby12b2ljZVxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXGxvZ2dlclxcZGlzdFxcZXNtXFxsb2cuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgeyBFT0wgfSBmcm9tIFwibm9kZTpvc1wiO1xuaW1wb3J0IHV0aWwgZnJvbSBcIm5vZGU6dXRpbFwiO1xuaW1wb3J0ICogYXMgcHJvY2VzcyBmcm9tIFwibm9kZTpwcm9jZXNzXCI7XG5leHBvcnQgZnVuY3Rpb24gbG9nKG1lc3NhZ2UsIC4uLmFyZ3MpIHtcbiAgICBwcm9jZXNzLnN0ZGVyci53cml0ZShgJHt1dGlsLmZvcm1hdChtZXNzYWdlLCAuLi5hcmdzKX0ke0VPTH1gKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvZy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/logger/dist/esm/log.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/base64.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/base64.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Encodes a string in base64 format.\n * @param value - The string to encode.\n */\nfunction encode(value) {\n    return Buffer.from(value).toString(\"base64\");\n}\n/**\n * Decodes a base64 string into a regular string.\n * @param value - The base64 string to decode.\n */\nfunction decode(value) {\n    return Buffer.from(value, \"base64\").toString();\n}\n//# sourceMappingURL=base64.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL3NlYXJjaC1kb2N1bWVudHMvZGlzdC1lc20vc3JjL2Jhc2U2NC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxzZWFyY2gtZG9jdW1lbnRzXFxkaXN0LWVzbVxcc3JjXFxiYXNlNjQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG4vKipcbiAqIEVuY29kZXMgYSBzdHJpbmcgaW4gYmFzZTY0IGZvcm1hdC5cbiAqIEBwYXJhbSB2YWx1ZSAtIFRoZSBzdHJpbmcgdG8gZW5jb2RlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKHZhbHVlKSB7XG4gICAgcmV0dXJuIEJ1ZmZlci5mcm9tKHZhbHVlKS50b1N0cmluZyhcImJhc2U2NFwiKTtcbn1cbi8qKlxuICogRGVjb2RlcyBhIGJhc2U2NCBzdHJpbmcgaW50byBhIHJlZ3VsYXIgc3RyaW5nLlxuICogQHBhcmFtIHZhbHVlIC0gVGhlIGJhc2U2NCBzdHJpbmcgdG8gZGVjb2RlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlKHZhbHVlKSB7XG4gICAgcmV0dXJuIEJ1ZmZlci5mcm9tKHZhbHVlLCBcImJhc2U2NFwiKS50b1N0cmluZygpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFzZTY0LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/base64.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/generated/data/models/mappers.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/generated/data/models/mappers.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AutocompleteItem: () => (/* binding */ AutocompleteItem),\n/* harmony export */   AutocompleteRequest: () => (/* binding */ AutocompleteRequest),\n/* harmony export */   AutocompleteResult: () => (/* binding */ AutocompleteResult),\n/* harmony export */   ErrorAdditionalInfo: () => (/* binding */ ErrorAdditionalInfo),\n/* harmony export */   ErrorDetail: () => (/* binding */ ErrorDetail),\n/* harmony export */   ErrorResponse: () => (/* binding */ ErrorResponse),\n/* harmony export */   FacetResult: () => (/* binding */ FacetResult),\n/* harmony export */   IndexAction: () => (/* binding */ IndexAction),\n/* harmony export */   IndexBatch: () => (/* binding */ IndexBatch),\n/* harmony export */   IndexDocumentsResult: () => (/* binding */ IndexDocumentsResult),\n/* harmony export */   IndexingResult: () => (/* binding */ IndexingResult),\n/* harmony export */   QueryAnswerResult: () => (/* binding */ QueryAnswerResult),\n/* harmony export */   QueryCaptionResult: () => (/* binding */ QueryCaptionResult),\n/* harmony export */   SearchDocumentsResult: () => (/* binding */ SearchDocumentsResult),\n/* harmony export */   SearchRequest: () => (/* binding */ SearchRequest),\n/* harmony export */   SearchResult: () => (/* binding */ SearchResult),\n/* harmony export */   SuggestDocumentsResult: () => (/* binding */ SuggestDocumentsResult),\n/* harmony export */   SuggestRequest: () => (/* binding */ SuggestRequest),\n/* harmony export */   SuggestResult: () => (/* binding */ SuggestResult),\n/* harmony export */   VectorQuery: () => (/* binding */ VectorQuery),\n/* harmony export */   VectorizableTextQuery: () => (/* binding */ VectorizableTextQuery),\n/* harmony export */   VectorizedQuery: () => (/* binding */ VectorizedQuery),\n/* harmony export */   discriminators: () => (/* binding */ discriminators)\n/* harmony export */ });\n/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nconst ErrorResponse = {\n    type: {\n        name: \"Composite\",\n        className: \"ErrorResponse\",\n        modelProperties: {\n            error: {\n                serializedName: \"error\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ErrorDetail\",\n                },\n            },\n        },\n    },\n};\nconst ErrorDetail = {\n    type: {\n        name: \"Composite\",\n        className: \"ErrorDetail\",\n        modelProperties: {\n            code: {\n                serializedName: \"code\",\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            message: {\n                serializedName: \"message\",\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            target: {\n                serializedName: \"target\",\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            details: {\n                serializedName: \"details\",\n                readOnly: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ErrorDetail\",\n                        },\n                    },\n                },\n            },\n            additionalInfo: {\n                serializedName: \"additionalInfo\",\n                readOnly: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ErrorAdditionalInfo\",\n                        },\n                    },\n                },\n            },\n        },\n    },\n};\nconst ErrorAdditionalInfo = {\n    type: {\n        name: \"Composite\",\n        className: \"ErrorAdditionalInfo\",\n        modelProperties: {\n            type: {\n                serializedName: \"type\",\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            info: {\n                serializedName: \"info\",\n                readOnly: true,\n                type: {\n                    name: \"Dictionary\",\n                    value: { type: { name: \"any\" } },\n                },\n            },\n        },\n    },\n};\nconst SearchDocumentsResult = {\n    type: {\n        name: \"Composite\",\n        className: \"SearchDocumentsResult\",\n        modelProperties: {\n            count: {\n                serializedName: \"@odata\\\\.count\",\n                readOnly: true,\n                type: {\n                    name: \"Number\",\n                },\n            },\n            coverage: {\n                serializedName: \"@search\\\\.coverage\",\n                readOnly: true,\n                type: {\n                    name: \"Number\",\n                },\n            },\n            facets: {\n                serializedName: \"@search\\\\.facets\",\n                readOnly: true,\n                type: {\n                    name: \"Dictionary\",\n                    value: {\n                        type: {\n                            name: \"Sequence\",\n                            element: {\n                                type: { name: \"Composite\", className: \"FacetResult\" },\n                            },\n                        },\n                    },\n                },\n            },\n            answers: {\n                serializedName: \"@search\\\\.answers\",\n                readOnly: true,\n                nullable: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"QueryAnswerResult\",\n                        },\n                    },\n                },\n            },\n            nextPageParameters: {\n                serializedName: \"@search\\\\.nextPageParameters\",\n                type: {\n                    name: \"Composite\",\n                    className: \"SearchRequest\",\n                },\n            },\n            results: {\n                serializedName: \"value\",\n                required: true,\n                readOnly: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"SearchResult\",\n                        },\n                    },\n                },\n            },\n            nextLink: {\n                serializedName: \"@odata\\\\.nextLink\",\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            semanticPartialResponseReason: {\n                serializedName: \"@search\\\\.semanticPartialResponseReason\",\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            semanticPartialResponseType: {\n                serializedName: \"@search\\\\.semanticPartialResponseType\",\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n};\nconst FacetResult = {\n    type: {\n        name: \"Composite\",\n        className: \"FacetResult\",\n        additionalProperties: { type: { name: \"Object\" } },\n        modelProperties: {\n            count: {\n                serializedName: \"count\",\n                readOnly: true,\n                type: {\n                    name: \"Number\",\n                },\n            },\n        },\n    },\n};\nconst QueryAnswerResult = {\n    type: {\n        name: \"Composite\",\n        className: \"QueryAnswerResult\",\n        additionalProperties: { type: { name: \"Object\" } },\n        modelProperties: {\n            score: {\n                serializedName: \"score\",\n                required: true,\n                readOnly: true,\n                type: {\n                    name: \"Number\",\n                },\n            },\n            key: {\n                serializedName: \"key\",\n                required: true,\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            text: {\n                serializedName: \"text\",\n                required: true,\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            highlights: {\n                serializedName: \"highlights\",\n                readOnly: true,\n                nullable: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n};\nconst SearchRequest = {\n    type: {\n        name: \"Composite\",\n        className: \"SearchRequest\",\n        modelProperties: {\n            includeTotalResultCount: {\n                serializedName: \"count\",\n                type: {\n                    name: \"Boolean\",\n                },\n            },\n            facets: {\n                serializedName: \"facets\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"String\",\n                        },\n                    },\n                },\n            },\n            filter: {\n                serializedName: \"filter\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            highlightFields: {\n                serializedName: \"highlight\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            highlightPostTag: {\n                serializedName: \"highlightPostTag\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            highlightPreTag: {\n                serializedName: \"highlightPreTag\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            minimumCoverage: {\n                serializedName: \"minimumCoverage\",\n                type: {\n                    name: \"Number\",\n                },\n            },\n            orderBy: {\n                serializedName: \"orderby\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            queryType: {\n                serializedName: \"queryType\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"simple\", \"full\", \"semantic\"],\n                },\n            },\n            scoringStatistics: {\n                serializedName: \"scoringStatistics\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"local\", \"global\"],\n                },\n            },\n            sessionId: {\n                serializedName: \"sessionId\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            scoringParameters: {\n                serializedName: \"scoringParameters\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"String\",\n                        },\n                    },\n                },\n            },\n            scoringProfile: {\n                serializedName: \"scoringProfile\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            searchText: {\n                serializedName: \"search\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            searchFields: {\n                serializedName: \"searchFields\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            searchMode: {\n                serializedName: \"searchMode\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"any\", \"all\"],\n                },\n            },\n            select: {\n                serializedName: \"select\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            skip: {\n                serializedName: \"skip\",\n                type: {\n                    name: \"Number\",\n                },\n            },\n            top: {\n                serializedName: \"top\",\n                type: {\n                    name: \"Number\",\n                },\n            },\n            semanticConfigurationName: {\n                serializedName: \"semanticConfiguration\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            semanticErrorHandling: {\n                serializedName: \"semanticErrorHandling\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            semanticMaxWaitInMilliseconds: {\n                constraints: {\n                    InclusiveMinimum: 700,\n                },\n                serializedName: \"semanticMaxWaitInMilliseconds\",\n                nullable: true,\n                type: {\n                    name: \"Number\",\n                },\n            },\n            semanticQuery: {\n                serializedName: \"semanticQuery\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            answers: {\n                serializedName: \"answers\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            captions: {\n                serializedName: \"captions\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            vectorQueries: {\n                serializedName: \"vectorQueries\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"VectorQuery\",\n                        },\n                    },\n                },\n            },\n            vectorFilterMode: {\n                serializedName: \"vectorFilterMode\",\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n};\nconst VectorQuery = {\n    type: {\n        name: \"Composite\",\n        className: \"VectorQuery\",\n        uberParent: \"VectorQuery\",\n        polymorphicDiscriminator: {\n            serializedName: \"kind\",\n            clientName: \"kind\",\n        },\n        modelProperties: {\n            kind: {\n                serializedName: \"kind\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            kNearestNeighborsCount: {\n                serializedName: \"k\",\n                type: {\n                    name: \"Number\",\n                },\n            },\n            fields: {\n                serializedName: \"fields\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            exhaustive: {\n                serializedName: \"exhaustive\",\n                type: {\n                    name: \"Boolean\",\n                },\n            },\n            oversampling: {\n                serializedName: \"oversampling\",\n                type: {\n                    name: \"Number\",\n                },\n            },\n            weight: {\n                serializedName: \"weight\",\n                type: {\n                    name: \"Number\",\n                },\n            },\n        },\n    },\n};\nconst SearchResult = {\n    type: {\n        name: \"Composite\",\n        className: \"SearchResult\",\n        additionalProperties: { type: { name: \"Object\" } },\n        modelProperties: {\n            _score: {\n                serializedName: \"@search\\\\.score\",\n                required: true,\n                readOnly: true,\n                type: {\n                    name: \"Number\",\n                },\n            },\n            _rerankerScore: {\n                serializedName: \"@search\\\\.rerankerScore\",\n                readOnly: true,\n                nullable: true,\n                type: {\n                    name: \"Number\",\n                },\n            },\n            _highlights: {\n                serializedName: \"@search\\\\.highlights\",\n                readOnly: true,\n                type: {\n                    name: \"Dictionary\",\n                    value: {\n                        type: { name: \"Sequence\", element: { type: { name: \"String\" } } },\n                    },\n                },\n            },\n            _captions: {\n                serializedName: \"@search\\\\.captions\",\n                readOnly: true,\n                nullable: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"QueryCaptionResult\",\n                        },\n                    },\n                },\n            },\n        },\n    },\n};\nconst QueryCaptionResult = {\n    type: {\n        name: \"Composite\",\n        className: \"QueryCaptionResult\",\n        additionalProperties: { type: { name: \"Object\" } },\n        modelProperties: {\n            text: {\n                serializedName: \"text\",\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            highlights: {\n                serializedName: \"highlights\",\n                readOnly: true,\n                nullable: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n};\nconst SuggestDocumentsResult = {\n    type: {\n        name: \"Composite\",\n        className: \"SuggestDocumentsResult\",\n        modelProperties: {\n            results: {\n                serializedName: \"value\",\n                required: true,\n                readOnly: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"SuggestResult\",\n                        },\n                    },\n                },\n            },\n            coverage: {\n                serializedName: \"@search\\\\.coverage\",\n                readOnly: true,\n                type: {\n                    name: \"Number\",\n                },\n            },\n        },\n    },\n};\nconst SuggestResult = {\n    type: {\n        name: \"Composite\",\n        className: \"SuggestResult\",\n        additionalProperties: { type: { name: \"Object\" } },\n        modelProperties: {\n            _text: {\n                serializedName: \"@search\\\\.text\",\n                required: true,\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n};\nconst SuggestRequest = {\n    type: {\n        name: \"Composite\",\n        className: \"SuggestRequest\",\n        modelProperties: {\n            filter: {\n                serializedName: \"filter\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            useFuzzyMatching: {\n                serializedName: \"fuzzy\",\n                type: {\n                    name: \"Boolean\",\n                },\n            },\n            highlightPostTag: {\n                serializedName: \"highlightPostTag\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            highlightPreTag: {\n                serializedName: \"highlightPreTag\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            minimumCoverage: {\n                serializedName: \"minimumCoverage\",\n                type: {\n                    name: \"Number\",\n                },\n            },\n            orderBy: {\n                serializedName: \"orderby\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            searchText: {\n                serializedName: \"search\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            searchFields: {\n                serializedName: \"searchFields\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            select: {\n                serializedName: \"select\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            suggesterName: {\n                serializedName: \"suggesterName\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            top: {\n                serializedName: \"top\",\n                type: {\n                    name: \"Number\",\n                },\n            },\n        },\n    },\n};\nconst IndexBatch = {\n    type: {\n        name: \"Composite\",\n        className: \"IndexBatch\",\n        modelProperties: {\n            actions: {\n                serializedName: \"value\",\n                required: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"IndexAction\",\n                        },\n                    },\n                },\n            },\n        },\n    },\n};\nconst IndexAction = {\n    type: {\n        name: \"Composite\",\n        className: \"IndexAction\",\n        additionalProperties: { type: { name: \"Object\" } },\n        modelProperties: {\n            __actionType: {\n                serializedName: \"@search\\\\.action\",\n                required: true,\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"upload\", \"merge\", \"mergeOrUpload\", \"delete\"],\n                },\n            },\n        },\n    },\n};\nconst IndexDocumentsResult = {\n    type: {\n        name: \"Composite\",\n        className: \"IndexDocumentsResult\",\n        modelProperties: {\n            results: {\n                serializedName: \"value\",\n                required: true,\n                readOnly: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"IndexingResult\",\n                        },\n                    },\n                },\n            },\n        },\n    },\n};\nconst IndexingResult = {\n    type: {\n        name: \"Composite\",\n        className: \"IndexingResult\",\n        modelProperties: {\n            key: {\n                serializedName: \"key\",\n                required: true,\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            errorMessage: {\n                serializedName: \"errorMessage\",\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            succeeded: {\n                serializedName: \"status\",\n                required: true,\n                readOnly: true,\n                type: {\n                    name: \"Boolean\",\n                },\n            },\n            statusCode: {\n                serializedName: \"statusCode\",\n                required: true,\n                readOnly: true,\n                type: {\n                    name: \"Number\",\n                },\n            },\n        },\n    },\n};\nconst AutocompleteResult = {\n    type: {\n        name: \"Composite\",\n        className: \"AutocompleteResult\",\n        modelProperties: {\n            coverage: {\n                serializedName: \"@search\\\\.coverage\",\n                readOnly: true,\n                type: {\n                    name: \"Number\",\n                },\n            },\n            results: {\n                serializedName: \"value\",\n                required: true,\n                readOnly: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"AutocompleteItem\",\n                        },\n                    },\n                },\n            },\n        },\n    },\n};\nconst AutocompleteItem = {\n    type: {\n        name: \"Composite\",\n        className: \"AutocompleteItem\",\n        modelProperties: {\n            text: {\n                serializedName: \"text\",\n                required: true,\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            queryPlusText: {\n                serializedName: \"queryPlusText\",\n                required: true,\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n};\nconst AutocompleteRequest = {\n    type: {\n        name: \"Composite\",\n        className: \"AutocompleteRequest\",\n        modelProperties: {\n            searchText: {\n                serializedName: \"search\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            autocompleteMode: {\n                serializedName: \"autocompleteMode\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"oneTerm\", \"twoTerms\", \"oneTermWithContext\"],\n                },\n            },\n            filter: {\n                serializedName: \"filter\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            useFuzzyMatching: {\n                serializedName: \"fuzzy\",\n                type: {\n                    name: \"Boolean\",\n                },\n            },\n            highlightPostTag: {\n                serializedName: \"highlightPostTag\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            highlightPreTag: {\n                serializedName: \"highlightPreTag\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            minimumCoverage: {\n                serializedName: \"minimumCoverage\",\n                type: {\n                    name: \"Number\",\n                },\n            },\n            searchFields: {\n                serializedName: \"searchFields\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            suggesterName: {\n                serializedName: \"suggesterName\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            top: {\n                serializedName: \"top\",\n                type: {\n                    name: \"Number\",\n                },\n            },\n        },\n    },\n};\nconst VectorizedQuery = {\n    serializedName: \"vector\",\n    type: {\n        name: \"Composite\",\n        className: \"VectorizedQuery\",\n        uberParent: \"VectorQuery\",\n        polymorphicDiscriminator: VectorQuery.type.polymorphicDiscriminator,\n        modelProperties: Object.assign(Object.assign({}, VectorQuery.type.modelProperties), { vector: {\n                serializedName: \"vector\",\n                required: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Number\",\n                        },\n                    },\n                },\n            } }),\n    },\n};\nconst VectorizableTextQuery = {\n    serializedName: \"text\",\n    type: {\n        name: \"Composite\",\n        className: \"VectorizableTextQuery\",\n        uberParent: \"VectorQuery\",\n        polymorphicDiscriminator: VectorQuery.type.polymorphicDiscriminator,\n        modelProperties: Object.assign(Object.assign({}, VectorQuery.type.modelProperties), { text: {\n                serializedName: \"text\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            } }),\n    },\n};\nlet discriminators = {\n    VectorQuery: VectorQuery,\n    \"VectorQuery.vector\": VectorizedQuery,\n    \"VectorQuery.text\": VectorizableTextQuery,\n};\n//# sourceMappingURL=mappers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/generated/data/models/mappers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/generated/data/models/parameters.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/generated/data/models/parameters.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   accept: () => (/* binding */ accept),\n/* harmony export */   answers: () => (/* binding */ answers),\n/* harmony export */   apiVersion: () => (/* binding */ apiVersion),\n/* harmony export */   autocompleteMode: () => (/* binding */ autocompleteMode),\n/* harmony export */   autocompleteRequest: () => (/* binding */ autocompleteRequest),\n/* harmony export */   batch: () => (/* binding */ batch),\n/* harmony export */   captions: () => (/* binding */ captions),\n/* harmony export */   contentType: () => (/* binding */ contentType),\n/* harmony export */   endpoint: () => (/* binding */ endpoint),\n/* harmony export */   facets: () => (/* binding */ facets),\n/* harmony export */   filter: () => (/* binding */ filter),\n/* harmony export */   filter1: () => (/* binding */ filter1),\n/* harmony export */   filter2: () => (/* binding */ filter2),\n/* harmony export */   highlightFields: () => (/* binding */ highlightFields),\n/* harmony export */   highlightPostTag: () => (/* binding */ highlightPostTag),\n/* harmony export */   highlightPostTag1: () => (/* binding */ highlightPostTag1),\n/* harmony export */   highlightPostTag2: () => (/* binding */ highlightPostTag2),\n/* harmony export */   highlightPreTag: () => (/* binding */ highlightPreTag),\n/* harmony export */   highlightPreTag1: () => (/* binding */ highlightPreTag1),\n/* harmony export */   highlightPreTag2: () => (/* binding */ highlightPreTag2),\n/* harmony export */   includeTotalResultCount: () => (/* binding */ includeTotalResultCount),\n/* harmony export */   indexName: () => (/* binding */ indexName),\n/* harmony export */   key: () => (/* binding */ key),\n/* harmony export */   minimumCoverage: () => (/* binding */ minimumCoverage),\n/* harmony export */   minimumCoverage1: () => (/* binding */ minimumCoverage1),\n/* harmony export */   minimumCoverage2: () => (/* binding */ minimumCoverage2),\n/* harmony export */   orderBy: () => (/* binding */ orderBy),\n/* harmony export */   orderBy1: () => (/* binding */ orderBy1),\n/* harmony export */   queryType: () => (/* binding */ queryType),\n/* harmony export */   scoringParameters: () => (/* binding */ scoringParameters),\n/* harmony export */   scoringProfile: () => (/* binding */ scoringProfile),\n/* harmony export */   scoringStatistics: () => (/* binding */ scoringStatistics),\n/* harmony export */   searchFields: () => (/* binding */ searchFields),\n/* harmony export */   searchFields1: () => (/* binding */ searchFields1),\n/* harmony export */   searchFields2: () => (/* binding */ searchFields2),\n/* harmony export */   searchMode: () => (/* binding */ searchMode),\n/* harmony export */   searchRequest: () => (/* binding */ searchRequest),\n/* harmony export */   searchText: () => (/* binding */ searchText),\n/* harmony export */   searchText1: () => (/* binding */ searchText1),\n/* harmony export */   select: () => (/* binding */ select),\n/* harmony export */   select1: () => (/* binding */ select1),\n/* harmony export */   selectedFields: () => (/* binding */ selectedFields),\n/* harmony export */   semanticConfiguration: () => (/* binding */ semanticConfiguration),\n/* harmony export */   semanticErrorHandling: () => (/* binding */ semanticErrorHandling),\n/* harmony export */   semanticMaxWaitInMilliseconds: () => (/* binding */ semanticMaxWaitInMilliseconds),\n/* harmony export */   semanticQuery: () => (/* binding */ semanticQuery),\n/* harmony export */   sessionId: () => (/* binding */ sessionId),\n/* harmony export */   skip: () => (/* binding */ skip),\n/* harmony export */   suggestRequest: () => (/* binding */ suggestRequest),\n/* harmony export */   suggesterName: () => (/* binding */ suggesterName),\n/* harmony export */   top: () => (/* binding */ top),\n/* harmony export */   top1: () => (/* binding */ top1),\n/* harmony export */   top2: () => (/* binding */ top2),\n/* harmony export */   useFuzzyMatching: () => (/* binding */ useFuzzyMatching),\n/* harmony export */   useFuzzyMatching1: () => (/* binding */ useFuzzyMatching1)\n/* harmony export */ });\n/* harmony import */ var _models_mappers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../models/mappers */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/generated/data/models/mappers.js\");\n/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nconst accept = {\n    parameterPath: \"accept\",\n    mapper: {\n        defaultValue: \"application/json\",\n        isConstant: true,\n        serializedName: \"Accept\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst endpoint = {\n    parameterPath: \"endpoint\",\n    mapper: {\n        serializedName: \"endpoint\",\n        required: true,\n        type: {\n            name: \"String\",\n        },\n    },\n    skipEncoding: true,\n};\nconst indexName = {\n    parameterPath: \"indexName\",\n    mapper: {\n        serializedName: \"indexName\",\n        required: true,\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst apiVersion = {\n    parameterPath: \"apiVersion\",\n    mapper: {\n        serializedName: \"api-version\",\n        required: true,\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst searchText = {\n    parameterPath: [\"options\", \"searchText\"],\n    mapper: {\n        serializedName: \"search\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst includeTotalResultCount = {\n    parameterPath: [\"options\", \"searchOptions\", \"includeTotalResultCount\"],\n    mapper: {\n        serializedName: \"$count\",\n        type: {\n            name: \"Boolean\",\n        },\n    },\n};\nconst facets = {\n    parameterPath: [\"options\", \"searchOptions\", \"facets\"],\n    mapper: {\n        serializedName: \"facet\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n    collectionFormat: \"Multi\",\n};\nconst filter = {\n    parameterPath: [\"options\", \"searchOptions\", \"filter\"],\n    mapper: {\n        serializedName: \"$filter\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst highlightFields = {\n    parameterPath: [\"options\", \"searchOptions\", \"highlightFields\"],\n    mapper: {\n        serializedName: \"highlight\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n    collectionFormat: \"CSV\",\n};\nconst highlightPostTag = {\n    parameterPath: [\"options\", \"searchOptions\", \"highlightPostTag\"],\n    mapper: {\n        serializedName: \"highlightPostTag\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst highlightPreTag = {\n    parameterPath: [\"options\", \"searchOptions\", \"highlightPreTag\"],\n    mapper: {\n        serializedName: \"highlightPreTag\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst minimumCoverage = {\n    parameterPath: [\"options\", \"searchOptions\", \"minimumCoverage\"],\n    mapper: {\n        serializedName: \"minimumCoverage\",\n        type: {\n            name: \"Number\",\n        },\n    },\n};\nconst orderBy = {\n    parameterPath: [\"options\", \"searchOptions\", \"orderBy\"],\n    mapper: {\n        serializedName: \"$orderby\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n    collectionFormat: \"CSV\",\n};\nconst queryType = {\n    parameterPath: [\"options\", \"searchOptions\", \"queryType\"],\n    mapper: {\n        serializedName: \"queryType\",\n        type: {\n            name: \"Enum\",\n            allowedValues: [\"simple\", \"full\", \"semantic\"],\n        },\n    },\n};\nconst scoringParameters = {\n    parameterPath: [\"options\", \"searchOptions\", \"scoringParameters\"],\n    mapper: {\n        serializedName: \"scoringParameter\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n    collectionFormat: \"Multi\",\n};\nconst scoringProfile = {\n    parameterPath: [\"options\", \"searchOptions\", \"scoringProfile\"],\n    mapper: {\n        serializedName: \"scoringProfile\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst searchFields = {\n    parameterPath: [\"options\", \"searchOptions\", \"searchFields\"],\n    mapper: {\n        serializedName: \"searchFields\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n    collectionFormat: \"CSV\",\n};\nconst searchMode = {\n    parameterPath: [\"options\", \"searchOptions\", \"searchMode\"],\n    mapper: {\n        serializedName: \"searchMode\",\n        type: {\n            name: \"Enum\",\n            allowedValues: [\"any\", \"all\"],\n        },\n    },\n};\nconst scoringStatistics = {\n    parameterPath: [\"options\", \"searchOptions\", \"scoringStatistics\"],\n    mapper: {\n        serializedName: \"scoringStatistics\",\n        type: {\n            name: \"Enum\",\n            allowedValues: [\"local\", \"global\"],\n        },\n    },\n};\nconst sessionId = {\n    parameterPath: [\"options\", \"searchOptions\", \"sessionId\"],\n    mapper: {\n        serializedName: \"sessionId\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst select = {\n    parameterPath: [\"options\", \"searchOptions\", \"select\"],\n    mapper: {\n        serializedName: \"$select\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n    collectionFormat: \"CSV\",\n};\nconst skip = {\n    parameterPath: [\"options\", \"searchOptions\", \"skip\"],\n    mapper: {\n        serializedName: \"$skip\",\n        type: {\n            name: \"Number\",\n        },\n    },\n};\nconst top = {\n    parameterPath: [\"options\", \"searchOptions\", \"top\"],\n    mapper: {\n        serializedName: \"$top\",\n        type: {\n            name: \"Number\",\n        },\n    },\n};\nconst semanticConfiguration = {\n    parameterPath: [\"options\", \"searchOptions\", \"semanticConfiguration\"],\n    mapper: {\n        serializedName: \"semanticConfiguration\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst semanticErrorHandling = {\n    parameterPath: [\"options\", \"searchOptions\", \"semanticErrorHandling\"],\n    mapper: {\n        serializedName: \"semanticErrorHandling\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst semanticMaxWaitInMilliseconds = {\n    parameterPath: [\"options\", \"searchOptions\", \"semanticMaxWaitInMilliseconds\"],\n    mapper: {\n        constraints: {\n            InclusiveMinimum: 700,\n        },\n        serializedName: \"semanticMaxWaitInMilliseconds\",\n        type: {\n            name: \"Number\",\n        },\n    },\n};\nconst answers = {\n    parameterPath: [\"options\", \"searchOptions\", \"answers\"],\n    mapper: {\n        serializedName: \"answers\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst captions = {\n    parameterPath: [\"options\", \"searchOptions\", \"captions\"],\n    mapper: {\n        serializedName: \"captions\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst semanticQuery = {\n    parameterPath: [\"options\", \"searchOptions\", \"semanticQuery\"],\n    mapper: {\n        serializedName: \"semanticQuery\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst contentType = {\n    parameterPath: [\"options\", \"contentType\"],\n    mapper: {\n        defaultValue: \"application/json\",\n        isConstant: true,\n        serializedName: \"Content-Type\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst searchRequest = {\n    parameterPath: \"searchRequest\",\n    mapper: _models_mappers__WEBPACK_IMPORTED_MODULE_0__.SearchRequest,\n};\nconst key = {\n    parameterPath: \"key\",\n    mapper: {\n        serializedName: \"key\",\n        required: true,\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst selectedFields = {\n    parameterPath: [\"options\", \"selectedFields\"],\n    mapper: {\n        serializedName: \"$select\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n    collectionFormat: \"CSV\",\n};\nconst searchText1 = {\n    parameterPath: \"searchText\",\n    mapper: {\n        serializedName: \"search\",\n        required: true,\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst suggesterName = {\n    parameterPath: \"suggesterName\",\n    mapper: {\n        serializedName: \"suggesterName\",\n        required: true,\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst filter1 = {\n    parameterPath: [\"options\", \"suggestOptions\", \"filter\"],\n    mapper: {\n        serializedName: \"$filter\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst useFuzzyMatching = {\n    parameterPath: [\"options\", \"suggestOptions\", \"useFuzzyMatching\"],\n    mapper: {\n        serializedName: \"fuzzy\",\n        type: {\n            name: \"Boolean\",\n        },\n    },\n};\nconst highlightPostTag1 = {\n    parameterPath: [\"options\", \"suggestOptions\", \"highlightPostTag\"],\n    mapper: {\n        serializedName: \"highlightPostTag\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst highlightPreTag1 = {\n    parameterPath: [\"options\", \"suggestOptions\", \"highlightPreTag\"],\n    mapper: {\n        serializedName: \"highlightPreTag\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst minimumCoverage1 = {\n    parameterPath: [\"options\", \"suggestOptions\", \"minimumCoverage\"],\n    mapper: {\n        serializedName: \"minimumCoverage\",\n        type: {\n            name: \"Number\",\n        },\n    },\n};\nconst orderBy1 = {\n    parameterPath: [\"options\", \"suggestOptions\", \"orderBy\"],\n    mapper: {\n        serializedName: \"$orderby\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n    collectionFormat: \"CSV\",\n};\nconst searchFields1 = {\n    parameterPath: [\"options\", \"suggestOptions\", \"searchFields\"],\n    mapper: {\n        serializedName: \"searchFields\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n    collectionFormat: \"CSV\",\n};\nconst select1 = {\n    parameterPath: [\"options\", \"suggestOptions\", \"select\"],\n    mapper: {\n        serializedName: \"$select\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n    collectionFormat: \"CSV\",\n};\nconst top1 = {\n    parameterPath: [\"options\", \"suggestOptions\", \"top\"],\n    mapper: {\n        serializedName: \"$top\",\n        type: {\n            name: \"Number\",\n        },\n    },\n};\nconst suggestRequest = {\n    parameterPath: \"suggestRequest\",\n    mapper: _models_mappers__WEBPACK_IMPORTED_MODULE_0__.SuggestRequest,\n};\nconst batch = {\n    parameterPath: \"batch\",\n    mapper: _models_mappers__WEBPACK_IMPORTED_MODULE_0__.IndexBatch,\n};\nconst autocompleteMode = {\n    parameterPath: [\"options\", \"autocompleteOptions\", \"autocompleteMode\"],\n    mapper: {\n        serializedName: \"autocompleteMode\",\n        type: {\n            name: \"Enum\",\n            allowedValues: [\"oneTerm\", \"twoTerms\", \"oneTermWithContext\"],\n        },\n    },\n};\nconst filter2 = {\n    parameterPath: [\"options\", \"autocompleteOptions\", \"filter\"],\n    mapper: {\n        serializedName: \"$filter\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst useFuzzyMatching1 = {\n    parameterPath: [\"options\", \"autocompleteOptions\", \"useFuzzyMatching\"],\n    mapper: {\n        serializedName: \"fuzzy\",\n        type: {\n            name: \"Boolean\",\n        },\n    },\n};\nconst highlightPostTag2 = {\n    parameterPath: [\"options\", \"autocompleteOptions\", \"highlightPostTag\"],\n    mapper: {\n        serializedName: \"highlightPostTag\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst highlightPreTag2 = {\n    parameterPath: [\"options\", \"autocompleteOptions\", \"highlightPreTag\"],\n    mapper: {\n        serializedName: \"highlightPreTag\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nconst minimumCoverage2 = {\n    parameterPath: [\"options\", \"autocompleteOptions\", \"minimumCoverage\"],\n    mapper: {\n        serializedName: \"minimumCoverage\",\n        type: {\n            name: \"Number\",\n        },\n    },\n};\nconst searchFields2 = {\n    parameterPath: [\"options\", \"autocompleteOptions\", \"searchFields\"],\n    mapper: {\n        serializedName: \"searchFields\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n    collectionFormat: \"CSV\",\n};\nconst top2 = {\n    parameterPath: [\"options\", \"autocompleteOptions\", \"top\"],\n    mapper: {\n        serializedName: \"$top\",\n        type: {\n            name: \"Number\",\n        },\n    },\n};\nconst autocompleteRequest = {\n    parameterPath: \"autocompleteRequest\",\n    mapper: _models_mappers__WEBPACK_IMPORTED_MODULE_0__.AutocompleteRequest,\n};\n//# sourceMappingURL=parameters.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/generated/data/models/parameters.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/generated/data/operations/documents.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/generated/data/operations/documents.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DocumentsImpl: () => (/* binding */ DocumentsImpl)\n/* harmony export */ });\n/* harmony import */ var _azure_core_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-client */ \"(ssr)/./node_modules/@azure/core-client/dist/esm/index.js\");\n/* harmony import */ var _models_mappers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/mappers */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/generated/data/models/mappers.js\");\n/* harmony import */ var _models_parameters__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../models/parameters */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/generated/data/models/parameters.js\");\n/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\n\n\n/** Class containing Documents operations. */\nclass DocumentsImpl {\n    /**\n     * Initialize a new instance of the class Documents class.\n     * @param client Reference to the service client\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * Queries the number of documents in the index.\n     * @param options The options parameters.\n     */\n    count(options) {\n        return this.client.sendOperationRequest({ options }, countOperationSpec);\n    }\n    /**\n     * Searches for documents in the index.\n     * @param options The options parameters.\n     */\n    searchGet(options) {\n        return this.client.sendOperationRequest({ options }, searchGetOperationSpec);\n    }\n    /**\n     * Searches for documents in the index.\n     * @param searchRequest The definition of the Search request.\n     * @param options The options parameters.\n     */\n    searchPost(searchRequest, options) {\n        return this.client.sendOperationRequest({ searchRequest, options }, searchPostOperationSpec);\n    }\n    /**\n     * Retrieves a document from the index.\n     * @param key The key of the document to retrieve.\n     * @param options The options parameters.\n     */\n    get(key, options) {\n        return this.client.sendOperationRequest({ key, options }, getOperationSpec);\n    }\n    /**\n     * Suggests documents in the index that match the given partial query text.\n     * @param searchText The search text to use to suggest documents. Must be at least 1 character, and no\n     *                   more than 100 characters.\n     * @param suggesterName The name of the suggester as specified in the suggesters collection that's part\n     *                      of the index definition.\n     * @param options The options parameters.\n     */\n    suggestGet(searchText, suggesterName, options) {\n        return this.client.sendOperationRequest({ searchText, suggesterName, options }, suggestGetOperationSpec);\n    }\n    /**\n     * Suggests documents in the index that match the given partial query text.\n     * @param suggestRequest The Suggest request.\n     * @param options The options parameters.\n     */\n    suggestPost(suggestRequest, options) {\n        return this.client.sendOperationRequest({ suggestRequest, options }, suggestPostOperationSpec);\n    }\n    /**\n     * Sends a batch of document write actions to the index.\n     * @param batch The batch of index actions.\n     * @param options The options parameters.\n     */\n    index(batch, options) {\n        return this.client.sendOperationRequest({ batch, options }, indexOperationSpec);\n    }\n    /**\n     * Autocompletes incomplete query terms based on input text and matching terms in the index.\n     * @param searchText The incomplete term which should be auto-completed.\n     * @param suggesterName The name of the suggester as specified in the suggesters collection that's part\n     *                      of the index definition.\n     * @param options The options parameters.\n     */\n    autocompleteGet(searchText, suggesterName, options) {\n        return this.client.sendOperationRequest({ searchText, suggesterName, options }, autocompleteGetOperationSpec);\n    }\n    /**\n     * Autocompletes incomplete query terms based on input text and matching terms in the index.\n     * @param autocompleteRequest The definition of the Autocomplete request.\n     * @param options The options parameters.\n     */\n    autocompletePost(autocompleteRequest, options) {\n        return this.client.sendOperationRequest({ autocompleteRequest, options }, autocompletePostOperationSpec);\n    }\n}\n// Operation Specifications\nconst serializer = _azure_core_client__WEBPACK_IMPORTED_MODULE_0__.createSerializer(_models_mappers__WEBPACK_IMPORTED_MODULE_1__, /* isXml */ false);\nconst countOperationSpec = {\n    path: \"/docs/$count\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: { type: { name: \"Number\" } },\n        },\n        default: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse,\n        },\n    },\n    queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.indexName],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept],\n    serializer,\n};\nconst searchGetOperationSpec = {\n    path: \"/docs\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.SearchDocumentsResult,\n        },\n        default: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse,\n        },\n    },\n    queryParameters: [\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.searchText,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.includeTotalResultCount,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.facets,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.filter,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.highlightFields,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.highlightPostTag,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.highlightPreTag,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.minimumCoverage,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.orderBy,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.queryType,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.scoringParameters,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.scoringProfile,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.searchFields,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.searchMode,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.scoringStatistics,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.sessionId,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.select,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.skip,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.top,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.semanticConfiguration,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.semanticErrorHandling,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.semanticMaxWaitInMilliseconds,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.answers,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.captions,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.semanticQuery,\n    ],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.indexName],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept],\n    serializer,\n};\nconst searchPostOperationSpec = {\n    path: \"/docs/search.post.search\",\n    httpMethod: \"POST\",\n    responses: {\n        200: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.SearchDocumentsResult,\n        },\n        default: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse,\n        },\n    },\n    requestBody: _models_parameters__WEBPACK_IMPORTED_MODULE_2__.searchRequest,\n    queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.indexName],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.contentType],\n    mediaType: \"json\",\n    serializer,\n};\nconst getOperationSpec = {\n    path: \"/docs('{key}')\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: {\n                type: { name: \"Dictionary\", value: { type: { name: \"any\" } } },\n            },\n        },\n        default: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse,\n        },\n    },\n    queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.selectedFields],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.indexName, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.key],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept],\n    serializer,\n};\nconst suggestGetOperationSpec = {\n    path: \"/docs/search.suggest\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.SuggestDocumentsResult,\n        },\n        default: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse,\n        },\n    },\n    queryParameters: [\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.searchText1,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.suggesterName,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.filter1,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.useFuzzyMatching,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.highlightPostTag1,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.highlightPreTag1,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.minimumCoverage1,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.orderBy1,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.searchFields1,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.select1,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.top1,\n    ],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.indexName],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept],\n    serializer,\n};\nconst suggestPostOperationSpec = {\n    path: \"/docs/search.post.suggest\",\n    httpMethod: \"POST\",\n    responses: {\n        200: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.SuggestDocumentsResult,\n        },\n        default: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse,\n        },\n    },\n    requestBody: _models_parameters__WEBPACK_IMPORTED_MODULE_2__.suggestRequest,\n    queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.indexName],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.contentType],\n    mediaType: \"json\",\n    serializer,\n};\nconst indexOperationSpec = {\n    path: \"/docs/search.index\",\n    httpMethod: \"POST\",\n    responses: {\n        200: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.IndexDocumentsResult,\n        },\n        207: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.IndexDocumentsResult,\n        },\n        default: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse,\n        },\n    },\n    requestBody: _models_parameters__WEBPACK_IMPORTED_MODULE_2__.batch,\n    queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.indexName],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.contentType],\n    mediaType: \"json\",\n    serializer,\n};\nconst autocompleteGetOperationSpec = {\n    path: \"/docs/search.autocomplete\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.AutocompleteResult,\n        },\n        default: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse,\n        },\n    },\n    queryParameters: [\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.searchText1,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.suggesterName,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.autocompleteMode,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.filter2,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.useFuzzyMatching1,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.highlightPostTag2,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.highlightPreTag2,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.minimumCoverage2,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.searchFields2,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.top2,\n    ],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.indexName],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept],\n    serializer,\n};\nconst autocompletePostOperationSpec = {\n    path: \"/docs/search.post.autocomplete\",\n    httpMethod: \"POST\",\n    responses: {\n        200: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.AutocompleteResult,\n        },\n        default: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse,\n        },\n    },\n    requestBody: _models_parameters__WEBPACK_IMPORTED_MODULE_2__.autocompleteRequest,\n    queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.indexName],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.contentType],\n    mediaType: \"json\",\n    serializer,\n};\n//# sourceMappingURL=documents.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/generated/data/operations/documents.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/generated/data/searchClient.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/generated/data/searchClient.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SearchClient: () => (/* binding */ SearchClient)\n/* harmony export */ });\n/* harmony import */ var _azure_core_http_compat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-http-compat */ \"(ssr)/./node_modules/@azure/core-http-compat/dist/esm/index.js\");\n/* harmony import */ var _operations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./operations */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/generated/data/operations/documents.js\");\n/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\n\n/** @internal */\nclass SearchClient extends _azure_core_http_compat__WEBPACK_IMPORTED_MODULE_0__.ExtendedServiceClient {\n    /**\n     * Initializes a new instance of the SearchClient class.\n     * @param endpoint The endpoint URL of the search service.\n     * @param indexName The name of the index.\n     * @param apiVersion Api Version\n     * @param options The parameter options\n     */\n    constructor(endpoint, indexName, apiVersion, options) {\n        var _a, _b;\n        if (endpoint === undefined) {\n            throw new Error(\"'endpoint' cannot be null\");\n        }\n        if (indexName === undefined) {\n            throw new Error(\"'indexName' cannot be null\");\n        }\n        if (apiVersion === undefined) {\n            throw new Error(\"'apiVersion' cannot be null\");\n        }\n        // Initializing default values for options\n        if (!options) {\n            options = {};\n        }\n        const defaults = {\n            requestContentType: \"application/json; charset=utf-8\",\n        };\n        const packageDetails = `azsdk-js-search-documents/12.1.0`;\n        const userAgentPrefix = options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n            ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n            : `${packageDetails}`;\n        const optionsWithDefaults = Object.assign(Object.assign(Object.assign({}, defaults), options), { userAgentOptions: {\n                userAgentPrefix,\n            }, endpoint: (_b = (_a = options.endpoint) !== null && _a !== void 0 ? _a : options.baseUri) !== null && _b !== void 0 ? _b : \"{endpoint}/indexes('{indexName}')\" });\n        super(optionsWithDefaults);\n        // Parameter assignments\n        this.endpoint = endpoint;\n        this.indexName = indexName;\n        this.apiVersion = apiVersion;\n        this.documents = new _operations__WEBPACK_IMPORTED_MODULE_1__.DocumentsImpl(this);\n        this.addCustomApiVersionPolicy(apiVersion);\n    }\n    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n    addCustomApiVersionPolicy(apiVersion) {\n        if (!apiVersion) {\n            return;\n        }\n        const apiVersionPolicy = {\n            name: \"CustomApiVersionPolicy\",\n            async sendRequest(request, next) {\n                const param = request.url.split(\"?\");\n                if (param.length > 1) {\n                    const newParams = param[1].split(\"&\").map((item) => {\n                        if (item.indexOf(\"api-version\") > -1) {\n                            return \"api-version=\" + apiVersion;\n                        }\n                        else {\n                            return item;\n                        }\n                    });\n                    request.url = param[0] + \"?\" + newParams.join(\"&\");\n                }\n                return next(request);\n            },\n        };\n        this.pipeline.addPolicy(apiVersionPolicy);\n    }\n}\n//# sourceMappingURL=searchClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL3NlYXJjaC1kb2N1bWVudHMvZGlzdC1lc20vc3JjL2dlbmVyYXRlZC9kYXRhL3NlYXJjaENsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUMwRDtBQUNiO0FBQzdDO0FBQ08sMkJBQTJCLDBFQUFvQztBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1EO0FBQ25EO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiwwQ0FBMEMsRUFBRSxlQUFlO0FBQzVFLGlCQUFpQixlQUFlO0FBQ2hDLGdGQUFnRix5QkFBeUI7QUFDekc7QUFDQSxhQUFhLCtIQUErSCxTQUFTLFdBQVcsVUFBVSxLQUFLO0FBQy9LO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsc0RBQWE7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxzZWFyY2gtZG9jdW1lbnRzXFxkaXN0LWVzbVxcc3JjXFxnZW5lcmF0ZWRcXGRhdGFcXHNlYXJjaENsaWVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKlxuICogQ29kZSBnZW5lcmF0ZWQgYnkgTWljcm9zb2Z0IChSKSBBdXRvUmVzdCBDb2RlIEdlbmVyYXRvci5cbiAqIENoYW5nZXMgbWF5IGNhdXNlIGluY29ycmVjdCBiZWhhdmlvciBhbmQgd2lsbCBiZSBsb3N0IGlmIHRoZSBjb2RlIGlzIHJlZ2VuZXJhdGVkLlxuICovXG5pbXBvcnQgKiBhcyBjb3JlSHR0cENvbXBhdCBmcm9tIFwiQGF6dXJlL2NvcmUtaHR0cC1jb21wYXRcIjtcbmltcG9ydCB7IERvY3VtZW50c0ltcGwgfSBmcm9tIFwiLi9vcGVyYXRpb25zXCI7XG4vKiogQGludGVybmFsICovXG5leHBvcnQgY2xhc3MgU2VhcmNoQ2xpZW50IGV4dGVuZHMgY29yZUh0dHBDb21wYXQuRXh0ZW5kZWRTZXJ2aWNlQ2xpZW50IHtcbiAgICAvKipcbiAgICAgKiBJbml0aWFsaXplcyBhIG5ldyBpbnN0YW5jZSBvZiB0aGUgU2VhcmNoQ2xpZW50IGNsYXNzLlxuICAgICAqIEBwYXJhbSBlbmRwb2ludCBUaGUgZW5kcG9pbnQgVVJMIG9mIHRoZSBzZWFyY2ggc2VydmljZS5cbiAgICAgKiBAcGFyYW0gaW5kZXhOYW1lIFRoZSBuYW1lIG9mIHRoZSBpbmRleC5cbiAgICAgKiBAcGFyYW0gYXBpVmVyc2lvbiBBcGkgVmVyc2lvblxuICAgICAqIEBwYXJhbSBvcHRpb25zIFRoZSBwYXJhbWV0ZXIgb3B0aW9uc1xuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGVuZHBvaW50LCBpbmRleE5hbWUsIGFwaVZlcnNpb24sIG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgaWYgKGVuZHBvaW50ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIidlbmRwb2ludCcgY2Fubm90IGJlIG51bGxcIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGluZGV4TmFtZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCInaW5kZXhOYW1lJyBjYW5ub3QgYmUgbnVsbFwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYXBpVmVyc2lvbiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCInYXBpVmVyc2lvbicgY2Fubm90IGJlIG51bGxcIik7XG4gICAgICAgIH1cbiAgICAgICAgLy8gSW5pdGlhbGl6aW5nIGRlZmF1bHQgdmFsdWVzIGZvciBvcHRpb25zXG4gICAgICAgIGlmICghb3B0aW9ucykge1xuICAgICAgICAgICAgb3B0aW9ucyA9IHt9O1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGRlZmF1bHRzID0ge1xuICAgICAgICAgICAgcmVxdWVzdENvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLThcIixcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgcGFja2FnZURldGFpbHMgPSBgYXpzZGstanMtc2VhcmNoLWRvY3VtZW50cy8xMi4xLjBgO1xuICAgICAgICBjb25zdCB1c2VyQWdlbnRQcmVmaXggPSBvcHRpb25zLnVzZXJBZ2VudE9wdGlvbnMgJiYgb3B0aW9ucy51c2VyQWdlbnRPcHRpb25zLnVzZXJBZ2VudFByZWZpeFxuICAgICAgICAgICAgPyBgJHtvcHRpb25zLnVzZXJBZ2VudE9wdGlvbnMudXNlckFnZW50UHJlZml4fSAke3BhY2thZ2VEZXRhaWxzfWBcbiAgICAgICAgICAgIDogYCR7cGFja2FnZURldGFpbHN9YDtcbiAgICAgICAgY29uc3Qgb3B0aW9uc1dpdGhEZWZhdWx0cyA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBkZWZhdWx0cyksIG9wdGlvbnMpLCB7IHVzZXJBZ2VudE9wdGlvbnM6IHtcbiAgICAgICAgICAgICAgICB1c2VyQWdlbnRQcmVmaXgsXG4gICAgICAgICAgICB9LCBlbmRwb2ludDogKF9iID0gKF9hID0gb3B0aW9ucy5lbmRwb2ludCkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogb3B0aW9ucy5iYXNlVXJpKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBcIntlbmRwb2ludH0vaW5kZXhlcygne2luZGV4TmFtZX0nKVwiIH0pO1xuICAgICAgICBzdXBlcihvcHRpb25zV2l0aERlZmF1bHRzKTtcbiAgICAgICAgLy8gUGFyYW1ldGVyIGFzc2lnbm1lbnRzXG4gICAgICAgIHRoaXMuZW5kcG9pbnQgPSBlbmRwb2ludDtcbiAgICAgICAgdGhpcy5pbmRleE5hbWUgPSBpbmRleE5hbWU7XG4gICAgICAgIHRoaXMuYXBpVmVyc2lvbiA9IGFwaVZlcnNpb247XG4gICAgICAgIHRoaXMuZG9jdW1lbnRzID0gbmV3IERvY3VtZW50c0ltcGwodGhpcyk7XG4gICAgICAgIHRoaXMuYWRkQ3VzdG9tQXBpVmVyc2lvblBvbGljeShhcGlWZXJzaW9uKTtcbiAgICB9XG4gICAgLyoqIEEgZnVuY3Rpb24gdGhhdCBhZGRzIGEgcG9saWN5IHRoYXQgc2V0cyB0aGUgYXBpLXZlcnNpb24gKG9yIGVxdWl2YWxlbnQpIHRvIHJlZmxlY3QgdGhlIGxpYnJhcnkgdmVyc2lvbi4gKi9cbiAgICBhZGRDdXN0b21BcGlWZXJzaW9uUG9saWN5KGFwaVZlcnNpb24pIHtcbiAgICAgICAgaWYgKCFhcGlWZXJzaW9uKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYXBpVmVyc2lvblBvbGljeSA9IHtcbiAgICAgICAgICAgIG5hbWU6IFwiQ3VzdG9tQXBpVmVyc2lvblBvbGljeVwiLFxuICAgICAgICAgICAgYXN5bmMgc2VuZFJlcXVlc3QocmVxdWVzdCwgbmV4dCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHBhcmFtID0gcmVxdWVzdC51cmwuc3BsaXQoXCI/XCIpO1xuICAgICAgICAgICAgICAgIGlmIChwYXJhbS5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld1BhcmFtcyA9IHBhcmFtWzFdLnNwbGl0KFwiJlwiKS5tYXAoKGl0ZW0pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpdGVtLmluZGV4T2YoXCJhcGktdmVyc2lvblwiKSA+IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFwiYXBpLXZlcnNpb249XCIgKyBhcGlWZXJzaW9uO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGl0ZW07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICByZXF1ZXN0LnVybCA9IHBhcmFtWzBdICsgXCI/XCIgKyBuZXdQYXJhbXMuam9pbihcIiZcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBuZXh0KHJlcXVlc3QpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5waXBlbGluZS5hZGRQb2xpY3koYXBpVmVyc2lvblBvbGljeSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VhcmNoQ2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/generated/data/searchClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/geographyPoint.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/geographyPoint.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GeographyPoint)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nconst WorldGeodeticSystem1984 = \"EPSG:4326\"; // See https://epsg.io/4326\n/**\n * Represents a geographic point in global coordinates.\n */\nclass GeographyPoint {\n    /**\n     * Constructs a new instance of GeographyPoint given\n     * the specified coordinates.\n     * @param geographyPoint - object with longitude and latitude values in decimal\n     */\n    constructor(geographyPoint) {\n        this.longitude = geographyPoint.longitude;\n        this.latitude = geographyPoint.latitude;\n    }\n    /**\n     * Used to serialize to a GeoJSON Point.\n     */\n    toJSON() {\n        return {\n            type: \"Point\",\n            coordinates: [this.longitude, this.latitude],\n            crs: { type: \"name\", properties: { name: WorldGeodeticSystem1984 } },\n        };\n    }\n}\n//# sourceMappingURL=geographyPoint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL3NlYXJjaC1kb2N1bWVudHMvZGlzdC1lc20vc3JjL2dlb2dyYXBoeVBvaW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsNEJBQTRCLGlDQUFpQztBQUNoRjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxoZWxsby12b2ljZVxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXHNlYXJjaC1kb2N1bWVudHNcXGRpc3QtZXNtXFxzcmNcXGdlb2dyYXBoeVBvaW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuY29uc3QgV29ybGRHZW9kZXRpY1N5c3RlbTE5ODQgPSBcIkVQU0c6NDMyNlwiOyAvLyBTZWUgaHR0cHM6Ly9lcHNnLmlvLzQzMjZcbi8qKlxuICogUmVwcmVzZW50cyBhIGdlb2dyYXBoaWMgcG9pbnQgaW4gZ2xvYmFsIGNvb3JkaW5hdGVzLlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHZW9ncmFwaHlQb2ludCB7XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0cyBhIG5ldyBpbnN0YW5jZSBvZiBHZW9ncmFwaHlQb2ludCBnaXZlblxuICAgICAqIHRoZSBzcGVjaWZpZWQgY29vcmRpbmF0ZXMuXG4gICAgICogQHBhcmFtIGdlb2dyYXBoeVBvaW50IC0gb2JqZWN0IHdpdGggbG9uZ2l0dWRlIGFuZCBsYXRpdHVkZSB2YWx1ZXMgaW4gZGVjaW1hbFxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGdlb2dyYXBoeVBvaW50KSB7XG4gICAgICAgIHRoaXMubG9uZ2l0dWRlID0gZ2VvZ3JhcGh5UG9pbnQubG9uZ2l0dWRlO1xuICAgICAgICB0aGlzLmxhdGl0dWRlID0gZ2VvZ3JhcGh5UG9pbnQubGF0aXR1ZGU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFVzZWQgdG8gc2VyaWFsaXplIHRvIGEgR2VvSlNPTiBQb2ludC5cbiAgICAgKi9cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB0eXBlOiBcIlBvaW50XCIsXG4gICAgICAgICAgICBjb29yZGluYXRlczogW3RoaXMubG9uZ2l0dWRlLCB0aGlzLmxhdGl0dWRlXSxcbiAgICAgICAgICAgIGNyczogeyB0eXBlOiBcIm5hbWVcIiwgcHJvcGVydGllczogeyBuYW1lOiBXb3JsZEdlb2RldGljU3lzdGVtMTk4NCB9IH0sXG4gICAgICAgIH07XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2VvZ3JhcGh5UG9pbnQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/geographyPoint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/indexDocumentsBatch.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/indexDocumentsBatch.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IndexDocumentsBatch: () => (/* binding */ IndexDocumentsBatch)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Class used to perform batch operations\n * with multiple documents to the index.\n */\nclass IndexDocumentsBatch {\n    constructor(actions = []) {\n        this.actions = actions;\n    }\n    /**\n     * Upload an array of documents to the index.\n     * @param documents - The documents to upload.\n     */\n    upload(documents) {\n        const batch = documents.map((doc) => {\n            return Object.assign(Object.assign({}, doc), { __actionType: \"upload\" });\n        });\n        this.actions.push(...batch);\n    }\n    /**\n     * Update a set of documents in the index.\n     * For more details about how merging works, see https://docs.microsoft.com/en-us/rest/api/searchservice/AddUpdate-or-Delete-Documents\n     * @param documents - The updated documents.\n     */\n    merge(documents) {\n        const batch = documents.map((doc) => {\n            return Object.assign(Object.assign({}, doc), { __actionType: \"merge\" });\n        });\n        this.actions.push(...batch);\n    }\n    /**\n     * Update a set of documents in the index or uploads them if they don't exist.\n     * For more details about how merging works, see https://docs.microsoft.com/en-us/rest/api/searchservice/AddUpdate-or-Delete-Documents\n     * @param documents - The new/updated documents.\n     */\n    mergeOrUpload(documents) {\n        const batch = documents.map((doc) => {\n            return Object.assign(Object.assign({}, doc), { __actionType: \"mergeOrUpload\" });\n        });\n        this.actions.push(...batch);\n    }\n    delete(keyNameOrDocuments, keyValues) {\n        if (keyValues) {\n            const keyName = keyNameOrDocuments;\n            const batch = keyValues.map((keyValue) => {\n                return {\n                    __actionType: \"delete\",\n                    [keyName]: keyValue,\n                };\n            });\n            this.actions.push(...batch);\n        }\n        else {\n            const documents = keyNameOrDocuments;\n            const batch = documents.map((document) => {\n                return Object.assign({ __actionType: \"delete\" }, document);\n            });\n            this.actions.push(...batch);\n        }\n    }\n}\n//# sourceMappingURL=indexDocumentsBatch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL3NlYXJjaC1kb2N1bWVudHMvZGlzdC1lc20vc3JjL2luZGV4RG9jdW1lbnRzQmF0Y2guanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELFVBQVUsd0JBQXdCO0FBQ25GLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsVUFBVSx1QkFBdUI7QUFDbEYsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCxVQUFVLCtCQUErQjtBQUMxRixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1Qyx3QkFBd0I7QUFDL0QsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxzZWFyY2gtZG9jdW1lbnRzXFxkaXN0LWVzbVxcc3JjXFxpbmRleERvY3VtZW50c0JhdGNoLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuLyoqXG4gKiBDbGFzcyB1c2VkIHRvIHBlcmZvcm0gYmF0Y2ggb3BlcmF0aW9uc1xuICogd2l0aCBtdWx0aXBsZSBkb2N1bWVudHMgdG8gdGhlIGluZGV4LlxuICovXG5leHBvcnQgY2xhc3MgSW5kZXhEb2N1bWVudHNCYXRjaCB7XG4gICAgY29uc3RydWN0b3IoYWN0aW9ucyA9IFtdKSB7XG4gICAgICAgIHRoaXMuYWN0aW9ucyA9IGFjdGlvbnM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFVwbG9hZCBhbiBhcnJheSBvZiBkb2N1bWVudHMgdG8gdGhlIGluZGV4LlxuICAgICAqIEBwYXJhbSBkb2N1bWVudHMgLSBUaGUgZG9jdW1lbnRzIHRvIHVwbG9hZC5cbiAgICAgKi9cbiAgICB1cGxvYWQoZG9jdW1lbnRzKSB7XG4gICAgICAgIGNvbnN0IGJhdGNoID0gZG9jdW1lbnRzLm1hcCgoZG9jKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBkb2MpLCB7IF9fYWN0aW9uVHlwZTogXCJ1cGxvYWRcIiB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuYWN0aW9ucy5wdXNoKC4uLmJhdGNoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVXBkYXRlIGEgc2V0IG9mIGRvY3VtZW50cyBpbiB0aGUgaW5kZXguXG4gICAgICogRm9yIG1vcmUgZGV0YWlscyBhYm91dCBob3cgbWVyZ2luZyB3b3Jrcywgc2VlIGh0dHBzOi8vZG9jcy5taWNyb3NvZnQuY29tL2VuLXVzL3Jlc3QvYXBpL3NlYXJjaHNlcnZpY2UvQWRkVXBkYXRlLW9yLURlbGV0ZS1Eb2N1bWVudHNcbiAgICAgKiBAcGFyYW0gZG9jdW1lbnRzIC0gVGhlIHVwZGF0ZWQgZG9jdW1lbnRzLlxuICAgICAqL1xuICAgIG1lcmdlKGRvY3VtZW50cykge1xuICAgICAgICBjb25zdCBiYXRjaCA9IGRvY3VtZW50cy5tYXAoKGRvYykgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgZG9jKSwgeyBfX2FjdGlvblR5cGU6IFwibWVyZ2VcIiB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuYWN0aW9ucy5wdXNoKC4uLmJhdGNoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVXBkYXRlIGEgc2V0IG9mIGRvY3VtZW50cyBpbiB0aGUgaW5kZXggb3IgdXBsb2FkcyB0aGVtIGlmIHRoZXkgZG9uJ3QgZXhpc3QuXG4gICAgICogRm9yIG1vcmUgZGV0YWlscyBhYm91dCBob3cgbWVyZ2luZyB3b3Jrcywgc2VlIGh0dHBzOi8vZG9jcy5taWNyb3NvZnQuY29tL2VuLXVzL3Jlc3QvYXBpL3NlYXJjaHNlcnZpY2UvQWRkVXBkYXRlLW9yLURlbGV0ZS1Eb2N1bWVudHNcbiAgICAgKiBAcGFyYW0gZG9jdW1lbnRzIC0gVGhlIG5ldy91cGRhdGVkIGRvY3VtZW50cy5cbiAgICAgKi9cbiAgICBtZXJnZU9yVXBsb2FkKGRvY3VtZW50cykge1xuICAgICAgICBjb25zdCBiYXRjaCA9IGRvY3VtZW50cy5tYXAoKGRvYykgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgZG9jKSwgeyBfX2FjdGlvblR5cGU6IFwibWVyZ2VPclVwbG9hZFwiIH0pO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5hY3Rpb25zLnB1c2goLi4uYmF0Y2gpO1xuICAgIH1cbiAgICBkZWxldGUoa2V5TmFtZU9yRG9jdW1lbnRzLCBrZXlWYWx1ZXMpIHtcbiAgICAgICAgaWYgKGtleVZhbHVlcykge1xuICAgICAgICAgICAgY29uc3Qga2V5TmFtZSA9IGtleU5hbWVPckRvY3VtZW50cztcbiAgICAgICAgICAgIGNvbnN0IGJhdGNoID0ga2V5VmFsdWVzLm1hcCgoa2V5VmFsdWUpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBfX2FjdGlvblR5cGU6IFwiZGVsZXRlXCIsXG4gICAgICAgICAgICAgICAgICAgIFtrZXlOYW1lXToga2V5VmFsdWUsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5hY3Rpb25zLnB1c2goLi4uYmF0Y2gpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgZG9jdW1lbnRzID0ga2V5TmFtZU9yRG9jdW1lbnRzO1xuICAgICAgICAgICAgY29uc3QgYmF0Y2ggPSBkb2N1bWVudHMubWFwKChkb2N1bWVudCkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHsgX19hY3Rpb25UeXBlOiBcImRlbGV0ZVwiIH0sIGRvY3VtZW50KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5hY3Rpb25zLnB1c2goLi4uYmF0Y2gpO1xuICAgICAgICB9XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXhEb2N1bWVudHNCYXRjaC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/indexDocumentsBatch.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/logger.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/logger.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/logger */ \"(ssr)/./node_modules/@azure/logger/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * The `@azure/logger` configuration for this package.\n */\nconst logger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_0__.createClientLogger)(\"search\");\n//# sourceMappingURL=logger.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL3NlYXJjaC1kb2N1bWVudHMvZGlzdC1lc20vc3JjL2xvZ2dlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDbUQ7QUFDbkQ7QUFDQTtBQUNBO0FBQ08sZUFBZSxpRUFBa0I7QUFDeEMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxzZWFyY2gtZG9jdW1lbnRzXFxkaXN0LWVzbVxcc3JjXFxsb2dnZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgeyBjcmVhdGVDbGllbnRMb2dnZXIgfSBmcm9tIFwiQGF6dXJlL2xvZ2dlclwiO1xuLyoqXG4gKiBUaGUgYEBhenVyZS9sb2dnZXJgIGNvbmZpZ3VyYXRpb24gZm9yIHRoaXMgcGFja2FnZS5cbiAqL1xuZXhwb3J0IGNvbnN0IGxvZ2dlciA9IGNyZWF0ZUNsaWVudExvZ2dlcihcInNlYXJjaFwiKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvZ2dlci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/logger.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/odataMetadataPolicy.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/odataMetadataPolicy.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createOdataMetadataPolicy: () => (/* binding */ createOdataMetadataPolicy)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nconst AcceptHeaderName = \"Accept\";\nconst odataMetadataPolicy = \"OdataMetadataPolicy\";\n/**\n * A policy factory for setting the Accept header to ignore odata metadata\n * @internal\n */\nfunction createOdataMetadataPolicy(metadataLevel) {\n    return {\n        name: odataMetadataPolicy,\n        async sendRequest(request, next) {\n            request.headers.set(AcceptHeaderName, `application/json;odata.metadata=${metadataLevel}`);\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=odataMetadataPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL3NlYXJjaC1kb2N1bWVudHMvZGlzdC1lc20vc3JjL29kYXRhTWV0YWRhdGFQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLG9FQUFvRSxpQkFBaUIsY0FBYztBQUNuRztBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxzZWFyY2gtZG9jdW1lbnRzXFxkaXN0LWVzbVxcc3JjXFxvZGF0YU1ldGFkYXRhUG9saWN5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuY29uc3QgQWNjZXB0SGVhZGVyTmFtZSA9IFwiQWNjZXB0XCI7XG5jb25zdCBvZGF0YU1ldGFkYXRhUG9saWN5ID0gXCJPZGF0YU1ldGFkYXRhUG9saWN5XCI7XG4vKipcbiAqIEEgcG9saWN5IGZhY3RvcnkgZm9yIHNldHRpbmcgdGhlIEFjY2VwdCBoZWFkZXIgdG8gaWdub3JlIG9kYXRhIG1ldGFkYXRhXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU9kYXRhTWV0YWRhdGFQb2xpY3kobWV0YWRhdGFMZXZlbCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IG9kYXRhTWV0YWRhdGFQb2xpY3ksXG4gICAgICAgIGFzeW5jIHNlbmRSZXF1ZXN0KHJlcXVlc3QsIG5leHQpIHtcbiAgICAgICAgICAgIHJlcXVlc3QuaGVhZGVycy5zZXQoQWNjZXB0SGVhZGVyTmFtZSwgYGFwcGxpY2F0aW9uL2pzb247b2RhdGEubWV0YWRhdGE9JHttZXRhZGF0YUxldmVsfWApO1xuICAgICAgICAgICAgcmV0dXJuIG5leHQocmVxdWVzdCk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9kYXRhTWV0YWRhdGFQb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/odataMetadataPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/searchApiKeyCredentialPolicy.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/searchApiKeyCredentialPolicy.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSearchApiKeyCredentialPolicy: () => (/* binding */ createSearchApiKeyCredentialPolicy)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nconst API_KEY_HEADER_NAME = \"api-key\";\nconst searchApiKeyCredentialPolicy = \"SearchApiKeyCredentialPolicy\";\n/**\n * Create an HTTP pipeline policy to authenticate a request\n * using an `AzureKeyCredential` for Azure Cognitive Search\n */\nfunction createSearchApiKeyCredentialPolicy(credential) {\n    return {\n        name: searchApiKeyCredentialPolicy,\n        async sendRequest(request, next) {\n            if (!request.headers.has(API_KEY_HEADER_NAME)) {\n                request.headers.set(API_KEY_HEADER_NAME, credential.key);\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=searchApiKeyCredentialPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL3NlYXJjaC1kb2N1bWVudHMvZGlzdC1lc20vc3JjL3NlYXJjaEFwaUtleUNyZWRlbnRpYWxQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxsaWZlY1xcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxoZWxsby12b2ljZVxcbm9kZV9tb2R1bGVzXFxAYXp1cmVcXHNlYXJjaC1kb2N1bWVudHNcXGRpc3QtZXNtXFxzcmNcXHNlYXJjaEFwaUtleUNyZWRlbnRpYWxQb2xpY3kuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5jb25zdCBBUElfS0VZX0hFQURFUl9OQU1FID0gXCJhcGkta2V5XCI7XG5jb25zdCBzZWFyY2hBcGlLZXlDcmVkZW50aWFsUG9saWN5ID0gXCJTZWFyY2hBcGlLZXlDcmVkZW50aWFsUG9saWN5XCI7XG4vKipcbiAqIENyZWF0ZSBhbiBIVFRQIHBpcGVsaW5lIHBvbGljeSB0byBhdXRoZW50aWNhdGUgYSByZXF1ZXN0XG4gKiB1c2luZyBhbiBgQXp1cmVLZXlDcmVkZW50aWFsYCBmb3IgQXp1cmUgQ29nbml0aXZlIFNlYXJjaFxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU2VhcmNoQXBpS2V5Q3JlZGVudGlhbFBvbGljeShjcmVkZW50aWFsKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogc2VhcmNoQXBpS2V5Q3JlZGVudGlhbFBvbGljeSxcbiAgICAgICAgYXN5bmMgc2VuZFJlcXVlc3QocmVxdWVzdCwgbmV4dCkge1xuICAgICAgICAgICAgaWYgKCFyZXF1ZXN0LmhlYWRlcnMuaGFzKEFQSV9LRVlfSEVBREVSX05BTUUpKSB7XG4gICAgICAgICAgICAgICAgcmVxdWVzdC5oZWFkZXJzLnNldChBUElfS0VZX0hFQURFUl9OQU1FLCBjcmVkZW50aWFsLmtleSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbmV4dChyZXF1ZXN0KTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VhcmNoQXBpS2V5Q3JlZGVudGlhbFBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/searchApiKeyCredentialPolicy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/searchAudience.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/searchAudience.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KnownSearchAudience: () => (/* binding */ KnownSearchAudience)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Known values for Search Audience\n */\nvar KnownSearchAudience;\n(function (KnownSearchAudience) {\n    /**\n     * Audience for Azure China\n     */\n    KnownSearchAudience[\"AzureChina\"] = \"https://search.azure.cn\";\n    /**\n     * Audience for Azure Government\n     */\n    KnownSearchAudience[\"AzureGovernment\"] = \"https://search.azure.us\";\n    /**\n     * Audience for Azure Public\n     */\n    KnownSearchAudience[\"AzurePublicCloud\"] = \"https://search.azure.com\";\n})(KnownSearchAudience || (KnownSearchAudience = {}));\n//# sourceMappingURL=searchAudience.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL3NlYXJjaC1kb2N1bWVudHMvZGlzdC1lc20vc3JjL3NlYXJjaEF1ZGllbmNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsa0RBQWtEO0FBQ25EIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGhlbGxvLXZvaWNlXFxub2RlX21vZHVsZXNcXEBhenVyZVxcc2VhcmNoLWRvY3VtZW50c1xcZGlzdC1lc21cXHNyY1xcc2VhcmNoQXVkaWVuY2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG4vKipcbiAqIEtub3duIHZhbHVlcyBmb3IgU2VhcmNoIEF1ZGllbmNlXG4gKi9cbmV4cG9ydCB2YXIgS25vd25TZWFyY2hBdWRpZW5jZTtcbihmdW5jdGlvbiAoS25vd25TZWFyY2hBdWRpZW5jZSkge1xuICAgIC8qKlxuICAgICAqIEF1ZGllbmNlIGZvciBBenVyZSBDaGluYVxuICAgICAqL1xuICAgIEtub3duU2VhcmNoQXVkaWVuY2VbXCJBenVyZUNoaW5hXCJdID0gXCJodHRwczovL3NlYXJjaC5henVyZS5jblwiO1xuICAgIC8qKlxuICAgICAqIEF1ZGllbmNlIGZvciBBenVyZSBHb3Zlcm5tZW50XG4gICAgICovXG4gICAgS25vd25TZWFyY2hBdWRpZW5jZVtcIkF6dXJlR292ZXJubWVudFwiXSA9IFwiaHR0cHM6Ly9zZWFyY2guYXp1cmUudXNcIjtcbiAgICAvKipcbiAgICAgKiBBdWRpZW5jZSBmb3IgQXp1cmUgUHVibGljXG4gICAgICovXG4gICAgS25vd25TZWFyY2hBdWRpZW5jZVtcIkF6dXJlUHVibGljQ2xvdWRcIl0gPSBcImh0dHBzOi8vc2VhcmNoLmF6dXJlLmNvbVwiO1xufSkoS25vd25TZWFyY2hBdWRpZW5jZSB8fCAoS25vd25TZWFyY2hBdWRpZW5jZSA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZWFyY2hBdWRpZW5jZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/searchAudience.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/searchClient.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/searchClient.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SearchClient: () => (/* binding */ SearchClient)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _azure_core_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-auth */ \"(ssr)/./node_modules/@azure/core-auth/dist/esm/index.js\");\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(ssr)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n/* harmony import */ var _base64__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./base64 */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/base64.js\");\n/* harmony import */ var _generated_data_searchClient__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./generated/data/searchClient */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/generated/data/searchClient.js\");\n/* harmony import */ var _indexDocumentsBatch__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./indexDocumentsBatch */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/indexDocumentsBatch.js\");\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./logger */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/logger.js\");\n/* harmony import */ var _odataMetadataPolicy__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./odataMetadataPolicy */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/odataMetadataPolicy.js\");\n/* harmony import */ var _searchApiKeyCredentialPolicy__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./searchApiKeyCredentialPolicy */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/searchApiKeyCredentialPolicy.js\");\n/* harmony import */ var _searchAudience__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./searchAudience */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/searchAudience.js\");\n/* harmony import */ var _serialization__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./serialization */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/serialization.js\");\n/* harmony import */ var _serviceUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./serviceUtils */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/serviceUtils.js\");\n/* harmony import */ var _tracing__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./tracing */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/tracing.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/// <reference lib=\"esnext.asynciterable\" />\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Class used to perform operations against a search index,\n * including querying documents in the index as well as\n * adding, updating, and removing them.\n */\nclass SearchClient {\n    /**\n     * Creates an instance of SearchClient.\n     *\n     * Example usage:\n     * ```ts\n     * const { SearchClient, AzureKeyCredential } = require(\"@azure/search-documents\");\n     *\n     * const client = new SearchClient(\n     *   \"<endpoint>\",\n     *   \"<indexName>\",\n     *   new AzureKeyCredential(\"<Admin Key>\")\n     * );\n     * ```\n     *\n     * Optionally, the type of the model can be used to enable strong typing and type hints:\n     * ```ts\n     * type TModel = {\n     *   keyName: string;\n     *   field1?: string | null;\n     *   field2?: { anotherField?: string | null } | null;\n     * };\n     *\n     * const client = new SearchClient<TModel>(\n     *   ...\n     * );\n     * ```\n     *\n     * @param endpoint - The endpoint of the search service\n     * @param indexName - The name of the index\n     * @param credential - Used to authenticate requests to the service.\n     * @param options - Used to configure the Search client.\n     *\n     * @typeParam TModel - An optional type that represents the documents stored in\n     * the search index. For the best typing experience, all non-key fields should\n     * be marked optional and nullable, and the key property should have the\n     * non-nullable type `string`.\n     */\n    constructor(endpoint, indexName, credential, options = {}) {\n        var _a, _b;\n        /// Maintenance note: when updating supported API versions,\n        /// the ContinuationToken logic will need to be updated below.\n        /**\n         *  The service version to use when communicating with the service.\n         */\n        this.serviceVersion = _serviceUtils__WEBPACK_IMPORTED_MODULE_2__.defaultServiceVersion;\n        /**\n         * The API version to use when communicating with the service.\n         * @deprecated use {@Link serviceVersion} instead\n         */\n        this.apiVersion = _serviceUtils__WEBPACK_IMPORTED_MODULE_2__.defaultServiceVersion;\n        this.endpoint = endpoint;\n        this.indexName = indexName;\n        const internalClientPipelineOptions = Object.assign(Object.assign({}, options), {\n            loggingOptions: {\n                logger: _logger__WEBPACK_IMPORTED_MODULE_3__.logger.info,\n                additionalAllowedHeaderNames: [\n                    \"elapsed-time\",\n                    \"Location\",\n                    \"OData-MaxVersion\",\n                    \"OData-Version\",\n                    \"Prefer\",\n                    \"throttle-reason\",\n                ],\n            },\n        });\n        this.serviceVersion =\n            (_b = (_a = options.serviceVersion) !== null && _a !== void 0 ? _a : options.apiVersion) !== null && _b !== void 0 ? _b : _serviceUtils__WEBPACK_IMPORTED_MODULE_2__.defaultServiceVersion;\n        this.apiVersion = this.serviceVersion;\n        this.client = new _generated_data_searchClient__WEBPACK_IMPORTED_MODULE_4__.SearchClient(this.endpoint, this.indexName, this.serviceVersion, internalClientPipelineOptions);\n        if ((0,_azure_core_auth__WEBPACK_IMPORTED_MODULE_0__.isTokenCredential)(credential)) {\n            const scope = options.audience\n                ? `${options.audience}/.default`\n                : `${_searchAudience__WEBPACK_IMPORTED_MODULE_5__.KnownSearchAudience.AzurePublicCloud}/.default`;\n            this.client.pipeline.addPolicy((0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__.bearerTokenAuthenticationPolicy)({ credential, scopes: scope }));\n        }\n        else {\n            this.client.pipeline.addPolicy((0,_searchApiKeyCredentialPolicy__WEBPACK_IMPORTED_MODULE_6__.createSearchApiKeyCredentialPolicy)(credential));\n        }\n        this.client.pipeline.addPolicy((0,_odataMetadataPolicy__WEBPACK_IMPORTED_MODULE_7__.createOdataMetadataPolicy)(\"none\"));\n    }\n    /**\n     * Retrieves the number of documents in the index.\n     * @param options - Options to the count operation.\n     */\n    async getDocumentsCount(options = {}) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_8__.createSpan)(\"SearchClient-getDocumentsCount\", options);\n        try {\n            let documentsCount = 0;\n            await this.client.documents.count(Object.assign(Object.assign({}, updatedOptions), { onResponse: (rawResponse, flatResponse) => {\n                    documentsCount = Number(rawResponse.bodyAsText);\n                    if (updatedOptions.onResponse) {\n                        updatedOptions.onResponse(rawResponse, flatResponse);\n                    }\n                } }));\n            return documentsCount;\n        }\n        catch (e) {\n            span.setStatus({\n                status: \"error\",\n                error: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Based on a partial searchText from the user, return a list\n     * of potential completion strings based on a specified suggester.\n     * @param searchText - The search text on which to base autocomplete results.\n     * @param suggesterName - The name of the suggester as specified in the suggesters collection that's part of the index definition.\n     * @param options - Options to the autocomplete operation.\n     * @example\n     * ```ts\n     * import {\n     *   AzureKeyCredential,\n     *   SearchClient,\n     *   SearchFieldArray,\n     * } from \"@azure/search-documents\";\n     *\n     * type TModel = {\n     *   key: string;\n     *   azure?: { sdk: string | null } | null;\n     * };\n     *\n     * const client = new SearchClient<TModel>(\n     *   \"endpoint.azure\",\n     *   \"indexName\",\n     *   new AzureKeyCredential(\"key\")\n     * );\n     *\n     * const searchFields: SearchFieldArray<TModel> = [\"azure/sdk\"];\n     *\n     * const autocompleteResult = await client.autocomplete(\n     *   \"searchText\",\n     *   \"suggesterName\",\n     *   { searchFields }\n     * );\n     * ```\n     */\n    async autocomplete(searchText, suggesterName, options = {}) {\n        const { searchFields } = options, nonFieldOptions = (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__rest)(options, [\"searchFields\"]);\n        const fullOptions = Object.assign({ searchText: searchText, suggesterName: suggesterName, searchFields: this.convertSearchFields(searchFields) }, nonFieldOptions);\n        if (!fullOptions.searchText) {\n            throw new RangeError(\"searchText must be provided.\");\n        }\n        if (!fullOptions.suggesterName) {\n            throw new RangeError(\"suggesterName must be provided.\");\n        }\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_8__.createSpan)(\"SearchClient-autocomplete\", options);\n        try {\n            const result = await this.client.documents.autocompletePost(fullOptions, updatedOptions);\n            return result;\n        }\n        catch (e) {\n            span.setStatus({\n                status: \"error\",\n                error: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    async searchDocuments(searchText, options = {}, nextPageParameters = {}) {\n        const _a = options, { includeTotalCount, orderBy, searchFields, select, vectorSearchOptions, semanticSearchOptions } = _a, restOptions = (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__rest)(_a, [\"includeTotalCount\", \"orderBy\", \"searchFields\", \"select\", \"vectorSearchOptions\", \"semanticSearchOptions\"]);\n        const _b = semanticSearchOptions !== null && semanticSearchOptions !== void 0 ? semanticSearchOptions : {}, { configurationName, errorMode, answers, captions } = _b, restSemanticOptions = (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__rest)(_b, [\"configurationName\", \"errorMode\", \"answers\", \"captions\"]);\n        const _c = vectorSearchOptions !== null && vectorSearchOptions !== void 0 ? vectorSearchOptions : {}, { queries, filterMode } = _c, restVectorOptions = (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__rest)(_c, [\"queries\", \"filterMode\"]);\n        const fullOptions = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, restSemanticOptions), restVectorOptions), restOptions), nextPageParameters), { searchFields: this.convertSearchFields(searchFields), select: this.convertSelect(select) || \"*\", orderBy: this.convertOrderBy(orderBy), includeTotalResultCount: includeTotalCount, vectorQueries: queries === null || queries === void 0 ? void 0 : queries.map(this.convertVectorQuery.bind(this)), answers: this.convertQueryAnswers(answers), captions: this.convertQueryCaptions(captions), semanticErrorHandling: errorMode, semanticConfigurationName: configurationName, vectorFilterMode: filterMode });\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_8__.createSpan)(\"SearchClient-searchDocuments\", options);\n        try {\n            const result = await this.client.documents.searchPost(Object.assign(Object.assign({}, fullOptions), { searchText: searchText }), updatedOptions);\n            const _d = result, { results, nextLink, nextPageParameters: resultNextPageParameters, semanticPartialResponseReason: semanticErrorReason, semanticPartialResponseType: semanticSearchResultsType } = _d, restResult = (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__rest)(_d, [\"results\", \"nextLink\", \"nextPageParameters\", \"semanticPartialResponseReason\", \"semanticPartialResponseType\"]);\n            const modifiedResults = _serviceUtils__WEBPACK_IMPORTED_MODULE_2__.generatedSearchResultToPublicSearchResult(results);\n            const converted = Object.assign(Object.assign({}, restResult), { results: modifiedResults, semanticErrorReason,\n                semanticSearchResultsType, continuationToken: this.encodeContinuationToken(nextLink, resultNextPageParameters) });\n            return (0,_serialization__WEBPACK_IMPORTED_MODULE_10__.deserialize)(converted);\n        }\n        catch (e) {\n            span.setStatus({\n                status: \"error\",\n                error: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    listSearchResultsPage(searchText, options = {}, settings = {}) {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__asyncGenerator)(this, arguments, function* listSearchResultsPage_1() {\n            let decodedContinuation = this.decodeContinuationToken(settings.continuationToken);\n            let result = yield (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__await)(this.searchDocuments(searchText, options, decodedContinuation === null || decodedContinuation === void 0 ? void 0 : decodedContinuation.nextPageParameters));\n            yield yield (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__await)(result);\n            // Technically, we should also leverage nextLink, but the generated code\n            // doesn't support this yet.\n            while (result.continuationToken) {\n                decodedContinuation = this.decodeContinuationToken(result.continuationToken);\n                result = yield (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__await)(this.searchDocuments(searchText, options, decodedContinuation === null || decodedContinuation === void 0 ? void 0 : decodedContinuation.nextPageParameters));\n                yield yield (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__await)(result);\n            }\n        });\n    }\n    listSearchResultsAll(firstPage, searchText, options = {}) {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__asyncGenerator)(this, arguments, function* listSearchResultsAll_1() {\n            var _a, e_1, _b, _c;\n            yield (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__await)(yield* (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__asyncDelegator)((0,tslib__WEBPACK_IMPORTED_MODULE_9__.__asyncValues)(firstPage.results)));\n            if (firstPage.continuationToken) {\n                try {\n                    for (var _d = true, _e = (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__asyncValues)(this.listSearchResultsPage(searchText, options, {\n                        continuationToken: firstPage.continuationToken,\n                    })), _f; _f = yield (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__await)(_e.next()), _a = _f.done, !_a; _d = true) {\n                        _c = _f.value;\n                        _d = false;\n                        const page = _c;\n                        yield (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__await)(yield* (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__asyncDelegator)((0,tslib__WEBPACK_IMPORTED_MODULE_9__.__asyncValues)(page.results)));\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (!_d && !_a && (_b = _e.return)) yield (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__await)(_b.call(_e));\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n        });\n    }\n    listSearchResults(firstPage, searchText, options = {}) {\n        const iter = this.listSearchResultsAll(firstPage, searchText, options);\n        return {\n            next() {\n                return iter.next();\n            },\n            [Symbol.asyncIterator]() {\n                return this;\n            },\n            byPage: (settings = {}) => {\n                return this.listSearchResultsPage(searchText, options, settings);\n            },\n        };\n    }\n    /**\n     * Performs a search on the current index given\n     * the specified arguments.\n     * @param searchText - Text to search\n     * @param options - Options for the search operation.\n     * @example\n     * ```ts\n     * import {\n     *   AzureKeyCredential,\n     *   SearchClient,\n     *   SearchFieldArray,\n     * } from \"@azure/search-documents\";\n     *\n     * type TModel = {\n     *   key: string;\n     *   azure?: { sdk: string | null } | null;\n     * };\n     *\n     * const client = new SearchClient<TModel>(\n     *   \"endpoint.azure\",\n     *   \"indexName\",\n     *   new AzureKeyCredential(\"key\")\n     * );\n     *\n     * const select = [\"azure/sdk\"] as const;\n     * const searchFields: SearchFieldArray<TModel> = [\"azure/sdk\"];\n     *\n     * const searchResult = await client.search(\"searchText\", {\n     *   select,\n     *   searchFields,\n     * });\n     * ```\n     */\n    async search(searchText, options) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_8__.createSpan)(\"SearchClient-search\", options);\n        try {\n            const pageResult = await this.searchDocuments(searchText, updatedOptions);\n            return Object.assign(Object.assign({}, pageResult), { results: this.listSearchResults(pageResult, searchText, updatedOptions) });\n        }\n        catch (e) {\n            span.setStatus({\n                status: \"error\",\n                error: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Returns a short list of suggestions based on the searchText\n     * and specified suggester.\n     * @param searchText - The search text to use to suggest documents. Must be at least 1 character, and no more than 100 characters.\n     * @param suggesterName - The name of the suggester as specified in the suggesters collection that's part of the index definition.\n     * @param options - Options for the suggest operation\n     * @example\n     * ```ts\n     * import {\n     *   AzureKeyCredential,\n     *   SearchClient,\n     *   SearchFieldArray,\n     * } from \"@azure/search-documents\";\n     *\n     * type TModel = {\n     *   key: string;\n     *   azure?: { sdk: string | null } | null;\n     * };\n     *\n     * const client = new SearchClient<TModel>(\n     *   \"endpoint.azure\",\n     *   \"indexName\",\n     *   new AzureKeyCredential(\"key\")\n     * );\n     *\n     * const select = [\"azure/sdk\"] as const;\n     * const searchFields: SearchFieldArray<TModel> = [\"azure/sdk\"];\n     *\n     * const suggestResult = await client.suggest(\"searchText\", \"suggesterName\", {\n     *   select,\n     *   searchFields,\n     * });\n     * ```\n     */\n    async suggest(searchText, suggesterName, options = {}) {\n        const { select, searchFields, orderBy } = options, nonFieldOptions = (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__rest)(options, [\"select\", \"searchFields\", \"orderBy\"]);\n        const fullOptions = Object.assign({ searchText: searchText, suggesterName: suggesterName, searchFields: this.convertSearchFields(searchFields), select: this.convertSelect(select), orderBy: this.convertOrderBy(orderBy) }, nonFieldOptions);\n        if (!fullOptions.searchText) {\n            throw new RangeError(\"searchText must be provided.\");\n        }\n        if (!fullOptions.suggesterName) {\n            throw new RangeError(\"suggesterName must be provided.\");\n        }\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_8__.createSpan)(\"SearchClient-suggest\", options);\n        try {\n            const result = await this.client.documents.suggestPost(fullOptions, updatedOptions);\n            const modifiedResult = _serviceUtils__WEBPACK_IMPORTED_MODULE_2__.generatedSuggestDocumentsResultToPublicSuggestDocumentsResult(result);\n            return (0,_serialization__WEBPACK_IMPORTED_MODULE_10__.deserialize)(modifiedResult);\n        }\n        catch (e) {\n            span.setStatus({\n                status: \"error\",\n                error: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Retrieve a particular document from the index by key.\n     * @param key - The primary key value of the document\n     * @param options - Additional options\n     */\n    async getDocument(key, options = {}) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_8__.createSpan)(\"SearchClient-getDocument\", options);\n        try {\n            const result = await this.client.documents.get(key, Object.assign(Object.assign({}, updatedOptions), { selectedFields: updatedOptions.selectedFields }));\n            return (0,_serialization__WEBPACK_IMPORTED_MODULE_10__.deserialize)(result);\n        }\n        catch (e) {\n            span.setStatus({\n                status: \"error\",\n                error: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Perform a set of index modifications (upload, merge, mergeOrUpload, delete)\n     * for the given set of documents.\n     * This operation may partially succeed and not all document operations will\n     * be reflected in the index. If you would like to treat this as an exception,\n     * set the `throwOnAnyFailure` option to true.\n     * For more details about how merging works, see: https://docs.microsoft.com/en-us/rest/api/searchservice/AddUpdate-or-Delete-Documents\n     * @param batch - An array of actions to perform on the index.\n     * @param options - Additional options.\n     */\n    async indexDocuments(\n    // eslint-disable-next-line @azure/azure-sdk/ts-use-interface-parameters\n    batch, options = {}) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_8__.createSpan)(\"SearchClient-indexDocuments\", options);\n        try {\n            let status = 0;\n            const result = await this.client.documents.index({ actions: (0,_serialization__WEBPACK_IMPORTED_MODULE_10__.serialize)(batch.actions) }, Object.assign(Object.assign({}, updatedOptions), { onResponse: (rawResponse, flatResponse) => {\n                    status = rawResponse.status;\n                    if (updatedOptions.onResponse) {\n                        updatedOptions.onResponse(rawResponse, flatResponse);\n                    }\n                } }));\n            if (options.throwOnAnyFailure && status === 207) {\n                throw result;\n            }\n            return result;\n        }\n        catch (e) {\n            span.setStatus({\n                status: \"error\",\n                error: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Upload an array of documents to the index.\n     * @param documents - The documents to upload.\n     * @param options - Additional options.\n     */\n    async uploadDocuments(documents, options = {}) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_8__.createSpan)(\"SearchClient-uploadDocuments\", options);\n        const batch = new _indexDocumentsBatch__WEBPACK_IMPORTED_MODULE_11__.IndexDocumentsBatch();\n        batch.upload(documents);\n        try {\n            return await this.indexDocuments(batch, updatedOptions);\n        }\n        catch (e) {\n            span.setStatus({\n                status: \"error\",\n                error: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Update a set of documents in the index.\n     * For more details about how merging works, see https://docs.microsoft.com/en-us/rest/api/searchservice/AddUpdate-or-Delete-Documents\n     * @param documents - The updated documents.\n     * @param options - Additional options.\n     */\n    async mergeDocuments(documents, options = {}) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_8__.createSpan)(\"SearchClient-mergeDocuments\", options);\n        const batch = new _indexDocumentsBatch__WEBPACK_IMPORTED_MODULE_11__.IndexDocumentsBatch();\n        batch.merge(documents);\n        try {\n            return await this.indexDocuments(batch, updatedOptions);\n        }\n        catch (e) {\n            span.setStatus({\n                status: \"error\",\n                error: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Update a set of documents in the index or upload them if they don't exist.\n     * For more details about how merging works, see https://docs.microsoft.com/en-us/rest/api/searchservice/AddUpdate-or-Delete-Documents\n     * @param documents - The updated documents.\n     * @param options - Additional options.\n     */\n    async mergeOrUploadDocuments(documents, options = {}) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_8__.createSpan)(\"SearchClient-mergeDocuments\", options);\n        const batch = new _indexDocumentsBatch__WEBPACK_IMPORTED_MODULE_11__.IndexDocumentsBatch();\n        batch.mergeOrUpload(documents);\n        try {\n            return await this.indexDocuments(batch, updatedOptions);\n        }\n        catch (e) {\n            span.setStatus({\n                status: \"error\",\n                error: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    async deleteDocuments(keyNameOrDocuments, keyValuesOrOptions, options = {}) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_8__.createSpan)(\"SearchClient-deleteDocuments\", options);\n        const batch = new _indexDocumentsBatch__WEBPACK_IMPORTED_MODULE_11__.IndexDocumentsBatch();\n        if (typeof keyNameOrDocuments === \"string\") {\n            batch.delete(keyNameOrDocuments, keyValuesOrOptions);\n        }\n        else {\n            batch.delete(keyNameOrDocuments);\n        }\n        try {\n            return await this.indexDocuments(batch, updatedOptions);\n        }\n        catch (e) {\n            span.setStatus({\n                status: \"error\",\n                error: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    encodeContinuationToken(nextLink, nextPageParameters) {\n        if (!nextLink || !nextPageParameters) {\n            return undefined;\n        }\n        const payload = JSON.stringify({\n            apiVersion: this.apiVersion,\n            nextLink,\n            nextPageParameters,\n        });\n        return (0,_base64__WEBPACK_IMPORTED_MODULE_12__.encode)(payload);\n    }\n    decodeContinuationToken(token) {\n        if (!token) {\n            return undefined;\n        }\n        const decodedToken = (0,_base64__WEBPACK_IMPORTED_MODULE_12__.decode)(token);\n        try {\n            const result = JSON.parse(decodedToken);\n            if (result.apiVersion !== this.apiVersion) {\n                throw new RangeError(`Continuation token uses unsupported apiVersion \"${this.apiVersion}\"`);\n            }\n            return {\n                nextLink: result.nextLink,\n                nextPageParameters: result.nextPageParameters,\n            };\n        }\n        catch (e) {\n            throw new Error(`Corrupted or invalid continuation token: ${decodedToken}`);\n        }\n    }\n    convertSelect(select) {\n        if (select) {\n            return select.join(\",\");\n        }\n        return select;\n    }\n    convertVectorQueryFields(fields) {\n        if (fields) {\n            return fields.join(\",\");\n        }\n        return fields;\n    }\n    convertSearchFields(searchFields) {\n        if (searchFields) {\n            return searchFields.join(\",\");\n        }\n        return searchFields;\n    }\n    convertOrderBy(orderBy) {\n        if (orderBy) {\n            return orderBy.join(\",\");\n        }\n        return orderBy;\n    }\n    convertQueryAnswers(answers) {\n        if (!answers) {\n            return answers;\n        }\n        const config = [];\n        const { answerType: output, count, threshold } = answers;\n        if (count) {\n            config.push(`count-${count}`);\n        }\n        if (threshold) {\n            config.push(`threshold-${threshold}`);\n        }\n        if (config.length) {\n            return output + `|${config.join(\",\")}`;\n        }\n        return output;\n    }\n    convertQueryCaptions(captions) {\n        if (!captions) {\n            return captions;\n        }\n        const config = [];\n        const { captionType: output, highlight } = captions;\n        if (highlight !== undefined) {\n            config.push(`highlight-${highlight}`);\n        }\n        if (config.length) {\n            return output + `|${config.join(\",\")}`;\n        }\n        return output;\n    }\n    convertVectorQuery(vectorQuery) {\n        return Object.assign(Object.assign({}, vectorQuery), { fields: this.convertVectorQueryFields(vectorQuery === null || vectorQuery === void 0 ? void 0 : vectorQuery.fields) });\n    }\n}\n//# sourceMappingURL=searchClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/searchClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/serialization.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/serialization.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deserialize: () => (/* binding */ deserialize),\n/* harmony export */   serialize: () => (/* binding */ serialize)\n/* harmony export */ });\n/* harmony import */ var _geographyPoint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./geographyPoint */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/geographyPoint.js\");\n/* harmony import */ var _walk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./walk */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/walk.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\nconst ISO8601DateRegex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?Z$/i;\nconst GeoJSONPointTypeName = \"Point\";\nconst WorldGeodeticSystem1984 = \"EPSG:4326\"; // See https://epsg.io/4326\nconst [serializeValue, deserializeValue] = [\n    [serializeSpecialNumbers, serializeDates, serializeGeoPoint],\n    [deserializeSpecialNumbers, deserializeDates, deserializeGeoPoint],\n].map((fns) => (value) => fns.reduceRight((acc, fn) => fn(acc), value));\nfunction serialize(obj) {\n    return (0,_walk__WEBPACK_IMPORTED_MODULE_0__.walk)(obj, serializeValue);\n}\nfunction deserialize(obj) {\n    return (0,_walk__WEBPACK_IMPORTED_MODULE_0__.walk)(obj, deserializeValue);\n}\nfunction serializeSpecialNumbers(input) {\n    if (typeof input === \"number\" && isNaN(input)) {\n        return \"NaN\";\n    }\n    else if (input === Infinity) {\n        return \"INF\";\n    }\n    else if (input === -Infinity) {\n        return \"-INF\";\n    }\n    else {\n        return input;\n    }\n}\nfunction serializeDates(input) {\n    return input instanceof Date ? input.toISOString() : input;\n}\nfunction serializeGeoPoint(input) {\n    return input instanceof _geographyPoint__WEBPACK_IMPORTED_MODULE_1__[\"default\"] ? input.toJSON() : input;\n}\nfunction deserializeSpecialNumbers(input) {\n    switch (input) {\n        case \"NaN\":\n            return NaN;\n        case \"-INF\":\n            return -Infinity;\n        case \"INF\":\n            return Infinity;\n        default:\n            return input;\n    }\n}\nfunction deserializeDates(input) {\n    return typeof input === \"string\" && ISO8601DateRegex.test(input) ? new Date(input) : input;\n}\nfunction deserializeGeoPoint(input) {\n    if (isGeoJSONPoint(input)) {\n        const [longitude, latitude] = input.coordinates;\n        return new _geographyPoint__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ longitude, latitude });\n    }\n    return input;\n}\nfunction isGeoJSONPoint(obj) {\n    const requiredKeys = [\"type\", \"coordinates\"];\n    return isValidObject(obj, {\n        requiredKeys,\n        propertyValidator: (key) => {\n            switch (key) {\n                case \"type\":\n                    return obj.type === GeoJSONPointTypeName;\n                    break;\n                case \"coordinates\":\n                    return isCoordinateArray(obj.coordinates);\n                    break;\n                case \"crs\":\n                    return isCrs(obj.crs);\n                    break;\n                default:\n                    return false;\n            }\n        },\n    });\n}\nfunction isCoordinateArray(maybeCoordinates) {\n    if (!Array.isArray(maybeCoordinates)) {\n        return false;\n    }\n    if (maybeCoordinates.length !== 2) {\n        return false;\n    }\n    if (typeof maybeCoordinates[0] !== \"number\" || typeof maybeCoordinates[1] !== \"number\") {\n        return false;\n    }\n    return true;\n}\nfunction isCrs(maybeCrs) {\n    return isValidObject(maybeCrs, {\n        requiredKeys: [\"type\", \"properties\"],\n        propertyValidator: (key) => {\n            switch (key) {\n                case \"type\":\n                    return maybeCrs.type === \"name\";\n                    break;\n                case \"properties\":\n                    return isCrsProperties(maybeCrs.properties);\n                    break;\n                default:\n                    return false;\n            }\n        },\n    });\n}\nfunction isCrsProperties(maybeProperties) {\n    return isValidObject(maybeProperties, {\n        requiredKeys: [\"name\"],\n        propertyValidator: (key) => {\n            if (key === \"name\") {\n                return maybeProperties.name === WorldGeodeticSystem1984;\n            }\n            else {\n                return false;\n            }\n        },\n    });\n}\nfunction isValidObject(obj, options = {}) {\n    if (typeof obj !== \"object\" || obj === null) {\n        return false;\n    }\n    const keys = Object.keys(obj);\n    if (options.requiredKeys) {\n        for (const requiredKey of options.requiredKeys) {\n            if (!keys.includes(requiredKey)) {\n                return false;\n            }\n        }\n    }\n    if (options.propertyValidator) {\n        for (const key of keys) {\n            if (!options.propertyValidator(key)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=serialization.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL3NlYXJjaC1kb2N1bWVudHMvZGlzdC1lc20vc3JjL3NlcmlhbGl6YXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDOEM7QUFDaEI7QUFDOUIsOEJBQThCLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxNQUFNLElBQUk7QUFDeEU7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsMkNBQUk7QUFDZjtBQUNPO0FBQ1AsV0FBVywyQ0FBSTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHVEQUFjO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHVEQUFjLEdBQUcscUJBQXFCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBLHdDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxzZWFyY2gtZG9jdW1lbnRzXFxkaXN0LWVzbVxcc3JjXFxzZXJpYWxpemF0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuaW1wb3J0IEdlb2dyYXBoeVBvaW50IGZyb20gXCIuL2dlb2dyYXBoeVBvaW50XCI7XG5pbXBvcnQgeyB3YWxrIH0gZnJvbSBcIi4vd2Fsa1wiO1xuY29uc3QgSVNPODYwMURhdGVSZWdleCA9IC9eXFxkezR9LVxcZHsyfS1cXGR7Mn1UXFxkezJ9OlxcZHsyfTpcXGR7Mn0oXFwuXFxkezEsM30pP1okL2k7XG5jb25zdCBHZW9KU09OUG9pbnRUeXBlTmFtZSA9IFwiUG9pbnRcIjtcbmNvbnN0IFdvcmxkR2VvZGV0aWNTeXN0ZW0xOTg0ID0gXCJFUFNHOjQzMjZcIjsgLy8gU2VlIGh0dHBzOi8vZXBzZy5pby80MzI2XG5jb25zdCBbc2VyaWFsaXplVmFsdWUsIGRlc2VyaWFsaXplVmFsdWVdID0gW1xuICAgIFtzZXJpYWxpemVTcGVjaWFsTnVtYmVycywgc2VyaWFsaXplRGF0ZXMsIHNlcmlhbGl6ZUdlb1BvaW50XSxcbiAgICBbZGVzZXJpYWxpemVTcGVjaWFsTnVtYmVycywgZGVzZXJpYWxpemVEYXRlcywgZGVzZXJpYWxpemVHZW9Qb2ludF0sXG5dLm1hcCgoZm5zKSA9PiAodmFsdWUpID0+IGZucy5yZWR1Y2VSaWdodCgoYWNjLCBmbikgPT4gZm4oYWNjKSwgdmFsdWUpKTtcbmV4cG9ydCBmdW5jdGlvbiBzZXJpYWxpemUob2JqKSB7XG4gICAgcmV0dXJuIHdhbGsob2JqLCBzZXJpYWxpemVWYWx1ZSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZGVzZXJpYWxpemUob2JqKSB7XG4gICAgcmV0dXJuIHdhbGsob2JqLCBkZXNlcmlhbGl6ZVZhbHVlKTtcbn1cbmZ1bmN0aW9uIHNlcmlhbGl6ZVNwZWNpYWxOdW1iZXJzKGlucHV0KSB7XG4gICAgaWYgKHR5cGVvZiBpbnB1dCA9PT0gXCJudW1iZXJcIiAmJiBpc05hTihpbnB1dCkpIHtcbiAgICAgICAgcmV0dXJuIFwiTmFOXCI7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlucHV0ID09PSBJbmZpbml0eSkge1xuICAgICAgICByZXR1cm4gXCJJTkZcIjtcbiAgICB9XG4gICAgZWxzZSBpZiAoaW5wdXQgPT09IC1JbmZpbml0eSkge1xuICAgICAgICByZXR1cm4gXCItSU5GXCI7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gaW5wdXQ7XG4gICAgfVxufVxuZnVuY3Rpb24gc2VyaWFsaXplRGF0ZXMoaW5wdXQpIHtcbiAgICByZXR1cm4gaW5wdXQgaW5zdGFuY2VvZiBEYXRlID8gaW5wdXQudG9JU09TdHJpbmcoKSA6IGlucHV0O1xufVxuZnVuY3Rpb24gc2VyaWFsaXplR2VvUG9pbnQoaW5wdXQpIHtcbiAgICByZXR1cm4gaW5wdXQgaW5zdGFuY2VvZiBHZW9ncmFwaHlQb2ludCA/IGlucHV0LnRvSlNPTigpIDogaW5wdXQ7XG59XG5mdW5jdGlvbiBkZXNlcmlhbGl6ZVNwZWNpYWxOdW1iZXJzKGlucHV0KSB7XG4gICAgc3dpdGNoIChpbnB1dCkge1xuICAgICAgICBjYXNlIFwiTmFOXCI6XG4gICAgICAgICAgICByZXR1cm4gTmFOO1xuICAgICAgICBjYXNlIFwiLUlORlwiOlxuICAgICAgICAgICAgcmV0dXJuIC1JbmZpbml0eTtcbiAgICAgICAgY2FzZSBcIklORlwiOlxuICAgICAgICAgICAgcmV0dXJuIEluZmluaXR5O1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIGlucHV0O1xuICAgIH1cbn1cbmZ1bmN0aW9uIGRlc2VyaWFsaXplRGF0ZXMoaW5wdXQpIHtcbiAgICByZXR1cm4gdHlwZW9mIGlucHV0ID09PSBcInN0cmluZ1wiICYmIElTTzg2MDFEYXRlUmVnZXgudGVzdChpbnB1dCkgPyBuZXcgRGF0ZShpbnB1dCkgOiBpbnB1dDtcbn1cbmZ1bmN0aW9uIGRlc2VyaWFsaXplR2VvUG9pbnQoaW5wdXQpIHtcbiAgICBpZiAoaXNHZW9KU09OUG9pbnQoaW5wdXQpKSB7XG4gICAgICAgIGNvbnN0IFtsb25naXR1ZGUsIGxhdGl0dWRlXSA9IGlucHV0LmNvb3JkaW5hdGVzO1xuICAgICAgICByZXR1cm4gbmV3IEdlb2dyYXBoeVBvaW50KHsgbG9uZ2l0dWRlLCBsYXRpdHVkZSB9KTtcbiAgICB9XG4gICAgcmV0dXJuIGlucHV0O1xufVxuZnVuY3Rpb24gaXNHZW9KU09OUG9pbnQob2JqKSB7XG4gICAgY29uc3QgcmVxdWlyZWRLZXlzID0gW1widHlwZVwiLCBcImNvb3JkaW5hdGVzXCJdO1xuICAgIHJldHVybiBpc1ZhbGlkT2JqZWN0KG9iaiwge1xuICAgICAgICByZXF1aXJlZEtleXMsXG4gICAgICAgIHByb3BlcnR5VmFsaWRhdG9yOiAoa2V5KSA9PiB7XG4gICAgICAgICAgICBzd2l0Y2ggKGtleSkge1xuICAgICAgICAgICAgICAgIGNhc2UgXCJ0eXBlXCI6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBvYmoudHlwZSA9PT0gR2VvSlNPTlBvaW50VHlwZU5hbWU7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJjb29yZGluYXRlc1wiOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXNDb29yZGluYXRlQXJyYXkob2JqLmNvb3JkaW5hdGVzKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBcImNyc1wiOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXNDcnMob2JqLmNycyk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGlzQ29vcmRpbmF0ZUFycmF5KG1heWJlQ29vcmRpbmF0ZXMpIHtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkobWF5YmVDb29yZGluYXRlcykpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAobWF5YmVDb29yZGluYXRlcy5sZW5ndGggIT09IDIpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIG1heWJlQ29vcmRpbmF0ZXNbMF0gIT09IFwibnVtYmVyXCIgfHwgdHlwZW9mIG1heWJlQ29vcmRpbmF0ZXNbMV0gIT09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmZ1bmN0aW9uIGlzQ3JzKG1heWJlQ3JzKSB7XG4gICAgcmV0dXJuIGlzVmFsaWRPYmplY3QobWF5YmVDcnMsIHtcbiAgICAgICAgcmVxdWlyZWRLZXlzOiBbXCJ0eXBlXCIsIFwicHJvcGVydGllc1wiXSxcbiAgICAgICAgcHJvcGVydHlWYWxpZGF0b3I6IChrZXkpID0+IHtcbiAgICAgICAgICAgIHN3aXRjaCAoa2V5KSB7XG4gICAgICAgICAgICAgICAgY2FzZSBcInR5cGVcIjpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1heWJlQ3JzLnR5cGUgPT09IFwibmFtZVwiO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIFwicHJvcGVydGllc1wiOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXNDcnNQcm9wZXJ0aWVzKG1heWJlQ3JzLnByb3BlcnRpZXMpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgfSk7XG59XG5mdW5jdGlvbiBpc0Nyc1Byb3BlcnRpZXMobWF5YmVQcm9wZXJ0aWVzKSB7XG4gICAgcmV0dXJuIGlzVmFsaWRPYmplY3QobWF5YmVQcm9wZXJ0aWVzLCB7XG4gICAgICAgIHJlcXVpcmVkS2V5czogW1wibmFtZVwiXSxcbiAgICAgICAgcHJvcGVydHlWYWxpZGF0b3I6IChrZXkpID0+IHtcbiAgICAgICAgICAgIGlmIChrZXkgPT09IFwibmFtZVwiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG1heWJlUHJvcGVydGllcy5uYW1lID09PSBXb3JsZEdlb2RldGljU3lzdGVtMTk4NDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGlzVmFsaWRPYmplY3Qob2JqLCBvcHRpb25zID0ge30pIHtcbiAgICBpZiAodHlwZW9mIG9iaiAhPT0gXCJvYmplY3RcIiB8fCBvYmogPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMob2JqKTtcbiAgICBpZiAob3B0aW9ucy5yZXF1aXJlZEtleXMpIHtcbiAgICAgICAgZm9yIChjb25zdCByZXF1aXJlZEtleSBvZiBvcHRpb25zLnJlcXVpcmVkS2V5cykge1xuICAgICAgICAgICAgaWYgKCFrZXlzLmluY2x1ZGVzKHJlcXVpcmVkS2V5KSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAob3B0aW9ucy5wcm9wZXJ0eVZhbGlkYXRvcikge1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBvZiBrZXlzKSB7XG4gICAgICAgICAgICBpZiAoIW9wdGlvbnMucHJvcGVydHlWYWxpZGF0b3Ioa2V5KSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlcmlhbGl6YXRpb24uanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/serialization.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/serviceModels.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/serviceModels.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KnownAnalyzerNames: () => (/* binding */ KnownAnalyzerNames),\n/* harmony export */   KnownCharFilterNames: () => (/* binding */ KnownCharFilterNames),\n/* harmony export */   KnownTokenFilterNames: () => (/* binding */ KnownTokenFilterNames),\n/* harmony export */   KnownTokenizerNames: () => (/* binding */ KnownTokenizerNames),\n/* harmony export */   isComplexField: () => (/* binding */ isComplexField)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nfunction isComplexField(field) {\n    return field.type === \"Edm.ComplexType\" || field.type === \"Collection(Edm.ComplexType)\";\n}\n/**\n * Defines values for TokenizerName.\n * @readonly\n */\nvar KnownTokenizerNames;\n(function (KnownTokenizerNames) {\n    /**\n     * Grammar-based tokenizer that is suitable for processing most European-language documents. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/ClassicTokenizer.html\n     */\n    KnownTokenizerNames[\"Classic\"] = \"classic\";\n    /**\n     * Tokenizes the input from an edge into n-grams of the given size(s). See\n     * https://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer.html\n     */\n    KnownTokenizerNames[\"EdgeNGram\"] = \"edgeNGram\";\n    /**\n     * Emits the entire input as a single token. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/KeywordTokenizer.html\n     */\n    KnownTokenizerNames[\"Keyword\"] = \"keyword_v2\";\n    /**\n     * Divides text at non-letters. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/LetterTokenizer.html\n     */\n    KnownTokenizerNames[\"Letter\"] = \"letter\";\n    /**\n     * Divides text at non-letters and converts them to lower case. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/LowerCaseTokenizer.html\n     */\n    KnownTokenizerNames[\"Lowercase\"] = \"lowercase\";\n    /**\n     * Divides text using language-specific rules.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    KnownTokenizerNames[\"MicrosoftLanguageTokenizer\"] = \"microsoft_language_tokenizer\";\n    /**\n     * Divides text using language-specific rules and reduces words to their base forms.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    KnownTokenizerNames[\"MicrosoftLanguageStemmingTokenizer\"] = \"microsoft_language_stemming_tokenizer\";\n    /**\n     * Tokenizes the input into n-grams of the given size(s). See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/NGramTokenizer.html\n     */\n    KnownTokenizerNames[\"NGram\"] = \"nGram\";\n    /**\n     * Tokenizer for path-like hierarchies. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/path/PathHierarchyTokenizer.html\n     */\n    KnownTokenizerNames[\"PathHierarchy\"] = \"path_hierarchy_v2\";\n    /**\n     * Tokenizer that uses regex pattern matching to construct distinct tokens. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/pattern/PatternTokenizer.html\n     */\n    KnownTokenizerNames[\"Pattern\"] = \"pattern\";\n    /**\n     * Standard Lucene analyzer; Composed of the standard tokenizer, lowercase filter and stop\n     * filter. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/StandardTokenizer.html\n     */\n    KnownTokenizerNames[\"Standard\"] = \"standard_v2\";\n    /**\n     * Tokenizes urls and emails as one token. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/UAX29URLEmailTokenizer.html\n     */\n    KnownTokenizerNames[\"UaxUrlEmail\"] = \"uax_url_email\";\n    /**\n     * Divides text at whitespace. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/WhitespaceTokenizer.html\n     */\n    KnownTokenizerNames[\"Whitespace\"] = \"whitespace\";\n})(KnownTokenizerNames || (KnownTokenizerNames = {}));\n/**\n * Defines values for TokenFilterName.\n * @readonly\n */\nvar KnownTokenFilterNames;\n(function (KnownTokenFilterNames) {\n    /**\n     * A token filter that applies the Arabic normalizer to normalize the orthography. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ar/ArabicNormalizationFilter.html\n     */\n    KnownTokenFilterNames[\"ArabicNormalization\"] = \"arabic_normalization\";\n    /**\n     * Strips all characters after an apostrophe (including the apostrophe itself). See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/tr/ApostropheFilter.html\n     */\n    KnownTokenFilterNames[\"Apostrophe\"] = \"apostrophe\";\n    /**\n     * Converts alphabetic, numeric, and symbolic Unicode characters which are not in the first 127\n     * ASCII characters (the \"Basic Latin\" Unicode block) into their ASCII equivalents, if such\n     * equivalents exist. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter.html\n     */\n    KnownTokenFilterNames[\"AsciiFolding\"] = \"asciifolding\";\n    /**\n     * Forms bigrams of CJK terms that are generated from StandardTokenizer. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/cjk/CJKBigramFilter.html\n     */\n    KnownTokenFilterNames[\"CjkBigram\"] = \"cjk_bigram\";\n    /**\n     * Normalizes CJK width differences. Folds fullwidth ASCII variants into the equivalent basic\n     * Latin, and half-width Katakana variants into the equivalent Kana. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/cjk/CJKWidthFilter.html\n     */\n    KnownTokenFilterNames[\"CjkWidth\"] = \"cjk_width\";\n    /**\n     * Removes English possessives, and dots from acronyms. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/ClassicFilter.html\n     */\n    KnownTokenFilterNames[\"Classic\"] = \"classic\";\n    /**\n     * Construct bigrams for frequently occurring terms while indexing. Single terms are still\n     * indexed too, with bigrams overlaid. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/commongrams/CommonGramsFilter.html\n     */\n    KnownTokenFilterNames[\"CommonGram\"] = \"common_grams\";\n    /**\n     * Generates n-grams of the given size(s) starting from the front or the back of an input token.\n     * See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilter.html\n     */\n    KnownTokenFilterNames[\"EdgeNGram\"] = \"edgeNGram_v2\";\n    /**\n     * Removes elisions. For example, \"l'avion\" (the plane) will be converted to \"avion\" (plane). See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/util/ElisionFilter.html\n     */\n    KnownTokenFilterNames[\"Elision\"] = \"elision\";\n    /**\n     * Normalizes German characters according to the heuristics of the German2 snowball algorithm.\n     * See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/de/GermanNormalizationFilter.html\n     */\n    KnownTokenFilterNames[\"GermanNormalization\"] = \"german_normalization\";\n    /**\n     * Normalizes text in Hindi to remove some differences in spelling variations. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/hi/HindiNormalizationFilter.html\n     */\n    KnownTokenFilterNames[\"HindiNormalization\"] = \"hindi_normalization\";\n    /**\n     * Normalizes the Unicode representation of text in Indian languages. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/in/IndicNormalizationFilter.html\n     */\n    KnownTokenFilterNames[\"IndicNormalization\"] = \"indic_normalization\";\n    /**\n     * Emits each incoming token twice, once as keyword and once as non-keyword. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/KeywordRepeatFilter.html\n     */\n    KnownTokenFilterNames[\"KeywordRepeat\"] = \"keyword_repeat\";\n    /**\n     * A high-performance kstem filter for English. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/en/KStemFilter.html\n     */\n    KnownTokenFilterNames[\"KStem\"] = \"kstem\";\n    /**\n     * Removes words that are too long or too short. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/LengthFilter.html\n     */\n    KnownTokenFilterNames[\"Length\"] = \"length\";\n    /**\n     * Limits the number of tokens while indexing. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilter.html\n     */\n    KnownTokenFilterNames[\"Limit\"] = \"limit\";\n    /**\n     * Normalizes token text to lower case. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/LowerCaseFilter.htm\n     */\n    KnownTokenFilterNames[\"Lowercase\"] = \"lowercase\";\n    /**\n     * Generates n-grams of the given size(s). See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/NGramTokenFilter.html\n     */\n    KnownTokenFilterNames[\"NGram\"] = \"nGram_v2\";\n    /**\n     * Applies normalization for Persian. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/fa/PersianNormalizationFilter.html\n     */\n    KnownTokenFilterNames[\"PersianNormalization\"] = \"persian_normalization\";\n    /**\n     * Create tokens for phonetic matches. See\n     * https://lucene.apache.org/core/4_10_3/analyzers-phonetic/org/apache/lucene/analysis/phonetic/package-tree.html\n     */\n    KnownTokenFilterNames[\"Phonetic\"] = \"phonetic\";\n    /**\n     * Uses the Porter stemming algorithm to transform the token stream. See\n     * http://tartarus.org/~martin/PorterStemmer\n     */\n    KnownTokenFilterNames[\"PorterStem\"] = \"porter_stem\";\n    /**\n     * Reverses the token string. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/reverse/ReverseStringFilter.html\n     */\n    KnownTokenFilterNames[\"Reverse\"] = \"reverse\";\n    /**\n     * Normalizes use of the interchangeable Scandinavian characters. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ScandinavianNormalizationFilter.html\n     */\n    KnownTokenFilterNames[\"ScandinavianNormalization\"] = \"scandinavian_normalization\";\n    /**\n     * Folds Scandinavian characters åÅäæÄÆ-&gt;a and öÖøØ-&gt;o. It also discriminates against use\n     * of double vowels aa, ae, ao, oe and oo, leaving just the first one. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ScandinavianFoldingFilter.html\n     */\n    KnownTokenFilterNames[\"ScandinavianFoldingNormalization\"] = \"scandinavian_folding\";\n    /**\n     * Creates combinations of tokens as a single token. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/shingle/ShingleFilter.html\n     */\n    KnownTokenFilterNames[\"Shingle\"] = \"shingle\";\n    /**\n     * A filter that stems words using a Snowball-generated stemmer. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/snowball/SnowballFilter.html\n     */\n    KnownTokenFilterNames[\"Snowball\"] = \"snowball\";\n    /**\n     * Normalizes the Unicode representation of Sorani text. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ckb/SoraniNormalizationFilter.html\n     */\n    KnownTokenFilterNames[\"SoraniNormalization\"] = \"sorani_normalization\";\n    /**\n     * Language specific stemming filter. See\n     * https://docs.microsoft.com/rest/api/searchservice/Custom-analyzers-in-Azure-Search#TokenFilters\n     */\n    KnownTokenFilterNames[\"Stemmer\"] = \"stemmer\";\n    /**\n     * Removes stop words from a token stream. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/StopFilter.html\n     */\n    KnownTokenFilterNames[\"Stopwords\"] = \"stopwords\";\n    /**\n     * Trims leading and trailing whitespace from tokens. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/TrimFilter.html\n     */\n    KnownTokenFilterNames[\"Trim\"] = \"trim\";\n    /**\n     * Truncates the terms to a specific length. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/TruncateTokenFilter.html\n     */\n    KnownTokenFilterNames[\"Truncate\"] = \"truncate\";\n    /**\n     * Filters out tokens with same text as the previous token. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/RemoveDuplicatesTokenFilter.html\n     */\n    KnownTokenFilterNames[\"Unique\"] = \"unique\";\n    /**\n     * Normalizes token text to upper case. See\n     * http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/UpperCaseFilter.html\n     */\n    KnownTokenFilterNames[\"Uppercase\"] = \"uppercase\";\n    /**\n     * Splits words into subwords and performs optional transformations on subword groups.\n     */\n    KnownTokenFilterNames[\"WordDelimiter\"] = \"word_delimiter\";\n})(KnownTokenFilterNames || (KnownTokenFilterNames = {}));\n/**\n * Defines values for CharFilterName.\n * @readonly\n */\nvar KnownCharFilterNames;\n(function (KnownCharFilterNames) {\n    /**\n     * A character filter that attempts to strip out HTML constructs. See\n     * https://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.html\n     */\n    KnownCharFilterNames[\"HtmlStrip\"] = \"html_strip\";\n})(KnownCharFilterNames || (KnownCharFilterNames = {}));\n/**\n * Defines values for AnalyzerName.\n * See https://docs.microsoft.com/rest/api/searchservice/Language-support\n * @readonly\n */\nvar KnownAnalyzerNames;\n(function (KnownAnalyzerNames) {\n    /**\n     * Arabic\n     */\n    KnownAnalyzerNames[\"ArMicrosoft\"] = \"ar.microsoft\";\n    /**\n     * Arabic\n     */\n    KnownAnalyzerNames[\"ArLucene\"] = \"ar.lucene\";\n    /**\n     * Armenian\n     */\n    KnownAnalyzerNames[\"HyLucene\"] = \"hy.lucene\";\n    /**\n     * Bangla\n     */\n    KnownAnalyzerNames[\"BnMicrosoft\"] = \"bn.microsoft\";\n    /**\n     * Basque\n     */\n    KnownAnalyzerNames[\"EuLucene\"] = \"eu.lucene\";\n    /**\n     * Bulgarian\n     */\n    KnownAnalyzerNames[\"BgMicrosoft\"] = \"bg.microsoft\";\n    /**\n     * Bulgarian\n     */\n    KnownAnalyzerNames[\"BgLucene\"] = \"bg.lucene\";\n    /**\n     * Catalan\n     */\n    KnownAnalyzerNames[\"CaMicrosoft\"] = \"ca.microsoft\";\n    /**\n     * Catalan\n     */\n    KnownAnalyzerNames[\"CaLucene\"] = \"ca.lucene\";\n    /**\n     * Chinese Simplified\n     */\n    KnownAnalyzerNames[\"ZhHansMicrosoft\"] = \"zh-Hans.microsoft\";\n    /**\n     * Chinese Simplified\n     */\n    KnownAnalyzerNames[\"ZhHansLucene\"] = \"zh-Hans.lucene\";\n    /**\n     * Chinese Traditional\n     */\n    KnownAnalyzerNames[\"ZhHantMicrosoft\"] = \"zh-Hant.microsoft\";\n    /**\n     * Chinese Traditional\n     */\n    KnownAnalyzerNames[\"ZhHantLucene\"] = \"zh-Hant.lucene\";\n    /**\n     * Croatian\n     */\n    KnownAnalyzerNames[\"HrMicrosoft\"] = \"hr.microsoft\";\n    /**\n     * Czech\n     */\n    KnownAnalyzerNames[\"CsMicrosoft\"] = \"cs.microsoft\";\n    /**\n     * Czech\n     */\n    KnownAnalyzerNames[\"CsLucene\"] = \"cs.lucene\";\n    /**\n     * Danish\n     */\n    KnownAnalyzerNames[\"DaMicrosoft\"] = \"da.microsoft\";\n    /**\n     * Danish\n     */\n    KnownAnalyzerNames[\"DaLucene\"] = \"da.lucene\";\n    /**\n     * Dutch\n     */\n    KnownAnalyzerNames[\"NlMicrosoft\"] = \"nl.microsoft\";\n    /**\n     * Dutch\n     */\n    KnownAnalyzerNames[\"NlLucene\"] = \"nl.lucene\";\n    /**\n     * English\n     */\n    KnownAnalyzerNames[\"EnMicrosoft\"] = \"en.microsoft\";\n    /**\n     * English\n     */\n    KnownAnalyzerNames[\"EnLucene\"] = \"en.lucene\";\n    /**\n     * Estonian\n     */\n    KnownAnalyzerNames[\"EtMicrosoft\"] = \"et.microsoft\";\n    /**\n     * Finnish\n     */\n    KnownAnalyzerNames[\"FiMicrosoft\"] = \"fi.microsoft\";\n    /**\n     * Finnish\n     */\n    KnownAnalyzerNames[\"FiLucene\"] = \"fi.lucene\";\n    /**\n     * French\n     */\n    KnownAnalyzerNames[\"FrMicrosoft\"] = \"fr.microsoft\";\n    /**\n     * French\n     */\n    KnownAnalyzerNames[\"FrLucene\"] = \"fr.lucene\";\n    /**\n     * Galician\n     */\n    KnownAnalyzerNames[\"GlLucene\"] = \"gl.lucene\";\n    /**\n     * German\n     */\n    KnownAnalyzerNames[\"DeMicrosoft\"] = \"de.microsoft\";\n    /**\n     * German\n     */\n    KnownAnalyzerNames[\"DeLucene\"] = \"de.lucene\";\n    /**\n     * Greek\n     */\n    KnownAnalyzerNames[\"ElMicrosoft\"] = \"el.microsoft\";\n    /**\n     * Greek\n     */\n    KnownAnalyzerNames[\"ElLucene\"] = \"el.lucene\";\n    /**\n     * Gujarati\n     */\n    KnownAnalyzerNames[\"GuMicrosoft\"] = \"gu.microsoft\";\n    /**\n     * Hebrew\n     */\n    KnownAnalyzerNames[\"HeMicrosoft\"] = \"he.microsoft\";\n    /**\n     * Hindi\n     */\n    KnownAnalyzerNames[\"HiMicrosoft\"] = \"hi.microsoft\";\n    /**\n     * Hindi\n     */\n    KnownAnalyzerNames[\"HiLucene\"] = \"hi.lucene\";\n    /**\n     * Hungarian\n     */\n    KnownAnalyzerNames[\"HuMicrosoft\"] = \"hu.microsoft\";\n    /**\n     * Hungarian\n     */\n    KnownAnalyzerNames[\"HuLucene\"] = \"hu.lucene\";\n    /**\n     * Icelandic\n     */\n    KnownAnalyzerNames[\"IsMicrosoft\"] = \"is.microsoft\";\n    /**\n     * Indonesian (Bahasa)\n     */\n    KnownAnalyzerNames[\"IdMicrosoft\"] = \"id.microsoft\";\n    /**\n     * Indonesian (Bahasa)\n     */\n    KnownAnalyzerNames[\"IdLucene\"] = \"id.lucene\";\n    /**\n     * Irish\n     */\n    KnownAnalyzerNames[\"GaLucene\"] = \"ga.lucene\";\n    /**\n     * Italian\n     */\n    KnownAnalyzerNames[\"ItMicrosoft\"] = \"it.microsoft\";\n    /**\n     * Italian\n     */\n    KnownAnalyzerNames[\"ItLucene\"] = \"it.lucene\";\n    /**\n     * Japanese\n     */\n    KnownAnalyzerNames[\"JaMicrosoft\"] = \"ja.microsoft\";\n    /**\n     * Japanese\n     */\n    KnownAnalyzerNames[\"JaLucene\"] = \"ja.lucene\";\n    /**\n     * Kannada\n     */\n    KnownAnalyzerNames[\"KnMicrosoft\"] = \"kn.microsoft\";\n    /**\n     * Korean\n     */\n    KnownAnalyzerNames[\"KoMicrosoft\"] = \"ko.microsoft\";\n    /**\n     * Korean\n     */\n    KnownAnalyzerNames[\"KoLucene\"] = \"ko.lucene\";\n    /**\n     * Latvian\n     */\n    KnownAnalyzerNames[\"LvMicrosoft\"] = \"lv.microsoft\";\n    /**\n     * Latvian\n     */\n    KnownAnalyzerNames[\"LvLucene\"] = \"lv.lucene\";\n    /**\n     * Lithuanian\n     */\n    KnownAnalyzerNames[\"LtMicrosoft\"] = \"lt.microsoft\";\n    /**\n     * Malayalam\n     */\n    KnownAnalyzerNames[\"MlMicrosoft\"] = \"ml.microsoft\";\n    /**\n     * Malay (Latin)\n     */\n    KnownAnalyzerNames[\"MsMicrosoft\"] = \"ms.microsoft\";\n    /**\n     * Marathi\n     */\n    KnownAnalyzerNames[\"MrMicrosoft\"] = \"mr.microsoft\";\n    /**\n     * Norwegian\n     */\n    KnownAnalyzerNames[\"NbMicrosoft\"] = \"nb.microsoft\";\n    /**\n     * Norwegian\n     */\n    KnownAnalyzerNames[\"NoLucene\"] = \"no.lucene\";\n    /**\n     * Persian\n     */\n    KnownAnalyzerNames[\"FaLucene\"] = \"fa.lucene\";\n    /**\n     * Polish\n     */\n    KnownAnalyzerNames[\"PlMicrosoft\"] = \"pl.microsoft\";\n    /**\n     * Polish\n     */\n    KnownAnalyzerNames[\"PlLucene\"] = \"pl.lucene\";\n    /**\n     * Portuguese (Brazil)\n     */\n    KnownAnalyzerNames[\"PtBRMicrosoft\"] = \"pt-BR.microsoft\";\n    /**\n     * Portuguese (Brazil)\n     */\n    KnownAnalyzerNames[\"PtBRLucene\"] = \"pt-BR.lucene\";\n    /**\n     * Portuguese (Portugal)\n     */\n    KnownAnalyzerNames[\"PtPTMicrosoft\"] = \"pt-PT.microsoft\";\n    /**\n     * Portuguese (Portugal)\n     */\n    KnownAnalyzerNames[\"PtPTLucene\"] = \"pt-PT.lucene\";\n    /**\n     * Punjabi\n     */ KnownAnalyzerNames[\"PaMicrosoft\"] = \"pa.microsoft\";\n    /**\n     * Romanian\n     */\n    KnownAnalyzerNames[\"RoMicrosoft\"] = \"ro.microsoft\";\n    /**\n     * Romanian\n     */\n    KnownAnalyzerNames[\"RoLucene\"] = \"ro.lucene\";\n    /**\n     * Russian\n     */\n    KnownAnalyzerNames[\"RuMicrosoft\"] = \"ru.microsoft\";\n    /**\n     * Russian\n     */\n    KnownAnalyzerNames[\"RuLucene\"] = \"ru.lucene\";\n    /**\n     * Serbian (Cyrillic)\n     */\n    KnownAnalyzerNames[\"SrCyrillicMicrosoft\"] = \"sr-cyrillic.microsoft\";\n    /**\n     * Serbian (Latin)\n     */\n    KnownAnalyzerNames[\"SrLatinMicrosoft\"] = \"sr-latin.microsoft\";\n    /**\n     * Slovak\n     */\n    KnownAnalyzerNames[\"SkMicrosoft\"] = \"sk.microsoft\";\n    /**\n     * Slovenian\n     */\n    KnownAnalyzerNames[\"SlMicrosoft\"] = \"sl.microsoft\";\n    /**\n     * Spanish\n     */\n    KnownAnalyzerNames[\"EsMicrosoft\"] = \"es.microsoft\";\n    /**\n     * Spanish\n     */\n    KnownAnalyzerNames[\"EsLucene\"] = \"es.lucene\";\n    /**\n     * Swedish\n     */\n    KnownAnalyzerNames[\"SvMicrosoft\"] = \"sv.microsoft\";\n    /**\n     * Swedish\n     */\n    KnownAnalyzerNames[\"SvLucene\"] = \"sv.lucene\";\n    /**\n     * Tamil\n     */\n    KnownAnalyzerNames[\"TaMicrosoft\"] = \"ta.microsoft\";\n    /**\n     * Telugu\n     */\n    KnownAnalyzerNames[\"TeMicrosoft\"] = \"te.microsoft\";\n    /**\n     * Thai\n     */\n    KnownAnalyzerNames[\"ThMicrosoft\"] = \"th.microsoft\";\n    /**\n     * Thai\n     */\n    KnownAnalyzerNames[\"ThLucene\"] = \"th.lucene\";\n    /**\n     * Turkish\n     */\n    KnownAnalyzerNames[\"TrMicrosoft\"] = \"tr.microsoft\";\n    /**\n     * Turkish\n     */\n    KnownAnalyzerNames[\"TrLucene\"] = \"tr.lucene\";\n    /**\n     * Ukrainian\n     */\n    KnownAnalyzerNames[\"UkMicrosoft\"] = \"uk.microsoft\";\n    /**\n     * Urdu\n     */\n    KnownAnalyzerNames[\"UrMicrosoft\"] = \"ur.microsoft\";\n    /**\n     * Vietnamese\n     */\n    KnownAnalyzerNames[\"ViMicrosoft\"] = \"vi.microsoft\";\n    /**\n     * See: https://lucene.apache.org/core/6_6_1/core/org/apache/lucene/analysis/standard/StandardAnalyzer.html\n     */\n    KnownAnalyzerNames[\"StandardLucene\"] = \"standard.lucene\";\n    /**\n     * See https://lucene.apache.org/core/6_6_1/analyzers-common/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter.html\n     */\n    KnownAnalyzerNames[\"StandardAsciiFoldingLucene\"] = \"standardasciifolding.lucene\";\n    /**\n     * Treats the entire content of a field as a single token. This is useful for data like zip codes, ids, and some product names.\n     */\n    KnownAnalyzerNames[\"Keyword\"] = \"keyword\";\n    /**\n     * Flexibly separates text into terms via a regular expression pattern.\n     */\n    KnownAnalyzerNames[\"Pattern\"] = \"pattern\";\n    /**\n     * Divides text at non-letters and converts them to lower case.\n     */\n    KnownAnalyzerNames[\"Simple\"] = \"simple\";\n    /**\n     * Divides text at non-letters; Applies the lowercase and stopword token filters.\n     */\n    KnownAnalyzerNames[\"Stop\"] = \"stop\";\n    /**\n     * An analyzer that uses the whitespace tokenizer.\n     */\n    KnownAnalyzerNames[\"Whitespace\"] = \"whitespace\";\n})(KnownAnalyzerNames || (KnownAnalyzerNames = {}));\n// END manually modified generated interfaces\n//# sourceMappingURL=serviceModels.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/serviceModels.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/serviceUtils.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/serviceUtils.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertCognitiveServicesAccountToGenerated: () => (/* binding */ convertCognitiveServicesAccountToGenerated),\n/* harmony export */   convertCognitiveServicesAccountToPublic: () => (/* binding */ convertCognitiveServicesAccountToPublic),\n/* harmony export */   convertDataChangeDetectionPolicyToPublic: () => (/* binding */ convertDataChangeDetectionPolicyToPublic),\n/* harmony export */   convertDataDeletionDetectionPolicyToPublic: () => (/* binding */ convertDataDeletionDetectionPolicyToPublic),\n/* harmony export */   convertFieldsToGenerated: () => (/* binding */ convertFieldsToGenerated),\n/* harmony export */   convertFieldsToPublic: () => (/* binding */ convertFieldsToPublic),\n/* harmony export */   convertSearchIndexerDataIdentityToPublic: () => (/* binding */ convertSearchIndexerDataIdentityToPublic),\n/* harmony export */   convertSimilarityToGenerated: () => (/* binding */ convertSimilarityToGenerated),\n/* harmony export */   convertSimilarityToPublic: () => (/* binding */ convertSimilarityToPublic),\n/* harmony export */   convertSkillsToPublic: () => (/* binding */ convertSkillsToPublic),\n/* harmony export */   convertTokenFiltersToGenerated: () => (/* binding */ convertTokenFiltersToGenerated),\n/* harmony export */   defaultServiceVersion: () => (/* binding */ defaultServiceVersion),\n/* harmony export */   generatedDataSourceToPublicDataSource: () => (/* binding */ generatedDataSourceToPublicDataSource),\n/* harmony export */   generatedIndexToPublicIndex: () => (/* binding */ generatedIndexToPublicIndex),\n/* harmony export */   generatedSearchIndexerToPublicSearchIndexer: () => (/* binding */ generatedSearchIndexerToPublicSearchIndexer),\n/* harmony export */   generatedSearchResultToPublicSearchResult: () => (/* binding */ generatedSearchResultToPublicSearchResult),\n/* harmony export */   generatedSkillsetToPublicSkillset: () => (/* binding */ generatedSkillsetToPublicSkillset),\n/* harmony export */   generatedSuggestDocumentsResultToPublicSuggestDocumentsResult: () => (/* binding */ generatedSuggestDocumentsResultToPublicSuggestDocumentsResult),\n/* harmony export */   generatedSynonymMapToPublicSynonymMap: () => (/* binding */ generatedSynonymMapToPublicSynonymMap),\n/* harmony export */   generatedVectorSearchAlgorithmConfigurationToPublicVectorSearchAlgorithmConfiguration: () => (/* binding */ generatedVectorSearchAlgorithmConfigurationToPublicVectorSearchAlgorithmConfiguration),\n/* harmony export */   generatedVectorSearchToPublicVectorSearch: () => (/* binding */ generatedVectorSearchToPublicVectorSearch),\n/* harmony export */   generatedVectorSearchVectorizerToPublicVectorizer: () => (/* binding */ generatedVectorSearchVectorizerToPublicVectorizer),\n/* harmony export */   getRandomIntegerInclusive: () => (/* binding */ getRandomIntegerInclusive),\n/* harmony export */   publicDataSourceToGeneratedDataSource: () => (/* binding */ publicDataSourceToGeneratedDataSource),\n/* harmony export */   publicIndexToGeneratedIndex: () => (/* binding */ publicIndexToGeneratedIndex),\n/* harmony export */   publicSearchIndexerToGeneratedSearchIndexer: () => (/* binding */ publicSearchIndexerToGeneratedSearchIndexer),\n/* harmony export */   publicSkillsetToGeneratedSkillset: () => (/* binding */ publicSkillsetToGeneratedSkillset),\n/* harmony export */   publicSynonymMapToGeneratedSynonymMap: () => (/* binding */ publicSynonymMapToGeneratedSynonymMap)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logger */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/logger.js\");\n/* harmony import */ var _serviceModels__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./serviceModels */ \"(ssr)/./node_modules/@azure/search-documents/dist-esm/src/serviceModels.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\nconst defaultServiceVersion = \"2024-07-01\";\nconst knownSkills = {\n    \"#Microsoft.Skills.Custom.WebApiSkill\": true,\n    \"#Microsoft.Skills.Text.AzureOpenAIEmbeddingSkill\": true,\n    \"#Microsoft.Skills.Text.CustomEntityLookupSkill\": true,\n    \"#Microsoft.Skills.Text.EntityRecognitionSkill\": true,\n    \"#Microsoft.Skills.Text.KeyPhraseExtractionSkill\": true,\n    \"#Microsoft.Skills.Text.LanguageDetectionSkill\": true,\n    \"#Microsoft.Skills.Text.MergeSkill\": true,\n    \"#Microsoft.Skills.Text.PIIDetectionSkill\": true,\n    \"#Microsoft.Skills.Text.SentimentSkill\": true,\n    \"#Microsoft.Skills.Text.SplitSkill\": true,\n    \"#Microsoft.Skills.Text.TranslationSkill\": true,\n    \"#Microsoft.Skills.Text.V3.EntityLinkingSkill\": true,\n    \"#Microsoft.Skills.Text.V3.EntityRecognitionSkill\": true,\n    \"#Microsoft.Skills.Text.V3.SentimentSkill\": true,\n    \"#Microsoft.Skills.Util.ConditionalSkill\": true,\n    \"#Microsoft.Skills.Util.DocumentExtractionSkill\": true,\n    \"#Microsoft.Skills.Util.ShaperSkill\": true,\n    \"#Microsoft.Skills.Vision.ImageAnalysisSkill\": true,\n    \"#Microsoft.Skills.Vision.OcrSkill\": true,\n};\nfunction convertSkillsToPublic(skills) {\n    if (!skills) {\n        return skills;\n    }\n    // This validation has already GAed\n    return skills.filter((skill) => knownSkills[skill.odatatype]);\n}\nfunction convertCognitiveServicesAccountToGenerated(cognitiveServicesAccount) {\n    if (!cognitiveServicesAccount) {\n        return cognitiveServicesAccount;\n    }\n    return cognitiveServicesAccount;\n}\nfunction convertCognitiveServicesAccountToPublic(cognitiveServicesAccount) {\n    if (!cognitiveServicesAccount) {\n        return cognitiveServicesAccount;\n    }\n    if (cognitiveServicesAccount.odatatype === \"#Microsoft.Azure.Search.DefaultCognitiveServices\") {\n        return cognitiveServicesAccount;\n    }\n    else {\n        return cognitiveServicesAccount;\n    }\n}\nfunction convertTokenFiltersToGenerated(tokenFilters) {\n    if (!tokenFilters) {\n        return tokenFilters;\n    }\n    const result = [];\n    for (const filter of tokenFilters) {\n        result.push(filter);\n    }\n    return result;\n}\nfunction convertAnalyzersToGenerated(analyzers) {\n    if (!analyzers) {\n        return analyzers;\n    }\n    const result = [];\n    for (const analyzer of analyzers) {\n        switch (analyzer.odatatype) {\n            case \"#Microsoft.Azure.Search.StandardAnalyzer\":\n            case \"#Microsoft.Azure.Search.StopAnalyzer\":\n                result.push(analyzer);\n                break;\n            case \"#Microsoft.Azure.Search.PatternAnalyzer\":\n                result.push(Object.assign(Object.assign({}, analyzer), { flags: analyzer.flags ? analyzer.flags.join(\"|\") : undefined }));\n                break;\n            case \"#Microsoft.Azure.Search.CustomAnalyzer\":\n                result.push(Object.assign(Object.assign({}, analyzer), { tokenizerName: analyzer.tokenizerName }));\n                break;\n        }\n    }\n    return result;\n}\nfunction convertAnalyzersToPublic(analyzers) {\n    if (!analyzers) {\n        return analyzers;\n    }\n    const result = [];\n    for (const analyzer of analyzers) {\n        switch (analyzer.odatatype) {\n            case \"#Microsoft.Azure.Search.StandardAnalyzer\":\n                result.push(analyzer);\n                break;\n            case \"#Microsoft.Azure.Search.StopAnalyzer\":\n                result.push(analyzer);\n                break;\n            case \"#Microsoft.Azure.Search.PatternAnalyzer\":\n                result.push(Object.assign(Object.assign({}, analyzer), { flags: analyzer.flags\n                        ? analyzer.flags.split(\"|\")\n                        : undefined }));\n                break;\n            case \"#Microsoft.Azure.Search.CustomAnalyzer\":\n                result.push(analyzer);\n                break;\n        }\n    }\n    return result;\n}\nfunction convertFieldsToPublic(fields) {\n    if (!fields) {\n        return fields;\n    }\n    return fields.map((field) => {\n        if (field.type === \"Collection(Edm.ComplexType)\" || field.type === \"Edm.ComplexType\") {\n            const result = {\n                name: field.name,\n                type: field.type,\n                fields: convertFieldsToPublic(field.fields),\n            };\n            return result;\n        }\n        else {\n            const type = field.type;\n            const synonymMapNames = field.synonymMaps;\n            const { retrievable, analyzer, searchAnalyzer, indexAnalyzer } = field, restField = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(field, [\"retrievable\", \"analyzer\", \"searchAnalyzer\", \"indexAnalyzer\"]);\n            const hidden = typeof retrievable === \"boolean\" ? !retrievable : retrievable;\n            const result = Object.assign(Object.assign({}, restField), { type,\n                hidden, analyzerName: analyzer, searchAnalyzerName: searchAnalyzer, indexAnalyzerName: indexAnalyzer, synonymMapNames });\n            return result;\n        }\n    });\n}\nfunction convertFieldsToGenerated(fields) {\n    return fields.map((field) => {\n        var _a, _b, _c, _d;\n        if ((0,_serviceModels__WEBPACK_IMPORTED_MODULE_1__.isComplexField)(field)) {\n            return {\n                name: field.name,\n                type: field.type,\n                fields: field.fields ? convertFieldsToGenerated(field.fields) : field.fields,\n            };\n        }\n        else {\n            const { hidden } = field, restField = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(field, [\"hidden\"]);\n            const retrievable = typeof hidden === \"boolean\" ? !hidden : hidden;\n            return Object.assign(Object.assign({}, restField), { retrievable, \n                // modify API defaults to use less storage for simple types\n                searchable: (_a = field.searchable) !== null && _a !== void 0 ? _a : false, filterable: (_b = field.filterable) !== null && _b !== void 0 ? _b : false, facetable: (_c = field.facetable) !== null && _c !== void 0 ? _c : false, sortable: (_d = field.sortable) !== null && _d !== void 0 ? _d : false, analyzer: field.analyzerName, searchAnalyzer: field.searchAnalyzerName, indexAnalyzer: field.indexAnalyzerName, synonymMaps: field.synonymMapNames });\n        }\n    });\n}\nfunction convertTokenizersToGenerated(tokenizers) {\n    if (!tokenizers) {\n        return tokenizers;\n    }\n    const result = [];\n    for (const tokenizer of tokenizers) {\n        if (tokenizer.odatatype === \"#Microsoft.Azure.Search.PatternTokenizer\") {\n            result.push(Object.assign(Object.assign({}, tokenizer), { flags: tokenizer.flags ? tokenizer.flags.join(\"|\") : undefined }));\n        }\n        else {\n            result.push(tokenizer);\n        }\n    }\n    return result;\n}\nfunction convertTokenizersToPublic(tokenizers) {\n    var _a;\n    if (!tokenizers) {\n        return tokenizers;\n    }\n    const result = [];\n    for (const tokenizer of tokenizers) {\n        if (tokenizer.odatatype === \"#Microsoft.Azure.Search.PatternTokenizer\") {\n            const patternTokenizer = tokenizer;\n            const flags = (_a = patternTokenizer.flags) === null || _a === void 0 ? void 0 : _a.split(\"|\");\n            result.push(Object.assign(Object.assign({}, tokenizer), { flags }));\n        }\n        else {\n            result.push(tokenizer);\n        }\n    }\n    return result;\n}\nfunction convertSimilarityToGenerated(similarity) {\n    if (!similarity) {\n        return similarity;\n    }\n    return similarity;\n}\nfunction convertSimilarityToPublic(similarity) {\n    if (!similarity) {\n        return similarity;\n    }\n    if (similarity.odatatype === \"#Microsoft.Azure.Search.ClassicSimilarity\") {\n        return similarity;\n    }\n    else {\n        return similarity;\n    }\n}\nfunction convertEncryptionKeyToPublic(encryptionKey) {\n    if (!encryptionKey) {\n        return encryptionKey;\n    }\n    const result = {\n        keyName: encryptionKey.keyName,\n        keyVersion: encryptionKey.keyVersion,\n        vaultUrl: encryptionKey.vaultUri,\n    };\n    if (encryptionKey.accessCredentials) {\n        result.applicationId = encryptionKey.accessCredentials.applicationId;\n        result.applicationSecret = encryptionKey.accessCredentials.applicationSecret;\n    }\n    return result;\n}\nfunction convertEncryptionKeyToGenerated(encryptionKey) {\n    if (!encryptionKey) {\n        return encryptionKey;\n    }\n    const result = {\n        keyName: encryptionKey.keyName,\n        keyVersion: encryptionKey.keyVersion,\n        vaultUri: encryptionKey.vaultUrl,\n    };\n    if (encryptionKey.applicationId) {\n        result.accessCredentials = {\n            applicationId: encryptionKey.applicationId,\n            applicationSecret: encryptionKey.applicationSecret,\n        };\n    }\n    return result;\n}\nfunction generatedIndexToPublicIndex(generatedIndex) {\n    return {\n        name: generatedIndex.name,\n        defaultScoringProfile: generatedIndex.defaultScoringProfile,\n        corsOptions: generatedIndex.corsOptions,\n        suggesters: generatedIndex.suggesters,\n        encryptionKey: convertEncryptionKeyToPublic(generatedIndex.encryptionKey),\n        etag: generatedIndex.etag,\n        analyzers: convertAnalyzersToPublic(generatedIndex.analyzers),\n        tokenizers: convertTokenizersToPublic(generatedIndex.tokenizers),\n        tokenFilters: generatedIndex.tokenFilters,\n        charFilters: generatedIndex.charFilters,\n        scoringProfiles: generatedIndex.scoringProfiles,\n        fields: convertFieldsToPublic(generatedIndex.fields),\n        similarity: convertSimilarityToPublic(generatedIndex.similarity),\n        semanticSearch: generatedIndex.semanticSearch,\n        vectorSearch: generatedVectorSearchToPublicVectorSearch(generatedIndex.vectorSearch),\n    };\n}\nfunction generatedVectorSearchVectorizerToPublicVectorizer(generatedVectorizer) {\n    if (!generatedVectorizer) {\n        return generatedVectorizer;\n    }\n    switch (generatedVectorizer.kind) {\n        case \"azureOpenAI\": {\n            const { parameters } = generatedVectorizer;\n            const authIdentity = convertSearchIndexerDataIdentityToPublic(parameters === null || parameters === void 0 ? void 0 : parameters.authIdentity);\n            const vectorizer = Object.assign(Object.assign({}, generatedVectorizer), { parameters: Object.assign(Object.assign({}, parameters), { authIdentity }) });\n            return vectorizer;\n        }\n        case \"customWebApi\": {\n            const { parameters } = generatedVectorizer;\n            const authIdentity = convertSearchIndexerDataIdentityToPublic(parameters === null || parameters === void 0 ? void 0 : parameters.authIdentity);\n            const vectorizer = Object.assign(Object.assign({}, generatedVectorizer), { parameters: Object.assign(Object.assign({}, parameters), { authIdentity }) });\n            return vectorizer;\n        }\n    }\n    _logger__WEBPACK_IMPORTED_MODULE_2__.logger.warning(`Unsupported vectorizer kind: ${generatedVectorizer.kind}`);\n    return generatedVectorizer;\n}\nfunction generatedVectorSearchAlgorithmConfigurationToPublicVectorSearchAlgorithmConfiguration(generatedAlgorithmConfiguration) {\n    var _a;\n    if (!generatedAlgorithmConfiguration) {\n        return generatedAlgorithmConfiguration;\n    }\n    if ([\"hnsw\", \"exhaustiveKnn\"].includes(generatedAlgorithmConfiguration.kind)) {\n        const algorithmConfiguration = generatedAlgorithmConfiguration;\n        const metric = (_a = algorithmConfiguration.parameters) === null || _a === void 0 ? void 0 : _a.metric;\n        return Object.assign(Object.assign({}, algorithmConfiguration), { parameters: Object.assign(Object.assign({}, algorithmConfiguration.parameters), { metric }) });\n    }\n    throw Error(\"Unsupported algorithm configuration\");\n}\nfunction generatedVectorSearchToPublicVectorSearch(vectorSearch) {\n    var _a, _b;\n    if (!vectorSearch) {\n        return vectorSearch;\n    }\n    return Object.assign(Object.assign({}, vectorSearch), { algorithms: (_a = vectorSearch.algorithms) === null || _a === void 0 ? void 0 : _a.map(generatedVectorSearchAlgorithmConfigurationToPublicVectorSearchAlgorithmConfiguration), vectorizers: (_b = vectorSearch.vectorizers) === null || _b === void 0 ? void 0 : _b.map(generatedVectorSearchVectorizerToPublicVectorizer) });\n}\nfunction generatedSearchResultToPublicSearchResult(results) {\n    const returnValues = results.map((result) => {\n        const { _score: score, _highlights: highlights, _rerankerScore: rerankerScore, _captions: captions } = result, restProps = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(result, [\"_score\", \"_highlights\", \"_rerankerScore\", \"_captions\"]);\n        const obj = {\n            score,\n            highlights,\n            rerankerScore,\n            captions,\n            document: restProps,\n        };\n        return obj;\n    });\n    return returnValues;\n}\nfunction generatedSuggestDocumentsResultToPublicSuggestDocumentsResult(searchDocumentsResult) {\n    const results = searchDocumentsResult.results.map((element) => {\n        const { _text } = element, restProps = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(element, [\"_text\"]);\n        const obj = {\n            text: _text,\n            document: restProps,\n        };\n        return obj;\n    });\n    const result = {\n        results: results,\n        coverage: searchDocumentsResult.coverage,\n    };\n    return result;\n}\nfunction publicIndexToGeneratedIndex(index) {\n    const { encryptionKey, tokenFilters, analyzers, tokenizers, fields, similarity } = index;\n    return Object.assign(Object.assign({}, index), { encryptionKey: convertEncryptionKeyToGenerated(encryptionKey), tokenFilters: convertTokenFiltersToGenerated(tokenFilters), analyzers: convertAnalyzersToGenerated(analyzers), tokenizers: convertTokenizersToGenerated(tokenizers), fields: convertFieldsToGenerated(fields), similarity: convertSimilarityToGenerated(similarity) });\n}\nfunction generatedSkillsetToPublicSkillset(generatedSkillset) {\n    const { skills, cognitiveServicesAccount, encryptionKey, indexProjection } = generatedSkillset, props = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(generatedSkillset, [\"skills\", \"cognitiveServicesAccount\", \"encryptionKey\", \"indexProjection\"]);\n    return Object.assign(Object.assign({}, props), { skills: convertSkillsToPublic(skills), cognitiveServicesAccount: convertCognitiveServicesAccountToPublic(cognitiveServicesAccount), encryptionKey: convertEncryptionKeyToPublic(encryptionKey), indexProjection: indexProjection });\n}\nfunction publicSkillsetToGeneratedSkillset(skillset) {\n    return Object.assign(Object.assign({}, skillset), { name: skillset.name, description: skillset.description, etag: skillset.etag, skills: skillset.skills, cognitiveServicesAccount: convertCognitiveServicesAccountToGenerated(skillset.cognitiveServicesAccount), knowledgeStore: skillset.knowledgeStore, encryptionKey: convertEncryptionKeyToGenerated(skillset.encryptionKey) });\n}\nfunction generatedSynonymMapToPublicSynonymMap(synonymMap) {\n    const result = {\n        name: synonymMap.name,\n        encryptionKey: convertEncryptionKeyToPublic(synonymMap.encryptionKey),\n        etag: synonymMap.etag,\n        synonyms: [],\n    };\n    if (synonymMap.synonyms) {\n        result.synonyms = synonymMap.synonyms.split(\"\\n\");\n    }\n    return result;\n}\nfunction publicSynonymMapToGeneratedSynonymMap(synonymMap) {\n    const result = {\n        name: synonymMap.name,\n        format: \"solr\",\n        encryptionKey: convertEncryptionKeyToGenerated(synonymMap.encryptionKey),\n        etag: synonymMap.etag,\n        synonyms: synonymMap.synonyms.join(\"\\n\"),\n    };\n    result.encryptionKey = convertEncryptionKeyToGenerated(synonymMap.encryptionKey);\n    return result;\n}\nfunction publicSearchIndexerToGeneratedSearchIndexer(indexer) {\n    return Object.assign(Object.assign({}, indexer), { encryptionKey: convertEncryptionKeyToGenerated(indexer.encryptionKey) });\n}\nfunction generatedSearchIndexerToPublicSearchIndexer(indexer) {\n    var _a, _b, _c, _d;\n    const { parsingMode, dataToExtract, imageAction, pdfTextRotationAlgorithm, executionEnvironment, } = (_b = (_a = indexer.parameters) === null || _a === void 0 ? void 0 : _a.configuration) !== null && _b !== void 0 ? _b : {};\n    const configuration = ((_c = indexer.parameters) === null || _c === void 0 ? void 0 : _c.configuration) && Object.assign(Object.assign({}, (_d = indexer.parameters) === null || _d === void 0 ? void 0 : _d.configuration), { parsingMode: parsingMode, dataToExtract: dataToExtract, imageAction: imageAction, pdfTextRotationAlgorithm: pdfTextRotationAlgorithm, executionEnvironment: executionEnvironment });\n    const parameters = Object.assign(Object.assign({}, indexer.parameters), { configuration });\n    return Object.assign(Object.assign({}, indexer), { parameters, encryptionKey: convertEncryptionKeyToPublic(indexer.encryptionKey) });\n}\nfunction publicDataSourceToGeneratedDataSource(dataSource) {\n    return {\n        name: dataSource.name,\n        description: dataSource.description,\n        type: dataSource.type,\n        credentials: {\n            connectionString: dataSource.connectionString,\n        },\n        container: dataSource.container,\n        etag: dataSource.etag,\n        dataChangeDetectionPolicy: dataSource.dataChangeDetectionPolicy,\n        dataDeletionDetectionPolicy: dataSource.dataDeletionDetectionPolicy,\n        encryptionKey: convertEncryptionKeyToGenerated(dataSource.encryptionKey),\n    };\n}\nfunction generatedDataSourceToPublicDataSource(dataSource) {\n    return {\n        name: dataSource.name,\n        description: dataSource.name,\n        type: dataSource.type,\n        connectionString: dataSource.credentials.connectionString,\n        container: dataSource.container,\n        etag: dataSource.etag,\n        dataChangeDetectionPolicy: convertDataChangeDetectionPolicyToPublic(dataSource.dataChangeDetectionPolicy),\n        dataDeletionDetectionPolicy: convertDataDeletionDetectionPolicyToPublic(dataSource.dataDeletionDetectionPolicy),\n        encryptionKey: convertEncryptionKeyToPublic(dataSource.encryptionKey),\n    };\n}\nfunction convertSearchIndexerDataIdentityToPublic(searchIndexerDataIdentity) {\n    if (!searchIndexerDataIdentity) {\n        return searchIndexerDataIdentity;\n    }\n    if (searchIndexerDataIdentity.odatatype === \"#Microsoft.Azure.Search.DataNoneIdentity\") {\n        return searchIndexerDataIdentity;\n    }\n    else {\n        return searchIndexerDataIdentity;\n    }\n}\nfunction convertDataChangeDetectionPolicyToPublic(dataChangeDetectionPolicy) {\n    if (!dataChangeDetectionPolicy) {\n        return dataChangeDetectionPolicy;\n    }\n    if (dataChangeDetectionPolicy.odatatype ===\n        \"#Microsoft.Azure.Search.HighWaterMarkChangeDetectionPolicy\") {\n        return dataChangeDetectionPolicy;\n    }\n    else {\n        return dataChangeDetectionPolicy;\n    }\n}\nfunction convertDataDeletionDetectionPolicyToPublic(dataDeletionDetectionPolicy) {\n    if (!dataDeletionDetectionPolicy) {\n        return dataDeletionDetectionPolicy;\n    }\n    return dataDeletionDetectionPolicy;\n}\nfunction getRandomIntegerInclusive(min, max) {\n    // Make sure inputs are integers.\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    // Pick a random offset from zero to the size of the range.\n    // Since Math.random() can never return 1, we have to make the range one larger\n    // in order to be inclusive of the maximum value after we take the floor.\n    const offset = Math.floor(Math.random() * (max - min + 1));\n    return offset + min;\n}\n//# sourceMappingURL=serviceUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/serviceUtils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/tracing.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/tracing.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSpan: () => (/* binding */ createSpan)\n/* harmony export */ });\n/* harmony import */ var _azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-tracing */ \"(ssr)/./node_modules/@azure/core-tracing/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Creates a tracing client using the global tracer.\n * @internal\n */\nconst tracingClient = (0,_azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__.createTracingClient)({\n    namespace: \"Microsoft.Search\",\n    packageName: \"Azure.Search\",\n});\nconst createSpan = tracingClient.startSpan;\n//# sourceMappingURL=tracing.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL3NlYXJjaC1kb2N1bWVudHMvZGlzdC1lc20vc3JjL3RyYWNpbmcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQzBEO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHdFQUFtQjtBQUN6QztBQUNBO0FBQ0EsQ0FBQztBQUNNO0FBQ1AiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbGlmZWNcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcaGVsbG8tdm9pY2VcXG5vZGVfbW9kdWxlc1xcQGF6dXJlXFxzZWFyY2gtZG9jdW1lbnRzXFxkaXN0LWVzbVxcc3JjXFx0cmFjaW5nLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuaW1wb3J0IHsgY3JlYXRlVHJhY2luZ0NsaWVudCB9IGZyb20gXCJAYXp1cmUvY29yZS10cmFjaW5nXCI7XG4vKipcbiAqIENyZWF0ZXMgYSB0cmFjaW5nIGNsaWVudCB1c2luZyB0aGUgZ2xvYmFsIHRyYWNlci5cbiAqIEBpbnRlcm5hbFxuICovXG5jb25zdCB0cmFjaW5nQ2xpZW50ID0gY3JlYXRlVHJhY2luZ0NsaWVudCh7XG4gICAgbmFtZXNwYWNlOiBcIk1pY3Jvc29mdC5TZWFyY2hcIixcbiAgICBwYWNrYWdlTmFtZTogXCJBenVyZS5TZWFyY2hcIixcbn0pO1xuZXhwb3J0IGNvbnN0IGNyZWF0ZVNwYW4gPSB0cmFjaW5nQ2xpZW50LnN0YXJ0U3Bhbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRyYWNpbmcuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/tracing.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/search-documents/dist-esm/src/walk.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/search-documents/dist-esm/src/walk.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   walk: () => (/* binding */ walk)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(ssr)/./node_modules/@azure/core-util/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nfunction walk(v, fn) {\n    var _a;\n    const seen = new Set();\n    const mutated = new Map();\n    deepLazyApply(v);\n    for (const value of mutated.values()) {\n        replaceChildren(value);\n    }\n    return (_a = mutated.get(v)) !== null && _a !== void 0 ? _a : v;\n    function deepLazyApply(value) {\n        var _a, _b;\n        if (seen.has(value)) {\n            return;\n        }\n        seen.add(value);\n        const children = getChildren((_a = cachedApply(value)) !== null && _a !== void 0 ? _a : value);\n        children === null || children === void 0 ? void 0 : children.forEach(deepLazyApply);\n        if (children === null || children === void 0 ? void 0 : children.some((node) => mutated.has(node))) {\n            mutated.set(value, (_b = mutated.get(value)) !== null && _b !== void 0 ? _b : shallowCopy(value));\n        }\n    }\n    function cachedApply(value) {\n        const cached = mutated.get(value);\n        if ((0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.isDefined)(cached)) {\n            return cached;\n        }\n        const applied = fn(value);\n        if (value !== applied) {\n            mutated.set(value, applied);\n        }\n        return mutated.get(value);\n    }\n    function replaceChildren(applied) {\n        if (!isComplex(applied)) {\n            return;\n        }\n        else if (Array.isArray(applied)) {\n            applied.forEach((e, i) => {\n                var _a;\n                applied[i] = (_a = mutated.get(e)) !== null && _a !== void 0 ? _a : e;\n            });\n        }\n        else if (typeof applied === \"object\" && applied !== null) {\n            Object.keys(applied).forEach((key) => {\n                var _a;\n                applied[key] = (_a = mutated.get(applied[key])) !== null && _a !== void 0 ? _a : applied[key];\n            });\n        }\n    }\n}\n/**\n * Array inputs SHOULD not have both complex and non-complex elements. This function determines\n * whether an array is complex based solely on the first element.\n */\nfunction isComplex(v) {\n    return Array.isArray(v) ? isComplex(v[0]) : typeof v === \"object\" && v !== null;\n}\nfunction getChildren(v) {\n    if (!isComplex(v)) {\n        return;\n    }\n    if (Array.isArray(v)) {\n        return v;\n    }\n    return Object.values(v);\n}\nfunction shallowCopy(value) {\n    const maybeCopy = Array.isArray(value)\n        ? value.map((v) => v)\n        : typeof value === \"object\" && value !== null\n            ? Object.assign({}, value) : value;\n    return value === maybeCopy\n        ? value\n        : Object.setPrototypeOf(maybeCopy, Object.getPrototypeOf(value));\n}\n//# sourceMappingURL=walk.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL3NlYXJjaC1kb2N1bWVudHMvZGlzdC1lc20vc3JjL3dhbGsuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQzZDO0FBQ3RDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDJEQUFTO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGxpZmVjXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGhlbGxvLXZvaWNlXFxub2RlX21vZHVsZXNcXEBhenVyZVxcc2VhcmNoLWRvY3VtZW50c1xcZGlzdC1lc21cXHNyY1xcd2Fsay5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmltcG9ydCB7IGlzRGVmaW5lZCB9IGZyb20gXCJAYXp1cmUvY29yZS11dGlsXCI7XG5leHBvcnQgZnVuY3Rpb24gd2Fsayh2LCBmbikge1xuICAgIHZhciBfYTtcbiAgICBjb25zdCBzZWVuID0gbmV3IFNldCgpO1xuICAgIGNvbnN0IG11dGF0ZWQgPSBuZXcgTWFwKCk7XG4gICAgZGVlcExhenlBcHBseSh2KTtcbiAgICBmb3IgKGNvbnN0IHZhbHVlIG9mIG11dGF0ZWQudmFsdWVzKCkpIHtcbiAgICAgICAgcmVwbGFjZUNoaWxkcmVuKHZhbHVlKTtcbiAgICB9XG4gICAgcmV0dXJuIChfYSA9IG11dGF0ZWQuZ2V0KHYpKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiB2O1xuICAgIGZ1bmN0aW9uIGRlZXBMYXp5QXBwbHkodmFsdWUpIHtcbiAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgaWYgKHNlZW4uaGFzKHZhbHVlKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHNlZW4uYWRkKHZhbHVlKTtcbiAgICAgICAgY29uc3QgY2hpbGRyZW4gPSBnZXRDaGlsZHJlbigoX2EgPSBjYWNoZWRBcHBseSh2YWx1ZSkpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHZhbHVlKTtcbiAgICAgICAgY2hpbGRyZW4gPT09IG51bGwgfHwgY2hpbGRyZW4gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNoaWxkcmVuLmZvckVhY2goZGVlcExhenlBcHBseSk7XG4gICAgICAgIGlmIChjaGlsZHJlbiA9PT0gbnVsbCB8fCBjaGlsZHJlbiA9PT0gdm9pZCAwID8gdm9pZCAwIDogY2hpbGRyZW4uc29tZSgobm9kZSkgPT4gbXV0YXRlZC5oYXMobm9kZSkpKSB7XG4gICAgICAgICAgICBtdXRhdGVkLnNldCh2YWx1ZSwgKF9iID0gbXV0YXRlZC5nZXQodmFsdWUpKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBzaGFsbG93Q29weSh2YWx1ZSkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNhY2hlZEFwcGx5KHZhbHVlKSB7XG4gICAgICAgIGNvbnN0IGNhY2hlZCA9IG11dGF0ZWQuZ2V0KHZhbHVlKTtcbiAgICAgICAgaWYgKGlzRGVmaW5lZChjYWNoZWQpKSB7XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGFwcGxpZWQgPSBmbih2YWx1ZSk7XG4gICAgICAgIGlmICh2YWx1ZSAhPT0gYXBwbGllZCkge1xuICAgICAgICAgICAgbXV0YXRlZC5zZXQodmFsdWUsIGFwcGxpZWQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBtdXRhdGVkLmdldCh2YWx1ZSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHJlcGxhY2VDaGlsZHJlbihhcHBsaWVkKSB7XG4gICAgICAgIGlmICghaXNDb21wbGV4KGFwcGxpZWQpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoQXJyYXkuaXNBcnJheShhcHBsaWVkKSkge1xuICAgICAgICAgICAgYXBwbGllZC5mb3JFYWNoKChlLCBpKSA9PiB7XG4gICAgICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgICAgIGFwcGxpZWRbaV0gPSAoX2EgPSBtdXRhdGVkLmdldChlKSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogZTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHR5cGVvZiBhcHBsaWVkID09PSBcIm9iamVjdFwiICYmIGFwcGxpZWQgIT09IG51bGwpIHtcbiAgICAgICAgICAgIE9iamVjdC5rZXlzKGFwcGxpZWQpLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgICAgICBhcHBsaWVkW2tleV0gPSAoX2EgPSBtdXRhdGVkLmdldChhcHBsaWVkW2tleV0pKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBhcHBsaWVkW2tleV07XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8qKlxuICogQXJyYXkgaW5wdXRzIFNIT1VMRCBub3QgaGF2ZSBib3RoIGNvbXBsZXggYW5kIG5vbi1jb21wbGV4IGVsZW1lbnRzLiBUaGlzIGZ1bmN0aW9uIGRldGVybWluZXNcbiAqIHdoZXRoZXIgYW4gYXJyYXkgaXMgY29tcGxleCBiYXNlZCBzb2xlbHkgb24gdGhlIGZpcnN0IGVsZW1lbnQuXG4gKi9cbmZ1bmN0aW9uIGlzQ29tcGxleCh2KSB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkodikgPyBpc0NvbXBsZXgodlswXSkgOiB0eXBlb2YgdiA9PT0gXCJvYmplY3RcIiAmJiB2ICE9PSBudWxsO1xufVxuZnVuY3Rpb24gZ2V0Q2hpbGRyZW4odikge1xuICAgIGlmICghaXNDb21wbGV4KHYpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKEFycmF5LmlzQXJyYXkodikpIHtcbiAgICAgICAgcmV0dXJuIHY7XG4gICAgfVxuICAgIHJldHVybiBPYmplY3QudmFsdWVzKHYpO1xufVxuZnVuY3Rpb24gc2hhbGxvd0NvcHkodmFsdWUpIHtcbiAgICBjb25zdCBtYXliZUNvcHkgPSBBcnJheS5pc0FycmF5KHZhbHVlKVxuICAgICAgICA/IHZhbHVlLm1hcCgodikgPT4gdilcbiAgICAgICAgOiB0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCIgJiYgdmFsdWUgIT09IG51bGxcbiAgICAgICAgICAgID8gT2JqZWN0LmFzc2lnbih7fSwgdmFsdWUpIDogdmFsdWU7XG4gICAgcmV0dXJuIHZhbHVlID09PSBtYXliZUNvcHlcbiAgICAgICAgPyB2YWx1ZVxuICAgICAgICA6IE9iamVjdC5zZXRQcm90b3R5cGVPZihtYXliZUNvcHksIE9iamVjdC5nZXRQcm90b3R5cGVPZih2YWx1ZSkpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2Fsay5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/search-documents/dist-esm/src/walk.js\n");

/***/ })

};
;