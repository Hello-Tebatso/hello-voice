(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([[974], { 2740: (e, t, a) => { Promise.resolve().then(a.bind(a, 8461)) }, 4583: () => { }, 8461: (e, t, a) => { "use strict"; let n; a.d(t, { default: () => W }); var s = a(5155), i = a(2115), r = a(3378), l = a(3096), o = a(2596), c = a(9688); function d() { for (var e = arguments.length, t = Array(e), a = 0; a < e; a++)t[a] = arguments[a]; return (0, c.QP)((0, o.$)(t)) } let u = r.bL, h = i.forwardRef((e, t) => { let { className: a, ...n } = e; return (0, s.jsx)(r.q7, { ref: t, className: d("border-b", a), ...n }) }); h.displayName = "AccordionItem"; let m = i.forwardRef((e, t) => { let { className: a, children: n, ...i } = e; return (0, s.jsx)(r.Y9, { className: "flex", children: (0, s.jsxs)(r.l9, { ref: t, className: d("flex flex-1 items-center justify-between py-4 text-sm font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180", a), ...i, children: [n, (0, s.jsx)(l.D3D, { className: "h-4 w-4 shrink-0 text-muted-foreground transition-transform duration-200" })] }) }) }); m.displayName = r.l9.displayName; let p = i.forwardRef((e, t) => { let { className: a, children: n, ...i } = e; return (0, s.jsx)(r.UC, { ref: t, className: "overflow-hidden text-sm data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down", ...i, children: (0, s.jsx)("div", { className: d("pb-4 pt-0", a), children: n }) }) }); p.displayName = r.UC.displayName; var g = a(9708); let f = (0, a(2085).F)("inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0", { variants: { variant: { default: "bg-primary text-primary-foreground shadow hover:bg-primary/90", destructive: "bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90", outline: "border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground", secondary: "bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80", ghost: "hover:bg-accent hover:text-accent-foreground", link: "text-primary underline-offset-4 hover:underline" }, size: { default: "h-9 px-4 py-2", sm: "h-8 rounded-md px-3 text-xs", lg: "h-10 rounded-md px-8", icon: "h-9 w-9" } }, defaultVariants: { variant: "default", size: "default" } }), x = i.forwardRef((e, t) => { let { className: a, variant: n, size: i, asChild: r = !1, ...l } = e, o = r ? g.DX : "button"; return (0, s.jsx)(o, { className: d(f({ variant: n, size: i, className: a })), ref: t, ...l }) }); x.displayName = "Button"; let v = i.forwardRef((e, t) => { let { className: a, type: n, ...i } = e; return (0, s.jsx)("input", { type: n, className: d("flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50", a), ref: t, ...i }) }); v.displayName = "Input"; var y = a(4131); let j = y.bL; y.YJ; let C = y.WT, w = i.forwardRef((e, t) => { let { className: a, children: n, ...i } = e; return (0, s.jsxs)(y.l9, { ref: t, className: d("flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1", a), ...i, children: [n, (0, s.jsx)(y.In, { asChild: !0, children: (0, s.jsx)(l.TBE, { className: "h-4 w-4 opacity-50" }) })] }) }); w.displayName = y.l9.displayName; let b = i.forwardRef((e, t) => { let { className: a, ...n } = e; return (0, s.jsx)(y.PP, { ref: t, className: d("flex cursor-default items-center justify-center py-1", a), ...n, children: (0, s.jsx)(l.Mtm, {}) }) }); b.displayName = y.PP.displayName; let N = i.forwardRef((e, t) => { let { className: a, ...n } = e; return (0, s.jsx)(y.wn, { ref: t, className: d("flex cursor-default items-center justify-center py-1", a), ...n, children: (0, s.jsx)(l.D3D, {}) }) }); N.displayName = y.wn.displayName; let S = i.forwardRef((e, t) => { let { className: a, children: n, position: i = "popper", ...r } = e; return (0, s.jsx)(y.ZL, { children: (0, s.jsxs)(y.UC, { ref: t, className: d("relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2", "popper" === i && "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1", a), position: i, ...r, children: [(0, s.jsx)(b, {}), (0, s.jsx)(y.LM, { className: d("p-1", "popper" === i && "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"), children: n }), (0, s.jsx)(N, {})] }) }) }); S.displayName = y.UC.displayName, i.forwardRef((e, t) => { let { className: a, ...n } = e; return (0, s.jsx)(y.JU, { ref: t, className: d("px-2 py-1.5 text-sm font-semibold", a), ...n }) }).displayName = y.JU.displayName; let k = i.forwardRef((e, t) => { let { className: a, children: n, ...i } = e; return (0, s.jsxs)(y.q7, { ref: t, className: d("relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50", a), ...i, children: [(0, s.jsx)("span", { className: "absolute right-2 flex h-3.5 w-3.5 items-center justify-center", children: (0, s.jsx)(y.VF, { children: (0, s.jsx)(l.Srz, { className: "h-4 w-4" }) }) }), (0, s.jsx)(y.p4, { children: n })] }) }); k.displayName = y.q7.displayName, i.forwardRef((e, t) => { let { className: a, ...n } = e; return (0, s.jsx)(y.wv, { ref: t, className: d("-mx-1 my-1 h-px bg-muted", a), ...n }) }).displayName = y.wv.displayName; var A = a(4073); let R = i.forwardRef((e, t) => { let { className: a, ...n } = e; return (0, s.jsxs)(A.bL, { ref: t, className: d("relative flex w-full touch-none select-none items-center", a), ...n, children: [(0, s.jsx)(A.CC, { className: "relative h-1.5 w-full grow overflow-hidden rounded-full bg-primary/20", children: (0, s.jsx)(A.Q6, { className: "absolute h-full bg-primary" }) }), (0, s.jsx)(A.zi, { className: "block h-4 w-4 rounded-full border border-primary/50 bg-background shadow transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50" })] }) }); R.displayName = A.bL.displayName; var T = a(4884); let D = i.forwardRef((e, t) => { let { className: a, ...n } = e; return (0, s.jsx)(T.bL, { className: d("peer inline-flex h-5 w-9 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent shadow-sm transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input", a), ...n, ref: t, children: (0, s.jsx)(T.zi, { className: d("pointer-events-none block h-4 w-4 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-4 data-[state=unchecked]:translate-x-0") }) }) }); D.displayName = T.bL.displayName; class _ { async initialize() { await this.context.audioWorklet.addModule("/audio-processor.js"), this.analysisNode = this.context.createAnalyser(), this.analysisNode.fftSize = 2048, this.analysisNode.smoothingTimeConstant = .85, this.dataArray = new Uint8Array(this.analysisNode.frequencyBinCount) } async startRecording(e) { try { if (this.workletNode || await this.initialize(), this.stream = await navigator.mediaDevices.getUserMedia({ audio: { channelCount: 1, sampleRate: this.sampleRate, echoCancellation: !0, noiseSuppression: !0 } }), await this.context.resume(), this.source = this.context.createMediaStreamSource(this.stream), this.workletNode = new AudioWorkletNode(this.context, "audio-recorder-processor"), this.workletNode.port.onmessage = t => { if ("audio" === t.data.eventType) { let a = t.data.audioData, n = new Int16Array(a.length); for (let e = 0; e < a.length; e++) { let t = Math.max(-1, Math.min(1, a[e])); n[e] = t < 0 ? 32768 * t : 32767 * t } this.isRecordingSession && this.recordInputChunk(n); let s = new Uint8Array(n.buffer); e(s) } }, this.source.connect(this.workletNode), this.analysisNode && this.circleElement) { var t; null == (t = this.source) || t.connect(this.analysisNode), this.startAnimation("record") } this.workletNode.connect(this.context.destination), this.workletNode.port.postMessage({ command: "START_RECORDING" }) } catch (e) { throw console.error("Error starting recording:", e), e } } stopRecording() { if (!this.workletNode || !this.source || !this.stream) throw Error("Recording not started"); this.workletNode.port.postMessage({ command: "STOP_RECORDING" }), this.workletNode.disconnect(), this.source.disconnect(), this.stream.getTracks().forEach(e => e.stop()) } startStreamingPlayback() { this.isPlaying = !0, this.nextPlayTime = this.context.currentTime } stopStreamingPlayback() { this.isPlaying = !1, this.playbackQueue.forEach(e => e.stop()), this.playbackQueue = []; let e = Date.now() - this.sessionStartTime; this.audioTimeline = this.audioTimeline.filter(t => t.startTime <= e); let t = this.audioTimeline.filter(e => "output" === e.type).sort((e, t) => t.startTime - e.startTime)[0]; t ? this.lastOutputRecordedTime = t.startTime + t.data.length / this.sampleRate * 1e3 : this.lastOutputRecordedTime = 0 } playChunk(e, t) { if (!this.isPlaying) return; let a = new Int16Array(e.buffer); this.isRecordingSession && this.recordOutputChunk(a); let n = new Float32Array(a.length); for (let e = 0; e < a.length; e++)n[e] = a[e] / (a[e] < 0 ? 32768 : 32767); let s = this.context.createBuffer(1, n.length, this.sampleRate); s.getChannelData(0).set(n); let i = this.context.createBufferSource(); i.buffer = s, i.connect(this.context.destination), this.analysisNode && this.circleElement && (null == i || i.connect(this.analysisNode), this.startAnimation("play-chunk")); let r = s.length / this.sampleRate; this.nextPlayTime < this.context.currentTime && (this.nextPlayTime = this.context.currentTime), i.start(this.nextPlayTime), this.playbackQueue.push(i), i.onended = () => { t(); let e = this.playbackQueue.indexOf(i); e > -1 && this.playbackQueue.splice(e, 1), 0 === this.playbackQueue.length && this.stream && this.circleElement && this.startAnimation("record") }, this.nextPlayTime += r } fillSilenceGap(e, t) { let a = t ? this.lastInputRecordedTime : this.lastOutputRecordedTime; if (a < e) { let n = Math.floor((e - a) * this.sampleRate / 1e3); if (n > 0) { let e = n, s = a; for (; e > 0;) { let a = Math.min(e, this.silenceBuffer.length), n = new Int16Array(a); this.audioTimeline.push({ type: t ? "input-silence" : "output-silence", startTime: s, data: n }), e -= a, s += a / this.sampleRate * 1e3 } } } } recordInputChunk(e) { let t = Date.now() - this.sessionStartTime; this.fillSilenceGap(t, !0), this.audioTimeline.push({ type: "input", startTime: t, data: new Int16Array(e) }), this.lastInputRecordedTime = t + e.length / this.sampleRate * 1e3 } recordOutputChunk(e) { let t = Date.now() - this.sessionStartTime; this.lastOutputRecordedTime < t && (this.fillSilenceGap(t, !1), this.lastOutputRecordedTime = t); let a = Math.floor(.05 * this.sampleRate); for (let t = 0; t < e.length; t += a) { let n = Math.min(a, e.length - t), s = new Int16Array(n); s.set(e.subarray(t, t + n)), this.audioTimeline.push({ type: "output", startTime: this.lastOutputRecordedTime + t / this.sampleRate * 1e3, data: s }) } this.lastOutputRecordedTime = this.lastOutputRecordedTime + e.length / this.sampleRate * 1e3 } startSessionRecording() { this.isRecordingSession = !0, this.sessionStartTime = Date.now(), this.lastInputRecordedTime = 0, this.lastOutputRecordedTime = 0, this.audioTimeline = [], console.log("Started session recording with stereo channel separation") } stopSessionRecording() { if (this.isRecordingSession = !1, this.audioTimeline.length > 0) { let e = Date.now() - this.sessionStartTime; this.fillSilenceGap(e, !1) } this.recordingInterval && (clearInterval(this.recordingInterval), this.recordingInterval = null), console.log("Stopped session recording, timeline has", this.audioTimeline.length, "chunks") } hasRecordedAudio() { return this.audioTimeline.length > 0 } downloadRecording() { let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "conversation-recording", t = arguments.length > 1 ? arguments[1] : void 0; if (!this.hasRecordedAudio()) return void console.warn("No audio recorded"); let a = new Blob([this.createWavFile()], { type: "audio/wav" }), n = URL.createObjectURL(a), s = document.createElement("a"); s.style.display = "none", s.href = n; let i = t ? "".concat(e, "-").concat(t) : e; s.download = "".concat(i, ".wav"), document.body.appendChild(s), s.click(), window.setTimeout(() => { document.body.removeChild(s), window.URL.revokeObjectURL(n) }, 100) } createWavFile() { this.audioTimeline.sort((e, t) => e.startTime - t.startTime); let e = Math.ceil((this.audioTimeline.length > 0 ? Math.max(...this.audioTimeline.map(e => e.startTime + e.data.length / this.sampleRate * 1e3)) : 0) / 1e3 * this.sampleRate); if (0 === e) return console.warn("No audio data to record"), new ArrayBuffer(0); let t = this.audioTimeline.filter(e => "input" === e.type || "input-silence" === e.type), a = this.audioTimeline.filter(e => "output" === e.type || "output-silence" === e.type), n = new Int16Array(e); for (let a of t) { let t = Math.floor(a.startTime / 1e3 * this.sampleRate), s = a.data; for (let a = 0; a < s.length; a++)t + a < e && (n[t + a] = s[a]) } let s = new Int16Array(e); for (let t of a) { let a = Math.floor(t.startTime / 1e3 * this.sampleRate), n = t.data; for (let t = 0; t < n.length; t++)a + t < e && (s[a + t] = n[t]) } let i = new ArrayBuffer(44 + 2 * e * 2), r = new DataView(i), l = (e, t) => { for (let a = 0; a < t.length; a++)r.setUint8(e + a, t.charCodeAt(a)) }; l(0, "RIFF"), r.setUint32(4, 36 + 2 * e * 2, !0), l(8, "WAVE"), l(12, "fmt "), r.setUint32(16, 16, !0), r.setUint16(20, 1, !0), r.setUint16(22, 2, !0), r.setUint32(24, this.sampleRate, !0), r.setUint32(28, 2 * this.sampleRate * 2, !0), r.setUint16(32, 4, !0), r.setUint16(34, 16, !0), l(36, "data"), r.setUint32(40, 2 * e * 2, !0); for (let t = 0; t < e; t++) { let e = 44 + 4 * t; r.setInt16(e, 0, !0), r.setInt16(e + 2, 0, !0) } for (let t = 0; t < e; t++) { let e = 44 + 4 * t; t < n.length ? r.setInt16(e, n[t], !0) : r.setInt16(e, 0, !0), t < s.length ? r.setInt16(e + 2, s[t], !0) : r.setInt16(e + 2, 0, !0) } return i } setCircleElement(e) { this.circleElement = e } updateCircle(e, t) { let a = this.circleElement; if (!a) return; let n = 160 + e; a.style.backgroundColor = "record" === t ? "lightgray" : "lightblue", a.style.width = "".concat(n, "px"), a.style.height = "".concat(n, "px") } startAnimation(e) { let t = "record" === e; t ? this.stopPlayChunkAnimation() : (this.stopPlayChunkAnimation(), this.stopRecordAnimation()); let a = () => { if (!this.analysisNode || !this.dataArray) return; this.analysisNode.getByteFrequencyData(this.dataArray); let n = Array.from(this.dataArray).reduce((e, t) => e + t, 0) / this.dataArray.length; this.updateCircle(n, e), t ? this.recordAnimationFrameId = requestAnimationFrame(a) : this.playChunkAnimationFrameId = requestAnimationFrame(a) }; a() } stopRecordAnimation() { this.recordAnimationFrameId && cancelAnimationFrame(this.recordAnimationFrameId) } stopPlayChunkAnimation() { this.playChunkAnimationFrameId && cancelAnimationFrame(this.playChunkAnimationFrameId) } async close() { var e, t, a; this.recordingInterval && (clearInterval(this.recordingInterval), this.recordingInterval = null), null == (e = this.workletNode) || e.disconnect(), null == (t = this.source) || t.disconnect(), null == (a = this.stream) || a.getTracks().forEach(e => e.stop()), await this.context.close() } constructor() { this.workletNode = null, this.stream = null, this.source = null, this.sampleRate = 24e3, this.nextPlayTime = 0, this.isPlaying = !1, this.playbackQueue = [], this.isRecordingSession = !1, this.sessionStartTime = 0, this.lastInputRecordedTime = 0, this.lastOutputRecordedTime = 0, this.audioTimeline = [], this.recordingInterval = null, this.silenceBuffer = new Int16Array(1200), this.circleElement = null, this.analysisNode = null, this.dataArray = null, this.recordAnimationFrameId = null, this.playChunkAnimationFrameId = null, this.context = new AudioContext({ sampleRate: this.sampleRate }) } } class L { updateActivity() { arguments.length > 0 && void 0 !== arguments[0] && arguments[0], this.lastActivityTime = new Date } start() { this.onGreeting(), this.stopTimer(), this.timer = setTimeout(() => { this.startRecurringCheck() }, this.interval) } startRecurringCheck() { this.stopTimer(), this.timer = setInterval(async () => { await this.checkInactivity() }, this.interval) } stopTimer() { this.timer && (clearTimeout(this.timer), clearInterval(this.timer), this.timer = null) } async checkInactivity() { let e = new Date; e.getTime() - this.lastActivityTime.getTime() > this.interval && (await this.onNoActivity(), this.lastActivityTime = e) } stop() { this.timer && clearInterval(this.timer) } constructor(e, t, a = 6e4) { this.onGreeting = async () => { }, this.onNoActivity = async () => { }, this.lastActivityTime = new Date, this.onGreeting = e, this.onNoActivity = t, this.interval = a } } var M = a(7265), I = a(2486), H = a(7175), E = a(286), F = a(4613), O = a(69); function P() { return (0, s.jsx)("svg", { xmlns: "http://www.w3.org/2000/svg", width: "20", height: "20", viewBox: "0 0 20 20", fill: "none", children: (0, s.jsx)("path", { d: "M12 5V9.87866L12.8984 10.777C12.9647 10.5292 13 10.2687 13 9.99998V5C13 3.34315 11.6569 2 10 2C8.38301 2 7.06481 3.2793 7.00232 4.88098L8 5.87866V5C8 3.89543 8.89543 3 10 3C11.1046 3 12 3.89543 12 5ZM7 7.70712L2.14645 2.85357C1.95118 2.65831 1.95118 2.34172 2.14645 2.14646C2.34171 1.9512 2.65829 1.9512 2.85355 2.14646L17.8536 17.1465C18.0488 17.3417 18.0488 17.6583 17.8536 17.8536C17.6583 18.0488 17.3417 18.0488 17.1464 17.8536L13.5195 14.2266C12.6858 14.9216 11.6434 15.3745 10.5 15.4776V17.5C10.5 17.7761 10.2761 18 10 18C9.72386 18 9.5 17.7761 9.5 17.5V15.4776C6.69675 15.2249 4.5 12.869 4.5 9.99998C4.5 9.72384 4.72386 9.49998 5 9.49998C5.27614 9.49998 5.5 9.72384 5.5 9.99998C5.5 12.4853 7.51472 14.5 10 14.5C11.0625 14.5 12.039 14.1318 12.8088 13.5159L11.7382 12.4454C11.2478 12.7946 10.6479 13 10 13C8.34315 13 7 11.6568 7 9.99998V7.70712ZM11.016 11.7231L8 8.70712V9.99998C8 11.1046 8.89543 12 10 12C10.3709 12 10.7182 11.899 11.016 11.7231ZM14.803 12.6817L14.0614 11.9401C14.3426 11.3527 14.5 10.6947 14.5 9.99998C14.5 9.72384 14.7239 9.49998 15 9.49998C15.2761 9.49998 15.5 9.72384 15.5 9.99998C15.5 10.9737 15.247 11.8883 14.803 12.6817Z", fill: "#242424" }) }) } function U() { return (0, s.jsx)("svg", { xmlns: "http://www.w3.org/2000/svg", width: "20", height: "20", viewBox: "0 0 20 20", fill: "none", children: (0, s.jsx)("path", { d: "M10 14.5C12.4853 14.5 14.5 12.4853 14.5 10C14.5 7.51472 12.4853 5.5 10 5.5C7.51472 5.5 5.5 7.51472 5.5 10C5.5 12.4853 7.51472 14.5 10 14.5ZM10 2C5.58172 2 2 5.58172 2 10C2 14.4183 5.58172 18 10 18C14.4183 18 18 14.4183 18 10C18 5.58172 14.4183 2 10 2ZM3 10C3 6.13401 6.13401 3 10 3C13.866 3 17 6.13401 17 10C17 13.866 13.866 17 10 17C6.13401 17 3 13.866 3 10Z", fill: "#A80000" }) }) } a(4583); let V = [{ id: "search", label: "Search", tool: { type: "function", name: "search", parameters: { type: "object", properties: { query: { type: "string", description: "Search query" } }, required: ["query"], additionalProperties: !1 }, description: "Search the knowledge base. The knowledge base is in English, translate to and from English if needed. Results are formatted as a source name first in square brackets, followed by the text content, and a line with '-----' at the end of each result." }, enabled: !0 }, { id: "time", label: "Time Lookup", tool: { type: "function", name: "get_time", parameters: null, description: "Get the current time." }, enabled: !0 }, { id: "weather", label: "Weather Checking", tool: { type: "function", name: "get_weather", parameters: { type: "object", properties: { location: { type: "string", description: "Location to check the weather for" }, unit: { type: "string", enum: ["celsius", "fahrenheit"], description: "Unit of temperature" } }, required: ["location", "unit"], additionalProperties: !1 }, description: "Get the current weather. The location is a string, and the unit is either 'celsius' or 'fahrenheit'." }, enabled: !1 }, { id: "calculator", label: "Calculator", tool: { type: "function", name: "calculate", parameters: { type: "object", properties: { expression: { type: "string", description: "Mathematical expression to calculate" } }, required: ["expression"], additionalProperties: !1 }, description: "Perform a calculation. The expression is a string." }, enabled: !1 }], z = e => { switch (e) { case "user": return "bg-blue-100 ml-auto max-w-[80%]"; case "assistant": return "bg-gray-100 mr-auto max-w-[80%]"; case "status": return "bg-yellow-200 mx-auto max-w-[80%]"; default: return "bg-red-100 mx-auto max-w-[80%]" } }, Z = [{ id: "auto", name: "Auto Detect" }, { id: "en-US", name: "English (United States)" }, { id: "zh-CN", name: "Chinese (China)" }, { id: "de-DE", name: "German (Germany)" }, { id: "en-GB", name: "English (United Kingdom)" }, { id: "en-IN", name: "English (India)" }, { id: "es-ES", name: "Spanish (Spain)" }, { id: "es-MX", name: "Spanish (Mexico)" }, { id: "fr-FR", name: "French (France)" }, { id: "hi-IN", name: "Hindi (India)" }, { id: "it-IT", name: "Italian (Italy)" }, { id: "ja-JP", name: "Japanese (Japan)" }, { id: "ko-KR", name: "Korean (South Korea)" }, { id: "pt-BR", name: "Portuguese (Brazil)" }], B = [{ id: "server_vad", name: "Server VAD", disable: !1 }, { id: "azure_semantic_vad", name: "Azure Semantic VAD", disabled: !1 }], G = [{ id: "none", name: "Disabled", disabled: !1 }, { id: "semantic_detection_v1", name: "Semantic Detection", disabled: !1 }], q = [{ id: "en-us-ava:DragonHDLatestNeural", name: "DragonHDLatestNeural, Ava (HD)" }, { id: "en-us-steffan:DragonHDLatestNeural", name: "DragonHDLatestNeural, Steffan (HD)" }, { id: "en-us-andrew:DragonHDLatestNeural", name: "DragonHDLatestNeural, Andrew (HD)" }, { id: "zh-cn-xiaochen:DragonHDLatestNeural", name: "DragonHDLatestNeural, Xiaochen (HD)" }, { id: "en-us-emma:DragonHDLatestNeural", name: "DragonHDLatestNeural, Emma (HD)" }, { id: "en-us-emma2:DragonHDLatestNeural", name: "DragonHDLatestNeural, Emma (HD 2)" }, { id: "en-us-andrew2:DragonHDLatestNeural", name: "DragonHDLatestNeural, Andrew (HD 2)" }, { id: "de-DE-Seraphina:DragonHDLatestNeural", name: "DragonHDLatestNeural, Seraphina (HD)" }, { id: "en-us-aria:DragonHDLatestNeural", name: "DragonHDLatestNeural, Aria (HD)" }, { id: "en-us-davis:DragonHDLatestNeural", name: "DragonHDLatestNeural, Davis (HD)" }, { id: "en-us-jenny:DragonHDLatestNeural", name: "DragonHDLatestNeural, Jenny (HD)" }, { id: "ja-jp-masaru:DragonHDLatestNeural", name: "DragonHDLatestNeural, Masaru (HD)" }, { id: "en-US-AvaMultilingualNeural", name: "Ava Multilingual" }, { id: "en-US-AlloyTurboMultilingualNeural", name: "Alloy Turbo Multilingual" }, { id: "en-US-AndrewNeural", name: "Andrew" }, { id: "en-US-AndrewMultilingualNeural", name: "Andrew Multilingual" }, { id: "en-US-BrianMultilingualNeural", name: "Brian Multilingual" }, { id: "en-US-EmmaMultilingualNeural", name: "Emma Multilingual" }, { id: "en-US-NovaTurboMultilingualNeural", name: "Nova Turbo Multilingual" }, { id: "zh-CN-XiaoxiaoMultilingualNeural", name: "Xiaoxiao Multilingual" }, { id: "en-US-AvaNeural", name: "Ava" }, { id: "en-US-JennyNeural", name: "Jenny" }, { id: "zh-HK-HiuMaanNeural", name: "HiuMaan (Cantonese)" }, { id: "mt-MT-JosephNeural", name: "Joseph (Maltese)" }, { id: "zh-cn-xiaoxiao2:DragonHDFlashLatestNeural", name: "Xiaoxiao2 HDFlash" }, { id: "zh-cn-yunyi:DragonHDFlashLatestNeural", name: "Yunyi HDFlash" }, { id: "alloy", name: "Alloy (OpenAI)" }, { id: "ash", name: "Ash (OpenAI)" }, { id: "ballad", name: "Ballad (OpenAI)" }, { id: "coral", name: "Coral (OpenAI)" }, { id: "echo", name: "Echo (OpenAI)" }, { id: "sage", name: "Sage (OpenAI)" }, { id: "shimmer", name: "Shimmer (OpenAI)" }, { id: "verse", name: "Verse (OpenAI)" }], J = ["Harry-business", "Harry-casual", "Harry-youthful", "Jeff-business", "Jeff-formal", "Lisa-casual-sitting", "Lori-casual", "Lori-formal", "Lori-graceful", "Max-business", "Max-casual", "Max-formal", "Meg-business", "Meg-casual", "Meg-formal"], K = null, W = () => { let [e, t] = (0, i.useState)(""), [a, r] = (0, i.useState)(""), [l, o] = (0, i.useState)(""), [c, d] = (0, i.useState)("gpt-4o-realtime-preview"), [g, f] = (0, i.useState)(""), [y, b] = (0, i.useState)(""), [N, A] = (0, i.useState)(""), [T, W] = (0, i.useState)("chunk"), [Q, X] = (0, i.useState)("chunk_id"), [Y, $] = (0, i.useState)("auto"), [ee, et] = (0, i.useState)(!1), [ea, en] = (0, i.useState)(!1), [es, ei] = (0, i.useState)({ type: "server_vad" }), [er, el] = (0, i.useState)("none"), [eo, ec] = (0, i.useState)(!1), [ed, eu] = (0, i.useState)(""), [eh, em] = (0, i.useState)(!1), [ep, eg] = (0, i.useState)(.9), [ef, ex] = (0, i.useState)(.9), [ev, ey] = (0, i.useState)(!1), [ej, eC] = (0, i.useState)("en-US-AvaNeural"), [ew, eb] = (0, i.useState)(""), [eN, eS] = (0, i.useState)("Lisa-casual-sitting"), [ek, eA] = (0, i.useState)(""), [eR, eT] = (0, i.useState)(""), [eD, e_] = (0, i.useState)([]), [eL, eM] = (0, i.useState)([]), [eI, eH] = (0, i.useState)(""), [eE, eF] = (0, i.useState)(!1), [eO, eP] = (0, i.useState)(!1), [eU, eV] = (0, i.useState)(!1), [ez, eZ] = (0, i.useState)(!1), [eB, eG] = (0, i.useState)(!1), [eq, eJ] = (0, i.useState)(!1), [eK, eW] = (0, i.useState)(!1), [eQ, eX] = (0, i.useState)(!1), [eY, e$] = (0, i.useState)(""), [e1, e0] = (0, i.useState)(!1), [e2, e5] = (0, i.useState)({}), [e8, e4] = (0, i.useState)(""), [e7, e9] = (0, i.useState)(!1), [e3, e6] = (0, i.useState)("model"), [te, tt] = (0, i.useState)(""), [ta, tn] = (0, i.useState)(""), [ts, ti] = (0, i.useState)([]), [tr, tl] = (0, i.useState)(!1), to = (0, i.useRef)(null), tc = (0, i.useRef)(null), td = (0, i.useRef)(null), tu = (0, i.useRef)(null), th = (0, i.useRef)(!1), tm = (0, i.useRef)(null), tp = (0, i.useRef)(null), tg = (0, i.useRef)(null), tf = ez && (eN || ek); (0, i.useEffect)(() => { (async () => { try { let e = await fetch("/config"); if (404 === e.status) return void e0(!1); let t = await e.json(); t.endpoint && r(t.endpoint), t.token && o(t.token), t.pre_defined_scenarios && e5(t.pre_defined_scenarios), t.agent && t.agent.project_name && (tt(t.agent.project_name), Array.isArray(t.agent.agents) && (ti(t.agent.agents), 1 === t.agent.agents.length && tn(t.agent.agents[0].id))), e0(!0) } catch (e) { console.error("Failed to fetch config:", e), e0(!0) } })() }, []); let tx = async () => { if (eO) tD(), await tC(); else try { if (eV(!0), e1) try { let e = await fetch("/config"); if (e.ok) { let t = await e.json(); t.endpoint && r(t.endpoint), t.token && o(t.token) } } catch (e) { console.error("Failed to refresh token:", e) } let n = l ? { getToken: async e => ({ token: l, expiresOnTimestamp: Date.now() + 36e5 }) } : { key: e }; if ("agent" === e3 && !ta) return void eM(e => [...e, { type: "error", content: "Please input/select an agent." }]); to.current = new E.G6(new URL(a), n, "agent" === e3 ? { modelOrAgent: { agentId: ta, projectName: te, agentAccessToken: l }, apiVersion: "2025-05-01-preview" } : { modelOrAgent: c, apiVersion: "2025-05-01-preview" }), console.log("Client created:", to.current.connectAvatar), es && "none" !== er && tL(e3, c) && (es.end_of_utterance_detection = { model: er }), (null == es ? void 0 : es.type) === "azure_semantic_vad" && (es.remove_filler_words = eo); let s = ev ? { name: ew, endpoint_id: eR, temperature: ew.toLowerCase().includes("dragonhd") ? ef : void 0, type: "azure-custom" } : ej.includes("-") ? { name: ej, type: "azure-standard", temperature: ej.toLowerCase().includes("dragonhd") ? ef : void 0 } : ej; eK && (tm.current = new F._(g, N, new O.KL(y))); let i = await to.current.configure({ instructions: (null == ed ? void 0 : ed.length) > 0 ? ed : void 0, input_audio_transcription: { model: c.includes("realtime-preview") ? "whisper-1" : "azure-fast-transcription", language: "auto" === Y ? void 0 : Y }, turn_detection: es, voice: s, avatar: tj(), tools: eD, temperature: ep, modalities: ["text", "audio"], input_audio_noise_reduction: ee ? { type: "azure_deep_noise_suppression" } : null, input_audio_echo_cancellation: ea ? { type: "server_echo_cancellation" } : null }); if (null == i ? void 0 : i.avatar) { var t; await tA(null == (t = i.avatar) ? void 0 : t.ice_servers) } tN(), tc.current && tc.current.startSessionRecording(), eP(!0), eM(e => [...e, { type: "status", content: "Session started, click on the mic button to start conversation! debug id: " + i.id }]), e$(i.id), eh && (td.current = new L(tv, ty, 1e4), td.current.start()) } catch (e) { console.error("Connection failed:", e), eM(t => [...t, { type: "error", content: "Error connecting to the server: " + e }]) } finally { eV(!1) } }, tv = async () => { if (to.current) try { await to.current.generateResponse({ additional_instructions: " Welcome the user." }) } catch (e) { console.error("Error generating greeting message:", e) } }, ty = async () => { if (to.current) try { await to.current.sendItem({ type: "message", role: "system", content: [{ type: "input_text", text: "User hasn't response for a while, please say something to continue the conversation." }] }), await to.current.generateResponse() } catch (e) { console.error("Error sending no activity message:", e) } }, tj = () => { if (!ez) return; let e = { codec: "h264", crop: { top_left: [560, 0], bottom_right: [1360, 1080] } }; return eB && ek ? { character: ek, customized: !0, video: e } : ez && !eB ? { character: eN.split("-")[0].toLowerCase(), style: eN.split("-").slice(1).join("-"), video: e } : void 0 }, tC = async () => { if (to.current) try { var e, t, a, s, i; await to.current.close(), to.current = null, n = null, eP(!1), null == (e = tc.current) || e.stopStreamingPlayback(), null == (t = td.current) || t.stop(), th.current = !1, null == (a = tc.current) || a.stopRecordAnimation(), null == (s = tc.current) || s.stopPlayChunkAnimation(), eE && (null == (i = tc.current) || i.stopRecording(), eF(!1)), tc.current && (tc.current.stopSessionRecording(), eX(tc.current.hasRecordedAudio())) } catch (e) { console.error("Disconnect failed:", e) } }, tw = async e => { for await (let i of e) if ("message" === i.type && "assistant" === i.role) { let e = { type: i.role, content: "" }; for await (let t of (eM(t => [...t, e]), i)) if ("text" === t.type) for await (let a of t.textChunks()) e.content += a, eM(t => { var a; return (null == (a = t[t.length - 1]) ? void 0 : a.content) && (t[t.length - 1].content = e.content), [...t] }); else if ("audio" === t.type) { let a = async () => { for await (let a of t.transcriptChunks()) e.content += a, eM(t => { var a; return (null == (a = t[t.length - 1]) ? void 0 : a.content) && (t[t.length - 1].content = e.content), [...t] }) }, n = async () => { var e, a, n; for await (let s of (null == (e = tc.current) || e.stopStreamingPlayback(), null == (a = tc.current) || a.startStreamingPlayback(), t.audioChunks())) null == (n = tc.current) || n.playChunk(s, async () => { var e; null == (e = td.current) || e.updateActivity("agent speaking") }) }; await Promise.all([a(), n()]) } } else if ((0, E.YK)(i)) { var t, a, n, s; if (await i.waitForCompletion(), console.log("Function call output:", i), "get_time" === i.functionName) { let e = new Date().toLocaleString("en-US", { weekday: "long", year: "numeric", month: "long", day: "numeric", hour: "2-digit", minute: "2-digit", second: "2-digit", timeZoneName: "short" }); console.log("Current time:", e), await (null == (t = to.current) ? void 0 : t.sendItem({ type: "function_call_output", output: e, call_id: i.callId })), await (null == (a = to.current) ? void 0 : a.generateResponse()) } else if ("search" === i.functionName) { let e = JSON.parse(i.arguments).query; if (console.log("Search query:", e), tm.current) { eM(t => [...t, { type: "status", content: "Searching [".concat(e, "]...") }]); let t = await tm.current.search(e, { top: 5, queryType: "semantic", semanticSearchOptions: { configurationName: "default" }, select: [T, Q] }), a = ""; for await (let e of t.results) { let t = e.document; a += "[".concat(t[Q], "]: ").concat(t[T], "\n-----\n") } console.log("Search results:", a), await (null == (n = to.current) ? void 0 : n.sendItem({ type: "function_call_output", output: a, call_id: i.callId })), await (null == (s = to.current) ? void 0 : s.generateResponse()) } } } "failed" === e.status && eM(t => [...t, { type: "error", content: "Response failed:" + JSON.stringify(e.statusDetails) }]) }, tb = async e => { var t; th.current = !0, null == (t = tc.current) || t.stopStreamingPlayback(), await e.waitForCompletion(), th.current = !1, eM(t => [...t, { type: "user", content: e.transcription || "" }]) }, tN = async () => { if (to.current) try { for await (let t of to.current.events()) if ("response" === t.type) await tw(t); else if ("input_audio" === t.type) { var e; null == (e = td.current) || e.updateActivity("user start to speak"), await tb(t) } } catch (e) { to.current && console.error("Response iteration error:", e) } }, tS = async () => { if (eI.trim() && to.current) try { eH(""), eM(e => [...e, { type: "user", content: eI }]), await to.current.sendItem({ type: "message", role: "user", content: [{ type: "input_text", text: eI }] }), await to.current.generateResponse() } catch (e) { console.error("Failed to send message:", e) } }, tk = async () => { if (!eE && to.current) try { tc.current || (tc.current = new _, await tc.current.initialize()), await tc.current.startRecording(async e => { var t, a; await (null == (t = to.current) ? void 0 : t.sendAudio(e)), th.current && (null == (a = td.current) || a.updateActivity("user speaking")) }), eF(!0) } catch (e) { console.error("Failed to start recording:", e) } else if (tc.current) try { if (tc.current.stopRecording(), tc.current.stopRecordAnimation(), null === es) { var e, t, a; let n = await (null == (e = to.current) ? void 0 : e.commitAudio()); null == (t = td.current) || t.updateActivity("user speaking"), await tb(n), await (null == (a = to.current) ? void 0 : a.generateResponse()) } eF(!1) } catch (e) { console.error("Failed to stop recording:", e) } }, tA = e => { console.log("Received ICE servers" + JSON.stringify(e)), n = new RTCPeerConnection({ iceServers: e }), tT(), n.onicegatheringstatechange = () => { n.iceGatheringState }, n.onicecandidate = e => { e.candidate }, tR() }, tR = async () => { try { var e; let t = await n.createOffer(); await n.setLocalDescription(t), await new Promise(e => setTimeout(e, 2e3)), console.log(to.current); let a = await (null == (e = to.current) ? void 0 : e.connectAvatar(n.localDescription)); await n.setRemoteDescription(a) } catch (e) { console.error("Connection failed:", e), eM(t => [...t, { type: "error", content: "Error establishing avatar connection: " + e }]) } }, tT = () => { tD(), n.ontrack = function (e) { var t; let a = document.createElement(e.track.kind); a.id = e.track.kind, a.srcObject = e.streams[0], a.autoplay = !0, null == tu || null == (t = tu.current) || t.appendChild(a) }, n.addTransceiver("video", { direction: "sendrecv" }), n.addTransceiver("audio", { direction: "sendrecv" }), n.addEventListener("datachannel", e => { let t = e.channel; t.onmessage = e => { console.log("[" + new Date().toISOString() + "] WebRTC event received: " + e.data) }, t.onclose = () => { console.log("Data channel closed") } }), n.createDataChannel("eventChannel") }, tD = () => { let e = null == tu ? void 0 : tu.current; (null == e ? void 0 : e.innerHTML) && (e.innerHTML = "") }; (0, i.useEffect)(() => ((async () => { let e = new _; await e.initialize(), tc.current = e })().catch(console.error), () => { var e; tC(), null == (e = tc.current) || e.close().catch(console.error) }), []), (0, i.useEffect)(() => { let e = document.getElementById("messages-area"); e && (e.scrollTop = e.scrollHeight) }, [eL]), (0, i.useEffect)(() => { (() => { let e = navigator.userAgent; tl(/iPad|iPhone|iPod|Android|BlackBerry|IEMobile|Opera Mini/i.test(e)) })() }, []), (0, i.useEffect)(() => { var e, t; let a = tp.current; eO && a && !tf ? null == (e = tc.current) || e.setCircleElement(a) : null == (t = tc.current) || t.setCircleElement(null) }, [eO, tf]), (0, i.useEffect)(() => { eO && tf && eE ? K = setInterval(() => { for (let e = 0; e < 20; e++) { let t = document.getElementById("item-".concat(e)), a = 50 * Math.sin(Math.PI / 20 * e) * Math.random(); t && (t.style.transition = "height 0.15s ease", t.style.height = "".concat(a, "px")) } }, 150) : K && clearInterval(K) }, [eO, tf, eE]); let t_ = e => { let t = e2[e]; t && (t.instructions && eu(t.instructions), void 0 !== t.pro_active && em(t.pro_active), t.voice && (t.voice.custom_voice ? (ey(!0), t.voice.deployment_id && eT(t.voice.deployment_id), t.voice.voice_name && eb(t.voice.voice_name), t.voice.temperature && ex(t.voice.temperature)) : (ey(!1), t.voice.voice_name && eC(t.voice.voice_name))), t.avatar ? (eZ(t.avatar.enabled), t.avatar.enabled && (eG(t.avatar.customized), t.avatar.customized ? eA(t.avatar.avatar_name) : eS(t.avatar.avatar_name))) : eZ(!1), e4(e)) }; function tL(e, t) { return "agent" === e || ["gpt-4o", "gpt-4o-mini", "gpt-4.1", "gpt-4.1-mini", "gpt-4.1-nano", "phi4-mini"].includes(t) } return (0, s.jsxs)("div", { className: "flex h-screen", children: [(0, s.jsxs)("div", { className: "w-80 bg-gray-50 p-4 flex flex-col border-r", ref: tg, children: [(0, s.jsx)("div", { className: "flex-1 overflow-y-auto", children: (0, s.jsxs)(u, { type: "single", collapsible: !0, className: "space-y-4", children: [(0, s.jsxs)(h, { value: "instructions", children: [(0, s.jsx)(m, { className: "text-lg font-semibold", children: "Instructions" }), (0, s.jsx)(p, { children: (0, s.jsx)("div", { className: "w-full min-h-[200px] p-4 border rounded bg-gray-50 font-sans text-sm text-gray-800 overflow-auto", children: (0, s.jsx)(H.o, { components: { ol: e => { let { ...t } = e; return (0, s.jsx)("ol", { className: "list-decimal ml-6", ...t }) }, ul: e => { let { ...t } = e; return (0, s.jsx)("ul", { className: "list-disc ml-6", ...t }) }, li: e => { let { ...t } = e; return (0, s.jsx)("li", { className: "mb-1", ...t }) }, p: e => { let { ...t } = e; return (0, s.jsx)("p", { className: "my-2", ...t }) } }, children: '\n    1. **Configure your Azure AI Services resource**\n        - Obtain your endpoint and API key from the `Keys and Endpoint` tab in your Azure AI Services resource.\n        - The endpoint can be the regional endpoint (e.g., `https://<region>.api.cognitive.microsoft.com/`) or a custom domain endpoint (e.g., `https://<custom-domain>.cognitiveservices.azure.com/`).\n        - The resource must be in the `eastus2` or `swedencentral` region. Other regions are not supported.\n\n    2. **(Optional) Set the Agent**\n        - Set the project name and agent ID to connect to a specific agent.\n        - Entra ID auth is required for agent mode, use `az account get-access-token --resource https://ai.azure.com --query accessToken -o tsv` to get the token.\n\n    2. **Select noise suppression or echo cancellation**\n        - Enable noise suppression and/or echo cancellation to improve audio quality.\n\n    3. **Select the Turn Detection**\n        - Choose the desired turn detection method. The default is `Server VAD`, which uses server-side voice activity detection.\n        - The `Azure Semantic VAD` option is also available for better performance.\n\n    4. **Select the Voice**\n       - Choose the desired voice from the list.\n       - If using a custom voice, select the "Use Custom Voice" option and enter the Voice Deployment ID and the custom voice name.\n\n    5. **Start conversation**\n        - Click on the "Connect" button to start the conversation.\n        - Click on the mic button to start recording audio. Click again to stop recording.\n' }) }) })] }), (0, s.jsxs)(h, { value: "connection", children: [(0, s.jsx)(m, { className: "text-lg font-semibold", children: "Connection Settings" }), (0, s.jsxs)(p, { className: "space-y-4", children: [(0, s.jsxs)("div", { className: "space-y-2", children: [(0, s.jsx)("label", { className: "text-sm font-medium", children: "Mode" }), (0, s.jsxs)(j, { value: e3, onValueChange: e => e6(e), disabled: eO, children: [(0, s.jsx)(w, { children: (0, s.jsx)(C, {}) }), (0, s.jsxs)(S, { children: [(0, s.jsx)(k, { value: "model", children: "Model" }), (0, s.jsx)(k, { value: "agent", children: "Agent" })] })] })] }), (0, s.jsx)(v, { placeholder: "Azure AI Services Endpoint", value: a, onChange: e => r(e.target.value), disabled: eO || e1 }), !e1 && "model" === e3 && (0, s.jsx)(v, { placeholder: "Subscription Key", value: e, onChange: e => t(e.target.value), disabled: eO }), "agent" === e3 && (0, s.jsx)(v, { placeholder: "Entra Token", value: l, onChange: e => o(e.target.value), disabled: eO }), "agent" === e3 ? (0, s.jsxs)(s.Fragment, { children: [(0, s.jsx)("div", { className: "space-y-2", children: (0, s.jsx)("label", { className: "text-sm font-medium", children: "Agent" }) }), (0, s.jsx)(v, { placeholder: "Agent Project Name", value: te, onChange: e => tt(e.target.value), disabled: eO }), ts.length > 0 ? (0, s.jsxs)(j, { value: ta, onValueChange: tn, disabled: eO, children: [(0, s.jsx)(w, { children: (0, s.jsx)(C, { placeholder: "Select Agent" }) }), (0, s.jsx)(S, { children: ts.map(e => (0, s.jsx)(k, { value: e.id, children: e.name || e.id }, e.id)) })] }) : (0, s.jsx)(v, { placeholder: "Agent ID", value: ta, onChange: e => tn(e.target.value), disabled: eO })] }) : (0, s.jsx)(s.Fragment, { children: (0, s.jsxs)("div", { className: "space-y-2", children: [(0, s.jsx)("label", { className: "text-sm font-medium", children: "Model" }), (0, s.jsxs)(j, { value: c, onValueChange: d, disabled: eO, children: [(0, s.jsx)(w, { children: (0, s.jsx)(C, {}) }), (0, s.jsxs)(S, { children: [(0, s.jsx)(k, { value: "gpt-4o-realtime-preview", children: "GPT-4o Realtime" }), (0, s.jsx)(k, { value: "gpt-4o-mini-realtime-preview", children: "GPT-4o Mini Realtime" }), (0, s.jsx)(k, { value: "gpt-4.1", children: "GPT-4.1 (Cascaded)" }), (0, s.jsx)(k, { value: "gpt-4.1-mini", children: "GPT-4.1 Mini (Cascaded)" }), (0, s.jsx)(k, { value: "gpt-4.1-nano", children: "GPT-4.1 Nano (Cascaded)" }), (0, s.jsx)(k, { value: "gpt-4o", children: "GPT-4o (Cascaded)" }), (0, s.jsx)(k, { value: "gpt-4o-mini", children: "GPT-4o Mini (Cascaded)" }), (0, s.jsx)(k, { value: "phi4-mm", children: "Phi4-MM Realtime" }), (0, s.jsx)(k, { value: "phi4-mini", children: "Phi4 Mini (Cascaded)" })] })] })] }) })] })] }), (0, s.jsxs)(h, { value: "conversation", children: [(0, s.jsx)(m, { className: "text-lg font-semibold", children: "Conversation Settings" }), (0, s.jsxs)(p, { className: "space-y-4", children: [Object.keys(e2).length > 0 && (0, s.jsxs)("div", { className: "space-y-2", children: [(0, s.jsx)("label", { className: "text-sm font-medium", children: "Predefined Scenarios" }), (0, s.jsxs)(j, { value: e8, onValueChange: e => t_(e), disabled: eO, children: [(0, s.jsx)(w, { children: (0, s.jsx)(C, { placeholder: "Select a predefined scenario" }) }), (0, s.jsx)(S, { children: Object.entries(e2).map(e => { let [t, a] = e; return (0, s.jsx)(k, { value: t, children: a.name || t }, t) }) })] })] }), tL(e3, c) && (0, s.jsxs)("div", { className: "space-y-2", children: [(0, s.jsx)("label", { className: "text-sm font-medium", children: "Recognition Language" }), (0, s.jsxs)(j, { value: Y, onValueChange: $, disabled: eO, children: [(0, s.jsx)(w, { children: (0, s.jsx)(C, {}) }), (0, s.jsx)(S, { children: Z.map(e => (0, s.jsx)(k, { value: e.id, children: e.name }, e.id)) })] })] }), (0, s.jsxs)("div", { className: "flex items-center justify-between text-sm font-medium", children: [(0, s.jsx)("span", { children: "Noise suppression" }), (0, s.jsx)(D, { checked: ee, onCheckedChange: et, disabled: eO })] }), (0, s.jsxs)("div", { className: "flex items-center justify-between text-sm font-medium", children: [(0, s.jsx)("span", { children: "Echo cancellation" }), (0, s.jsx)(D, { checked: ea, onCheckedChange: en, disabled: eO })] }), (0, s.jsxs)("div", { className: "space-y-2", children: [(0, s.jsx)("label", { className: "text-sm font-medium", children: "Turn detection" }), (0, s.jsxs)(j, { value: null === es ? "none" : es.type, onValueChange: e => { ei("none" === e ? null : { type: e }) }, disabled: eO, children: [(0, s.jsx)(w, { children: (0, s.jsx)(C, {}) }), (0, s.jsx)(S, { children: B.map(e => (0, s.jsx)(k, { value: e.id, children: e.name }, e.id)) })] }), (null == es ? void 0 : es.type) === "azure_semantic_vad" && (0, s.jsxs)("div", { className: "flex items-center justify-between text-sm font-medium", children: [(0, s.jsx)("span", { children: "Remove filler words" }), (0, s.jsx)(D, { checked: eo, onCheckedChange: ec, disabled: eO })] })] }), tL(e3, c) && (0, s.jsxs)("div", { className: "space-y-2", children: [(0, s.jsx)("label", { className: "text-sm font-medium", children: "EOU detection" }), (0, s.jsxs)(j, { value: er, onValueChange: el, disabled: eO, children: [(0, s.jsx)(w, { children: (0, s.jsx)(C, {}) }), (0, s.jsx)(S, { children: G.map(e => (0, s.jsx)(k, { value: e.id, disabled: e.disabled, children: e.name }, e.id)) })] })] }), "model" === e3 && (0, s.jsxs)("div", { className: "space-y-2", children: [(0, s.jsx)("label", { className: "text-sm font-medium", children: "Model instructions" }), (0, s.jsx)("textarea", { className: "w-full min-h-[100px] p-2 border rounded", value: ed, onChange: e => eu(e.target.value), disabled: eO })] }), "model" === e3 && (0, s.jsxs)("div", { className: "flex items-center justify-between text-sm font-medium", children: [(0, s.jsx)("span", { children: "Enable proactive responses" }), (0, s.jsx)(D, { checked: eh, onCheckedChange: em, disabled: eO })] }), "model" === e3 && (0, s.jsxs)("div", { className: "space-y-2", children: [(0, s.jsx)("label", { className: "text-sm font-medium", children: "Tools" }), (0, s.jsx)("div", { className: "mb-2", children: (0, s.jsxs)("div", { className: "border rounded-md", children: [(0, s.jsx)("div", { className: "p-2 font-medium", children: "Add predefined tools" }), (0, s.jsx)("div", { className: "border-t p-2 space-y-2 max-h-48 overflow-y-auto", children: V.map(e => (0, s.jsxs)("div", { className: "flex items-center space-x-2", children: [(0, s.jsx)("input", { type: "checkbox", id: e.id, className: "rounded", onChange: t => { t.target.checked ? e_([...eD, e.tool]) : e_(eD.filter(t => t.name !== e.tool.name)), console.log("Tools: ", eD), "search" === e.id && eW(t.target.checked) }, disabled: eO || !e.enabled }), (0, s.jsx)("label", { htmlFor: e.id, className: "text-sm", children: e.label })] }, e.id)) })] }) }), eK && (0, s.jsxs)("div", { className: "space-y-2", children: [(0, s.jsx)("label", { className: "text-sm font-medium", children: "Azure Search setting" }), (0, s.jsx)(v, { placeholder: "Search Endpoint", value: g, onChange: e => f(e.target.value), disabled: eO }), (0, s.jsx)(v, { placeholder: "Search Index", value: N, onChange: e => A(e.target.value), disabled: eO }), (0, s.jsx)(v, { placeholder: "Search Key", value: y, onChange: e => b(e.target.value), disabled: eO }), (0, s.jsx)(v, { placeholder: "Search Content Field (default: chunk)", value: T, onChange: e => W(e.target.value), disabled: eO }), (0, s.jsx)(v, { placeholder: "Search Identifier Field (default: chunk_id)", value: Q, onChange: e => X(e.target.value), disabled: eO })] })] }), (0, s.jsxs)("div", { className: "space-y-2", children: [(0, s.jsxs)("label", { className: "text-sm font-medium", children: ["Temperature (", ep, ")"] }), (0, s.jsx)(R, { value: [ep], onValueChange: e => { let [t] = e; return eg(t) }, min: .6, max: 1.2, step: .1, disabled: eO })] }), (0, s.jsxs)("div", { className: "flex items-center justify-between", children: [(0, s.jsx)("span", { children: "Use Custom Voice" }), (0, s.jsx)(D, { checked: ev, onCheckedChange: ey, disabled: eO })] }), ev && (0, s.jsxs)(s.Fragment, { children: [(0, s.jsx)(v, { placeholder: "Voice Deployment ID", value: eR, onChange: e => eT(e.target.value), disabled: eO }), (0, s.jsx)(v, { placeholder: "Voice", value: ew, onChange: e => eb(e.target.value), disabled: eO })] }), !ev && (0, s.jsxs)("div", { className: "space-y-2", children: [(0, s.jsx)("label", { className: "text-sm font-medium", children: "Voice" }), (0, s.jsxs)(j, { value: ej, onValueChange: eC, disabled: eO, children: [(0, s.jsx)(w, { children: (0, s.jsx)(C, {}) }), (0, s.jsx)(S, { children: q.filter(e => !(tL(e3, c) && !e.id.includes("-"))).map(e => (0, s.jsx)(k, { value: e.id, children: e.name }, e.id)) })] })] }), (ev && ew.toLowerCase().includes("dragonhd") || !ev && ej.toLowerCase().includes("dragonhd")) && (0, s.jsxs)("div", { className: "space-y-2", children: [(0, s.jsxs)("label", { className: "text-sm font-medium", children: ["Voice Temperature (", ef, ")"] }), (0, s.jsx)(R, { value: [ef], onValueChange: e => { let [t] = e; return ex(t) }, min: 0, max: 1, step: .1, disabled: eO })] }), (0, s.jsx)("div", { className: "space-y-2", children: (0, s.jsxs)("div", { className: "flex items-center justify-between", children: [(0, s.jsxs)("div", { className: "flex items-center", children: [(0, s.jsx)("span", { style: { marginRight: 10 }, children: "Avatar" }), (0, s.jsx)(D, { checked: ez, onCheckedChange: e => eZ(e), disabled: eO })] }), ez && (0, s.jsxs)("div", { className: "flex items-center", children: [(0, s.jsx)("span", { style: { marginRight: 10 }, children: "Use Custom Avatar" }), (0, s.jsx)(D, { checked: eB, onCheckedChange: e => eG(e), disabled: eO })] })] }) }), (0, s.jsxs)("div", { className: "space-y-2", children: [ez && !eB && (0, s.jsxs)(j, { value: eN, onValueChange: eS, disabled: eO, children: [(0, s.jsx)(w, { children: (0, s.jsx)(C, {}) }), (0, s.jsx)(S, { children: J.map(e => (0, s.jsx)(k, { value: e, children: e }, e)) })] }), ez && eB && (0, s.jsx)(v, { placeholder: "Character", value: ek, onChange: e => eA(e.target.value), disabled: eO })] })] })] })] }) }), (0, s.jsxs)("div", { className: "mt-4 space-y-2", children: [(0, s.jsxs)(x, { className: "w-full", variant: eO ? "destructive" : "default", onClick: tx, disabled: eU, children: [(0, s.jsx)(M.A, { className: "w-4 h-4 mr-2" }), eU ? "Connecting..." : eO ? "Disconnect" : "Connect"] }), eQ && !eO && (0, s.jsxs)(x, { className: "w-full", variant: "outline", onClick: () => { if (tc.current) { let e = new Date().toISOString().replace(/[:.]/g, "-"); tc.current.downloadRecording("conversation-".concat(e), eY) } }, children: [(0, s.jsxs)("svg", { xmlns: "http://www.w3.org/2000/svg", width: "16", height: "16", viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round", className: "mr-2", children: [(0, s.jsx)("path", { d: "M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4" }), (0, s.jsx)("polyline", { points: "7 10 12 15 17 10" }), (0, s.jsx)("line", { x1: "12", y1: "15", x2: "12", y2: "3" })] }), "Download Recording"] })] })] }), (0, s.jsxs)("div", { className: "flex flex-1 flex-col p-4", children: [(0, s.jsxs)("div", { className: "flex items-center justify-between", children: [tr && (0, s.jsxs)("div", { className: "flex items-center settings", role: "button", onClick: function () { tg.current && (e7 ? (tg.current.style.display = "block", e9(!1)) : (tg.current.style.display = "none", e9(!0))) }, children: [(0, s.jsx)("span", { className: "settings-svg", children: (0, s.jsx)("svg", { xmlns: "http://www.w3.org/2000/svg", width: "20", height: "20", viewBox: "0 0 20 20", fill: "none", children: (0, s.jsx)("path", { d: "M2 4.75C2 4.33579 2.33579 4 2.75 4H17.25C17.6642 4 18 4.33579 18 4.75C18 5.16421 17.6642 5.5 17.25 5.5H2.75C2.33579 5.5 2 5.16421 2 4.75ZM2 9.75C2 9.33579 2.33579 9 2.75 9H17.25C17.6642 9 18 9.33579 18 9.75C18 10.1642 17.6642 10.5 17.25 10.5H2.75C2.33579 10.5 2 10.1642 2 9.75ZM2.75 14C2.33579 14 2 14.3358 2 14.75C2 15.1642 2.33579 15.5 2.75 15.5H17.25C17.6642 15.5 18 15.1642 18 14.75C18 14.3358 17.6642 14 17.25 14H2.75Z", fill: "#242424" }) }) }), (0, s.jsx)("span", { children: "Settings" })] }), (0, s.jsxs)("div", { className: "flex items-center", children: [(0, s.jsx)("span", { className: "developer-mode", children: "Developer mode" }), (0, s.jsx)(D, { checked: eq, onCheckedChange: e => eJ(e) })] }), (0, s.jsx)("div", { children: (0, s.jsx)("button", { style: { opacity: eL.length > 0 ? "" : "0.5" }, onClick: () => eL.length > 0 && eM([]), children: (0, s.jsx)("svg", { xmlns: "http://www.w3.org/2000/svg", width: "20", height: "20", viewBox: "0 0 20 20", fill: "none", children: (0, s.jsx)("path", { d: "M17.9099 2.18209C18.1052 2.37735 18.1052 2.69394 17.9099 2.8892L12.5872 8.21193C14.0023 9.97877 13.8909 12.5651 12.2531 14.2029L11.5895 14.8665L9.49982 18.3493C9.4206 18.4813 9.28498 18.5695 9.13216 18.5883C8.97935 18.6071 8.82639 18.5544 8.71752 18.4456L1.64645 11.3745C1.53758 11.2656 1.48494 11.1127 1.50375 10.9599C1.52256 10.807 1.61073 10.6714 1.74276 10.5922L5.2255 8.50256L5.88909 7.83896C7.52695 6.20111 10.1132 6.08973 11.8801 7.50482L17.2028 2.18209C17.3981 1.98683 17.7146 1.98683 17.9099 2.18209ZM6.24265 8.89962L11.1924 13.8494L11.5459 13.4958C12.9128 12.129 12.9128 9.9129 11.5459 8.54607C10.1791 7.17923 7.96303 7.17923 6.5962 8.54607L6.24265 8.89962ZM5.45803 9.52923L2.80638 11.1202L8.9718 17.2856L10.5628 14.634L5.45803 9.52923Z", fill: "#424242" }) }) }) })] }), (0, s.jsxs)("div", { className: "flex ".concat(eq ? "developer-content" : "content"), children: [eO && (tf ? (0, s.jsx)(s.Fragment, { children: (0, s.jsx)("div", { ref: tu, className: "flex flex-1 justify-center items-center" }) }) : (0, s.jsx)(s.Fragment, { children: (0, s.jsxs)("div", { className: "flex flex-1 justify-center items-center", children: [(0, s.jsx)("div", { ref: tp, className: "volume-circle" }, "volume-circle"), (0, s.jsx)("div", { className: "robot-svg", children: (0, s.jsxs)("svg", { xmlns: "http://www.w3.org/2000/svg", width: "160", height: "160", viewBox: "0 0 160 160", fill: "none", children: [(0, s.jsx)("path", { d: "M160 80C160 124.183 124.183 160 80 160C35.8172 160 0 124.183 0 80C0 35.8172 35.8172 0 80 0C124.183 0 160 35.8172 160 80Z", fill: "url(#paint0_linear_767_32475)" }), (0, s.jsx)("path", { d: "M160 80C160 124.183 124.183 160 80 160C35.8172 160 0 124.183 0 80C0 35.8172 35.8172 0 80 0C124.183 0 160 35.8172 160 80Z", fill: "url(#paint1_linear_767_32475)" }), (0, s.jsx)("path", { d: "M160 80C160 124.183 124.183 160 80 160C35.8172 160 0 124.183 0 80C0 35.8172 35.8172 0 80 0C124.183 0 160 35.8172 160 80Z", fill: "url(#paint2_linear_767_32475)" }), (0, s.jsx)("path", { opacity: "0.05", fillRule: "evenodd", clipRule: "evenodd", d: "M159.992 78.8887C159.398 122.559 123.812 157.778 80 157.778C36.1882 157.778 0.602043 122.559 0.0075586 78.8887C0.00252495 79.2584 0 79.6288 0 79.9998C0 124.183 35.8172 160 80 160C124.183 160 160 124.183 160 79.9998C160 79.6288 159.997 79.2584 159.992 78.8887Z", fill: "black" }), (0, s.jsx)("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M50.5839 50.0753C50.5839 43.9716 55.5319 39.0235 61.6356 39.0235H73.7887C74.1638 36.1673 76.6192 33.8779 79.6452 33.8779C81.1273 33.8779 82.6216 34.3978 83.7668 35.4918C84.7528 36.4335 85.3453 37.6734 85.5065 39.0235H97.6548C103.759 39.0235 108.707 43.9716 108.707 50.0753V70.6577C108.707 76.7614 103.759 81.7094 97.6548 81.7094H61.6356C55.5319 81.7094 50.5839 76.7614 50.5839 70.6577V50.0753ZM69.5614 82.7665H90.4388H104.171C107.049 82.7665 109.796 83.974 111.741 86.095C113.48 87.9901 114.445 90.4684 114.445 93.0401V100.356C114.445 105.413 112.548 110.287 109.129 114.013L108.522 114.675C103.749 119.878 97.4837 123.478 90.5848 124.982C83.6102 126.502 76.39 126.502 69.4154 124.982C62.5166 123.478 56.2514 119.878 51.4781 114.675L50.8713 114.013C47.4524 110.287 45.5557 105.413 45.5557 100.356V93.0401C45.5557 90.4684 46.5202 87.9901 48.2588 86.095C50.2046 83.974 52.9509 82.7665 55.8293 82.7665H69.5614Z", fill: "url(#paint3_linear_767_32475)" }), (0, s.jsx)("path", { d: "M104.171 86.1001H55.8292C53.8847 86.1001 52.0295 86.9158 50.715 88.3486C49.5405 89.6288 48.8889 91.303 48.8889 93.0404V102.813C48.8889 105.456 49.8801 108.002 51.6666 109.95L56.0323 114.708C58.9757 117.917 62.839 120.137 67.0932 121.064L73.2542 122.407C77.6992 123.376 82.3009 123.376 86.7459 122.407L92.9069 121.064C97.161 120.137 101.024 117.917 103.968 114.708L108.333 109.95C110.12 108.002 111.111 105.456 111.111 102.813V93.0404C111.111 91.303 110.46 89.6288 109.285 88.3486C107.971 86.9158 106.115 86.1001 104.171 86.1001Z", fill: "#F4F3F5" }), (0, s.jsx)("path", { opacity: "0.05", fillRule: "evenodd", clipRule: "evenodd", d: "M48.8882 100.59V102.813C48.8882 105.455 49.8793 108.002 51.6658 109.949L56.0315 114.708C58.9749 117.916 62.8383 120.136 67.0924 121.064L73.2534 122.407C77.6985 123.376 82.3001 123.376 86.7452 122.407L92.9062 121.064C97.1603 120.136 101.024 117.916 103.967 114.708L108.333 109.949C110.119 108.002 111.11 105.455 111.11 102.813L111.11 100.59C111.11 103.233 110.119 105.78 108.333 107.727L103.967 112.486C101.024 115.694 97.1603 117.914 92.9062 118.841L86.7452 120.185C82.3001 121.154 77.6985 121.154 73.2534 120.185L67.0924 118.841C62.8383 117.914 58.9749 115.694 56.0315 112.486L51.6658 107.727C49.8793 105.78 48.8882 103.233 48.8882 100.59Z", fill: "black" }), (0, s.jsx)("path", { d: "M61.6359 42.357C57.3731 42.357 53.9175 45.8127 53.9175 50.0754V70.6578C53.9175 74.9206 57.3731 78.3762 61.6359 78.3762H97.6551C101.918 78.3762 105.374 74.9206 105.374 70.6578V50.0754C105.374 45.8127 101.918 42.357 97.6551 42.357H82.2183C82.2183 42.357 82.2183 41.3721 82.2183 39.7842C82.2183 38.1963 81.0664 37.2114 79.6455 37.2114C78.2246 37.2114 77.0727 38.3973 77.0727 39.7842C77.0727 41.1711 77.0727 42.357 77.0727 42.357H61.6359ZM64.2087 60.3666C64.2087 57.5248 66.5125 55.221 69.3543 55.221C72.1961 55.221 74.4999 57.5248 74.4999 60.3666C74.4999 63.2085 72.1961 65.5122 69.3543 65.5122C66.5125 65.5122 64.2087 63.2085 64.2087 60.3666ZM84.7911 60.3666C84.7911 57.5248 87.0949 55.221 89.9367 55.221C92.7785 55.221 95.0823 57.5248 95.0823 60.3666C95.0823 63.2085 92.7785 65.5122 89.9367 65.5122C87.0949 65.5122 84.7911 63.2085 84.7911 60.3666Z", fill: "#F4F3F5" }), (0, s.jsx)("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M53.9175 50.0754C53.9175 45.8127 57.3731 42.357 61.6359 42.357H77.0728V44.5793H61.6359C57.3731 44.5793 53.9175 48.0349 53.9175 52.2977V50.0754ZM105.374 52.2977V50.0754C105.374 45.8127 101.918 42.357 97.6552 42.357H82.2184V44.5793H97.6552C101.918 44.5793 105.374 48.0349 105.374 52.2977ZM82.2184 42.0064V39.7842C82.2184 38.1963 81.0665 37.2114 79.6456 37.2114C78.2246 37.2114 77.0728 38.3973 77.0728 39.7842V42.0064C77.0728 40.6195 78.2246 39.4336 79.6456 39.4336C81.0665 39.4336 82.2184 40.4185 82.2184 42.0064ZM69.3543 52.9988C66.5125 52.9988 64.2087 55.3026 64.2087 58.1444C64.2087 58.5259 64.2502 58.8977 64.329 59.2555H74.3797C74.4584 58.8977 74.4999 58.5259 74.4999 58.1444C74.4999 55.3026 72.1962 52.9988 69.3543 52.9988ZM74.3797 59.2555C73.8717 56.9478 71.8147 55.221 69.3543 55.221C66.894 55.221 64.8369 56.9478 64.329 59.2555H74.3797ZM89.9368 52.9988C87.0949 52.9988 84.7912 55.3026 84.7912 58.1444C84.7912 58.5259 84.8327 58.8977 84.9115 59.2555L94.9621 59.2555C95.0409 58.8977 95.0824 58.5259 95.0824 58.1444C95.0824 55.3026 92.7786 52.9988 89.9368 52.9988ZM94.9621 59.2555C94.4542 56.9478 92.3971 55.221 89.9368 55.221C87.4764 55.221 85.4194 56.9478 84.9115 59.2555L94.9621 59.2555Z", fill: "#F9F9FA" }), (0, s.jsxs)("defs", { children: [(0, s.jsxs)("linearGradient", { id: "paint0_linear_767_32475", x1: "170.864", y1: "2.83583e-06", x2: "41.7107", y2: "173.432", gradientUnits: "userSpaceOnUse", children: [(0, s.jsx)("stop", { offset: "0.0773235", stopColor: "#49C5B1" }), (0, s.jsx)("stop", { offset: "0.682091", stopColor: "#0078D4" })] }), (0, s.jsxs)("linearGradient", { id: "paint1_linear_767_32475", x1: "-10.8642", y1: "179.487", x2: "130.947", y2: "33.0325", gradientUnits: "userSpaceOnUse", children: [(0, s.jsx)("stop", { offset: "0.0001", stopColor: "#C03BC4" }), (0, s.jsx)("stop", { offset: "1", stopColor: "#C03BC4", stopOpacity: "0" })] }), (0, s.jsxs)("linearGradient", { id: "paint2_linear_767_32475", x1: "7.5", y1: "200.625", x2: "18.917", y2: "38.8712", gradientUnits: "userSpaceOnUse", children: [(0, s.jsx)("stop", { offset: "0.0001", stopColor: "#FFB900" }), (0, s.jsx)("stop", { offset: "0.602266", stopColor: "#FFB900", stopOpacity: "0" })] }), (0, s.jsxs)("linearGradient", { id: "paint3_linear_767_32475", x1: "79.2251", y1: "38.9643", x2: "79.2251", y2: "119.444", gradientUnits: "userSpaceOnUse", children: [(0, s.jsx)("stop", { offset: "0.27116", stopOpacity: "0" }), (0, s.jsx)("stop", { offset: "1", stopOpacity: "0.2" })] })] })] }) })] }) })), (eq || !eO) && (0, s.jsx)(s.Fragment, { children: (0, s.jsxs)("div", { className: "flex flex-1 flex-col", children: [(0, s.jsx)("div", { id: "messages-area", className: "flex-1 p-4 overflow-y-auto messages-area", children: eL.map((e, t) => (0, s.jsx)("div", { className: "mb-4 p-3 rounded-lg ".concat(z(e.type)), children: e.content }, t)) }), eq && (0, s.jsx)(s.Fragment, { children: (0, s.jsx)("div", { className: "p-4 border-t", children: (0, s.jsxs)("div", { className: "flex gap-2", children: [(0, s.jsx)(v, { value: eI, onChange: e => eH(e.target.value), placeholder: "Type your message...", onKeyUp: e => "Enter" === e.key && tS(), disabled: !eO }), (0, s.jsx)(x, { variant: "outline", onClick: tk, className: eE ? "bg-red-100" : "", disabled: !eO, children: eE ? U() : P() }), (0, s.jsx)(x, { onClick: tS, disabled: !eO, children: (0, s.jsx)(I.A, { className: "w-4 h-4" }) })] }) }) })] }) })] }), !eq && (0, s.jsx)(s.Fragment, { children: (0, s.jsx)("div", { className: "flex flex-1 justify-center items-center", children: (0, s.jsxs)("div", { className: "flex justify-center items-center recording-border", children: [eO && tf && eE && (0, s.jsxs)("div", { className: "flex justify-center items-center sound-wave", children: [(0, s.jsx)("div", { className: "sound-wave-item", id: "item-0" }), (0, s.jsx)("div", { className: "sound-wave-item", id: "item-1" }), (0, s.jsx)("div", { className: "sound-wave-item", id: "item-2" }), (0, s.jsx)("div", { className: "sound-wave-item", id: "item-3" }), (0, s.jsx)("div", { className: "sound-wave-item", id: "item-4" }), (0, s.jsx)("div", { className: "sound-wave-item", id: "item-5" }), (0, s.jsx)("div", { className: "sound-wave-item", id: "item-6" }), (0, s.jsx)("div", { className: "sound-wave-item", id: "item-7" }), (0, s.jsx)("div", { className: "sound-wave-item", id: "item-8" }), (0, s.jsx)("div", { className: "sound-wave-item", id: "item-9" })] }), (0, s.jsx)(x, { variant: "outline", onClick: tk, className: eE ? "bg-red-100" : "", disabled: !eO, children: eE ? (0, s.jsxs)("div", { className: "flex justify-center items-center", children: [U(), (0, s.jsx)("span", { className: "microphone", children: "Turn off microphone" })] }) : (0, s.jsxs)("div", { className: "flex justify-center items-center", children: [P(), (0, s.jsx)("span", { className: "microphone", children: "Turn on microphone" })] }) }), eO && tf && eE && (0, s.jsxs)("div", { className: "flex justify-center items-center sound-wave sound-wave2", children: [(0, s.jsx)("div", { className: "sound-wave-item", id: "item-10" }), (0, s.jsx)("div", { className: "sound-wave-item", id: "item-11" }), (0, s.jsx)("div", { className: "sound-wave-item", id: "item-12" }), (0, s.jsx)("div", { className: "sound-wave-item", id: "item-13" }), (0, s.jsx)("div", { className: "sound-wave-item", id: "item-14" }), (0, s.jsx)("div", { className: "sound-wave-item", id: "item-15" }), (0, s.jsx)("div", { className: "sound-wave-item", id: "item-16" }), (0, s.jsx)("div", { className: "sound-wave-item", id: "item-17" }), (0, s.jsx)("div", { className: "sound-wave-item", id: "item-18" }), (0, s.jsx)("div", { className: "sound-wave-item", id: "item-19" })] })] }) }) })] })] }) } } }, e => { var t = t => e(e.s = t); e.O(0, [838, 105, 265, 441, 684, 358], () => t(2740)), _N_E = e.O() }]);